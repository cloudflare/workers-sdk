{
  "services": [
    {
      "name": "core:user:vitest-pool-workers-runner-web-assembly",
      "worker": {
        "modules": [
          {
            "name": "Users/penalosa/dev/wsdk/packages/vitest-pool-workers/dist/worker/index.mjs",
            "esModule": "// src/worker/index.ts\nimport assert3 from \"node:assert\";\nimport { Buffer as Buffer3 } from \"node:buffer\";\nimport events from \"node:events\";\nimport process from \"node:process\";\nimport * as vm from \"node:vm\";\nimport defines from \"__VITEST_POOL_WORKERS_DEFINES\";\nimport {\n  createWorkerEntrypointWrapper,\n  internalEnv,\n  maybeHandleRunRequest,\n  registerHandlerAndGlobalWaitUntil,\n  runInRunnerObject,\n  setEnv\n} from \"cloudflare:test-internal\";\nimport * as devalue from \"devalue\";\n\n// ../miniflare/src/workers/core/devalue.ts\nimport assert from \"node:assert\";\nimport { Buffer } from \"node:buffer\";\nimport { parse, stringify } from \"devalue\";\nvar ALLOWED_ARRAY_BUFFER_VIEW_CONSTRUCTORS = [\n  DataView,\n  Int8Array,\n  Uint8Array,\n  Uint8ClampedArray,\n  Int16Array,\n  Uint16Array,\n  Int32Array,\n  Uint32Array,\n  Float32Array,\n  Float64Array,\n  BigInt64Array,\n  BigUint64Array\n];\nvar ALLOWED_ERROR_CONSTRUCTORS = [\n  EvalError,\n  RangeError,\n  ReferenceError,\n  SyntaxError,\n  TypeError,\n  URIError,\n  Error\n  // `Error` last so more specific error subclasses preferred\n];\nvar structuredSerializableReducers = {\n  ArrayBuffer(value) {\n    if (value instanceof ArrayBuffer) {\n      return [Buffer.from(value).toString(\"base64\")];\n    }\n  },\n  ArrayBufferView(value) {\n    if (ArrayBuffer.isView(value)) {\n      return [\n        value.constructor.name,\n        value.buffer,\n        value.byteOffset,\n        value.byteLength\n      ];\n    }\n  },\n  RegExp(value) {\n    if (value instanceof RegExp) {\n      const { source, flags } = value;\n      const encoded = Buffer.from(source).toString(\"base64\");\n      return flags ? [\"RegExp\", encoded, flags] : [\"RegExp\", encoded];\n    }\n  },\n  Error(value) {\n    for (const ctor of ALLOWED_ERROR_CONSTRUCTORS) {\n      if (value instanceof ctor && value.name === ctor.name) {\n        return [value.name, value.message, value.stack, value.cause];\n      }\n    }\n    if (value instanceof Error) {\n      return [\"Error\", value.message, value.stack, value.cause];\n    }\n  }\n};\nvar structuredSerializableRevivers = {\n  ArrayBuffer(value) {\n    assert(Array.isArray(value));\n    const [encoded] = value;\n    assert(typeof encoded === \"string\");\n    const view = Buffer.from(encoded, \"base64\");\n    return view.buffer.slice(\n      view.byteOffset,\n      view.byteOffset + view.byteLength\n    );\n  },\n  ArrayBufferView(value) {\n    assert(Array.isArray(value));\n    const [name, buffer, byteOffset, byteLength] = value;\n    assert(typeof name === \"string\");\n    assert(buffer instanceof ArrayBuffer);\n    assert(typeof byteOffset === \"number\");\n    assert(typeof byteLength === \"number\");\n    const ctor = globalThis[name];\n    assert(ALLOWED_ARRAY_BUFFER_VIEW_CONSTRUCTORS.includes(ctor));\n    let length = byteLength;\n    if (\"BYTES_PER_ELEMENT\" in ctor) length /= ctor.BYTES_PER_ELEMENT;\n    return new ctor(buffer, byteOffset, length);\n  },\n  RegExp(value) {\n    assert(Array.isArray(value));\n    const [name, encoded, flags] = value;\n    assert(typeof name === \"string\");\n    assert(typeof encoded === \"string\");\n    const source = Buffer.from(encoded, \"base64\").toString(\"utf-8\");\n    return new RegExp(source, flags);\n  },\n  Error(value) {\n    assert(Array.isArray(value));\n    const [name, message, stack, cause] = value;\n    assert(typeof name === \"string\");\n    assert(typeof message === \"string\");\n    assert(stack === void 0 || typeof stack === \"string\");\n    const ctor = globalThis[name];\n    assert(ALLOWED_ERROR_CONSTRUCTORS.includes(ctor));\n    const error = new ctor(message, { cause });\n    error.stack = stack;\n    return error;\n  }\n};\n\n// src/shared/chunking-socket.ts\nimport assert2 from \"node:assert\";\nimport { Buffer as Buffer2 } from \"node:buffer\";\nfunction createChunkingSocket(socket, maxChunkByteLength = 1048576) {\n  const listeners = [];\n  const decoder = new TextDecoder();\n  let chunks;\n  socket.on((message) => {\n    if (typeof message === \"string\") {\n      if (chunks !== void 0) {\n        assert2.strictEqual(message, \"\", \"Expected end-of-chunks\");\n        message = chunks + decoder.decode();\n        chunks = void 0;\n      }\n      for (const listener of listeners) {\n        listener(message);\n      }\n    } else {\n      chunks ??= \"\";\n      chunks += decoder.decode(message, { stream: true });\n    }\n  });\n  return {\n    post(value) {\n      if (Buffer2.byteLength(value) > maxChunkByteLength) {\n        const encoded = Buffer2.from(value);\n        for (let i = 0; i < encoded.byteLength; i += maxChunkByteLength) {\n          socket.post(encoded.subarray(i, i + maxChunkByteLength));\n        }\n        socket.post(\"\");\n      } else {\n        socket.post(value);\n      }\n    },\n    on(listener) {\n      listeners.push(listener);\n    }\n  };\n}\n\n// src/worker/index.ts\nexport * from \"__VITEST_POOL_WORKERS_USER_OBJECT\";\nfunction structuredSerializableStringify(value) {\n  return devalue.stringify(value, structuredSerializableReducers);\n}\nfunction structuredSerializableParse(value) {\n  return devalue.parse(value, structuredSerializableRevivers);\n}\nglobalThis.Buffer = Buffer3;\nglobalThis.process = process;\nprocess.argv = [];\nvar cwd;\nprocess.cwd = () => {\n  assert3(cwd !== void 0, \"Expected cwd to be set\");\n  return cwd;\n};\nObject.setPrototypeOf(process, events.EventEmitter.prototype);\nglobalThis.__console = console;\nfunction getCallerFileName(of) {\n  const originalStackTraceLimit = Error.stackTraceLimit;\n  const originalPrepareStackTrace = Error.prepareStackTrace;\n  try {\n    let fileName = null;\n    Error.stackTraceLimit = 1;\n    Error.prepareStackTrace = (_error, callSites) => {\n      fileName = callSites[0]?.getFileName();\n      return \"\";\n    };\n    const error = {};\n    Error.captureStackTrace(error, of);\n    void error.stack;\n    return fileName;\n  } finally {\n    Error.stackTraceLimit = originalStackTraceLimit;\n    Error.prepareStackTrace = originalPrepareStackTrace;\n  }\n}\nvar originalSetTimeout = globalThis.setTimeout;\nvar originalClearTimeout = globalThis.clearTimeout;\nvar timeoutPromiseResolves = /* @__PURE__ */ new Map();\nvar monkeypatchedSetTimeout = (...args) => {\n  const [callback, delay, ...restArgs] = args;\n  const callbackName = args[0]?.name ?? \"\";\n  const callerFileName = getCallerFileName(monkeypatchedSetTimeout);\n  const fromVitest = /\\/node_modules\\/(\\.store\\/)?vitest/.test(\n    callerFileName ?? \"\"\n  );\n  if (!fromVitest || delay) {\n    return originalSetTimeout.apply(globalThis, args);\n  }\n  if (callbackName === \"NOOP\") {\n    return -0.5;\n  }\n  let promiseResolve;\n  const promise = new Promise((resolve) => {\n    promiseResolve = resolve;\n  });\n  assert3(promiseResolve !== void 0);\n  registerHandlerAndGlobalWaitUntil(promise);\n  const id = originalSetTimeout.call(globalThis, () => {\n    promiseResolve?.();\n    callback?.(...restArgs);\n  });\n  timeoutPromiseResolves.set(id, promiseResolve);\n  return id;\n};\nglobalThis.setTimeout = monkeypatchedSetTimeout;\nglobalThis.clearTimeout = (...args) => {\n  const id = args[0];\n  if (id === -0.5) {\n    return;\n  }\n  const maybePromiseResolve = timeoutPromiseResolves.get(id);\n  timeoutPromiseResolves.delete(id);\n  maybePromiseResolve?.();\n  return originalClearTimeout.apply(globalThis, args);\n};\nfunction isDifferentIOContextError(e) {\n  return e instanceof Error && e.message.startsWith(\"Cannot perform I/O on behalf of a different\");\n}\nvar WebSocketMessagePort = class extends events.EventEmitter {\n  constructor(socket) {\n    super();\n    this.socket = socket;\n    this.#chunkingSocket = createChunkingSocket({\n      post(message) {\n        socket.send(message);\n      },\n      on(listener) {\n        socket.addEventListener(\"message\", (event) => {\n          listener(event.data);\n        });\n      }\n    });\n    this.#chunkingSocket.on((message) => {\n      const parsed = structuredSerializableParse(message);\n      this.emit(\"message\", parsed);\n    });\n    socket.accept();\n  }\n  #chunkingSocket;\n  postMessage(data) {\n    const stringified = structuredSerializableStringify(data);\n    try {\n      if (this.socket.readyState === WebSocket.READY_STATE_OPEN) {\n        this.#chunkingSocket.post(stringified);\n      }\n    } catch (error) {\n      if (isDifferentIOContextError(error)) {\n        const promise = runInRunnerObject(internalEnv, () => {\n          this.#chunkingSocket.post(stringified);\n        }).catch((e) => {\n          __console.error(\"Error sending to pool inside runner:\", e, data);\n        });\n        registerHandlerAndGlobalWaitUntil(promise);\n      } else {\n        __console.error(\"Error sending to pool:\", error, data);\n      }\n    }\n  }\n};\nfunction reduceError(e) {\n  return {\n    name: e?.name,\n    message: e?.message ?? String(e),\n    stack: e?.stack,\n    cause: e?.cause === void 0 ? void 0 : reduceError(e.cause)\n  };\n}\nvar patchedFunction = false;\nfunction ensurePatchedFunction(unsafeEval) {\n  if (patchedFunction) {\n    return;\n  }\n  patchedFunction = true;\n  globalThis.Function = new Proxy(globalThis.Function, {\n    construct(_target, args, _newTarget) {\n      const script = args.pop();\n      return unsafeEval.newFunction(script, \"anonymous\", ...args);\n    }\n  });\n}\nfunction applyDefines() {\n  for (const [key, value] of Object.entries(defines)) {\n    const segments = key.split(\".\");\n    let target = globalThis;\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      if (i === segments.length - 1) {\n        target[segment] = value;\n      } else {\n        target = target[segment] ??= {};\n      }\n    }\n  }\n}\nvar RunnerObject = class {\n  executor;\n  constructor(_state, env) {\n    vm._setUnsafeEval(env.__VITEST_POOL_WORKERS_UNSAFE_EVAL);\n    ensurePatchedFunction(env.__VITEST_POOL_WORKERS_UNSAFE_EVAL);\n    setEnv(env);\n    applyDefines();\n  }\n  async handleVitestRunRequest(request) {\n    assert3.strictEqual(request.headers.get(\"Upgrade\"), \"websocket\");\n    const { 0: poolSocket, 1: poolResponseSocket } = new WebSocketPair();\n    const workerDataHeader = request.headers.get(\"MF-Vitest-Worker-Data\");\n    assert3(workerDataHeader !== null);\n    const wd = structuredSerializableParse(workerDataHeader);\n    assert3(typeof wd === \"object\" && wd !== null);\n    assert3(\"filePath\" in wd && typeof wd.filePath === \"string\");\n    assert3(\"name\" in wd && typeof wd.name === \"string\");\n    assert3(\"data\" in wd && typeof wd.data === \"object\" && wd.data !== null);\n    assert3(\"cwd\" in wd && typeof wd.cwd === \"string\");\n    cwd = wd.cwd;\n    const port = new WebSocketMessagePort(poolSocket);\n    try {\n      const module = await import(wd.filePath);\n      const { VitestModuleRunner } = await import(\"vitest/internal/module-runner\");\n      const originalResolveUrl = VitestModuleRunner.prototype.import;\n      const that = this;\n      VitestModuleRunner.prototype.import = function(...args) {\n        that.executor = this;\n        return originalResolveUrl.apply(this, args);\n      };\n      wd.data.port = port;\n      module[wd.name](wd.data).then(() => {\n        poolSocket.close(1e3, \"Done\");\n      }).catch((e) => {\n        port.postMessage({ vitestPoolWorkersError: e });\n        const error = reduceError(e);\n        __console.error(\"Error running worker:\", error.stack);\n        poolSocket.close(1011, \"Internal Error\");\n      });\n    } catch (e) {\n      const error = reduceError(e);\n      __console.error(\"Error initialising worker:\", error.stack);\n      return Response.json(error, {\n        status: 500,\n        headers: { \"MF-Experimental-Error-Stack\": \"true\" }\n      });\n    }\n    return new Response(null, { status: 101, webSocket: poolResponseSocket });\n  }\n  async fetch(request) {\n    const response = await maybeHandleRunRequest(request, this);\n    if (response !== void 0) {\n      return response;\n    }\n    return this.handleVitestRunRequest(request);\n  }\n};\nvar worker_default = createWorkerEntrypointWrapper(\"default\");\nexport {\n  RunnerObject,\n  worker_default as default\n};\n//# sourceMappingURL=index.mjs.map\n\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/vitest-pool-workers/dist/worker/index.mjs\n"
          },
          {
            "name": "Users/penalosa/dev/wsdk/packages/vitest-pool-workers/dist/worker/__VITEST_POOL_WORKERS_USER_OBJECT",
            "esModule": "import { createWorkerEntrypointWrapper, createDurableObjectWrapper, createWorkflowEntrypointWrapper } from \"cloudflare:test-internal\";\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/vitest-pool-workers/dist/worker/__VITEST_POOL_WORKERS_USER_OBJECT\n"
          },
          {
            "name": "Users/penalosa/dev/wsdk/packages/vitest-pool-workers/dist/worker/__VITEST_POOL_WORKERS_DEFINES",
            "esModule": "export default {\n\t\t\n\t};\n\t\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/vitest-pool-workers/dist/worker/__VITEST_POOL_WORKERS_DEFINES\n"
          },
          {
            "name": "node:url",
            "esModule": "// src/worker/lib/node/url.ts\nimport path from \"node:path\";\nfunction fileURLToPath(url) {\n  if (typeof url === \"string\") {\n    url = new URL(url);\n  } else if (!(url instanceof URL)) {\n    throw new TypeError(`Expected path to be string | URL, got ${url}`);\n  }\n  if (url.protocol !== \"file:\") {\n    throw new TypeError(\"Expected protocol to be file:\");\n  }\n  return getPathFromURLPosix(url);\n}\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== \"\") {\n    throw new TypeError(\"Expected hostname to be empty\");\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === \"%\") {\n      const third = pathname.codePointAt(n + 2) | 32;\n      if (pathname[n + 1] === \"2\" && third === 102) {\n        throw new TypeError(\n          \"Expected pathname not to include encoded / characters\"\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\nvar CHAR_FORWARD_SLASH = 47;\nvar percentRegEx = /%/g;\nvar backslashRegEx = /\\\\/g;\nvar newlineRegEx = /\\n/g;\nvar carriageReturnRegEx = /\\r/g;\nvar tabRegEx = /\\t/g;\nvar questionRegex = /\\?/g;\nvar hashRegex = /#/g;\nfunction pathToFileURL(filepath) {\n  let resolved = path.resolve(filepath);\n  const filePathLast = filepath.charCodeAt(filepath.length - 1);\n  if (filePathLast === CHAR_FORWARD_SLASH && resolved[resolved.length - 1] !== path.sep) {\n    resolved += \"/\";\n  }\n  resolved = encodePathChars(resolved);\n  if (resolved.indexOf(\"?\") !== -1) {\n    resolved = resolved.replace(questionRegex, \"%3F\");\n  }\n  if (resolved.indexOf(\"#\") !== -1) {\n    resolved = resolved.replace(hashRegex, \"%23\");\n  }\n  return new URL(`file://${resolved}`);\n}\nfunction encodePathChars(filepath) {\n  if (filepath.indexOf(\"%\") !== -1) {\n    filepath = filepath.replace(percentRegEx, \"%25\");\n  }\n  if (filepath.indexOf(\"\\\\\") !== -1) {\n    filepath = filepath.replace(backslashRegEx, \"%5C\");\n  }\n  if (filepath.indexOf(\"\\n\") !== -1) {\n    filepath = filepath.replace(newlineRegEx, \"%0A\");\n  }\n  if (filepath.indexOf(\"\\r\") !== -1) {\n    filepath = filepath.replace(carriageReturnRegEx, \"%0D\");\n  }\n  if (filepath.indexOf(\"\t\") !== -1) {\n    filepath = filepath.replace(tabRegEx, \"%09\");\n  }\n  return filepath;\n}\nvar url_default = {\n  fileURLToPath,\n  pathToFileURL\n};\nexport {\n  CHAR_FORWARD_SLASH,\n  url_default as default,\n  fileURLToPath,\n  pathToFileURL\n};\n//# sourceMappingURL=url.mjs.map\n\n//# sourceURL=file:///node:url\n"
          }
        ],
        "compatibilityDate": "2024-01-01",
        "compatibilityFlags": [
          "nodejs_compat_v2",
          "unsafe_module"
        ],
        "bindings": [
          {
            "name": "__VITEST_POOL_WORKERS_SELF_NAME",
            "text": "vitest-pool-workers-runner-web-assembly"
          },
          {
            "name": "__VITEST_POOL_WORKERS_SELF_SERVICE",
            "service": {
              "name": "core:user:vitest-pool-workers-runner-web-assembly"
            }
          },
          {
            "name": "__VITEST_POOL_WORKERS_LOOPBACK_SERVICE",
            "service": {
              "name": "core:custom-fetch:0:#__VITEST_POOL_WORKERS_LOOPBACK_SERVICE"
            }
          },
          {
            "name": "__VITEST_POOL_WORKERS_UNSAFE_EVAL"
          },
          {
            "name": "__VITEST_POOL_WORKERS_RUNNER_OBJECT",
            "durableObjectNamespace": {
              "className": "RunnerObject",
              "serviceName": "core:user:vitest-pool-workers-runner-web-assembly"
            }
          }
        ],
        "durableObjectNamespaces": [
          {
            "className": "RunnerObject",
            "preventEviction": true
          }
        ],
        "durableObjectStorage": {
          "localDisk": "do:storage"
        },
        "globalOutbound": {
          "name": "strip-cf-connecting-ip:0"
        },
        "cacheApiOutbound": {
          "name": "cache:0"
        },
        "moduleFallback": "localhost:62352",
        "tails": [],
        "containerEngine": {
          "localDocker": {
            "socketPath": "unix:///var/run/docker.sock"
          }
        }
      }
    },
    {
      "name": "core:custom-fetch:0:#__VITEST_POOL_WORKERS_LOOPBACK_SERVICE",
      "worker": {
        "serviceWorkerScript": "addEventListener(\"fetch\", (event) => {\n  const request = new Request(event.request);\n  request.headers.set(\"MF-Custom-Fetch-Service\", MINIFLARE_CUSTOM_SERVICE);\n  request.headers.set(\"MF-Original-URL\", request.url);\n  event.respondWith(MINIFLARE_LOOPBACK.fetch(request));\n})",
        "compatibilityDate": "2022-09-01",
        "bindings": [
          {
            "name": "MINIFLARE_CUSTOM_SERVICE",
            "text": "0/#__VITEST_POOL_WORKERS_LOOPBACK_SERVICE"
          },
          {
            "name": "MINIFLARE_LOOPBACK",
            "service": {
              "name": "loopback"
            }
          }
        ]
      }
    },
    {
      "name": "strip-cf-connecting-ip:0",
      "worker": {
        "modules": [
          {
            "name": "index.js",
            "esModule": "// src/workers/core/strip-cf-connecting-ip.worker.ts\nvar strip_cf_connecting_ip_worker_default = {\n  fetch(request) {\n    let headers = new Headers(request.headers);\n    return headers.delete(\"CF-Connecting-IP\"), fetch(request, { headers });\n  }\n};\nexport {\n  strip_cf_connecting_ip_worker_default as default\n};\n//# sourceMappingURL=strip-cf-connecting-ip.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/core/strip-cf-connecting-ip.worker.js"
          }
        ],
        "compatibilityDate": "2025-01-01",
        "compatibilityFlags": [
          "connect_pass_through",
          "experimental"
        ]
      }
    },
    {
      "name": "cache:0",
      "worker": {
        "compatibilityDate": "2023-07-24",
        "compatibilityFlags": [
          "nodejs_compat",
          "experimental"
        ],
        "modules": [
          {
            "name": "cache-entry.worker.js",
            "esModule": "// src/workers/cache/cache-entry.worker.ts\nimport { SharedBindings } from \"miniflare:shared\";\n\n// src/workers/cache/constants.ts\nvar CacheHeaders = {\n  NAMESPACE: \"cf-cache-namespace\",\n  STATUS: \"cf-cache-status\"\n}, CacheBindings = {\n  MAYBE_JSON_CACHE_WARN_USAGE: \"MINIFLARE_CACHE_WARN_USAGE\"\n};\n\n// src/workers/cache/cache-entry.worker.ts\nvar cache_entry_worker_default = {\n  async fetch(request, env) {\n    let namespace = request.headers.get(CacheHeaders.NAMESPACE), name = namespace === null ? \"default\" : `named:${namespace}`, objectNamespace = env[SharedBindings.DURABLE_OBJECT_NAMESPACE_OBJECT], id = objectNamespace.idFromName(name), stub = objectNamespace.get(id), cf = {\n      ...request.cf,\n      miniflare: {\n        name,\n        cacheWarnUsage: env[CacheBindings.MAYBE_JSON_CACHE_WARN_USAGE]\n      }\n    };\n    return await stub.fetch(request, { cf });\n  }\n};\nexport {\n  cache_entry_worker_default as default\n};\n//# sourceMappingURL=cache-entry.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/cache/cache-entry.worker.js"
          }
        ],
        "bindings": [
          {
            "name": "MINIFLARE_OBJECT",
            "durableObjectNamespace": {
              "serviceName": "cache:cache",
              "className": "CacheObject"
            }
          },
          {
            "name": "MINIFLARE_CACHE_WARN_USAGE",
            "json": "false"
          }
        ]
      }
    },
    {
      "name": "cache:storage",
      "disk": {
        "path": "/var/folders/wl/xdqbkld10134zqq2kp70lsgr0000gp/T/miniflare-18b9250ec303b49f27989a596f07b311/cache",
        "writable": true
      }
    },
    {
      "name": "cache:cache",
      "worker": {
        "compatibilityDate": "2023-07-24",
        "compatibilityFlags": [
          "nodejs_compat",
          "experimental"
        ],
        "modules": [
          {
            "name": "cache.worker.js",
            "esModule": "var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from == \"object\" || typeof from == \"function\")\n    for (let key of __getOwnPropNames(from))\n      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: !0 }) : target,\n  mod\n));\nvar __decorateClass = (decorators, target, key, kind) => {\n  for (var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target, i = decorators.length - 1, decorator; i >= 0; i--)\n    (decorator = decorators[i]) && (result = (kind ? decorator(target, key, result) : decorator(result)) || result);\n  return kind && result && __defProp(target, key, result), result;\n};\n\n// ../../node_modules/.pnpm/http-cache-semantics@4.1.1/node_modules/http-cache-semantics/index.js\nvar require_http_cache_semantics = __commonJS({\n  \"../../node_modules/.pnpm/http-cache-semantics@4.1.1/node_modules/http-cache-semantics/index.js\"(exports, module) {\n    \"use strict\";\n    var statusCodeCacheableByDefault = /* @__PURE__ */ new Set([\n      200,\n      203,\n      204,\n      206,\n      300,\n      301,\n      308,\n      404,\n      405,\n      410,\n      414,\n      501\n    ]), understoodStatuses = /* @__PURE__ */ new Set([\n      200,\n      203,\n      204,\n      300,\n      301,\n      302,\n      303,\n      307,\n      308,\n      404,\n      405,\n      410,\n      414,\n      501\n    ]), errorStatusCodes = /* @__PURE__ */ new Set([\n      500,\n      502,\n      503,\n      504\n    ]), hopByHopHeaders = {\n      date: !0,\n      // included, because we add Age update Date\n      connection: !0,\n      \"keep-alive\": !0,\n      \"proxy-authenticate\": !0,\n      \"proxy-authorization\": !0,\n      te: !0,\n      trailer: !0,\n      \"transfer-encoding\": !0,\n      upgrade: !0\n    }, excludedFromRevalidationUpdate = {\n      // Since the old body is reused, it doesn't make sense to change properties of the body\n      \"content-length\": !0,\n      \"content-encoding\": !0,\n      \"transfer-encoding\": !0,\n      \"content-range\": !0\n    };\n    function toNumberOrZero(s) {\n      let n = parseInt(s, 10);\n      return isFinite(n) ? n : 0;\n    }\n    function isErrorResponse(response) {\n      return response ? errorStatusCodes.has(response.status) : !0;\n    }\n    function parseCacheControl(header) {\n      let cc = {};\n      if (!header) return cc;\n      let parts = header.trim().split(/,/);\n      for (let part of parts) {\n        let [k, v] = part.split(/=/, 2);\n        cc[k.trim()] = v === void 0 ? !0 : v.trim().replace(/^\"|\"$/g, \"\");\n      }\n      return cc;\n    }\n    function formatCacheControl(cc) {\n      let parts = [];\n      for (let k in cc) {\n        let v = cc[k];\n        parts.push(v === !0 ? k : k + \"=\" + v);\n      }\n      if (parts.length)\n        return parts.join(\", \");\n    }\n    module.exports = class {\n      constructor(req, res, {\n        shared,\n        cacheHeuristic,\n        immutableMinTimeToLive,\n        ignoreCargoCult,\n        _fromObject\n      } = {}) {\n        if (_fromObject) {\n          this._fromObject(_fromObject);\n          return;\n        }\n        if (!res || !res.headers)\n          throw Error(\"Response headers missing\");\n        this._assertRequestHasHeaders(req), this._responseTime = this.now(), this._isShared = shared !== !1, this._cacheHeuristic = cacheHeuristic !== void 0 ? cacheHeuristic : 0.1, this._immutableMinTtl = immutableMinTimeToLive !== void 0 ? immutableMinTimeToLive : 24 * 3600 * 1e3, this._status = \"status\" in res ? res.status : 200, this._resHeaders = res.headers, this._rescc = parseCacheControl(res.headers[\"cache-control\"]), this._method = \"method\" in req ? req.method : \"GET\", this._url = req.url, this._host = req.headers.host, this._noAuthorization = !req.headers.authorization, this._reqHeaders = res.headers.vary ? req.headers : null, this._reqcc = parseCacheControl(req.headers[\"cache-control\"]), ignoreCargoCult && \"pre-check\" in this._rescc && \"post-check\" in this._rescc && (delete this._rescc[\"pre-check\"], delete this._rescc[\"post-check\"], delete this._rescc[\"no-cache\"], delete this._rescc[\"no-store\"], delete this._rescc[\"must-revalidate\"], this._resHeaders = Object.assign({}, this._resHeaders, {\n          \"cache-control\": formatCacheControl(this._rescc)\n        }), delete this._resHeaders.expires, delete this._resHeaders.pragma), res.headers[\"cache-control\"] == null && /no-cache/.test(res.headers.pragma) && (this._rescc[\"no-cache\"] = !0);\n      }\n      now() {\n        return Date.now();\n      }\n      storable() {\n        return !!(!this._reqcc[\"no-store\"] && // A cache MUST NOT store a response to any request, unless:\n        // The request method is understood by the cache and defined as being cacheable, and\n        (this._method === \"GET\" || this._method === \"HEAD\" || this._method === \"POST\" && this._hasExplicitExpiration()) && // the response status code is understood by the cache, and\n        understoodStatuses.has(this._status) && // the \"no-store\" cache directive does not appear in request or response header fields, and\n        !this._rescc[\"no-store\"] && // the \"private\" response directive does not appear in the response, if the cache is shared, and\n        (!this._isShared || !this._rescc.private) && // the Authorization header field does not appear in the request, if the cache is shared,\n        (!this._isShared || this._noAuthorization || this._allowsStoringAuthenticated()) && // the response either:\n        // contains an Expires header field, or\n        (this._resHeaders.expires || // contains a max-age response directive, or\n        // contains a s-maxage response directive and the cache is shared, or\n        // contains a public response directive.\n        this._rescc[\"max-age\"] || this._isShared && this._rescc[\"s-maxage\"] || this._rescc.public || // has a status code that is defined as cacheable by default\n        statusCodeCacheableByDefault.has(this._status)));\n      }\n      _hasExplicitExpiration() {\n        return this._isShared && this._rescc[\"s-maxage\"] || this._rescc[\"max-age\"] || this._resHeaders.expires;\n      }\n      _assertRequestHasHeaders(req) {\n        if (!req || !req.headers)\n          throw Error(\"Request headers missing\");\n      }\n      satisfiesWithoutRevalidation(req) {\n        this._assertRequestHasHeaders(req);\n        let requestCC = parseCacheControl(req.headers[\"cache-control\"]);\n        return requestCC[\"no-cache\"] || /no-cache/.test(req.headers.pragma) || requestCC[\"max-age\"] && this.age() > requestCC[\"max-age\"] || requestCC[\"min-fresh\"] && this.timeToLive() < 1e3 * requestCC[\"min-fresh\"] || this.stale() && !(requestCC[\"max-stale\"] && !this._rescc[\"must-revalidate\"] && (requestCC[\"max-stale\"] === !0 || requestCC[\"max-stale\"] > this.age() - this.maxAge())) ? !1 : this._requestMatches(req, !1);\n      }\n      _requestMatches(req, allowHeadMethod) {\n        return (!this._url || this._url === req.url) && this._host === req.headers.host && // the request method associated with the stored response allows it to be used for the presented request, and\n        (!req.method || this._method === req.method || allowHeadMethod && req.method === \"HEAD\") && // selecting header fields nominated by the stored response (if any) match those presented, and\n        this._varyMatches(req);\n      }\n      _allowsStoringAuthenticated() {\n        return this._rescc[\"must-revalidate\"] || this._rescc.public || this._rescc[\"s-maxage\"];\n      }\n      _varyMatches(req) {\n        if (!this._resHeaders.vary)\n          return !0;\n        if (this._resHeaders.vary === \"*\")\n          return !1;\n        let fields = this._resHeaders.vary.trim().toLowerCase().split(/\\s*,\\s*/);\n        for (let name of fields)\n          if (req.headers[name] !== this._reqHeaders[name]) return !1;\n        return !0;\n      }\n      _copyWithoutHopByHopHeaders(inHeaders) {\n        let headers = {};\n        for (let name in inHeaders)\n          hopByHopHeaders[name] || (headers[name] = inHeaders[name]);\n        if (inHeaders.connection) {\n          let tokens = inHeaders.connection.trim().split(/\\s*,\\s*/);\n          for (let name of tokens)\n            delete headers[name];\n        }\n        if (headers.warning) {\n          let warnings = headers.warning.split(/,/).filter((warning) => !/^\\s*1[0-9][0-9]/.test(warning));\n          warnings.length ? headers.warning = warnings.join(\",\").trim() : delete headers.warning;\n        }\n        return headers;\n      }\n      responseHeaders() {\n        let headers = this._copyWithoutHopByHopHeaders(this._resHeaders), age = this.age();\n        return age > 3600 * 24 && !this._hasExplicitExpiration() && this.maxAge() > 3600 * 24 && (headers.warning = (headers.warning ? `${headers.warning}, ` : \"\") + '113 - \"rfc7234 5.5.4\"'), headers.age = `${Math.round(age)}`, headers.date = new Date(this.now()).toUTCString(), headers;\n      }\n      /**\n       * Value of the Date response header or current time if Date was invalid\n       * @return timestamp\n       */\n      date() {\n        let serverDate = Date.parse(this._resHeaders.date);\n        return isFinite(serverDate) ? serverDate : this._responseTime;\n      }\n      /**\n       * Value of the Age header, in seconds, updated for the current time.\n       * May be fractional.\n       *\n       * @return Number\n       */\n      age() {\n        let age = this._ageValue(), residentTime = (this.now() - this._responseTime) / 1e3;\n        return age + residentTime;\n      }\n      _ageValue() {\n        return toNumberOrZero(this._resHeaders.age);\n      }\n      /**\n       * Value of applicable max-age (or heuristic equivalent) in seconds. This counts since response's `Date`.\n       *\n       * For an up-to-date value, see `timeToLive()`.\n       *\n       * @return Number\n       */\n      maxAge() {\n        if (!this.storable() || this._rescc[\"no-cache\"] || this._isShared && this._resHeaders[\"set-cookie\"] && !this._rescc.public && !this._rescc.immutable || this._resHeaders.vary === \"*\")\n          return 0;\n        if (this._isShared) {\n          if (this._rescc[\"proxy-revalidate\"])\n            return 0;\n          if (this._rescc[\"s-maxage\"])\n            return toNumberOrZero(this._rescc[\"s-maxage\"]);\n        }\n        if (this._rescc[\"max-age\"])\n          return toNumberOrZero(this._rescc[\"max-age\"]);\n        let defaultMinTtl = this._rescc.immutable ? this._immutableMinTtl : 0, serverDate = this.date();\n        if (this._resHeaders.expires) {\n          let expires = Date.parse(this._resHeaders.expires);\n          return Number.isNaN(expires) || expires < serverDate ? 0 : Math.max(defaultMinTtl, (expires - serverDate) / 1e3);\n        }\n        if (this._resHeaders[\"last-modified\"]) {\n          let lastModified = Date.parse(this._resHeaders[\"last-modified\"]);\n          if (isFinite(lastModified) && serverDate > lastModified)\n            return Math.max(\n              defaultMinTtl,\n              (serverDate - lastModified) / 1e3 * this._cacheHeuristic\n            );\n        }\n        return defaultMinTtl;\n      }\n      timeToLive() {\n        let age = this.maxAge() - this.age(), staleIfErrorAge = age + toNumberOrZero(this._rescc[\"stale-if-error\"]), staleWhileRevalidateAge = age + toNumberOrZero(this._rescc[\"stale-while-revalidate\"]);\n        return Math.max(0, age, staleIfErrorAge, staleWhileRevalidateAge) * 1e3;\n      }\n      stale() {\n        return this.maxAge() <= this.age();\n      }\n      _useStaleIfError() {\n        return this.maxAge() + toNumberOrZero(this._rescc[\"stale-if-error\"]) > this.age();\n      }\n      useStaleWhileRevalidate() {\n        return this.maxAge() + toNumberOrZero(this._rescc[\"stale-while-revalidate\"]) > this.age();\n      }\n      static fromObject(obj) {\n        return new this(void 0, void 0, { _fromObject: obj });\n      }\n      _fromObject(obj) {\n        if (this._responseTime) throw Error(\"Reinitialized\");\n        if (!obj || obj.v !== 1) throw Error(\"Invalid serialization\");\n        this._responseTime = obj.t, this._isShared = obj.sh, this._cacheHeuristic = obj.ch, this._immutableMinTtl = obj.imm !== void 0 ? obj.imm : 24 * 3600 * 1e3, this._status = obj.st, this._resHeaders = obj.resh, this._rescc = obj.rescc, this._method = obj.m, this._url = obj.u, this._host = obj.h, this._noAuthorization = obj.a, this._reqHeaders = obj.reqh, this._reqcc = obj.reqcc;\n      }\n      toObject() {\n        return {\n          v: 1,\n          t: this._responseTime,\n          sh: this._isShared,\n          ch: this._cacheHeuristic,\n          imm: this._immutableMinTtl,\n          st: this._status,\n          resh: this._resHeaders,\n          rescc: this._rescc,\n          m: this._method,\n          u: this._url,\n          h: this._host,\n          a: this._noAuthorization,\n          reqh: this._reqHeaders,\n          reqcc: this._reqcc\n        };\n      }\n      /**\n       * Headers for sending to the origin server to revalidate stale response.\n       * Allows server to return 304 to allow reuse of the previous response.\n       *\n       * Hop by hop headers are always stripped.\n       * Revalidation headers may be added or removed, depending on request.\n       */\n      revalidationHeaders(incomingReq) {\n        this._assertRequestHasHeaders(incomingReq);\n        let headers = this._copyWithoutHopByHopHeaders(incomingReq.headers);\n        if (delete headers[\"if-range\"], !this._requestMatches(incomingReq, !0) || !this.storable())\n          return delete headers[\"if-none-match\"], delete headers[\"if-modified-since\"], headers;\n        if (this._resHeaders.etag && (headers[\"if-none-match\"] = headers[\"if-none-match\"] ? `${headers[\"if-none-match\"]}, ${this._resHeaders.etag}` : this._resHeaders.etag), headers[\"accept-ranges\"] || headers[\"if-match\"] || headers[\"if-unmodified-since\"] || this._method && this._method != \"GET\") {\n          if (delete headers[\"if-modified-since\"], headers[\"if-none-match\"]) {\n            let etags = headers[\"if-none-match\"].split(/,/).filter((etag) => !/^\\s*W\\//.test(etag));\n            etags.length ? headers[\"if-none-match\"] = etags.join(\",\").trim() : delete headers[\"if-none-match\"];\n          }\n        } else this._resHeaders[\"last-modified\"] && !headers[\"if-modified-since\"] && (headers[\"if-modified-since\"] = this._resHeaders[\"last-modified\"]);\n        return headers;\n      }\n      /**\n       * Creates new CachePolicy with information combined from the previews response,\n       * and the new revalidation response.\n       *\n       * Returns {policy, modified} where modified is a boolean indicating\n       * whether the response body has been modified, and old cached body can't be used.\n       *\n       * @return {Object} {policy: CachePolicy, modified: Boolean}\n       */\n      revalidatedPolicy(request, response) {\n        if (this._assertRequestHasHeaders(request), this._useStaleIfError() && isErrorResponse(response))\n          return {\n            modified: !1,\n            matches: !1,\n            policy: this\n          };\n        if (!response || !response.headers)\n          throw Error(\"Response headers missing\");\n        let matches = !1;\n        if (response.status !== void 0 && response.status != 304 ? matches = !1 : response.headers.etag && !/^\\s*W\\//.test(response.headers.etag) ? matches = this._resHeaders.etag && this._resHeaders.etag.replace(/^\\s*W\\//, \"\") === response.headers.etag : this._resHeaders.etag && response.headers.etag ? matches = this._resHeaders.etag.replace(/^\\s*W\\//, \"\") === response.headers.etag.replace(/^\\s*W\\//, \"\") : this._resHeaders[\"last-modified\"] ? matches = this._resHeaders[\"last-modified\"] === response.headers[\"last-modified\"] : !this._resHeaders.etag && !this._resHeaders[\"last-modified\"] && !response.headers.etag && !response.headers[\"last-modified\"] && (matches = !0), !matches)\n          return {\n            policy: new this.constructor(request, response),\n            // Client receiving 304 without body, even if it's invalid/mismatched has no option\n            // but to reuse a cached body. We don't have a good way to tell clients to do\n            // error recovery in such case.\n            modified: response.status != 304,\n            matches: !1\n          };\n        let headers = {};\n        for (let k in this._resHeaders)\n          headers[k] = k in response.headers && !excludedFromRevalidationUpdate[k] ? response.headers[k] : this._resHeaders[k];\n        let newResponse = Object.assign({}, response, {\n          status: this._status,\n          method: this._method,\n          headers\n        });\n        return {\n          policy: new this.constructor(request, newResponse, {\n            shared: this._isShared,\n            cacheHeuristic: this._cacheHeuristic,\n            immutableMinTimeToLive: this._immutableMinTtl\n          }),\n          modified: !1,\n          matches: !0\n        };\n      }\n    };\n  }\n});\n\n// src/workers/cache/cache.worker.ts\nvar import_http_cache_semantics = __toESM(require_http_cache_semantics());\nimport assert from \"node:assert\";\nimport { Buffer as Buffer2 } from \"node:buffer\";\nimport {\n  DeferredPromise,\n  GET,\n  KeyValueStorage,\n  LogLevel,\n  MiniflareDurableObject,\n  parseRanges,\n  PURGE,\n  PUT\n} from \"miniflare:shared\";\n\n// src/workers/kv/constants.ts\nimport { testRegExps } from \"miniflare:shared\";\nvar KVLimits = {\n  MIN_CACHE_TTL: 60,\n  MAX_LIST_KEYS: 1e3,\n  MAX_KEY_SIZE: 512,\n  MAX_VALUE_SIZE: 25 * 1024 * 1024,\n  MAX_VALUE_SIZE_TEST: 1024,\n  MAX_METADATA_SIZE: 1024,\n  MAX_BULK_SIZE: 25 * 1024 * 1024\n};\nvar SITES_NO_CACHE_PREFIX = \"$__MINIFLARE_SITES__$/\";\nfunction isSitesRequest(request) {\n  return new URL(request.url).pathname.startsWith(`/${SITES_NO_CACHE_PREFIX}`);\n}\n\n// src/workers/cache/errors.worker.ts\nimport { HttpError } from \"miniflare:shared\";\n\n// src/workers/cache/constants.ts\nvar CacheHeaders = {\n  NAMESPACE: \"cf-cache-namespace\",\n  STATUS: \"cf-cache-status\"\n};\n\n// src/workers/cache/errors.worker.ts\nvar CacheError = class extends HttpError {\n  constructor(code, message, headers = []) {\n    super(code, message);\n    this.headers = headers;\n  }\n  toResponse() {\n    return new Response(null, {\n      status: this.code,\n      headers: this.headers\n    });\n  }\n  context(info) {\n    return this.message += ` (${info})`, this;\n  }\n}, StorageFailure = class extends CacheError {\n  constructor() {\n    super(413, \"Cache storage failed\");\n  }\n}, PurgeFailure = class extends CacheError {\n  constructor() {\n    super(404, \"Couldn't find asset to purge\");\n  }\n}, CacheMiss = class extends CacheError {\n  constructor() {\n    super(\n      // workerd ignores this, but it's the correct status code\n      504,\n      \"Asset not found in cache\",\n      [[CacheHeaders.STATUS, \"MISS\"]]\n    );\n  }\n}, RangeNotSatisfiable = class extends CacheError {\n  constructor(size) {\n    super(416, \"Range not satisfiable\", [\n      [\"Content-Range\", `bytes */${size}`],\n      [CacheHeaders.STATUS, \"HIT\"]\n    ]);\n  }\n};\n\n// src/workers/cache/cache.worker.ts\nfunction getCacheKey(req) {\n  return req.cf?.cacheKey ? String(req.cf?.cacheKey) : req.url;\n}\nfunction getExpiration(timers, req, res) {\n  let reqHeaders = normaliseHeaders(req.headers);\n  delete reqHeaders[\"cache-control\"];\n  let resHeaders = normaliseHeaders(res.headers);\n  resHeaders[\"cache-control\"]?.toLowerCase().includes(\"private=set-cookie\") && (resHeaders[\"cache-control\"] = resHeaders[\"cache-control\"]?.toLowerCase().replace(/private=set-cookie;?/i, \"\"), delete resHeaders[\"set-cookie\"]);\n  let cacheReq = {\n    url: req.url,\n    // If a request gets to the Cache service, it's method will be GET. See README.md for details\n    method: \"GET\",\n    headers: reqHeaders\n  }, cacheRes = {\n    status: res.status,\n    headers: resHeaders\n  }, originalNow = import_http_cache_semantics.default.prototype.now;\n  import_http_cache_semantics.default.prototype.now = timers.now;\n  try {\n    let policy = new import_http_cache_semantics.default(cacheReq, cacheRes, { shared: !0 });\n    return {\n      // Check if the request & response is cacheable\n      storable: policy.storable() && !(\"set-cookie\" in resHeaders),\n      expiration: policy.timeToLive(),\n      // Cache Policy Headers is typed as [header: string]: string | string[] | undefined\n      // It's safe to ignore the undefined here, which is what casting to HeadersInit does\n      headers: policy.responseHeaders()\n    };\n  } finally {\n    import_http_cache_semantics.default.prototype.now = originalNow;\n  }\n}\nfunction normaliseHeaders(headers) {\n  let result = {};\n  for (let [key, value] of headers) result[key.toLowerCase()] = value;\n  return result;\n}\nvar etagRegexp = /^(W\\/)?\"(.+)\"$/;\nfunction parseETag(value) {\n  return etagRegexp.exec(value.trim())?.[2] ?? void 0;\n}\nvar utcDateRegexp = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d\\d (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d\\d\\d\\d \\d\\d:\\d\\d:\\d\\d GMT$/;\nfunction parseUTCDate(value) {\n  return utcDateRegexp.test(value) ? Date.parse(value) : NaN;\n}\nfunction getMatchResponse(reqHeaders, res) {\n  let reqIfNoneMatchHeader = reqHeaders.get(\"If-None-Match\"), resETagHeader = res.headers.get(\"ETag\");\n  if (reqIfNoneMatchHeader !== null && resETagHeader !== null) {\n    let resETag = parseETag(resETagHeader);\n    if (resETag !== void 0) {\n      if (reqIfNoneMatchHeader.trim() === \"*\")\n        return new Response(null, { status: 304, headers: res.headers });\n      for (let reqIfNoneMatch of reqIfNoneMatchHeader.split(\",\"))\n        if (resETag === parseETag(reqIfNoneMatch))\n          return new Response(null, { status: 304, headers: res.headers });\n    }\n  }\n  let reqIfModifiedSinceHeader = reqHeaders.get(\"If-Modified-Since\"), resLastModifiedHeader = res.headers.get(\"Last-Modified\");\n  if (reqIfModifiedSinceHeader !== null && resLastModifiedHeader !== null) {\n    let reqIfModifiedSince = parseUTCDate(reqIfModifiedSinceHeader);\n    if (parseUTCDate(resLastModifiedHeader) <= reqIfModifiedSince)\n      return new Response(null, { status: 304, headers: res.headers });\n  }\n  if (res.ranges.length > 0)\n    if (res.status = 206, res.ranges.length > 1)\n      assert(!(res.body instanceof ReadableStream)), res.headers.set(\"Content-Type\", res.body.multipartContentType);\n    else {\n      let { start, end } = res.ranges[0];\n      res.headers.set(\n        \"Content-Range\",\n        `bytes ${start}-${end}/${res.totalSize}`\n      ), res.headers.set(\"Content-Length\", `${end - start + 1}`);\n    }\n  return res.body instanceof ReadableStream || (res.body = res.body.body), new Response(res.body, { status: res.status, headers: res.headers });\n}\nvar CR = 13, LF = 10, STATUS_REGEXP = /^HTTP\\/\\d(?:\\.\\d)? (?<rawStatusCode>\\d+) (?<statusText>.*)$/;\nasync function parseHttpResponse(stream) {\n  let buffer = Buffer2.alloc(0), blankLineIndex = -1;\n  for await (let chunk of stream.values({ preventCancel: !0 }))\n    if (buffer = Buffer2.concat([buffer, chunk]), blankLineIndex = buffer.findIndex(\n      (_value, index) => buffer[index] === CR && buffer[index + 1] === LF && buffer[index + 2] === CR && buffer[index + 3] === LF\n    ), blankLineIndex !== -1) break;\n  assert(blankLineIndex !== -1, \"Expected to find blank line in HTTP message\");\n  let rawStatusHeaders = buffer.subarray(0, blankLineIndex).toString(), [rawStatus, ...rawHeaders] = rawStatusHeaders.split(`\\r\n`), statusMatch = rawStatus.match(STATUS_REGEXP);\n  assert(\n    statusMatch?.groups != null,\n    `Expected first line ${JSON.stringify(rawStatus)} to be HTTP status line`\n  );\n  let { rawStatusCode, statusText } = statusMatch.groups, statusCode = parseInt(rawStatusCode), headers = rawHeaders.map((rawHeader) => {\n    let index = rawHeader.indexOf(\":\");\n    return [\n      rawHeader.substring(0, index),\n      rawHeader.substring(index + 1).trim()\n    ];\n  }), prefix = buffer.subarray(\n    blankLineIndex + 4\n    /* \"\\r\\n\\r\\n\" */\n  ), { readable, writable } = new IdentityTransformStream(), writer = writable.getWriter();\n  return writer.write(prefix).then(() => (writer.releaseLock(), stream.pipeTo(writable))).catch((e) => console.error(\"Error writing HTTP body:\", e)), new Response(readable, { status: statusCode, statusText, headers });\n}\nvar SizingStream = class extends TransformStream {\n  size;\n  constructor() {\n    let sizePromise = new DeferredPromise(), size = 0;\n    super({\n      transform(chunk, controller) {\n        size += chunk.byteLength, controller.enqueue(chunk);\n      },\n      flush() {\n        sizePromise.resolve(size);\n      }\n    }), this.size = sizePromise;\n  }\n}, CacheObject = class extends MiniflareDurableObject {\n  #warnedUsage = !1;\n  async #maybeWarnUsage(request) {\n    !this.#warnedUsage && request.cf?.miniflare?.cacheWarnUsage === !0 && (this.#warnedUsage = !0, await this.logWithLevel(\n      LogLevel.WARN,\n      \"Cache operations will have no impact if you deploy to a workers.dev subdomain!\"\n    ));\n  }\n  #storage;\n  get storage() {\n    return this.#storage ??= new KeyValueStorage(this);\n  }\n  match = async (req) => {\n    await this.#maybeWarnUsage(req);\n    let cacheKey = getCacheKey(req);\n    if (isSitesRequest(req)) throw new CacheMiss();\n    let resHeaders, resRanges, cached = await this.storage.get(cacheKey, ({ size, headers }) => {\n      resHeaders = new Headers(headers);\n      let contentType = resHeaders.get(\"Content-Type\"), rangeHeader = req.headers.get(\"Range\");\n      if (rangeHeader !== null && (resRanges = parseRanges(rangeHeader, size), resRanges === void 0))\n        throw new RangeNotSatisfiable(size);\n      return {\n        ranges: resRanges,\n        contentLength: size,\n        contentType: contentType ?? void 0\n      };\n    });\n    if (cached?.metadata === void 0) throw new CacheMiss();\n    return assert(resHeaders !== void 0), resHeaders.set(\"CF-Cache-Status\", \"HIT\"), resRanges ??= [], getMatchResponse(req.headers, {\n      status: cached.metadata.status,\n      headers: resHeaders,\n      ranges: resRanges,\n      body: cached.value,\n      totalSize: cached.metadata.size\n    });\n  };\n  put = async (req) => {\n    await this.#maybeWarnUsage(req);\n    let cacheKey = getCacheKey(req);\n    if (isSitesRequest(req)) throw new CacheMiss();\n    assert(req.body !== null);\n    let res = await parseHttpResponse(req.body), body = res.body;\n    assert(body !== null);\n    let { storable, expiration, headers } = getExpiration(\n      this.timers,\n      req,\n      res\n    );\n    if (!storable) {\n      try {\n        await body.pipeTo(new WritableStream());\n      } catch {\n      }\n      throw new StorageFailure();\n    }\n    let contentLength = parseInt(res.headers.get(\"Content-Length\")), sizePromise;\n    if (Number.isNaN(contentLength)) {\n      let stream = new SizingStream();\n      body = body.pipeThrough(stream), sizePromise = stream.size;\n    } else\n      sizePromise = Promise.resolve(contentLength);\n    let metadata = sizePromise.then((size) => ({\n      headers: Object.entries(headers),\n      status: res.status,\n      size\n    }));\n    return await this.storage.put({\n      key: cacheKey,\n      value: body,\n      expiration: this.timers.now() + expiration,\n      metadata\n    }), new Response(null, { status: 204 });\n  };\n  delete = async (req) => {\n    await this.#maybeWarnUsage(req);\n    let cacheKey = getCacheKey(req);\n    if (!await this.storage.delete(cacheKey)) throw new PurgeFailure();\n    return new Response(null);\n  };\n};\n__decorateClass([\n  GET()\n], CacheObject.prototype, \"match\", 2), __decorateClass([\n  PUT()\n], CacheObject.prototype, \"put\", 2), __decorateClass([\n  PURGE()\n], CacheObject.prototype, \"delete\", 2);\nexport {\n  CacheObject,\n  parseHttpResponse\n};\n//# sourceMappingURL=cache.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/cache/cache.worker.js"
          }
        ],
        "durableObjectNamespaces": [
          {
            "className": "CacheObject",
            "uniqueKey": "miniflare-CacheObject"
          }
        ],
        "durableObjectStorage": {
          "localDisk": "cache:storage"
        },
        "bindings": [
          {
            "name": "MINIFLARE_BLOBS",
            "service": {
              "name": "cache:storage"
            }
          },
          {
            "name": "MINIFLARE_LOOPBACK",
            "service": {
              "name": "loopback"
            }
          },
          {
            "name": "MINIFLARE_STICKY_BLOBS",
            "json": "true"
          }
        ]
      }
    },
    {
      "name": "do:storage",
      "disk": {
        "path": "/var/folders/wl/xdqbkld10134zqq2kp70lsgr0000gp/T/miniflare-18b9250ec303b49f27989a596f07b311/do",
        "writable": true
      }
    },
    {
      "name": "core:user:vitest-pool-workers-abort-all",
      "worker": {
        "modules": [
          {
            "name": "index.mjs",
            "esModule": "\n\t\t\timport workerdUnsafe from \"workerd:unsafe\";\n\t\t\texport default {\n\t\t\t\tasync fetch(request) {\n\t\t\t\t\tif (request.method !== \"DELETE\") return new Response(null, { status: 405 });\n\t\t\t\t\tawait workerdUnsafe.abortAllDurableObjects();\n\t\t\t\t\treturn new Response(null, { status: 204 });\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n//# sourceURL=file:///Users/penalosa/dev/wsdk/fixtures/vitest-pool-workers-examples/index.mjs\n"
          }
        ],
        "compatibilityDate": "2000-01-01",
        "compatibilityFlags": [
          "unsafe_module"
        ],
        "bindings": [],
        "durableObjectNamespaces": [],
        "globalOutbound": {
          "name": "strip-cf-connecting-ip:1"
        },
        "cacheApiOutbound": {
          "name": "cache:1"
        },
        "containerEngine": {
          "localDocker": {
            "socketPath": "unix:///var/run/docker.sock"
          }
        }
      }
    },
    {
      "name": "strip-cf-connecting-ip:1",
      "worker": {
        "modules": [
          {
            "name": "index.js",
            "esModule": "// src/workers/core/strip-cf-connecting-ip.worker.ts\nvar strip_cf_connecting_ip_worker_default = {\n  fetch(request) {\n    let headers = new Headers(request.headers);\n    return headers.delete(\"CF-Connecting-IP\"), fetch(request, { headers });\n  }\n};\nexport {\n  strip_cf_connecting_ip_worker_default as default\n};\n//# sourceMappingURL=strip-cf-connecting-ip.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/core/strip-cf-connecting-ip.worker.js"
          }
        ],
        "compatibilityDate": "2025-01-01",
        "compatibilityFlags": [
          "connect_pass_through",
          "experimental"
        ]
      }
    },
    {
      "name": "cache:1",
      "worker": {
        "compatibilityDate": "2023-07-24",
        "compatibilityFlags": [
          "nodejs_compat",
          "experimental"
        ],
        "modules": [
          {
            "name": "cache-entry.worker.js",
            "esModule": "// src/workers/cache/cache-entry.worker.ts\nimport { SharedBindings } from \"miniflare:shared\";\n\n// src/workers/cache/constants.ts\nvar CacheHeaders = {\n  NAMESPACE: \"cf-cache-namespace\",\n  STATUS: \"cf-cache-status\"\n}, CacheBindings = {\n  MAYBE_JSON_CACHE_WARN_USAGE: \"MINIFLARE_CACHE_WARN_USAGE\"\n};\n\n// src/workers/cache/cache-entry.worker.ts\nvar cache_entry_worker_default = {\n  async fetch(request, env) {\n    let namespace = request.headers.get(CacheHeaders.NAMESPACE), name = namespace === null ? \"default\" : `named:${namespace}`, objectNamespace = env[SharedBindings.DURABLE_OBJECT_NAMESPACE_OBJECT], id = objectNamespace.idFromName(name), stub = objectNamespace.get(id), cf = {\n      ...request.cf,\n      miniflare: {\n        name,\n        cacheWarnUsage: env[CacheBindings.MAYBE_JSON_CACHE_WARN_USAGE]\n      }\n    };\n    return await stub.fetch(request, { cf });\n  }\n};\nexport {\n  cache_entry_worker_default as default\n};\n//# sourceMappingURL=cache-entry.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/cache/cache-entry.worker.js"
          }
        ],
        "bindings": [
          {
            "name": "MINIFLARE_OBJECT",
            "durableObjectNamespace": {
              "serviceName": "cache:cache",
              "className": "CacheObject"
            }
          },
          {
            "name": "MINIFLARE_CACHE_WARN_USAGE",
            "json": "false"
          }
        ]
      }
    },
    {
      "name": "loopback",
      "external": {
        "http": {
          "cfBlobHeader": "MF-CF-Blob"
        }
      }
    },
    {
      "name": "core:entry",
      "worker": {
        "modules": [
          {
            "name": "entry.worker.js",
            "esModule": "// ../../node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/colors.mjs\nvar FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY = !0;\ntypeof process < \"u\" && ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {}, isTTY = process.stdout && process.stdout.isTTY);\nvar $ = {\n  enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== \"dumb\" && (FORCE_COLOR != null && FORCE_COLOR !== \"0\" || isTTY)\n};\nfunction init(x, y) {\n  let rgx = new RegExp(`\\\\x1b\\\\[${y}m`, \"g\"), open = `\\x1B[${x}m`, close = `\\x1B[${y}m`;\n  return function(txt) {\n    return !$.enabled || txt == null ? txt : open + (~(\"\" + txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;\n  };\n}\nvar reset = init(0, 0), bold = init(1, 22), dim = init(2, 22), italic = init(3, 23), underline = init(4, 24), inverse = init(7, 27), hidden = init(8, 28), strikethrough = init(9, 29), black = init(30, 39), red = init(31, 39), green = init(32, 39), yellow = init(33, 39), blue = init(34, 39), magenta = init(35, 39), cyan = init(36, 39), white = init(37, 39), gray = init(90, 39), grey = init(90, 39), bgBlack = init(40, 49), bgRed = init(41, 49), bgGreen = init(42, 49), bgYellow = init(43, 49), bgBlue = init(44, 49), bgMagenta = init(45, 49), bgCyan = init(46, 49), bgWhite = init(47, 49);\n\n// src/workers/core/entry.worker.ts\nimport { HttpError, LogLevel as LogLevel2, SharedHeaders as SharedHeaders2 } from \"miniflare:shared\";\n\n// src/shared/mime-types.ts\nvar compressedByCloudflareFL = /* @__PURE__ */ new Set([\n  // list copied from https://developers.cloudflare.com/speed/optimization/content/brotli/content-compression/#:~:text=If%20supported%20by%20visitors%E2%80%99%20web%20browsers%2C%20Cloudflare%20will%20return%20Gzip%20or%20Brotli%2Dencoded%20responses%20for%20the%20following%20content%20types%3A\n  \"text/html\",\n  \"text/richtext\",\n  \"text/plain\",\n  \"text/css\",\n  \"text/x-script\",\n  \"text/x-component\",\n  \"text/x-java-source\",\n  \"text/x-markdown\",\n  \"application/javascript\",\n  \"application/x-javascript\",\n  \"text/javascript\",\n  \"text/js\",\n  \"image/x-icon\",\n  \"image/vnd.microsoft.icon\",\n  \"application/x-perl\",\n  \"application/x-httpd-cgi\",\n  \"text/xml\",\n  \"application/xml\",\n  \"application/rss+xml\",\n  \"application/vnd.api+json\",\n  \"application/x-protobuf\",\n  \"application/json\",\n  \"multipart/bag\",\n  \"multipart/mixed\",\n  \"application/xhtml+xml\",\n  \"font/ttf\",\n  \"font/otf\",\n  \"font/x-woff\",\n  \"image/svg+xml\",\n  \"application/vnd.ms-fontobject\",\n  \"application/ttf\",\n  \"application/x-ttf\",\n  \"application/otf\",\n  \"application/x-otf\",\n  \"application/truetype\",\n  \"application/opentype\",\n  \"application/x-opentype\",\n  \"application/font-woff\",\n  \"application/eot\",\n  \"application/font\",\n  \"application/font-sfnt\",\n  \"application/wasm\",\n  \"application/javascript-binast\",\n  \"application/manifest+json\",\n  \"application/ld+json\",\n  \"application/graphql+json\",\n  \"application/geo+json\"\n]);\nfunction isCompressedByCloudflareFL(contentTypeHeader) {\n  if (!contentTypeHeader) return !0;\n  let [contentType] = contentTypeHeader.split(\";\");\n  return compressedByCloudflareFL.has(contentType);\n}\n\n// src/workers/core/constants.ts\nvar CoreHeaders = {\n  CUSTOM_FETCH_SERVICE: \"MF-Custom-Fetch-Service\",\n  CUSTOM_NODE_SERVICE: \"MF-Custom-Node-Service\",\n  ORIGINAL_URL: \"MF-Original-URL\",\n  PROXY_SHARED_SECRET: \"MF-Proxy-Shared-Secret\",\n  DISABLE_PRETTY_ERROR: \"MF-Disable-Pretty-Error\",\n  ERROR_STACK: \"MF-Experimental-Error-Stack\",\n  ROUTE_OVERRIDE: \"MF-Route-Override\",\n  CF_BLOB: \"MF-CF-Blob\",\n  // API Proxy\n  OP_SECRET: \"MF-Op-Secret\",\n  OP: \"MF-Op\",\n  OP_TARGET: \"MF-Op-Target\",\n  OP_KEY: \"MF-Op-Key\",\n  OP_SYNC: \"MF-Op-Sync\",\n  OP_STRINGIFIED_SIZE: \"MF-Op-Stringified-Size\",\n  OP_RESULT_TYPE: \"MF-Op-Result-Type\"\n}, CoreBindings = {\n  SERVICE_LOOPBACK: \"MINIFLARE_LOOPBACK\",\n  SERVICE_USER_ROUTE_PREFIX: \"MINIFLARE_USER_ROUTE_\",\n  SERVICE_USER_FALLBACK: \"MINIFLARE_USER_FALLBACK\",\n  TEXT_CUSTOM_SERVICE: \"MINIFLARE_CUSTOM_SERVICE\",\n  IMAGES_SERVICE: \"MINIFLARE_IMAGES_SERVICE\",\n  TEXT_UPSTREAM_URL: \"MINIFLARE_UPSTREAM_URL\",\n  JSON_CF_BLOB: \"CF_BLOB\",\n  JSON_ROUTES: \"MINIFLARE_ROUTES\",\n  JSON_LOG_LEVEL: \"MINIFLARE_LOG_LEVEL\",\n  DATA_LIVE_RELOAD_SCRIPT: \"MINIFLARE_LIVE_RELOAD_SCRIPT\",\n  DURABLE_OBJECT_NAMESPACE_PROXY: \"MINIFLARE_PROXY\",\n  DATA_PROXY_SECRET: \"MINIFLARE_PROXY_SECRET\",\n  DATA_PROXY_SHARED_SECRET: \"MINIFLARE_PROXY_SHARED_SECRET\",\n  TRIGGER_HANDLERS: \"TRIGGER_HANDLERS\",\n  LOG_REQUESTS: \"LOG_REQUESTS\",\n  STRIP_DISABLE_PRETTY_ERROR: \"STRIP_DISABLE_PRETTY_ERROR\"\n}, ProxyOps = {\n  // Get the target or a property of the target\n  GET: \"GET\",\n  // Get the descriptor for a property of the target\n  GET_OWN_DESCRIPTOR: \"GET_OWN_DESCRIPTOR\",\n  // Get the target's own property names\n  GET_OWN_KEYS: \"GET_OWN_KEYS\",\n  // Call a method on the target\n  CALL: \"CALL\",\n  // Remove the strong reference to the target on the \"heap\", allowing it to be\n  // garbage collected\n  FREE: \"FREE\"\n}, ProxyAddresses = {\n  GLOBAL: 0,\n  // globalThis\n  ENV: 1,\n  // env\n  USER_START: 2\n};\nfunction isFetcherFetch(targetName, key) {\n  return (targetName === \"Fetcher\" || targetName === \"DurableObject\" || targetName === \"WorkerRpc\") && key === \"fetch\";\n}\nfunction isR2ObjectWriteHttpMetadata(targetName, key) {\n  return (targetName === \"HeadResult\" || targetName === \"GetResult\") && key === \"writeHttpMetadata\";\n}\nfunction isImagesInput(targetName, key) {\n  return targetName === \"ImagesBindingImpl\" && key === \"input\";\n}\n\n// src/workers/core/email.ts\nimport assert from \"node:assert\";\nimport { LogLevel, SharedHeaders } from \"miniflare:shared\";\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/decode-strings.js\nvar textEncoder = new TextEncoder(), base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", base64Lookup = new Uint8Array(256);\nfor (i = 0; i < base64Chars.length; i++)\n  base64Lookup[base64Chars.charCodeAt(i)] = i;\nvar i;\nfunction decodeBase64(base64) {\n  let bufferLength = Math.ceil(base64.length / 4) * 3, len = base64.length, p = 0;\n  base64.length % 4 === 3 ? bufferLength-- : base64.length % 4 === 2 ? bufferLength -= 2 : base64[base64.length - 1] === \"=\" && (bufferLength--, base64[base64.length - 2] === \"=\" && bufferLength--);\n  let arrayBuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < len; i += 4) {\n    let encoded1 = base64Lookup[base64.charCodeAt(i)], encoded2 = base64Lookup[base64.charCodeAt(i + 1)], encoded3 = base64Lookup[base64.charCodeAt(i + 2)], encoded4 = base64Lookup[base64.charCodeAt(i + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4, bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2, bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return arrayBuffer;\n}\nfunction getDecoder(charset) {\n  return charset = charset || \"utf8\", new TextDecoder(charset);\n}\nasync function blobToArrayBuffer(blob) {\n  if (\"arrayBuffer\" in blob)\n    return await blob.arrayBuffer();\n  let fr = new FileReader();\n  return new Promise((resolve, reject) => {\n    fr.onload = function(e) {\n      resolve(e.target.result);\n    }, fr.onerror = function(e) {\n      reject(fr.error);\n    }, fr.readAsArrayBuffer(blob);\n  });\n}\nfunction getHex(c) {\n  return c >= 48 && c <= 57 || c >= 97 && c <= 102 || c >= 65 && c <= 70 ? String.fromCharCode(c) : !1;\n}\nfunction decodeWord(charset, encoding, str) {\n  let splitPos = charset.indexOf(\"*\");\n  splitPos >= 0 && (charset = charset.substr(0, splitPos)), encoding = encoding.toUpperCase();\n  let byteStr;\n  if (encoding === \"Q\") {\n    str = str.replace(/=\\s+([0-9a-fA-F])/g, \"=$1\").replace(/[_\\s]/g, \" \");\n    let buf = textEncoder.encode(str), encodedBytes = [];\n    for (let i = 0, len = buf.length; i < len; i++) {\n      let c = buf[i];\n      if (i <= len - 2 && c === 61) {\n        let c1 = getHex(buf[i + 1]), c2 = getHex(buf[i + 2]);\n        if (c1 && c2) {\n          let c3 = parseInt(c1 + c2, 16);\n          encodedBytes.push(c3), i += 2;\n          continue;\n        }\n      }\n      encodedBytes.push(c);\n    }\n    byteStr = new ArrayBuffer(encodedBytes.length);\n    let dataView = new DataView(byteStr);\n    for (let i = 0, len = encodedBytes.length; i < len; i++)\n      dataView.setUint8(i, encodedBytes[i]);\n  } else encoding === \"B\" ? byteStr = decodeBase64(str.replace(/[^a-zA-Z0-9\\+\\/=]+/g, \"\")) : byteStr = textEncoder.encode(str);\n  return getDecoder(charset).decode(byteStr);\n}\nfunction decodeWords(str) {\n  let joinString = !0, done = !1;\n  for (; !done; ) {\n    let result = (str || \"\").toString().replace(/(=\\?([^?]+)\\?[Bb]\\?([^?]*)\\?=)\\s*(?==\\?([^?]+)\\?[Bb]\\?[^?]*\\?=)/g, (match, left, chLeft, encodedLeftStr, chRight) => joinString && chLeft === chRight && encodedLeftStr.length % 4 === 0 && !/=$/.test(encodedLeftStr) ? left + \"__\\0JOIN\\0__\" : match).replace(/(=\\?([^?]+)\\?[Qq]\\?[^?]*\\?=)\\s*(?==\\?([^?]+)\\?[Qq]\\?[^?]*\\?=)/g, (match, left, chLeft, chRight) => joinString && chLeft === chRight ? left + \"__\\0JOIN\\0__\" : match).replace(/(\\?=)?__\\x00JOIN\\x00__(=\\?([^?]+)\\?[QqBb]\\?)?/g, \"\").replace(/(=\\?[^?]+\\?[QqBb]\\?[^?]*\\?=)\\s+(?==\\?[^?]+\\?[QqBb]\\?[^?]*\\?=)/g, \"$1\").replace(/=\\?([\\w_\\-*]+)\\?([QqBb])\\?([^?]*)\\?=/g, (m, charset, encoding, text) => decodeWord(charset, encoding, text));\n    if (joinString && result.indexOf(\"\\uFFFD\") >= 0)\n      joinString = !1;\n    else\n      return result;\n  }\n}\nfunction decodeURIComponentWithCharset(encodedStr, charset) {\n  charset = charset || \"utf-8\";\n  let encodedBytes = [];\n  for (let i = 0; i < encodedStr.length; i++) {\n    let c = encodedStr.charAt(i);\n    if (c === \"%\" && /^[a-f0-9]{2}/i.test(encodedStr.substr(i + 1, 2))) {\n      let byte = encodedStr.substr(i + 1, 2);\n      i += 2, encodedBytes.push(parseInt(byte, 16));\n    } else if (c.charCodeAt(0) > 126) {\n      c = textEncoder.encode(c);\n      for (let j = 0; j < c.length; j++)\n        encodedBytes.push(c[j]);\n    } else\n      encodedBytes.push(c.charCodeAt(0));\n  }\n  let byteStr = new ArrayBuffer(encodedBytes.length), dataView = new DataView(byteStr);\n  for (let i = 0, len = encodedBytes.length; i < len; i++)\n    dataView.setUint8(i, encodedBytes[i]);\n  return getDecoder(charset).decode(byteStr);\n}\nfunction decodeParameterValueContinuations(header) {\n  let paramKeys = /* @__PURE__ */ new Map();\n  Object.keys(header.params).forEach((key) => {\n    let match = key.match(/\\*((\\d+)\\*?)?$/);\n    if (!match)\n      return;\n    let actualKey = key.substr(0, match.index).toLowerCase(), nr = Number(match[2]) || 0, paramVal;\n    paramKeys.has(actualKey) ? paramVal = paramKeys.get(actualKey) : (paramVal = {\n      charset: !1,\n      values: []\n    }, paramKeys.set(actualKey, paramVal));\n    let value = header.params[key];\n    nr === 0 && match[0].charAt(match[0].length - 1) === \"*\" && (match = value.match(/^([^']*)'[^']*'(.*)$/)) && (paramVal.charset = match[1] || \"utf-8\", value = match[2]), paramVal.values.push({ nr, value }), delete header.params[key];\n  }), paramKeys.forEach((paramVal, key) => {\n    header.params[key] = decodeURIComponentWithCharset(\n      paramVal.values.sort((a, b) => a.nr - b.nr).map((a) => a.value).join(\"\"),\n      paramVal.charset\n    );\n  });\n}\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/pass-through-decoder.js\nvar PassThroughDecoder = class {\n  constructor() {\n    this.chunks = [];\n  }\n  update(line) {\n    this.chunks.push(line), this.chunks.push(`\n`);\n  }\n  finalize() {\n    return blobToArrayBuffer(new Blob(this.chunks, { type: \"application/octet-stream\" }));\n  }\n};\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/base64-decoder.js\nvar Base64Decoder = class {\n  constructor(opts) {\n    opts = opts || {}, this.decoder = opts.decoder || new TextDecoder(), this.maxChunkSize = 100 * 1024, this.chunks = [], this.remainder = \"\";\n  }\n  update(buffer) {\n    let str = this.decoder.decode(buffer);\n    if (/[^a-zA-Z0-9+\\/]/.test(str) && (str = str.replace(/[^a-zA-Z0-9+\\/]+/g, \"\")), this.remainder += str, this.remainder.length >= this.maxChunkSize) {\n      let allowedBytes = Math.floor(this.remainder.length / 4) * 4, base64Str;\n      allowedBytes === this.remainder.length ? (base64Str = this.remainder, this.remainder = \"\") : (base64Str = this.remainder.substr(0, allowedBytes), this.remainder = this.remainder.substr(allowedBytes)), base64Str.length && this.chunks.push(decodeBase64(base64Str));\n    }\n  }\n  finalize() {\n    return this.remainder && !/^=+$/.test(this.remainder) && this.chunks.push(decodeBase64(this.remainder)), blobToArrayBuffer(new Blob(this.chunks, { type: \"application/octet-stream\" }));\n  }\n};\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/qp-decoder.js\nvar QPDecoder = class {\n  constructor(opts) {\n    opts = opts || {}, this.decoder = opts.decoder || new TextDecoder(), this.maxChunkSize = 100 * 1024, this.remainder = \"\", this.chunks = [];\n  }\n  decodeQPBytes(encodedBytes) {\n    let buf = new ArrayBuffer(encodedBytes.length), dataView = new DataView(buf);\n    for (let i = 0, len = encodedBytes.length; i < len; i++)\n      dataView.setUint8(i, parseInt(encodedBytes[i], 16));\n    return buf;\n  }\n  decodeChunks(str) {\n    str = str.replace(/=\\r?\\n/g, \"\");\n    let list = str.split(/(?==)/), encodedBytes = [];\n    for (let part of list) {\n      if (part.charAt(0) !== \"=\") {\n        encodedBytes.length && (this.chunks.push(this.decodeQPBytes(encodedBytes)), encodedBytes = []), this.chunks.push(part);\n        continue;\n      }\n      if (part.length === 3) {\n        encodedBytes.push(part.substr(1));\n        continue;\n      }\n      part.length > 3 && (encodedBytes.push(part.substr(1, 2)), this.chunks.push(this.decodeQPBytes(encodedBytes)), encodedBytes = [], part = part.substr(3), this.chunks.push(part));\n    }\n    encodedBytes.length && (this.chunks.push(this.decodeQPBytes(encodedBytes)), encodedBytes = []);\n  }\n  update(buffer) {\n    let str = this.decoder.decode(buffer) + `\n`;\n    if (str = this.remainder + str, str.length < this.maxChunkSize) {\n      this.remainder = str;\n      return;\n    }\n    this.remainder = \"\";\n    let partialEnding = str.match(/=[a-fA-F0-9]?$/);\n    if (partialEnding) {\n      if (partialEnding.index === 0) {\n        this.remainder = str;\n        return;\n      }\n      this.remainder = str.substr(partialEnding.index), str = str.substr(0, partialEnding.index);\n    }\n    this.decodeChunks(str);\n  }\n  finalize() {\n    return this.remainder.length && (this.decodeChunks(this.remainder), this.remainder = \"\"), blobToArrayBuffer(new Blob(this.chunks, { type: \"application/octet-stream\" }));\n  }\n};\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/mime-node.js\nvar MimeNode = class {\n  constructor(opts) {\n    opts = opts || {}, this.postalMime = opts.postalMime, this.root = !!opts.parentNode, this.childNodes = [], opts.parentNode && opts.parentNode.childNodes.push(this), this.state = \"header\", this.headerLines = [], this.contentType = {\n      value: \"text/plain\",\n      default: !0\n    }, this.contentTransferEncoding = {\n      value: \"8bit\"\n    }, this.contentDisposition = {\n      value: \"\"\n    }, this.headers = [], this.contentDecoder = !1;\n  }\n  setupContentDecoder(transferEncoding) {\n    /base64/i.test(transferEncoding) ? this.contentDecoder = new Base64Decoder() : /quoted-printable/i.test(transferEncoding) ? this.contentDecoder = new QPDecoder({ decoder: getDecoder(this.contentType.parsed.params.charset) }) : this.contentDecoder = new PassThroughDecoder();\n  }\n  async finalize() {\n    if (this.state === \"finished\")\n      return;\n    this.state === \"header\" && this.processHeaders();\n    let boundaries = this.postalMime.boundaries;\n    for (let i = boundaries.length - 1; i >= 0; i--)\n      if (boundaries[i].node === this) {\n        boundaries.splice(i, 1);\n        break;\n      }\n    await this.finalizeChildNodes(), this.content = this.contentDecoder ? await this.contentDecoder.finalize() : null, this.state = \"finished\";\n  }\n  async finalizeChildNodes() {\n    for (let childNode of this.childNodes)\n      await childNode.finalize();\n  }\n  parseStructuredHeader(str) {\n    let response = {\n      value: !1,\n      params: {}\n    }, key = !1, value = \"\", stage = \"value\", quote = !1, escaped = !1, chr;\n    for (let i = 0, len = str.length; i < len; i++)\n      switch (chr = str.charAt(i), stage) {\n        case \"key\":\n          if (chr === \"=\") {\n            key = value.trim().toLowerCase(), stage = \"value\", value = \"\";\n            break;\n          }\n          value += chr;\n          break;\n        case \"value\":\n          if (escaped)\n            value += chr;\n          else if (chr === \"\\\\\") {\n            escaped = !0;\n            continue;\n          } else quote && chr === quote ? quote = !1 : !quote && chr === '\"' ? quote = chr : !quote && chr === \";\" ? (key === !1 ? response.value = value.trim() : response.params[key] = value.trim(), stage = \"key\", value = \"\") : value += chr;\n          escaped = !1;\n          break;\n      }\n    return value = value.trim(), stage === \"value\" ? key === !1 ? response.value = value : response.params[key] = value : value && (response.params[value.toLowerCase()] = \"\"), response.value && (response.value = response.value.toLowerCase()), decodeParameterValueContinuations(response), response;\n  }\n  decodeFlowedText(str, delSp) {\n    return str.split(/\\r?\\n/).reduce((previousValue, currentValue) => / $/.test(previousValue) && !/(^|\\n)-- $/.test(previousValue) ? delSp ? previousValue.slice(0, -1) + currentValue : previousValue + currentValue : previousValue + `\n` + currentValue).replace(/^ /gm, \"\");\n  }\n  getTextContent() {\n    if (!this.content)\n      return \"\";\n    let str = getDecoder(this.contentType.parsed.params.charset).decode(this.content);\n    return /^flowed$/i.test(this.contentType.parsed.params.format) && (str = this.decodeFlowedText(str, /^yes$/i.test(this.contentType.parsed.params.delsp))), str;\n  }\n  processHeaders() {\n    for (let i = this.headerLines.length - 1; i >= 0; i--) {\n      let line = this.headerLines[i];\n      if (i && /^\\s/.test(line))\n        this.headerLines[i - 1] += `\n` + line, this.headerLines.splice(i, 1);\n      else {\n        line = line.replace(/\\s+/g, \" \");\n        let sep = line.indexOf(\":\"), key = sep < 0 ? line.trim() : line.substr(0, sep).trim(), value = sep < 0 ? \"\" : line.substr(sep + 1).trim();\n        switch (this.headers.push({ key: key.toLowerCase(), originalKey: key, value }), key.toLowerCase()) {\n          case \"content-type\":\n            this.contentType.default && (this.contentType = { value, parsed: {} });\n            break;\n          case \"content-transfer-encoding\":\n            this.contentTransferEncoding = { value, parsed: {} };\n            break;\n          case \"content-disposition\":\n            this.contentDisposition = { value, parsed: {} };\n            break;\n          case \"content-id\":\n            this.contentId = value;\n            break;\n          case \"content-description\":\n            this.contentDescription = value;\n            break;\n        }\n      }\n    }\n    this.contentType.parsed = this.parseStructuredHeader(this.contentType.value), this.contentType.multipart = /^multipart\\//i.test(this.contentType.parsed.value) ? this.contentType.parsed.value.substr(this.contentType.parsed.value.indexOf(\"/\") + 1) : !1, this.contentType.multipart && this.contentType.parsed.params.boundary && this.postalMime.boundaries.push({\n      value: textEncoder.encode(this.contentType.parsed.params.boundary),\n      node: this\n    }), this.contentDisposition.parsed = this.parseStructuredHeader(this.contentDisposition.value), this.contentTransferEncoding.encoding = this.contentTransferEncoding.value.toLowerCase().split(/[^\\w-]/).shift(), this.setupContentDecoder(this.contentTransferEncoding.encoding);\n  }\n  feed(line) {\n    switch (this.state) {\n      case \"header\":\n        if (!line.length)\n          return this.state = \"body\", this.processHeaders();\n        this.headerLines.push(getDecoder().decode(line));\n        break;\n      case \"body\":\n        this.contentDecoder.update(line);\n    }\n  }\n};\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/html-entities.js\nvar htmlEntities = {\n  \"&AElig\": \"\\xC6\",\n  \"&AElig;\": \"\\xC6\",\n  \"&AMP\": \"&\",\n  \"&AMP;\": \"&\",\n  \"&Aacute\": \"\\xC1\",\n  \"&Aacute;\": \"\\xC1\",\n  \"&Abreve;\": \"\\u0102\",\n  \"&Acirc\": \"\\xC2\",\n  \"&Acirc;\": \"\\xC2\",\n  \"&Acy;\": \"\\u0410\",\n  \"&Afr;\": \"\\u{1D504}\",\n  \"&Agrave\": \"\\xC0\",\n  \"&Agrave;\": \"\\xC0\",\n  \"&Alpha;\": \"\\u0391\",\n  \"&Amacr;\": \"\\u0100\",\n  \"&And;\": \"\\u2A53\",\n  \"&Aogon;\": \"\\u0104\",\n  \"&Aopf;\": \"\\u{1D538}\",\n  \"&ApplyFunction;\": \"\\u2061\",\n  \"&Aring\": \"\\xC5\",\n  \"&Aring;\": \"\\xC5\",\n  \"&Ascr;\": \"\\u{1D49C}\",\n  \"&Assign;\": \"\\u2254\",\n  \"&Atilde\": \"\\xC3\",\n  \"&Atilde;\": \"\\xC3\",\n  \"&Auml\": \"\\xC4\",\n  \"&Auml;\": \"\\xC4\",\n  \"&Backslash;\": \"\\u2216\",\n  \"&Barv;\": \"\\u2AE7\",\n  \"&Barwed;\": \"\\u2306\",\n  \"&Bcy;\": \"\\u0411\",\n  \"&Because;\": \"\\u2235\",\n  \"&Bernoullis;\": \"\\u212C\",\n  \"&Beta;\": \"\\u0392\",\n  \"&Bfr;\": \"\\u{1D505}\",\n  \"&Bopf;\": \"\\u{1D539}\",\n  \"&Breve;\": \"\\u02D8\",\n  \"&Bscr;\": \"\\u212C\",\n  \"&Bumpeq;\": \"\\u224E\",\n  \"&CHcy;\": \"\\u0427\",\n  \"&COPY\": \"\\xA9\",\n  \"&COPY;\": \"\\xA9\",\n  \"&Cacute;\": \"\\u0106\",\n  \"&Cap;\": \"\\u22D2\",\n  \"&CapitalDifferentialD;\": \"\\u2145\",\n  \"&Cayleys;\": \"\\u212D\",\n  \"&Ccaron;\": \"\\u010C\",\n  \"&Ccedil\": \"\\xC7\",\n  \"&Ccedil;\": \"\\xC7\",\n  \"&Ccirc;\": \"\\u0108\",\n  \"&Cconint;\": \"\\u2230\",\n  \"&Cdot;\": \"\\u010A\",\n  \"&Cedilla;\": \"\\xB8\",\n  \"&CenterDot;\": \"\\xB7\",\n  \"&Cfr;\": \"\\u212D\",\n  \"&Chi;\": \"\\u03A7\",\n  \"&CircleDot;\": \"\\u2299\",\n  \"&CircleMinus;\": \"\\u2296\",\n  \"&CirclePlus;\": \"\\u2295\",\n  \"&CircleTimes;\": \"\\u2297\",\n  \"&ClockwiseContourIntegral;\": \"\\u2232\",\n  \"&CloseCurlyDoubleQuote;\": \"\\u201D\",\n  \"&CloseCurlyQuote;\": \"\\u2019\",\n  \"&Colon;\": \"\\u2237\",\n  \"&Colone;\": \"\\u2A74\",\n  \"&Congruent;\": \"\\u2261\",\n  \"&Conint;\": \"\\u222F\",\n  \"&ContourIntegral;\": \"\\u222E\",\n  \"&Copf;\": \"\\u2102\",\n  \"&Coproduct;\": \"\\u2210\",\n  \"&CounterClockwiseContourIntegral;\": \"\\u2233\",\n  \"&Cross;\": \"\\u2A2F\",\n  \"&Cscr;\": \"\\u{1D49E}\",\n  \"&Cup;\": \"\\u22D3\",\n  \"&CupCap;\": \"\\u224D\",\n  \"&DD;\": \"\\u2145\",\n  \"&DDotrahd;\": \"\\u2911\",\n  \"&DJcy;\": \"\\u0402\",\n  \"&DScy;\": \"\\u0405\",\n  \"&DZcy;\": \"\\u040F\",\n  \"&Dagger;\": \"\\u2021\",\n  \"&Darr;\": \"\\u21A1\",\n  \"&Dashv;\": \"\\u2AE4\",\n  \"&Dcaron;\": \"\\u010E\",\n  \"&Dcy;\": \"\\u0414\",\n  \"&Del;\": \"\\u2207\",\n  \"&Delta;\": \"\\u0394\",\n  \"&Dfr;\": \"\\u{1D507}\",\n  \"&DiacriticalAcute;\": \"\\xB4\",\n  \"&DiacriticalDot;\": \"\\u02D9\",\n  \"&DiacriticalDoubleAcute;\": \"\\u02DD\",\n  \"&DiacriticalGrave;\": \"`\",\n  \"&DiacriticalTilde;\": \"\\u02DC\",\n  \"&Diamond;\": \"\\u22C4\",\n  \"&DifferentialD;\": \"\\u2146\",\n  \"&Dopf;\": \"\\u{1D53B}\",\n  \"&Dot;\": \"\\xA8\",\n  \"&DotDot;\": \"\\u20DC\",\n  \"&DotEqual;\": \"\\u2250\",\n  \"&DoubleContourIntegral;\": \"\\u222F\",\n  \"&DoubleDot;\": \"\\xA8\",\n  \"&DoubleDownArrow;\": \"\\u21D3\",\n  \"&DoubleLeftArrow;\": \"\\u21D0\",\n  \"&DoubleLeftRightArrow;\": \"\\u21D4\",\n  \"&DoubleLeftTee;\": \"\\u2AE4\",\n  \"&DoubleLongLeftArrow;\": \"\\u27F8\",\n  \"&DoubleLongLeftRightArrow;\": \"\\u27FA\",\n  \"&DoubleLongRightArrow;\": \"\\u27F9\",\n  \"&DoubleRightArrow;\": \"\\u21D2\",\n  \"&DoubleRightTee;\": \"\\u22A8\",\n  \"&DoubleUpArrow;\": \"\\u21D1\",\n  \"&DoubleUpDownArrow;\": \"\\u21D5\",\n  \"&DoubleVerticalBar;\": \"\\u2225\",\n  \"&DownArrow;\": \"\\u2193\",\n  \"&DownArrowBar;\": \"\\u2913\",\n  \"&DownArrowUpArrow;\": \"\\u21F5\",\n  \"&DownBreve;\": \"\\u0311\",\n  \"&DownLeftRightVector;\": \"\\u2950\",\n  \"&DownLeftTeeVector;\": \"\\u295E\",\n  \"&DownLeftVector;\": \"\\u21BD\",\n  \"&DownLeftVectorBar;\": \"\\u2956\",\n  \"&DownRightTeeVector;\": \"\\u295F\",\n  \"&DownRightVector;\": \"\\u21C1\",\n  \"&DownRightVectorBar;\": \"\\u2957\",\n  \"&DownTee;\": \"\\u22A4\",\n  \"&DownTeeArrow;\": \"\\u21A7\",\n  \"&Downarrow;\": \"\\u21D3\",\n  \"&Dscr;\": \"\\u{1D49F}\",\n  \"&Dstrok;\": \"\\u0110\",\n  \"&ENG;\": \"\\u014A\",\n  \"&ETH\": \"\\xD0\",\n  \"&ETH;\": \"\\xD0\",\n  \"&Eacute\": \"\\xC9\",\n  \"&Eacute;\": \"\\xC9\",\n  \"&Ecaron;\": \"\\u011A\",\n  \"&Ecirc\": \"\\xCA\",\n  \"&Ecirc;\": \"\\xCA\",\n  \"&Ecy;\": \"\\u042D\",\n  \"&Edot;\": \"\\u0116\",\n  \"&Efr;\": \"\\u{1D508}\",\n  \"&Egrave\": \"\\xC8\",\n  \"&Egrave;\": \"\\xC8\",\n  \"&Element;\": \"\\u2208\",\n  \"&Emacr;\": \"\\u0112\",\n  \"&EmptySmallSquare;\": \"\\u25FB\",\n  \"&EmptyVerySmallSquare;\": \"\\u25AB\",\n  \"&Eogon;\": \"\\u0118\",\n  \"&Eopf;\": \"\\u{1D53C}\",\n  \"&Epsilon;\": \"\\u0395\",\n  \"&Equal;\": \"\\u2A75\",\n  \"&EqualTilde;\": \"\\u2242\",\n  \"&Equilibrium;\": \"\\u21CC\",\n  \"&Escr;\": \"\\u2130\",\n  \"&Esim;\": \"\\u2A73\",\n  \"&Eta;\": \"\\u0397\",\n  \"&Euml\": \"\\xCB\",\n  \"&Euml;\": \"\\xCB\",\n  \"&Exists;\": \"\\u2203\",\n  \"&ExponentialE;\": \"\\u2147\",\n  \"&Fcy;\": \"\\u0424\",\n  \"&Ffr;\": \"\\u{1D509}\",\n  \"&FilledSmallSquare;\": \"\\u25FC\",\n  \"&FilledVerySmallSquare;\": \"\\u25AA\",\n  \"&Fopf;\": \"\\u{1D53D}\",\n  \"&ForAll;\": \"\\u2200\",\n  \"&Fouriertrf;\": \"\\u2131\",\n  \"&Fscr;\": \"\\u2131\",\n  \"&GJcy;\": \"\\u0403\",\n  \"&GT\": \">\",\n  \"&GT;\": \">\",\n  \"&Gamma;\": \"\\u0393\",\n  \"&Gammad;\": \"\\u03DC\",\n  \"&Gbreve;\": \"\\u011E\",\n  \"&Gcedil;\": \"\\u0122\",\n  \"&Gcirc;\": \"\\u011C\",\n  \"&Gcy;\": \"\\u0413\",\n  \"&Gdot;\": \"\\u0120\",\n  \"&Gfr;\": \"\\u{1D50A}\",\n  \"&Gg;\": \"\\u22D9\",\n  \"&Gopf;\": \"\\u{1D53E}\",\n  \"&GreaterEqual;\": \"\\u2265\",\n  \"&GreaterEqualLess;\": \"\\u22DB\",\n  \"&GreaterFullEqual;\": \"\\u2267\",\n  \"&GreaterGreater;\": \"\\u2AA2\",\n  \"&GreaterLess;\": \"\\u2277\",\n  \"&GreaterSlantEqual;\": \"\\u2A7E\",\n  \"&GreaterTilde;\": \"\\u2273\",\n  \"&Gscr;\": \"\\u{1D4A2}\",\n  \"&Gt;\": \"\\u226B\",\n  \"&HARDcy;\": \"\\u042A\",\n  \"&Hacek;\": \"\\u02C7\",\n  \"&Hat;\": \"^\",\n  \"&Hcirc;\": \"\\u0124\",\n  \"&Hfr;\": \"\\u210C\",\n  \"&HilbertSpace;\": \"\\u210B\",\n  \"&Hopf;\": \"\\u210D\",\n  \"&HorizontalLine;\": \"\\u2500\",\n  \"&Hscr;\": \"\\u210B\",\n  \"&Hstrok;\": \"\\u0126\",\n  \"&HumpDownHump;\": \"\\u224E\",\n  \"&HumpEqual;\": \"\\u224F\",\n  \"&IEcy;\": \"\\u0415\",\n  \"&IJlig;\": \"\\u0132\",\n  \"&IOcy;\": \"\\u0401\",\n  \"&Iacute\": \"\\xCD\",\n  \"&Iacute;\": \"\\xCD\",\n  \"&Icirc\": \"\\xCE\",\n  \"&Icirc;\": \"\\xCE\",\n  \"&Icy;\": \"\\u0418\",\n  \"&Idot;\": \"\\u0130\",\n  \"&Ifr;\": \"\\u2111\",\n  \"&Igrave\": \"\\xCC\",\n  \"&Igrave;\": \"\\xCC\",\n  \"&Im;\": \"\\u2111\",\n  \"&Imacr;\": \"\\u012A\",\n  \"&ImaginaryI;\": \"\\u2148\",\n  \"&Implies;\": \"\\u21D2\",\n  \"&Int;\": \"\\u222C\",\n  \"&Integral;\": \"\\u222B\",\n  \"&Intersection;\": \"\\u22C2\",\n  \"&InvisibleComma;\": \"\\u2063\",\n  \"&InvisibleTimes;\": \"\\u2062\",\n  \"&Iogon;\": \"\\u012E\",\n  \"&Iopf;\": \"\\u{1D540}\",\n  \"&Iota;\": \"\\u0399\",\n  \"&Iscr;\": \"\\u2110\",\n  \"&Itilde;\": \"\\u0128\",\n  \"&Iukcy;\": \"\\u0406\",\n  \"&Iuml\": \"\\xCF\",\n  \"&Iuml;\": \"\\xCF\",\n  \"&Jcirc;\": \"\\u0134\",\n  \"&Jcy;\": \"\\u0419\",\n  \"&Jfr;\": \"\\u{1D50D}\",\n  \"&Jopf;\": \"\\u{1D541}\",\n  \"&Jscr;\": \"\\u{1D4A5}\",\n  \"&Jsercy;\": \"\\u0408\",\n  \"&Jukcy;\": \"\\u0404\",\n  \"&KHcy;\": \"\\u0425\",\n  \"&KJcy;\": \"\\u040C\",\n  \"&Kappa;\": \"\\u039A\",\n  \"&Kcedil;\": \"\\u0136\",\n  \"&Kcy;\": \"\\u041A\",\n  \"&Kfr;\": \"\\u{1D50E}\",\n  \"&Kopf;\": \"\\u{1D542}\",\n  \"&Kscr;\": \"\\u{1D4A6}\",\n  \"&LJcy;\": \"\\u0409\",\n  \"&LT\": \"<\",\n  \"&LT;\": \"<\",\n  \"&Lacute;\": \"\\u0139\",\n  \"&Lambda;\": \"\\u039B\",\n  \"&Lang;\": \"\\u27EA\",\n  \"&Laplacetrf;\": \"\\u2112\",\n  \"&Larr;\": \"\\u219E\",\n  \"&Lcaron;\": \"\\u013D\",\n  \"&Lcedil;\": \"\\u013B\",\n  \"&Lcy;\": \"\\u041B\",\n  \"&LeftAngleBracket;\": \"\\u27E8\",\n  \"&LeftArrow;\": \"\\u2190\",\n  \"&LeftArrowBar;\": \"\\u21E4\",\n  \"&LeftArrowRightArrow;\": \"\\u21C6\",\n  \"&LeftCeiling;\": \"\\u2308\",\n  \"&LeftDoubleBracket;\": \"\\u27E6\",\n  \"&LeftDownTeeVector;\": \"\\u2961\",\n  \"&LeftDownVector;\": \"\\u21C3\",\n  \"&LeftDownVectorBar;\": \"\\u2959\",\n  \"&LeftFloor;\": \"\\u230A\",\n  \"&LeftRightArrow;\": \"\\u2194\",\n  \"&LeftRightVector;\": \"\\u294E\",\n  \"&LeftTee;\": \"\\u22A3\",\n  \"&LeftTeeArrow;\": \"\\u21A4\",\n  \"&LeftTeeVector;\": \"\\u295A\",\n  \"&LeftTriangle;\": \"\\u22B2\",\n  \"&LeftTriangleBar;\": \"\\u29CF\",\n  \"&LeftTriangleEqual;\": \"\\u22B4\",\n  \"&LeftUpDownVector;\": \"\\u2951\",\n  \"&LeftUpTeeVector;\": \"\\u2960\",\n  \"&LeftUpVector;\": \"\\u21BF\",\n  \"&LeftUpVectorBar;\": \"\\u2958\",\n  \"&LeftVector;\": \"\\u21BC\",\n  \"&LeftVectorBar;\": \"\\u2952\",\n  \"&Leftarrow;\": \"\\u21D0\",\n  \"&Leftrightarrow;\": \"\\u21D4\",\n  \"&LessEqualGreater;\": \"\\u22DA\",\n  \"&LessFullEqual;\": \"\\u2266\",\n  \"&LessGreater;\": \"\\u2276\",\n  \"&LessLess;\": \"\\u2AA1\",\n  \"&LessSlantEqual;\": \"\\u2A7D\",\n  \"&LessTilde;\": \"\\u2272\",\n  \"&Lfr;\": \"\\u{1D50F}\",\n  \"&Ll;\": \"\\u22D8\",\n  \"&Lleftarrow;\": \"\\u21DA\",\n  \"&Lmidot;\": \"\\u013F\",\n  \"&LongLeftArrow;\": \"\\u27F5\",\n  \"&LongLeftRightArrow;\": \"\\u27F7\",\n  \"&LongRightArrow;\": \"\\u27F6\",\n  \"&Longleftarrow;\": \"\\u27F8\",\n  \"&Longleftrightarrow;\": \"\\u27FA\",\n  \"&Longrightarrow;\": \"\\u27F9\",\n  \"&Lopf;\": \"\\u{1D543}\",\n  \"&LowerLeftArrow;\": \"\\u2199\",\n  \"&LowerRightArrow;\": \"\\u2198\",\n  \"&Lscr;\": \"\\u2112\",\n  \"&Lsh;\": \"\\u21B0\",\n  \"&Lstrok;\": \"\\u0141\",\n  \"&Lt;\": \"\\u226A\",\n  \"&Map;\": \"\\u2905\",\n  \"&Mcy;\": \"\\u041C\",\n  \"&MediumSpace;\": \"\\u205F\",\n  \"&Mellintrf;\": \"\\u2133\",\n  \"&Mfr;\": \"\\u{1D510}\",\n  \"&MinusPlus;\": \"\\u2213\",\n  \"&Mopf;\": \"\\u{1D544}\",\n  \"&Mscr;\": \"\\u2133\",\n  \"&Mu;\": \"\\u039C\",\n  \"&NJcy;\": \"\\u040A\",\n  \"&Nacute;\": \"\\u0143\",\n  \"&Ncaron;\": \"\\u0147\",\n  \"&Ncedil;\": \"\\u0145\",\n  \"&Ncy;\": \"\\u041D\",\n  \"&NegativeMediumSpace;\": \"\\u200B\",\n  \"&NegativeThickSpace;\": \"\\u200B\",\n  \"&NegativeThinSpace;\": \"\\u200B\",\n  \"&NegativeVeryThinSpace;\": \"\\u200B\",\n  \"&NestedGreaterGreater;\": \"\\u226B\",\n  \"&NestedLessLess;\": \"\\u226A\",\n  \"&NewLine;\": `\n`,\n  \"&Nfr;\": \"\\u{1D511}\",\n  \"&NoBreak;\": \"\\u2060\",\n  \"&NonBreakingSpace;\": \"\\xA0\",\n  \"&Nopf;\": \"\\u2115\",\n  \"&Not;\": \"\\u2AEC\",\n  \"&NotCongruent;\": \"\\u2262\",\n  \"&NotCupCap;\": \"\\u226D\",\n  \"&NotDoubleVerticalBar;\": \"\\u2226\",\n  \"&NotElement;\": \"\\u2209\",\n  \"&NotEqual;\": \"\\u2260\",\n  \"&NotEqualTilde;\": \"\\u2242\\u0338\",\n  \"&NotExists;\": \"\\u2204\",\n  \"&NotGreater;\": \"\\u226F\",\n  \"&NotGreaterEqual;\": \"\\u2271\",\n  \"&NotGreaterFullEqual;\": \"\\u2267\\u0338\",\n  \"&NotGreaterGreater;\": \"\\u226B\\u0338\",\n  \"&NotGreaterLess;\": \"\\u2279\",\n  \"&NotGreaterSlantEqual;\": \"\\u2A7E\\u0338\",\n  \"&NotGreaterTilde;\": \"\\u2275\",\n  \"&NotHumpDownHump;\": \"\\u224E\\u0338\",\n  \"&NotHumpEqual;\": \"\\u224F\\u0338\",\n  \"&NotLeftTriangle;\": \"\\u22EA\",\n  \"&NotLeftTriangleBar;\": \"\\u29CF\\u0338\",\n  \"&NotLeftTriangleEqual;\": \"\\u22EC\",\n  \"&NotLess;\": \"\\u226E\",\n  \"&NotLessEqual;\": \"\\u2270\",\n  \"&NotLessGreater;\": \"\\u2278\",\n  \"&NotLessLess;\": \"\\u226A\\u0338\",\n  \"&NotLessSlantEqual;\": \"\\u2A7D\\u0338\",\n  \"&NotLessTilde;\": \"\\u2274\",\n  \"&NotNestedGreaterGreater;\": \"\\u2AA2\\u0338\",\n  \"&NotNestedLessLess;\": \"\\u2AA1\\u0338\",\n  \"&NotPrecedes;\": \"\\u2280\",\n  \"&NotPrecedesEqual;\": \"\\u2AAF\\u0338\",\n  \"&NotPrecedesSlantEqual;\": \"\\u22E0\",\n  \"&NotReverseElement;\": \"\\u220C\",\n  \"&NotRightTriangle;\": \"\\u22EB\",\n  \"&NotRightTriangleBar;\": \"\\u29D0\\u0338\",\n  \"&NotRightTriangleEqual;\": \"\\u22ED\",\n  \"&NotSquareSubset;\": \"\\u228F\\u0338\",\n  \"&NotSquareSubsetEqual;\": \"\\u22E2\",\n  \"&NotSquareSuperset;\": \"\\u2290\\u0338\",\n  \"&NotSquareSupersetEqual;\": \"\\u22E3\",\n  \"&NotSubset;\": \"\\u2282\\u20D2\",\n  \"&NotSubsetEqual;\": \"\\u2288\",\n  \"&NotSucceeds;\": \"\\u2281\",\n  \"&NotSucceedsEqual;\": \"\\u2AB0\\u0338\",\n  \"&NotSucceedsSlantEqual;\": \"\\u22E1\",\n  \"&NotSucceedsTilde;\": \"\\u227F\\u0338\",\n  \"&NotSuperset;\": \"\\u2283\\u20D2\",\n  \"&NotSupersetEqual;\": \"\\u2289\",\n  \"&NotTilde;\": \"\\u2241\",\n  \"&NotTildeEqual;\": \"\\u2244\",\n  \"&NotTildeFullEqual;\": \"\\u2247\",\n  \"&NotTildeTilde;\": \"\\u2249\",\n  \"&NotVerticalBar;\": \"\\u2224\",\n  \"&Nscr;\": \"\\u{1D4A9}\",\n  \"&Ntilde\": \"\\xD1\",\n  \"&Ntilde;\": \"\\xD1\",\n  \"&Nu;\": \"\\u039D\",\n  \"&OElig;\": \"\\u0152\",\n  \"&Oacute\": \"\\xD3\",\n  \"&Oacute;\": \"\\xD3\",\n  \"&Ocirc\": \"\\xD4\",\n  \"&Ocirc;\": \"\\xD4\",\n  \"&Ocy;\": \"\\u041E\",\n  \"&Odblac;\": \"\\u0150\",\n  \"&Ofr;\": \"\\u{1D512}\",\n  \"&Ograve\": \"\\xD2\",\n  \"&Ograve;\": \"\\xD2\",\n  \"&Omacr;\": \"\\u014C\",\n  \"&Omega;\": \"\\u03A9\",\n  \"&Omicron;\": \"\\u039F\",\n  \"&Oopf;\": \"\\u{1D546}\",\n  \"&OpenCurlyDoubleQuote;\": \"\\u201C\",\n  \"&OpenCurlyQuote;\": \"\\u2018\",\n  \"&Or;\": \"\\u2A54\",\n  \"&Oscr;\": \"\\u{1D4AA}\",\n  \"&Oslash\": \"\\xD8\",\n  \"&Oslash;\": \"\\xD8\",\n  \"&Otilde\": \"\\xD5\",\n  \"&Otilde;\": \"\\xD5\",\n  \"&Otimes;\": \"\\u2A37\",\n  \"&Ouml\": \"\\xD6\",\n  \"&Ouml;\": \"\\xD6\",\n  \"&OverBar;\": \"\\u203E\",\n  \"&OverBrace;\": \"\\u23DE\",\n  \"&OverBracket;\": \"\\u23B4\",\n  \"&OverParenthesis;\": \"\\u23DC\",\n  \"&PartialD;\": \"\\u2202\",\n  \"&Pcy;\": \"\\u041F\",\n  \"&Pfr;\": \"\\u{1D513}\",\n  \"&Phi;\": \"\\u03A6\",\n  \"&Pi;\": \"\\u03A0\",\n  \"&PlusMinus;\": \"\\xB1\",\n  \"&Poincareplane;\": \"\\u210C\",\n  \"&Popf;\": \"\\u2119\",\n  \"&Pr;\": \"\\u2ABB\",\n  \"&Precedes;\": \"\\u227A\",\n  \"&PrecedesEqual;\": \"\\u2AAF\",\n  \"&PrecedesSlantEqual;\": \"\\u227C\",\n  \"&PrecedesTilde;\": \"\\u227E\",\n  \"&Prime;\": \"\\u2033\",\n  \"&Product;\": \"\\u220F\",\n  \"&Proportion;\": \"\\u2237\",\n  \"&Proportional;\": \"\\u221D\",\n  \"&Pscr;\": \"\\u{1D4AB}\",\n  \"&Psi;\": \"\\u03A8\",\n  \"&QUOT\": '\"',\n  \"&QUOT;\": '\"',\n  \"&Qfr;\": \"\\u{1D514}\",\n  \"&Qopf;\": \"\\u211A\",\n  \"&Qscr;\": \"\\u{1D4AC}\",\n  \"&RBarr;\": \"\\u2910\",\n  \"&REG\": \"\\xAE\",\n  \"&REG;\": \"\\xAE\",\n  \"&Racute;\": \"\\u0154\",\n  \"&Rang;\": \"\\u27EB\",\n  \"&Rarr;\": \"\\u21A0\",\n  \"&Rarrtl;\": \"\\u2916\",\n  \"&Rcaron;\": \"\\u0158\",\n  \"&Rcedil;\": \"\\u0156\",\n  \"&Rcy;\": \"\\u0420\",\n  \"&Re;\": \"\\u211C\",\n  \"&ReverseElement;\": \"\\u220B\",\n  \"&ReverseEquilibrium;\": \"\\u21CB\",\n  \"&ReverseUpEquilibrium;\": \"\\u296F\",\n  \"&Rfr;\": \"\\u211C\",\n  \"&Rho;\": \"\\u03A1\",\n  \"&RightAngleBracket;\": \"\\u27E9\",\n  \"&RightArrow;\": \"\\u2192\",\n  \"&RightArrowBar;\": \"\\u21E5\",\n  \"&RightArrowLeftArrow;\": \"\\u21C4\",\n  \"&RightCeiling;\": \"\\u2309\",\n  \"&RightDoubleBracket;\": \"\\u27E7\",\n  \"&RightDownTeeVector;\": \"\\u295D\",\n  \"&RightDownVector;\": \"\\u21C2\",\n  \"&RightDownVectorBar;\": \"\\u2955\",\n  \"&RightFloor;\": \"\\u230B\",\n  \"&RightTee;\": \"\\u22A2\",\n  \"&RightTeeArrow;\": \"\\u21A6\",\n  \"&RightTeeVector;\": \"\\u295B\",\n  \"&RightTriangle;\": \"\\u22B3\",\n  \"&RightTriangleBar;\": \"\\u29D0\",\n  \"&RightTriangleEqual;\": \"\\u22B5\",\n  \"&RightUpDownVector;\": \"\\u294F\",\n  \"&RightUpTeeVector;\": \"\\u295C\",\n  \"&RightUpVector;\": \"\\u21BE\",\n  \"&RightUpVectorBar;\": \"\\u2954\",\n  \"&RightVector;\": \"\\u21C0\",\n  \"&RightVectorBar;\": \"\\u2953\",\n  \"&Rightarrow;\": \"\\u21D2\",\n  \"&Ropf;\": \"\\u211D\",\n  \"&RoundImplies;\": \"\\u2970\",\n  \"&Rrightarrow;\": \"\\u21DB\",\n  \"&Rscr;\": \"\\u211B\",\n  \"&Rsh;\": \"\\u21B1\",\n  \"&RuleDelayed;\": \"\\u29F4\",\n  \"&SHCHcy;\": \"\\u0429\",\n  \"&SHcy;\": \"\\u0428\",\n  \"&SOFTcy;\": \"\\u042C\",\n  \"&Sacute;\": \"\\u015A\",\n  \"&Sc;\": \"\\u2ABC\",\n  \"&Scaron;\": \"\\u0160\",\n  \"&Scedil;\": \"\\u015E\",\n  \"&Scirc;\": \"\\u015C\",\n  \"&Scy;\": \"\\u0421\",\n  \"&Sfr;\": \"\\u{1D516}\",\n  \"&ShortDownArrow;\": \"\\u2193\",\n  \"&ShortLeftArrow;\": \"\\u2190\",\n  \"&ShortRightArrow;\": \"\\u2192\",\n  \"&ShortUpArrow;\": \"\\u2191\",\n  \"&Sigma;\": \"\\u03A3\",\n  \"&SmallCircle;\": \"\\u2218\",\n  \"&Sopf;\": \"\\u{1D54A}\",\n  \"&Sqrt;\": \"\\u221A\",\n  \"&Square;\": \"\\u25A1\",\n  \"&SquareIntersection;\": \"\\u2293\",\n  \"&SquareSubset;\": \"\\u228F\",\n  \"&SquareSubsetEqual;\": \"\\u2291\",\n  \"&SquareSuperset;\": \"\\u2290\",\n  \"&SquareSupersetEqual;\": \"\\u2292\",\n  \"&SquareUnion;\": \"\\u2294\",\n  \"&Sscr;\": \"\\u{1D4AE}\",\n  \"&Star;\": \"\\u22C6\",\n  \"&Sub;\": \"\\u22D0\",\n  \"&Subset;\": \"\\u22D0\",\n  \"&SubsetEqual;\": \"\\u2286\",\n  \"&Succeeds;\": \"\\u227B\",\n  \"&SucceedsEqual;\": \"\\u2AB0\",\n  \"&SucceedsSlantEqual;\": \"\\u227D\",\n  \"&SucceedsTilde;\": \"\\u227F\",\n  \"&SuchThat;\": \"\\u220B\",\n  \"&Sum;\": \"\\u2211\",\n  \"&Sup;\": \"\\u22D1\",\n  \"&Superset;\": \"\\u2283\",\n  \"&SupersetEqual;\": \"\\u2287\",\n  \"&Supset;\": \"\\u22D1\",\n  \"&THORN\": \"\\xDE\",\n  \"&THORN;\": \"\\xDE\",\n  \"&TRADE;\": \"\\u2122\",\n  \"&TSHcy;\": \"\\u040B\",\n  \"&TScy;\": \"\\u0426\",\n  \"&Tab;\": \"\t\",\n  \"&Tau;\": \"\\u03A4\",\n  \"&Tcaron;\": \"\\u0164\",\n  \"&Tcedil;\": \"\\u0162\",\n  \"&Tcy;\": \"\\u0422\",\n  \"&Tfr;\": \"\\u{1D517}\",\n  \"&Therefore;\": \"\\u2234\",\n  \"&Theta;\": \"\\u0398\",\n  \"&ThickSpace;\": \"\\u205F\\u200A\",\n  \"&ThinSpace;\": \"\\u2009\",\n  \"&Tilde;\": \"\\u223C\",\n  \"&TildeEqual;\": \"\\u2243\",\n  \"&TildeFullEqual;\": \"\\u2245\",\n  \"&TildeTilde;\": \"\\u2248\",\n  \"&Topf;\": \"\\u{1D54B}\",\n  \"&TripleDot;\": \"\\u20DB\",\n  \"&Tscr;\": \"\\u{1D4AF}\",\n  \"&Tstrok;\": \"\\u0166\",\n  \"&Uacute\": \"\\xDA\",\n  \"&Uacute;\": \"\\xDA\",\n  \"&Uarr;\": \"\\u219F\",\n  \"&Uarrocir;\": \"\\u2949\",\n  \"&Ubrcy;\": \"\\u040E\",\n  \"&Ubreve;\": \"\\u016C\",\n  \"&Ucirc\": \"\\xDB\",\n  \"&Ucirc;\": \"\\xDB\",\n  \"&Ucy;\": \"\\u0423\",\n  \"&Udblac;\": \"\\u0170\",\n  \"&Ufr;\": \"\\u{1D518}\",\n  \"&Ugrave\": \"\\xD9\",\n  \"&Ugrave;\": \"\\xD9\",\n  \"&Umacr;\": \"\\u016A\",\n  \"&UnderBar;\": \"_\",\n  \"&UnderBrace;\": \"\\u23DF\",\n  \"&UnderBracket;\": \"\\u23B5\",\n  \"&UnderParenthesis;\": \"\\u23DD\",\n  \"&Union;\": \"\\u22C3\",\n  \"&UnionPlus;\": \"\\u228E\",\n  \"&Uogon;\": \"\\u0172\",\n  \"&Uopf;\": \"\\u{1D54C}\",\n  \"&UpArrow;\": \"\\u2191\",\n  \"&UpArrowBar;\": \"\\u2912\",\n  \"&UpArrowDownArrow;\": \"\\u21C5\",\n  \"&UpDownArrow;\": \"\\u2195\",\n  \"&UpEquilibrium;\": \"\\u296E\",\n  \"&UpTee;\": \"\\u22A5\",\n  \"&UpTeeArrow;\": \"\\u21A5\",\n  \"&Uparrow;\": \"\\u21D1\",\n  \"&Updownarrow;\": \"\\u21D5\",\n  \"&UpperLeftArrow;\": \"\\u2196\",\n  \"&UpperRightArrow;\": \"\\u2197\",\n  \"&Upsi;\": \"\\u03D2\",\n  \"&Upsilon;\": \"\\u03A5\",\n  \"&Uring;\": \"\\u016E\",\n  \"&Uscr;\": \"\\u{1D4B0}\",\n  \"&Utilde;\": \"\\u0168\",\n  \"&Uuml\": \"\\xDC\",\n  \"&Uuml;\": \"\\xDC\",\n  \"&VDash;\": \"\\u22AB\",\n  \"&Vbar;\": \"\\u2AEB\",\n  \"&Vcy;\": \"\\u0412\",\n  \"&Vdash;\": \"\\u22A9\",\n  \"&Vdashl;\": \"\\u2AE6\",\n  \"&Vee;\": \"\\u22C1\",\n  \"&Verbar;\": \"\\u2016\",\n  \"&Vert;\": \"\\u2016\",\n  \"&VerticalBar;\": \"\\u2223\",\n  \"&VerticalLine;\": \"|\",\n  \"&VerticalSeparator;\": \"\\u2758\",\n  \"&VerticalTilde;\": \"\\u2240\",\n  \"&VeryThinSpace;\": \"\\u200A\",\n  \"&Vfr;\": \"\\u{1D519}\",\n  \"&Vopf;\": \"\\u{1D54D}\",\n  \"&Vscr;\": \"\\u{1D4B1}\",\n  \"&Vvdash;\": \"\\u22AA\",\n  \"&Wcirc;\": \"\\u0174\",\n  \"&Wedge;\": \"\\u22C0\",\n  \"&Wfr;\": \"\\u{1D51A}\",\n  \"&Wopf;\": \"\\u{1D54E}\",\n  \"&Wscr;\": \"\\u{1D4B2}\",\n  \"&Xfr;\": \"\\u{1D51B}\",\n  \"&Xi;\": \"\\u039E\",\n  \"&Xopf;\": \"\\u{1D54F}\",\n  \"&Xscr;\": \"\\u{1D4B3}\",\n  \"&YAcy;\": \"\\u042F\",\n  \"&YIcy;\": \"\\u0407\",\n  \"&YUcy;\": \"\\u042E\",\n  \"&Yacute\": \"\\xDD\",\n  \"&Yacute;\": \"\\xDD\",\n  \"&Ycirc;\": \"\\u0176\",\n  \"&Ycy;\": \"\\u042B\",\n  \"&Yfr;\": \"\\u{1D51C}\",\n  \"&Yopf;\": \"\\u{1D550}\",\n  \"&Yscr;\": \"\\u{1D4B4}\",\n  \"&Yuml;\": \"\\u0178\",\n  \"&ZHcy;\": \"\\u0416\",\n  \"&Zacute;\": \"\\u0179\",\n  \"&Zcaron;\": \"\\u017D\",\n  \"&Zcy;\": \"\\u0417\",\n  \"&Zdot;\": \"\\u017B\",\n  \"&ZeroWidthSpace;\": \"\\u200B\",\n  \"&Zeta;\": \"\\u0396\",\n  \"&Zfr;\": \"\\u2128\",\n  \"&Zopf;\": \"\\u2124\",\n  \"&Zscr;\": \"\\u{1D4B5}\",\n  \"&aacute\": \"\\xE1\",\n  \"&aacute;\": \"\\xE1\",\n  \"&abreve;\": \"\\u0103\",\n  \"&ac;\": \"\\u223E\",\n  \"&acE;\": \"\\u223E\\u0333\",\n  \"&acd;\": \"\\u223F\",\n  \"&acirc\": \"\\xE2\",\n  \"&acirc;\": \"\\xE2\",\n  \"&acute\": \"\\xB4\",\n  \"&acute;\": \"\\xB4\",\n  \"&acy;\": \"\\u0430\",\n  \"&aelig\": \"\\xE6\",\n  \"&aelig;\": \"\\xE6\",\n  \"&af;\": \"\\u2061\",\n  \"&afr;\": \"\\u{1D51E}\",\n  \"&agrave\": \"\\xE0\",\n  \"&agrave;\": \"\\xE0\",\n  \"&alefsym;\": \"\\u2135\",\n  \"&aleph;\": \"\\u2135\",\n  \"&alpha;\": \"\\u03B1\",\n  \"&amacr;\": \"\\u0101\",\n  \"&amalg;\": \"\\u2A3F\",\n  \"&amp\": \"&\",\n  \"&amp;\": \"&\",\n  \"&and;\": \"\\u2227\",\n  \"&andand;\": \"\\u2A55\",\n  \"&andd;\": \"\\u2A5C\",\n  \"&andslope;\": \"\\u2A58\",\n  \"&andv;\": \"\\u2A5A\",\n  \"&ang;\": \"\\u2220\",\n  \"&ange;\": \"\\u29A4\",\n  \"&angle;\": \"\\u2220\",\n  \"&angmsd;\": \"\\u2221\",\n  \"&angmsdaa;\": \"\\u29A8\",\n  \"&angmsdab;\": \"\\u29A9\",\n  \"&angmsdac;\": \"\\u29AA\",\n  \"&angmsdad;\": \"\\u29AB\",\n  \"&angmsdae;\": \"\\u29AC\",\n  \"&angmsdaf;\": \"\\u29AD\",\n  \"&angmsdag;\": \"\\u29AE\",\n  \"&angmsdah;\": \"\\u29AF\",\n  \"&angrt;\": \"\\u221F\",\n  \"&angrtvb;\": \"\\u22BE\",\n  \"&angrtvbd;\": \"\\u299D\",\n  \"&angsph;\": \"\\u2222\",\n  \"&angst;\": \"\\xC5\",\n  \"&angzarr;\": \"\\u237C\",\n  \"&aogon;\": \"\\u0105\",\n  \"&aopf;\": \"\\u{1D552}\",\n  \"&ap;\": \"\\u2248\",\n  \"&apE;\": \"\\u2A70\",\n  \"&apacir;\": \"\\u2A6F\",\n  \"&ape;\": \"\\u224A\",\n  \"&apid;\": \"\\u224B\",\n  \"&apos;\": \"'\",\n  \"&approx;\": \"\\u2248\",\n  \"&approxeq;\": \"\\u224A\",\n  \"&aring\": \"\\xE5\",\n  \"&aring;\": \"\\xE5\",\n  \"&ascr;\": \"\\u{1D4B6}\",\n  \"&ast;\": \"*\",\n  \"&asymp;\": \"\\u2248\",\n  \"&asympeq;\": \"\\u224D\",\n  \"&atilde\": \"\\xE3\",\n  \"&atilde;\": \"\\xE3\",\n  \"&auml\": \"\\xE4\",\n  \"&auml;\": \"\\xE4\",\n  \"&awconint;\": \"\\u2233\",\n  \"&awint;\": \"\\u2A11\",\n  \"&bNot;\": \"\\u2AED\",\n  \"&backcong;\": \"\\u224C\",\n  \"&backepsilon;\": \"\\u03F6\",\n  \"&backprime;\": \"\\u2035\",\n  \"&backsim;\": \"\\u223D\",\n  \"&backsimeq;\": \"\\u22CD\",\n  \"&barvee;\": \"\\u22BD\",\n  \"&barwed;\": \"\\u2305\",\n  \"&barwedge;\": \"\\u2305\",\n  \"&bbrk;\": \"\\u23B5\",\n  \"&bbrktbrk;\": \"\\u23B6\",\n  \"&bcong;\": \"\\u224C\",\n  \"&bcy;\": \"\\u0431\",\n  \"&bdquo;\": \"\\u201E\",\n  \"&becaus;\": \"\\u2235\",\n  \"&because;\": \"\\u2235\",\n  \"&bemptyv;\": \"\\u29B0\",\n  \"&bepsi;\": \"\\u03F6\",\n  \"&bernou;\": \"\\u212C\",\n  \"&beta;\": \"\\u03B2\",\n  \"&beth;\": \"\\u2136\",\n  \"&between;\": \"\\u226C\",\n  \"&bfr;\": \"\\u{1D51F}\",\n  \"&bigcap;\": \"\\u22C2\",\n  \"&bigcirc;\": \"\\u25EF\",\n  \"&bigcup;\": \"\\u22C3\",\n  \"&bigodot;\": \"\\u2A00\",\n  \"&bigoplus;\": \"\\u2A01\",\n  \"&bigotimes;\": \"\\u2A02\",\n  \"&bigsqcup;\": \"\\u2A06\",\n  \"&bigstar;\": \"\\u2605\",\n  \"&bigtriangledown;\": \"\\u25BD\",\n  \"&bigtriangleup;\": \"\\u25B3\",\n  \"&biguplus;\": \"\\u2A04\",\n  \"&bigvee;\": \"\\u22C1\",\n  \"&bigwedge;\": \"\\u22C0\",\n  \"&bkarow;\": \"\\u290D\",\n  \"&blacklozenge;\": \"\\u29EB\",\n  \"&blacksquare;\": \"\\u25AA\",\n  \"&blacktriangle;\": \"\\u25B4\",\n  \"&blacktriangledown;\": \"\\u25BE\",\n  \"&blacktriangleleft;\": \"\\u25C2\",\n  \"&blacktriangleright;\": \"\\u25B8\",\n  \"&blank;\": \"\\u2423\",\n  \"&blk12;\": \"\\u2592\",\n  \"&blk14;\": \"\\u2591\",\n  \"&blk34;\": \"\\u2593\",\n  \"&block;\": \"\\u2588\",\n  \"&bne;\": \"=\\u20E5\",\n  \"&bnequiv;\": \"\\u2261\\u20E5\",\n  \"&bnot;\": \"\\u2310\",\n  \"&bopf;\": \"\\u{1D553}\",\n  \"&bot;\": \"\\u22A5\",\n  \"&bottom;\": \"\\u22A5\",\n  \"&bowtie;\": \"\\u22C8\",\n  \"&boxDL;\": \"\\u2557\",\n  \"&boxDR;\": \"\\u2554\",\n  \"&boxDl;\": \"\\u2556\",\n  \"&boxDr;\": \"\\u2553\",\n  \"&boxH;\": \"\\u2550\",\n  \"&boxHD;\": \"\\u2566\",\n  \"&boxHU;\": \"\\u2569\",\n  \"&boxHd;\": \"\\u2564\",\n  \"&boxHu;\": \"\\u2567\",\n  \"&boxUL;\": \"\\u255D\",\n  \"&boxUR;\": \"\\u255A\",\n  \"&boxUl;\": \"\\u255C\",\n  \"&boxUr;\": \"\\u2559\",\n  \"&boxV;\": \"\\u2551\",\n  \"&boxVH;\": \"\\u256C\",\n  \"&boxVL;\": \"\\u2563\",\n  \"&boxVR;\": \"\\u2560\",\n  \"&boxVh;\": \"\\u256B\",\n  \"&boxVl;\": \"\\u2562\",\n  \"&boxVr;\": \"\\u255F\",\n  \"&boxbox;\": \"\\u29C9\",\n  \"&boxdL;\": \"\\u2555\",\n  \"&boxdR;\": \"\\u2552\",\n  \"&boxdl;\": \"\\u2510\",\n  \"&boxdr;\": \"\\u250C\",\n  \"&boxh;\": \"\\u2500\",\n  \"&boxhD;\": \"\\u2565\",\n  \"&boxhU;\": \"\\u2568\",\n  \"&boxhd;\": \"\\u252C\",\n  \"&boxhu;\": \"\\u2534\",\n  \"&boxminus;\": \"\\u229F\",\n  \"&boxplus;\": \"\\u229E\",\n  \"&boxtimes;\": \"\\u22A0\",\n  \"&boxuL;\": \"\\u255B\",\n  \"&boxuR;\": \"\\u2558\",\n  \"&boxul;\": \"\\u2518\",\n  \"&boxur;\": \"\\u2514\",\n  \"&boxv;\": \"\\u2502\",\n  \"&boxvH;\": \"\\u256A\",\n  \"&boxvL;\": \"\\u2561\",\n  \"&boxvR;\": \"\\u255E\",\n  \"&boxvh;\": \"\\u253C\",\n  \"&boxvl;\": \"\\u2524\",\n  \"&boxvr;\": \"\\u251C\",\n  \"&bprime;\": \"\\u2035\",\n  \"&breve;\": \"\\u02D8\",\n  \"&brvbar\": \"\\xA6\",\n  \"&brvbar;\": \"\\xA6\",\n  \"&bscr;\": \"\\u{1D4B7}\",\n  \"&bsemi;\": \"\\u204F\",\n  \"&bsim;\": \"\\u223D\",\n  \"&bsime;\": \"\\u22CD\",\n  \"&bsol;\": \"\\\\\",\n  \"&bsolb;\": \"\\u29C5\",\n  \"&bsolhsub;\": \"\\u27C8\",\n  \"&bull;\": \"\\u2022\",\n  \"&bullet;\": \"\\u2022\",\n  \"&bump;\": \"\\u224E\",\n  \"&bumpE;\": \"\\u2AAE\",\n  \"&bumpe;\": \"\\u224F\",\n  \"&bumpeq;\": \"\\u224F\",\n  \"&cacute;\": \"\\u0107\",\n  \"&cap;\": \"\\u2229\",\n  \"&capand;\": \"\\u2A44\",\n  \"&capbrcup;\": \"\\u2A49\",\n  \"&capcap;\": \"\\u2A4B\",\n  \"&capcup;\": \"\\u2A47\",\n  \"&capdot;\": \"\\u2A40\",\n  \"&caps;\": \"\\u2229\\uFE00\",\n  \"&caret;\": \"\\u2041\",\n  \"&caron;\": \"\\u02C7\",\n  \"&ccaps;\": \"\\u2A4D\",\n  \"&ccaron;\": \"\\u010D\",\n  \"&ccedil\": \"\\xE7\",\n  \"&ccedil;\": \"\\xE7\",\n  \"&ccirc;\": \"\\u0109\",\n  \"&ccups;\": \"\\u2A4C\",\n  \"&ccupssm;\": \"\\u2A50\",\n  \"&cdot;\": \"\\u010B\",\n  \"&cedil\": \"\\xB8\",\n  \"&cedil;\": \"\\xB8\",\n  \"&cemptyv;\": \"\\u29B2\",\n  \"&cent\": \"\\xA2\",\n  \"&cent;\": \"\\xA2\",\n  \"&centerdot;\": \"\\xB7\",\n  \"&cfr;\": \"\\u{1D520}\",\n  \"&chcy;\": \"\\u0447\",\n  \"&check;\": \"\\u2713\",\n  \"&checkmark;\": \"\\u2713\",\n  \"&chi;\": \"\\u03C7\",\n  \"&cir;\": \"\\u25CB\",\n  \"&cirE;\": \"\\u29C3\",\n  \"&circ;\": \"\\u02C6\",\n  \"&circeq;\": \"\\u2257\",\n  \"&circlearrowleft;\": \"\\u21BA\",\n  \"&circlearrowright;\": \"\\u21BB\",\n  \"&circledR;\": \"\\xAE\",\n  \"&circledS;\": \"\\u24C8\",\n  \"&circledast;\": \"\\u229B\",\n  \"&circledcirc;\": \"\\u229A\",\n  \"&circleddash;\": \"\\u229D\",\n  \"&cire;\": \"\\u2257\",\n  \"&cirfnint;\": \"\\u2A10\",\n  \"&cirmid;\": \"\\u2AEF\",\n  \"&cirscir;\": \"\\u29C2\",\n  \"&clubs;\": \"\\u2663\",\n  \"&clubsuit;\": \"\\u2663\",\n  \"&colon;\": \":\",\n  \"&colone;\": \"\\u2254\",\n  \"&coloneq;\": \"\\u2254\",\n  \"&comma;\": \",\",\n  \"&commat;\": \"@\",\n  \"&comp;\": \"\\u2201\",\n  \"&compfn;\": \"\\u2218\",\n  \"&complement;\": \"\\u2201\",\n  \"&complexes;\": \"\\u2102\",\n  \"&cong;\": \"\\u2245\",\n  \"&congdot;\": \"\\u2A6D\",\n  \"&conint;\": \"\\u222E\",\n  \"&copf;\": \"\\u{1D554}\",\n  \"&coprod;\": \"\\u2210\",\n  \"&copy\": \"\\xA9\",\n  \"&copy;\": \"\\xA9\",\n  \"&copysr;\": \"\\u2117\",\n  \"&crarr;\": \"\\u21B5\",\n  \"&cross;\": \"\\u2717\",\n  \"&cscr;\": \"\\u{1D4B8}\",\n  \"&csub;\": \"\\u2ACF\",\n  \"&csube;\": \"\\u2AD1\",\n  \"&csup;\": \"\\u2AD0\",\n  \"&csupe;\": \"\\u2AD2\",\n  \"&ctdot;\": \"\\u22EF\",\n  \"&cudarrl;\": \"\\u2938\",\n  \"&cudarrr;\": \"\\u2935\",\n  \"&cuepr;\": \"\\u22DE\",\n  \"&cuesc;\": \"\\u22DF\",\n  \"&cularr;\": \"\\u21B6\",\n  \"&cularrp;\": \"\\u293D\",\n  \"&cup;\": \"\\u222A\",\n  \"&cupbrcap;\": \"\\u2A48\",\n  \"&cupcap;\": \"\\u2A46\",\n  \"&cupcup;\": \"\\u2A4A\",\n  \"&cupdot;\": \"\\u228D\",\n  \"&cupor;\": \"\\u2A45\",\n  \"&cups;\": \"\\u222A\\uFE00\",\n  \"&curarr;\": \"\\u21B7\",\n  \"&curarrm;\": \"\\u293C\",\n  \"&curlyeqprec;\": \"\\u22DE\",\n  \"&curlyeqsucc;\": \"\\u22DF\",\n  \"&curlyvee;\": \"\\u22CE\",\n  \"&curlywedge;\": \"\\u22CF\",\n  \"&curren\": \"\\xA4\",\n  \"&curren;\": \"\\xA4\",\n  \"&curvearrowleft;\": \"\\u21B6\",\n  \"&curvearrowright;\": \"\\u21B7\",\n  \"&cuvee;\": \"\\u22CE\",\n  \"&cuwed;\": \"\\u22CF\",\n  \"&cwconint;\": \"\\u2232\",\n  \"&cwint;\": \"\\u2231\",\n  \"&cylcty;\": \"\\u232D\",\n  \"&dArr;\": \"\\u21D3\",\n  \"&dHar;\": \"\\u2965\",\n  \"&dagger;\": \"\\u2020\",\n  \"&daleth;\": \"\\u2138\",\n  \"&darr;\": \"\\u2193\",\n  \"&dash;\": \"\\u2010\",\n  \"&dashv;\": \"\\u22A3\",\n  \"&dbkarow;\": \"\\u290F\",\n  \"&dblac;\": \"\\u02DD\",\n  \"&dcaron;\": \"\\u010F\",\n  \"&dcy;\": \"\\u0434\",\n  \"&dd;\": \"\\u2146\",\n  \"&ddagger;\": \"\\u2021\",\n  \"&ddarr;\": \"\\u21CA\",\n  \"&ddotseq;\": \"\\u2A77\",\n  \"&deg\": \"\\xB0\",\n  \"&deg;\": \"\\xB0\",\n  \"&delta;\": \"\\u03B4\",\n  \"&demptyv;\": \"\\u29B1\",\n  \"&dfisht;\": \"\\u297F\",\n  \"&dfr;\": \"\\u{1D521}\",\n  \"&dharl;\": \"\\u21C3\",\n  \"&dharr;\": \"\\u21C2\",\n  \"&diam;\": \"\\u22C4\",\n  \"&diamond;\": \"\\u22C4\",\n  \"&diamondsuit;\": \"\\u2666\",\n  \"&diams;\": \"\\u2666\",\n  \"&die;\": \"\\xA8\",\n  \"&digamma;\": \"\\u03DD\",\n  \"&disin;\": \"\\u22F2\",\n  \"&div;\": \"\\xF7\",\n  \"&divide\": \"\\xF7\",\n  \"&divide;\": \"\\xF7\",\n  \"&divideontimes;\": \"\\u22C7\",\n  \"&divonx;\": \"\\u22C7\",\n  \"&djcy;\": \"\\u0452\",\n  \"&dlcorn;\": \"\\u231E\",\n  \"&dlcrop;\": \"\\u230D\",\n  \"&dollar;\": \"$\",\n  \"&dopf;\": \"\\u{1D555}\",\n  \"&dot;\": \"\\u02D9\",\n  \"&doteq;\": \"\\u2250\",\n  \"&doteqdot;\": \"\\u2251\",\n  \"&dotminus;\": \"\\u2238\",\n  \"&dotplus;\": \"\\u2214\",\n  \"&dotsquare;\": \"\\u22A1\",\n  \"&doublebarwedge;\": \"\\u2306\",\n  \"&downarrow;\": \"\\u2193\",\n  \"&downdownarrows;\": \"\\u21CA\",\n  \"&downharpoonleft;\": \"\\u21C3\",\n  \"&downharpoonright;\": \"\\u21C2\",\n  \"&drbkarow;\": \"\\u2910\",\n  \"&drcorn;\": \"\\u231F\",\n  \"&drcrop;\": \"\\u230C\",\n  \"&dscr;\": \"\\u{1D4B9}\",\n  \"&dscy;\": \"\\u0455\",\n  \"&dsol;\": \"\\u29F6\",\n  \"&dstrok;\": \"\\u0111\",\n  \"&dtdot;\": \"\\u22F1\",\n  \"&dtri;\": \"\\u25BF\",\n  \"&dtrif;\": \"\\u25BE\",\n  \"&duarr;\": \"\\u21F5\",\n  \"&duhar;\": \"\\u296F\",\n  \"&dwangle;\": \"\\u29A6\",\n  \"&dzcy;\": \"\\u045F\",\n  \"&dzigrarr;\": \"\\u27FF\",\n  \"&eDDot;\": \"\\u2A77\",\n  \"&eDot;\": \"\\u2251\",\n  \"&eacute\": \"\\xE9\",\n  \"&eacute;\": \"\\xE9\",\n  \"&easter;\": \"\\u2A6E\",\n  \"&ecaron;\": \"\\u011B\",\n  \"&ecir;\": \"\\u2256\",\n  \"&ecirc\": \"\\xEA\",\n  \"&ecirc;\": \"\\xEA\",\n  \"&ecolon;\": \"\\u2255\",\n  \"&ecy;\": \"\\u044D\",\n  \"&edot;\": \"\\u0117\",\n  \"&ee;\": \"\\u2147\",\n  \"&efDot;\": \"\\u2252\",\n  \"&efr;\": \"\\u{1D522}\",\n  \"&eg;\": \"\\u2A9A\",\n  \"&egrave\": \"\\xE8\",\n  \"&egrave;\": \"\\xE8\",\n  \"&egs;\": \"\\u2A96\",\n  \"&egsdot;\": \"\\u2A98\",\n  \"&el;\": \"\\u2A99\",\n  \"&elinters;\": \"\\u23E7\",\n  \"&ell;\": \"\\u2113\",\n  \"&els;\": \"\\u2A95\",\n  \"&elsdot;\": \"\\u2A97\",\n  \"&emacr;\": \"\\u0113\",\n  \"&empty;\": \"\\u2205\",\n  \"&emptyset;\": \"\\u2205\",\n  \"&emptyv;\": \"\\u2205\",\n  \"&emsp13;\": \"\\u2004\",\n  \"&emsp14;\": \"\\u2005\",\n  \"&emsp;\": \"\\u2003\",\n  \"&eng;\": \"\\u014B\",\n  \"&ensp;\": \"\\u2002\",\n  \"&eogon;\": \"\\u0119\",\n  \"&eopf;\": \"\\u{1D556}\",\n  \"&epar;\": \"\\u22D5\",\n  \"&eparsl;\": \"\\u29E3\",\n  \"&eplus;\": \"\\u2A71\",\n  \"&epsi;\": \"\\u03B5\",\n  \"&epsilon;\": \"\\u03B5\",\n  \"&epsiv;\": \"\\u03F5\",\n  \"&eqcirc;\": \"\\u2256\",\n  \"&eqcolon;\": \"\\u2255\",\n  \"&eqsim;\": \"\\u2242\",\n  \"&eqslantgtr;\": \"\\u2A96\",\n  \"&eqslantless;\": \"\\u2A95\",\n  \"&equals;\": \"=\",\n  \"&equest;\": \"\\u225F\",\n  \"&equiv;\": \"\\u2261\",\n  \"&equivDD;\": \"\\u2A78\",\n  \"&eqvparsl;\": \"\\u29E5\",\n  \"&erDot;\": \"\\u2253\",\n  \"&erarr;\": \"\\u2971\",\n  \"&escr;\": \"\\u212F\",\n  \"&esdot;\": \"\\u2250\",\n  \"&esim;\": \"\\u2242\",\n  \"&eta;\": \"\\u03B7\",\n  \"&eth\": \"\\xF0\",\n  \"&eth;\": \"\\xF0\",\n  \"&euml\": \"\\xEB\",\n  \"&euml;\": \"\\xEB\",\n  \"&euro;\": \"\\u20AC\",\n  \"&excl;\": \"!\",\n  \"&exist;\": \"\\u2203\",\n  \"&expectation;\": \"\\u2130\",\n  \"&exponentiale;\": \"\\u2147\",\n  \"&fallingdotseq;\": \"\\u2252\",\n  \"&fcy;\": \"\\u0444\",\n  \"&female;\": \"\\u2640\",\n  \"&ffilig;\": \"\\uFB03\",\n  \"&fflig;\": \"\\uFB00\",\n  \"&ffllig;\": \"\\uFB04\",\n  \"&ffr;\": \"\\u{1D523}\",\n  \"&filig;\": \"\\uFB01\",\n  \"&fjlig;\": \"fj\",\n  \"&flat;\": \"\\u266D\",\n  \"&fllig;\": \"\\uFB02\",\n  \"&fltns;\": \"\\u25B1\",\n  \"&fnof;\": \"\\u0192\",\n  \"&fopf;\": \"\\u{1D557}\",\n  \"&forall;\": \"\\u2200\",\n  \"&fork;\": \"\\u22D4\",\n  \"&forkv;\": \"\\u2AD9\",\n  \"&fpartint;\": \"\\u2A0D\",\n  \"&frac12\": \"\\xBD\",\n  \"&frac12;\": \"\\xBD\",\n  \"&frac13;\": \"\\u2153\",\n  \"&frac14\": \"\\xBC\",\n  \"&frac14;\": \"\\xBC\",\n  \"&frac15;\": \"\\u2155\",\n  \"&frac16;\": \"\\u2159\",\n  \"&frac18;\": \"\\u215B\",\n  \"&frac23;\": \"\\u2154\",\n  \"&frac25;\": \"\\u2156\",\n  \"&frac34\": \"\\xBE\",\n  \"&frac34;\": \"\\xBE\",\n  \"&frac35;\": \"\\u2157\",\n  \"&frac38;\": \"\\u215C\",\n  \"&frac45;\": \"\\u2158\",\n  \"&frac56;\": \"\\u215A\",\n  \"&frac58;\": \"\\u215D\",\n  \"&frac78;\": \"\\u215E\",\n  \"&frasl;\": \"\\u2044\",\n  \"&frown;\": \"\\u2322\",\n  \"&fscr;\": \"\\u{1D4BB}\",\n  \"&gE;\": \"\\u2267\",\n  \"&gEl;\": \"\\u2A8C\",\n  \"&gacute;\": \"\\u01F5\",\n  \"&gamma;\": \"\\u03B3\",\n  \"&gammad;\": \"\\u03DD\",\n  \"&gap;\": \"\\u2A86\",\n  \"&gbreve;\": \"\\u011F\",\n  \"&gcirc;\": \"\\u011D\",\n  \"&gcy;\": \"\\u0433\",\n  \"&gdot;\": \"\\u0121\",\n  \"&ge;\": \"\\u2265\",\n  \"&gel;\": \"\\u22DB\",\n  \"&geq;\": \"\\u2265\",\n  \"&geqq;\": \"\\u2267\",\n  \"&geqslant;\": \"\\u2A7E\",\n  \"&ges;\": \"\\u2A7E\",\n  \"&gescc;\": \"\\u2AA9\",\n  \"&gesdot;\": \"\\u2A80\",\n  \"&gesdoto;\": \"\\u2A82\",\n  \"&gesdotol;\": \"\\u2A84\",\n  \"&gesl;\": \"\\u22DB\\uFE00\",\n  \"&gesles;\": \"\\u2A94\",\n  \"&gfr;\": \"\\u{1D524}\",\n  \"&gg;\": \"\\u226B\",\n  \"&ggg;\": \"\\u22D9\",\n  \"&gimel;\": \"\\u2137\",\n  \"&gjcy;\": \"\\u0453\",\n  \"&gl;\": \"\\u2277\",\n  \"&glE;\": \"\\u2A92\",\n  \"&gla;\": \"\\u2AA5\",\n  \"&glj;\": \"\\u2AA4\",\n  \"&gnE;\": \"\\u2269\",\n  \"&gnap;\": \"\\u2A8A\",\n  \"&gnapprox;\": \"\\u2A8A\",\n  \"&gne;\": \"\\u2A88\",\n  \"&gneq;\": \"\\u2A88\",\n  \"&gneqq;\": \"\\u2269\",\n  \"&gnsim;\": \"\\u22E7\",\n  \"&gopf;\": \"\\u{1D558}\",\n  \"&grave;\": \"`\",\n  \"&gscr;\": \"\\u210A\",\n  \"&gsim;\": \"\\u2273\",\n  \"&gsime;\": \"\\u2A8E\",\n  \"&gsiml;\": \"\\u2A90\",\n  \"&gt\": \">\",\n  \"&gt;\": \">\",\n  \"&gtcc;\": \"\\u2AA7\",\n  \"&gtcir;\": \"\\u2A7A\",\n  \"&gtdot;\": \"\\u22D7\",\n  \"&gtlPar;\": \"\\u2995\",\n  \"&gtquest;\": \"\\u2A7C\",\n  \"&gtrapprox;\": \"\\u2A86\",\n  \"&gtrarr;\": \"\\u2978\",\n  \"&gtrdot;\": \"\\u22D7\",\n  \"&gtreqless;\": \"\\u22DB\",\n  \"&gtreqqless;\": \"\\u2A8C\",\n  \"&gtrless;\": \"\\u2277\",\n  \"&gtrsim;\": \"\\u2273\",\n  \"&gvertneqq;\": \"\\u2269\\uFE00\",\n  \"&gvnE;\": \"\\u2269\\uFE00\",\n  \"&hArr;\": \"\\u21D4\",\n  \"&hairsp;\": \"\\u200A\",\n  \"&half;\": \"\\xBD\",\n  \"&hamilt;\": \"\\u210B\",\n  \"&hardcy;\": \"\\u044A\",\n  \"&harr;\": \"\\u2194\",\n  \"&harrcir;\": \"\\u2948\",\n  \"&harrw;\": \"\\u21AD\",\n  \"&hbar;\": \"\\u210F\",\n  \"&hcirc;\": \"\\u0125\",\n  \"&hearts;\": \"\\u2665\",\n  \"&heartsuit;\": \"\\u2665\",\n  \"&hellip;\": \"\\u2026\",\n  \"&hercon;\": \"\\u22B9\",\n  \"&hfr;\": \"\\u{1D525}\",\n  \"&hksearow;\": \"\\u2925\",\n  \"&hkswarow;\": \"\\u2926\",\n  \"&hoarr;\": \"\\u21FF\",\n  \"&homtht;\": \"\\u223B\",\n  \"&hookleftarrow;\": \"\\u21A9\",\n  \"&hookrightarrow;\": \"\\u21AA\",\n  \"&hopf;\": \"\\u{1D559}\",\n  \"&horbar;\": \"\\u2015\",\n  \"&hscr;\": \"\\u{1D4BD}\",\n  \"&hslash;\": \"\\u210F\",\n  \"&hstrok;\": \"\\u0127\",\n  \"&hybull;\": \"\\u2043\",\n  \"&hyphen;\": \"\\u2010\",\n  \"&iacute\": \"\\xED\",\n  \"&iacute;\": \"\\xED\",\n  \"&ic;\": \"\\u2063\",\n  \"&icirc\": \"\\xEE\",\n  \"&icirc;\": \"\\xEE\",\n  \"&icy;\": \"\\u0438\",\n  \"&iecy;\": \"\\u0435\",\n  \"&iexcl\": \"\\xA1\",\n  \"&iexcl;\": \"\\xA1\",\n  \"&iff;\": \"\\u21D4\",\n  \"&ifr;\": \"\\u{1D526}\",\n  \"&igrave\": \"\\xEC\",\n  \"&igrave;\": \"\\xEC\",\n  \"&ii;\": \"\\u2148\",\n  \"&iiiint;\": \"\\u2A0C\",\n  \"&iiint;\": \"\\u222D\",\n  \"&iinfin;\": \"\\u29DC\",\n  \"&iiota;\": \"\\u2129\",\n  \"&ijlig;\": \"\\u0133\",\n  \"&imacr;\": \"\\u012B\",\n  \"&image;\": \"\\u2111\",\n  \"&imagline;\": \"\\u2110\",\n  \"&imagpart;\": \"\\u2111\",\n  \"&imath;\": \"\\u0131\",\n  \"&imof;\": \"\\u22B7\",\n  \"&imped;\": \"\\u01B5\",\n  \"&in;\": \"\\u2208\",\n  \"&incare;\": \"\\u2105\",\n  \"&infin;\": \"\\u221E\",\n  \"&infintie;\": \"\\u29DD\",\n  \"&inodot;\": \"\\u0131\",\n  \"&int;\": \"\\u222B\",\n  \"&intcal;\": \"\\u22BA\",\n  \"&integers;\": \"\\u2124\",\n  \"&intercal;\": \"\\u22BA\",\n  \"&intlarhk;\": \"\\u2A17\",\n  \"&intprod;\": \"\\u2A3C\",\n  \"&iocy;\": \"\\u0451\",\n  \"&iogon;\": \"\\u012F\",\n  \"&iopf;\": \"\\u{1D55A}\",\n  \"&iota;\": \"\\u03B9\",\n  \"&iprod;\": \"\\u2A3C\",\n  \"&iquest\": \"\\xBF\",\n  \"&iquest;\": \"\\xBF\",\n  \"&iscr;\": \"\\u{1D4BE}\",\n  \"&isin;\": \"\\u2208\",\n  \"&isinE;\": \"\\u22F9\",\n  \"&isindot;\": \"\\u22F5\",\n  \"&isins;\": \"\\u22F4\",\n  \"&isinsv;\": \"\\u22F3\",\n  \"&isinv;\": \"\\u2208\",\n  \"&it;\": \"\\u2062\",\n  \"&itilde;\": \"\\u0129\",\n  \"&iukcy;\": \"\\u0456\",\n  \"&iuml\": \"\\xEF\",\n  \"&iuml;\": \"\\xEF\",\n  \"&jcirc;\": \"\\u0135\",\n  \"&jcy;\": \"\\u0439\",\n  \"&jfr;\": \"\\u{1D527}\",\n  \"&jmath;\": \"\\u0237\",\n  \"&jopf;\": \"\\u{1D55B}\",\n  \"&jscr;\": \"\\u{1D4BF}\",\n  \"&jsercy;\": \"\\u0458\",\n  \"&jukcy;\": \"\\u0454\",\n  \"&kappa;\": \"\\u03BA\",\n  \"&kappav;\": \"\\u03F0\",\n  \"&kcedil;\": \"\\u0137\",\n  \"&kcy;\": \"\\u043A\",\n  \"&kfr;\": \"\\u{1D528}\",\n  \"&kgreen;\": \"\\u0138\",\n  \"&khcy;\": \"\\u0445\",\n  \"&kjcy;\": \"\\u045C\",\n  \"&kopf;\": \"\\u{1D55C}\",\n  \"&kscr;\": \"\\u{1D4C0}\",\n  \"&lAarr;\": \"\\u21DA\",\n  \"&lArr;\": \"\\u21D0\",\n  \"&lAtail;\": \"\\u291B\",\n  \"&lBarr;\": \"\\u290E\",\n  \"&lE;\": \"\\u2266\",\n  \"&lEg;\": \"\\u2A8B\",\n  \"&lHar;\": \"\\u2962\",\n  \"&lacute;\": \"\\u013A\",\n  \"&laemptyv;\": \"\\u29B4\",\n  \"&lagran;\": \"\\u2112\",\n  \"&lambda;\": \"\\u03BB\",\n  \"&lang;\": \"\\u27E8\",\n  \"&langd;\": \"\\u2991\",\n  \"&langle;\": \"\\u27E8\",\n  \"&lap;\": \"\\u2A85\",\n  \"&laquo\": \"\\xAB\",\n  \"&laquo;\": \"\\xAB\",\n  \"&larr;\": \"\\u2190\",\n  \"&larrb;\": \"\\u21E4\",\n  \"&larrbfs;\": \"\\u291F\",\n  \"&larrfs;\": \"\\u291D\",\n  \"&larrhk;\": \"\\u21A9\",\n  \"&larrlp;\": \"\\u21AB\",\n  \"&larrpl;\": \"\\u2939\",\n  \"&larrsim;\": \"\\u2973\",\n  \"&larrtl;\": \"\\u21A2\",\n  \"&lat;\": \"\\u2AAB\",\n  \"&latail;\": \"\\u2919\",\n  \"&late;\": \"\\u2AAD\",\n  \"&lates;\": \"\\u2AAD\\uFE00\",\n  \"&lbarr;\": \"\\u290C\",\n  \"&lbbrk;\": \"\\u2772\",\n  \"&lbrace;\": \"{\",\n  \"&lbrack;\": \"[\",\n  \"&lbrke;\": \"\\u298B\",\n  \"&lbrksld;\": \"\\u298F\",\n  \"&lbrkslu;\": \"\\u298D\",\n  \"&lcaron;\": \"\\u013E\",\n  \"&lcedil;\": \"\\u013C\",\n  \"&lceil;\": \"\\u2308\",\n  \"&lcub;\": \"{\",\n  \"&lcy;\": \"\\u043B\",\n  \"&ldca;\": \"\\u2936\",\n  \"&ldquo;\": \"\\u201C\",\n  \"&ldquor;\": \"\\u201E\",\n  \"&ldrdhar;\": \"\\u2967\",\n  \"&ldrushar;\": \"\\u294B\",\n  \"&ldsh;\": \"\\u21B2\",\n  \"&le;\": \"\\u2264\",\n  \"&leftarrow;\": \"\\u2190\",\n  \"&leftarrowtail;\": \"\\u21A2\",\n  \"&leftharpoondown;\": \"\\u21BD\",\n  \"&leftharpoonup;\": \"\\u21BC\",\n  \"&leftleftarrows;\": \"\\u21C7\",\n  \"&leftrightarrow;\": \"\\u2194\",\n  \"&leftrightarrows;\": \"\\u21C6\",\n  \"&leftrightharpoons;\": \"\\u21CB\",\n  \"&leftrightsquigarrow;\": \"\\u21AD\",\n  \"&leftthreetimes;\": \"\\u22CB\",\n  \"&leg;\": \"\\u22DA\",\n  \"&leq;\": \"\\u2264\",\n  \"&leqq;\": \"\\u2266\",\n  \"&leqslant;\": \"\\u2A7D\",\n  \"&les;\": \"\\u2A7D\",\n  \"&lescc;\": \"\\u2AA8\",\n  \"&lesdot;\": \"\\u2A7F\",\n  \"&lesdoto;\": \"\\u2A81\",\n  \"&lesdotor;\": \"\\u2A83\",\n  \"&lesg;\": \"\\u22DA\\uFE00\",\n  \"&lesges;\": \"\\u2A93\",\n  \"&lessapprox;\": \"\\u2A85\",\n  \"&lessdot;\": \"\\u22D6\",\n  \"&lesseqgtr;\": \"\\u22DA\",\n  \"&lesseqqgtr;\": \"\\u2A8B\",\n  \"&lessgtr;\": \"\\u2276\",\n  \"&lesssim;\": \"\\u2272\",\n  \"&lfisht;\": \"\\u297C\",\n  \"&lfloor;\": \"\\u230A\",\n  \"&lfr;\": \"\\u{1D529}\",\n  \"&lg;\": \"\\u2276\",\n  \"&lgE;\": \"\\u2A91\",\n  \"&lhard;\": \"\\u21BD\",\n  \"&lharu;\": \"\\u21BC\",\n  \"&lharul;\": \"\\u296A\",\n  \"&lhblk;\": \"\\u2584\",\n  \"&ljcy;\": \"\\u0459\",\n  \"&ll;\": \"\\u226A\",\n  \"&llarr;\": \"\\u21C7\",\n  \"&llcorner;\": \"\\u231E\",\n  \"&llhard;\": \"\\u296B\",\n  \"&lltri;\": \"\\u25FA\",\n  \"&lmidot;\": \"\\u0140\",\n  \"&lmoust;\": \"\\u23B0\",\n  \"&lmoustache;\": \"\\u23B0\",\n  \"&lnE;\": \"\\u2268\",\n  \"&lnap;\": \"\\u2A89\",\n  \"&lnapprox;\": \"\\u2A89\",\n  \"&lne;\": \"\\u2A87\",\n  \"&lneq;\": \"\\u2A87\",\n  \"&lneqq;\": \"\\u2268\",\n  \"&lnsim;\": \"\\u22E6\",\n  \"&loang;\": \"\\u27EC\",\n  \"&loarr;\": \"\\u21FD\",\n  \"&lobrk;\": \"\\u27E6\",\n  \"&longleftarrow;\": \"\\u27F5\",\n  \"&longleftrightarrow;\": \"\\u27F7\",\n  \"&longmapsto;\": \"\\u27FC\",\n  \"&longrightarrow;\": \"\\u27F6\",\n  \"&looparrowleft;\": \"\\u21AB\",\n  \"&looparrowright;\": \"\\u21AC\",\n  \"&lopar;\": \"\\u2985\",\n  \"&lopf;\": \"\\u{1D55D}\",\n  \"&loplus;\": \"\\u2A2D\",\n  \"&lotimes;\": \"\\u2A34\",\n  \"&lowast;\": \"\\u2217\",\n  \"&lowbar;\": \"_\",\n  \"&loz;\": \"\\u25CA\",\n  \"&lozenge;\": \"\\u25CA\",\n  \"&lozf;\": \"\\u29EB\",\n  \"&lpar;\": \"(\",\n  \"&lparlt;\": \"\\u2993\",\n  \"&lrarr;\": \"\\u21C6\",\n  \"&lrcorner;\": \"\\u231F\",\n  \"&lrhar;\": \"\\u21CB\",\n  \"&lrhard;\": \"\\u296D\",\n  \"&lrm;\": \"\\u200E\",\n  \"&lrtri;\": \"\\u22BF\",\n  \"&lsaquo;\": \"\\u2039\",\n  \"&lscr;\": \"\\u{1D4C1}\",\n  \"&lsh;\": \"\\u21B0\",\n  \"&lsim;\": \"\\u2272\",\n  \"&lsime;\": \"\\u2A8D\",\n  \"&lsimg;\": \"\\u2A8F\",\n  \"&lsqb;\": \"[\",\n  \"&lsquo;\": \"\\u2018\",\n  \"&lsquor;\": \"\\u201A\",\n  \"&lstrok;\": \"\\u0142\",\n  \"&lt\": \"<\",\n  \"&lt;\": \"<\",\n  \"&ltcc;\": \"\\u2AA6\",\n  \"&ltcir;\": \"\\u2A79\",\n  \"&ltdot;\": \"\\u22D6\",\n  \"&lthree;\": \"\\u22CB\",\n  \"&ltimes;\": \"\\u22C9\",\n  \"&ltlarr;\": \"\\u2976\",\n  \"&ltquest;\": \"\\u2A7B\",\n  \"&ltrPar;\": \"\\u2996\",\n  \"&ltri;\": \"\\u25C3\",\n  \"&ltrie;\": \"\\u22B4\",\n  \"&ltrif;\": \"\\u25C2\",\n  \"&lurdshar;\": \"\\u294A\",\n  \"&luruhar;\": \"\\u2966\",\n  \"&lvertneqq;\": \"\\u2268\\uFE00\",\n  \"&lvnE;\": \"\\u2268\\uFE00\",\n  \"&mDDot;\": \"\\u223A\",\n  \"&macr\": \"\\xAF\",\n  \"&macr;\": \"\\xAF\",\n  \"&male;\": \"\\u2642\",\n  \"&malt;\": \"\\u2720\",\n  \"&maltese;\": \"\\u2720\",\n  \"&map;\": \"\\u21A6\",\n  \"&mapsto;\": \"\\u21A6\",\n  \"&mapstodown;\": \"\\u21A7\",\n  \"&mapstoleft;\": \"\\u21A4\",\n  \"&mapstoup;\": \"\\u21A5\",\n  \"&marker;\": \"\\u25AE\",\n  \"&mcomma;\": \"\\u2A29\",\n  \"&mcy;\": \"\\u043C\",\n  \"&mdash;\": \"\\u2014\",\n  \"&measuredangle;\": \"\\u2221\",\n  \"&mfr;\": \"\\u{1D52A}\",\n  \"&mho;\": \"\\u2127\",\n  \"&micro\": \"\\xB5\",\n  \"&micro;\": \"\\xB5\",\n  \"&mid;\": \"\\u2223\",\n  \"&midast;\": \"*\",\n  \"&midcir;\": \"\\u2AF0\",\n  \"&middot\": \"\\xB7\",\n  \"&middot;\": \"\\xB7\",\n  \"&minus;\": \"\\u2212\",\n  \"&minusb;\": \"\\u229F\",\n  \"&minusd;\": \"\\u2238\",\n  \"&minusdu;\": \"\\u2A2A\",\n  \"&mlcp;\": \"\\u2ADB\",\n  \"&mldr;\": \"\\u2026\",\n  \"&mnplus;\": \"\\u2213\",\n  \"&models;\": \"\\u22A7\",\n  \"&mopf;\": \"\\u{1D55E}\",\n  \"&mp;\": \"\\u2213\",\n  \"&mscr;\": \"\\u{1D4C2}\",\n  \"&mstpos;\": \"\\u223E\",\n  \"&mu;\": \"\\u03BC\",\n  \"&multimap;\": \"\\u22B8\",\n  \"&mumap;\": \"\\u22B8\",\n  \"&nGg;\": \"\\u22D9\\u0338\",\n  \"&nGt;\": \"\\u226B\\u20D2\",\n  \"&nGtv;\": \"\\u226B\\u0338\",\n  \"&nLeftarrow;\": \"\\u21CD\",\n  \"&nLeftrightarrow;\": \"\\u21CE\",\n  \"&nLl;\": \"\\u22D8\\u0338\",\n  \"&nLt;\": \"\\u226A\\u20D2\",\n  \"&nLtv;\": \"\\u226A\\u0338\",\n  \"&nRightarrow;\": \"\\u21CF\",\n  \"&nVDash;\": \"\\u22AF\",\n  \"&nVdash;\": \"\\u22AE\",\n  \"&nabla;\": \"\\u2207\",\n  \"&nacute;\": \"\\u0144\",\n  \"&nang;\": \"\\u2220\\u20D2\",\n  \"&nap;\": \"\\u2249\",\n  \"&napE;\": \"\\u2A70\\u0338\",\n  \"&napid;\": \"\\u224B\\u0338\",\n  \"&napos;\": \"\\u0149\",\n  \"&napprox;\": \"\\u2249\",\n  \"&natur;\": \"\\u266E\",\n  \"&natural;\": \"\\u266E\",\n  \"&naturals;\": \"\\u2115\",\n  \"&nbsp\": \"\\xA0\",\n  \"&nbsp;\": \"\\xA0\",\n  \"&nbump;\": \"\\u224E\\u0338\",\n  \"&nbumpe;\": \"\\u224F\\u0338\",\n  \"&ncap;\": \"\\u2A43\",\n  \"&ncaron;\": \"\\u0148\",\n  \"&ncedil;\": \"\\u0146\",\n  \"&ncong;\": \"\\u2247\",\n  \"&ncongdot;\": \"\\u2A6D\\u0338\",\n  \"&ncup;\": \"\\u2A42\",\n  \"&ncy;\": \"\\u043D\",\n  \"&ndash;\": \"\\u2013\",\n  \"&ne;\": \"\\u2260\",\n  \"&neArr;\": \"\\u21D7\",\n  \"&nearhk;\": \"\\u2924\",\n  \"&nearr;\": \"\\u2197\",\n  \"&nearrow;\": \"\\u2197\",\n  \"&nedot;\": \"\\u2250\\u0338\",\n  \"&nequiv;\": \"\\u2262\",\n  \"&nesear;\": \"\\u2928\",\n  \"&nesim;\": \"\\u2242\\u0338\",\n  \"&nexist;\": \"\\u2204\",\n  \"&nexists;\": \"\\u2204\",\n  \"&nfr;\": \"\\u{1D52B}\",\n  \"&ngE;\": \"\\u2267\\u0338\",\n  \"&nge;\": \"\\u2271\",\n  \"&ngeq;\": \"\\u2271\",\n  \"&ngeqq;\": \"\\u2267\\u0338\",\n  \"&ngeqslant;\": \"\\u2A7E\\u0338\",\n  \"&nges;\": \"\\u2A7E\\u0338\",\n  \"&ngsim;\": \"\\u2275\",\n  \"&ngt;\": \"\\u226F\",\n  \"&ngtr;\": \"\\u226F\",\n  \"&nhArr;\": \"\\u21CE\",\n  \"&nharr;\": \"\\u21AE\",\n  \"&nhpar;\": \"\\u2AF2\",\n  \"&ni;\": \"\\u220B\",\n  \"&nis;\": \"\\u22FC\",\n  \"&nisd;\": \"\\u22FA\",\n  \"&niv;\": \"\\u220B\",\n  \"&njcy;\": \"\\u045A\",\n  \"&nlArr;\": \"\\u21CD\",\n  \"&nlE;\": \"\\u2266\\u0338\",\n  \"&nlarr;\": \"\\u219A\",\n  \"&nldr;\": \"\\u2025\",\n  \"&nle;\": \"\\u2270\",\n  \"&nleftarrow;\": \"\\u219A\",\n  \"&nleftrightarrow;\": \"\\u21AE\",\n  \"&nleq;\": \"\\u2270\",\n  \"&nleqq;\": \"\\u2266\\u0338\",\n  \"&nleqslant;\": \"\\u2A7D\\u0338\",\n  \"&nles;\": \"\\u2A7D\\u0338\",\n  \"&nless;\": \"\\u226E\",\n  \"&nlsim;\": \"\\u2274\",\n  \"&nlt;\": \"\\u226E\",\n  \"&nltri;\": \"\\u22EA\",\n  \"&nltrie;\": \"\\u22EC\",\n  \"&nmid;\": \"\\u2224\",\n  \"&nopf;\": \"\\u{1D55F}\",\n  \"&not\": \"\\xAC\",\n  \"&not;\": \"\\xAC\",\n  \"&notin;\": \"\\u2209\",\n  \"&notinE;\": \"\\u22F9\\u0338\",\n  \"&notindot;\": \"\\u22F5\\u0338\",\n  \"&notinva;\": \"\\u2209\",\n  \"&notinvb;\": \"\\u22F7\",\n  \"&notinvc;\": \"\\u22F6\",\n  \"&notni;\": \"\\u220C\",\n  \"&notniva;\": \"\\u220C\",\n  \"&notnivb;\": \"\\u22FE\",\n  \"&notnivc;\": \"\\u22FD\",\n  \"&npar;\": \"\\u2226\",\n  \"&nparallel;\": \"\\u2226\",\n  \"&nparsl;\": \"\\u2AFD\\u20E5\",\n  \"&npart;\": \"\\u2202\\u0338\",\n  \"&npolint;\": \"\\u2A14\",\n  \"&npr;\": \"\\u2280\",\n  \"&nprcue;\": \"\\u22E0\",\n  \"&npre;\": \"\\u2AAF\\u0338\",\n  \"&nprec;\": \"\\u2280\",\n  \"&npreceq;\": \"\\u2AAF\\u0338\",\n  \"&nrArr;\": \"\\u21CF\",\n  \"&nrarr;\": \"\\u219B\",\n  \"&nrarrc;\": \"\\u2933\\u0338\",\n  \"&nrarrw;\": \"\\u219D\\u0338\",\n  \"&nrightarrow;\": \"\\u219B\",\n  \"&nrtri;\": \"\\u22EB\",\n  \"&nrtrie;\": \"\\u22ED\",\n  \"&nsc;\": \"\\u2281\",\n  \"&nsccue;\": \"\\u22E1\",\n  \"&nsce;\": \"\\u2AB0\\u0338\",\n  \"&nscr;\": \"\\u{1D4C3}\",\n  \"&nshortmid;\": \"\\u2224\",\n  \"&nshortparallel;\": \"\\u2226\",\n  \"&nsim;\": \"\\u2241\",\n  \"&nsime;\": \"\\u2244\",\n  \"&nsimeq;\": \"\\u2244\",\n  \"&nsmid;\": \"\\u2224\",\n  \"&nspar;\": \"\\u2226\",\n  \"&nsqsube;\": \"\\u22E2\",\n  \"&nsqsupe;\": \"\\u22E3\",\n  \"&nsub;\": \"\\u2284\",\n  \"&nsubE;\": \"\\u2AC5\\u0338\",\n  \"&nsube;\": \"\\u2288\",\n  \"&nsubset;\": \"\\u2282\\u20D2\",\n  \"&nsubseteq;\": \"\\u2288\",\n  \"&nsubseteqq;\": \"\\u2AC5\\u0338\",\n  \"&nsucc;\": \"\\u2281\",\n  \"&nsucceq;\": \"\\u2AB0\\u0338\",\n  \"&nsup;\": \"\\u2285\",\n  \"&nsupE;\": \"\\u2AC6\\u0338\",\n  \"&nsupe;\": \"\\u2289\",\n  \"&nsupset;\": \"\\u2283\\u20D2\",\n  \"&nsupseteq;\": \"\\u2289\",\n  \"&nsupseteqq;\": \"\\u2AC6\\u0338\",\n  \"&ntgl;\": \"\\u2279\",\n  \"&ntilde\": \"\\xF1\",\n  \"&ntilde;\": \"\\xF1\",\n  \"&ntlg;\": \"\\u2278\",\n  \"&ntriangleleft;\": \"\\u22EA\",\n  \"&ntrianglelefteq;\": \"\\u22EC\",\n  \"&ntriangleright;\": \"\\u22EB\",\n  \"&ntrianglerighteq;\": \"\\u22ED\",\n  \"&nu;\": \"\\u03BD\",\n  \"&num;\": \"#\",\n  \"&numero;\": \"\\u2116\",\n  \"&numsp;\": \"\\u2007\",\n  \"&nvDash;\": \"\\u22AD\",\n  \"&nvHarr;\": \"\\u2904\",\n  \"&nvap;\": \"\\u224D\\u20D2\",\n  \"&nvdash;\": \"\\u22AC\",\n  \"&nvge;\": \"\\u2265\\u20D2\",\n  \"&nvgt;\": \">\\u20D2\",\n  \"&nvinfin;\": \"\\u29DE\",\n  \"&nvlArr;\": \"\\u2902\",\n  \"&nvle;\": \"\\u2264\\u20D2\",\n  \"&nvlt;\": \"<\\u20D2\",\n  \"&nvltrie;\": \"\\u22B4\\u20D2\",\n  \"&nvrArr;\": \"\\u2903\",\n  \"&nvrtrie;\": \"\\u22B5\\u20D2\",\n  \"&nvsim;\": \"\\u223C\\u20D2\",\n  \"&nwArr;\": \"\\u21D6\",\n  \"&nwarhk;\": \"\\u2923\",\n  \"&nwarr;\": \"\\u2196\",\n  \"&nwarrow;\": \"\\u2196\",\n  \"&nwnear;\": \"\\u2927\",\n  \"&oS;\": \"\\u24C8\",\n  \"&oacute\": \"\\xF3\",\n  \"&oacute;\": \"\\xF3\",\n  \"&oast;\": \"\\u229B\",\n  \"&ocir;\": \"\\u229A\",\n  \"&ocirc\": \"\\xF4\",\n  \"&ocirc;\": \"\\xF4\",\n  \"&ocy;\": \"\\u043E\",\n  \"&odash;\": \"\\u229D\",\n  \"&odblac;\": \"\\u0151\",\n  \"&odiv;\": \"\\u2A38\",\n  \"&odot;\": \"\\u2299\",\n  \"&odsold;\": \"\\u29BC\",\n  \"&oelig;\": \"\\u0153\",\n  \"&ofcir;\": \"\\u29BF\",\n  \"&ofr;\": \"\\u{1D52C}\",\n  \"&ogon;\": \"\\u02DB\",\n  \"&ograve\": \"\\xF2\",\n  \"&ograve;\": \"\\xF2\",\n  \"&ogt;\": \"\\u29C1\",\n  \"&ohbar;\": \"\\u29B5\",\n  \"&ohm;\": \"\\u03A9\",\n  \"&oint;\": \"\\u222E\",\n  \"&olarr;\": \"\\u21BA\",\n  \"&olcir;\": \"\\u29BE\",\n  \"&olcross;\": \"\\u29BB\",\n  \"&oline;\": \"\\u203E\",\n  \"&olt;\": \"\\u29C0\",\n  \"&omacr;\": \"\\u014D\",\n  \"&omega;\": \"\\u03C9\",\n  \"&omicron;\": \"\\u03BF\",\n  \"&omid;\": \"\\u29B6\",\n  \"&ominus;\": \"\\u2296\",\n  \"&oopf;\": \"\\u{1D560}\",\n  \"&opar;\": \"\\u29B7\",\n  \"&operp;\": \"\\u29B9\",\n  \"&oplus;\": \"\\u2295\",\n  \"&or;\": \"\\u2228\",\n  \"&orarr;\": \"\\u21BB\",\n  \"&ord;\": \"\\u2A5D\",\n  \"&order;\": \"\\u2134\",\n  \"&orderof;\": \"\\u2134\",\n  \"&ordf\": \"\\xAA\",\n  \"&ordf;\": \"\\xAA\",\n  \"&ordm\": \"\\xBA\",\n  \"&ordm;\": \"\\xBA\",\n  \"&origof;\": \"\\u22B6\",\n  \"&oror;\": \"\\u2A56\",\n  \"&orslope;\": \"\\u2A57\",\n  \"&orv;\": \"\\u2A5B\",\n  \"&oscr;\": \"\\u2134\",\n  \"&oslash\": \"\\xF8\",\n  \"&oslash;\": \"\\xF8\",\n  \"&osol;\": \"\\u2298\",\n  \"&otilde\": \"\\xF5\",\n  \"&otilde;\": \"\\xF5\",\n  \"&otimes;\": \"\\u2297\",\n  \"&otimesas;\": \"\\u2A36\",\n  \"&ouml\": \"\\xF6\",\n  \"&ouml;\": \"\\xF6\",\n  \"&ovbar;\": \"\\u233D\",\n  \"&par;\": \"\\u2225\",\n  \"&para\": \"\\xB6\",\n  \"&para;\": \"\\xB6\",\n  \"&parallel;\": \"\\u2225\",\n  \"&parsim;\": \"\\u2AF3\",\n  \"&parsl;\": \"\\u2AFD\",\n  \"&part;\": \"\\u2202\",\n  \"&pcy;\": \"\\u043F\",\n  \"&percnt;\": \"%\",\n  \"&period;\": \".\",\n  \"&permil;\": \"\\u2030\",\n  \"&perp;\": \"\\u22A5\",\n  \"&pertenk;\": \"\\u2031\",\n  \"&pfr;\": \"\\u{1D52D}\",\n  \"&phi;\": \"\\u03C6\",\n  \"&phiv;\": \"\\u03D5\",\n  \"&phmmat;\": \"\\u2133\",\n  \"&phone;\": \"\\u260E\",\n  \"&pi;\": \"\\u03C0\",\n  \"&pitchfork;\": \"\\u22D4\",\n  \"&piv;\": \"\\u03D6\",\n  \"&planck;\": \"\\u210F\",\n  \"&planckh;\": \"\\u210E\",\n  \"&plankv;\": \"\\u210F\",\n  \"&plus;\": \"+\",\n  \"&plusacir;\": \"\\u2A23\",\n  \"&plusb;\": \"\\u229E\",\n  \"&pluscir;\": \"\\u2A22\",\n  \"&plusdo;\": \"\\u2214\",\n  \"&plusdu;\": \"\\u2A25\",\n  \"&pluse;\": \"\\u2A72\",\n  \"&plusmn\": \"\\xB1\",\n  \"&plusmn;\": \"\\xB1\",\n  \"&plussim;\": \"\\u2A26\",\n  \"&plustwo;\": \"\\u2A27\",\n  \"&pm;\": \"\\xB1\",\n  \"&pointint;\": \"\\u2A15\",\n  \"&popf;\": \"\\u{1D561}\",\n  \"&pound\": \"\\xA3\",\n  \"&pound;\": \"\\xA3\",\n  \"&pr;\": \"\\u227A\",\n  \"&prE;\": \"\\u2AB3\",\n  \"&prap;\": \"\\u2AB7\",\n  \"&prcue;\": \"\\u227C\",\n  \"&pre;\": \"\\u2AAF\",\n  \"&prec;\": \"\\u227A\",\n  \"&precapprox;\": \"\\u2AB7\",\n  \"&preccurlyeq;\": \"\\u227C\",\n  \"&preceq;\": \"\\u2AAF\",\n  \"&precnapprox;\": \"\\u2AB9\",\n  \"&precneqq;\": \"\\u2AB5\",\n  \"&precnsim;\": \"\\u22E8\",\n  \"&precsim;\": \"\\u227E\",\n  \"&prime;\": \"\\u2032\",\n  \"&primes;\": \"\\u2119\",\n  \"&prnE;\": \"\\u2AB5\",\n  \"&prnap;\": \"\\u2AB9\",\n  \"&prnsim;\": \"\\u22E8\",\n  \"&prod;\": \"\\u220F\",\n  \"&profalar;\": \"\\u232E\",\n  \"&profline;\": \"\\u2312\",\n  \"&profsurf;\": \"\\u2313\",\n  \"&prop;\": \"\\u221D\",\n  \"&propto;\": \"\\u221D\",\n  \"&prsim;\": \"\\u227E\",\n  \"&prurel;\": \"\\u22B0\",\n  \"&pscr;\": \"\\u{1D4C5}\",\n  \"&psi;\": \"\\u03C8\",\n  \"&puncsp;\": \"\\u2008\",\n  \"&qfr;\": \"\\u{1D52E}\",\n  \"&qint;\": \"\\u2A0C\",\n  \"&qopf;\": \"\\u{1D562}\",\n  \"&qprime;\": \"\\u2057\",\n  \"&qscr;\": \"\\u{1D4C6}\",\n  \"&quaternions;\": \"\\u210D\",\n  \"&quatint;\": \"\\u2A16\",\n  \"&quest;\": \"?\",\n  \"&questeq;\": \"\\u225F\",\n  \"&quot\": '\"',\n  \"&quot;\": '\"',\n  \"&rAarr;\": \"\\u21DB\",\n  \"&rArr;\": \"\\u21D2\",\n  \"&rAtail;\": \"\\u291C\",\n  \"&rBarr;\": \"\\u290F\",\n  \"&rHar;\": \"\\u2964\",\n  \"&race;\": \"\\u223D\\u0331\",\n  \"&racute;\": \"\\u0155\",\n  \"&radic;\": \"\\u221A\",\n  \"&raemptyv;\": \"\\u29B3\",\n  \"&rang;\": \"\\u27E9\",\n  \"&rangd;\": \"\\u2992\",\n  \"&range;\": \"\\u29A5\",\n  \"&rangle;\": \"\\u27E9\",\n  \"&raquo\": \"\\xBB\",\n  \"&raquo;\": \"\\xBB\",\n  \"&rarr;\": \"\\u2192\",\n  \"&rarrap;\": \"\\u2975\",\n  \"&rarrb;\": \"\\u21E5\",\n  \"&rarrbfs;\": \"\\u2920\",\n  \"&rarrc;\": \"\\u2933\",\n  \"&rarrfs;\": \"\\u291E\",\n  \"&rarrhk;\": \"\\u21AA\",\n  \"&rarrlp;\": \"\\u21AC\",\n  \"&rarrpl;\": \"\\u2945\",\n  \"&rarrsim;\": \"\\u2974\",\n  \"&rarrtl;\": \"\\u21A3\",\n  \"&rarrw;\": \"\\u219D\",\n  \"&ratail;\": \"\\u291A\",\n  \"&ratio;\": \"\\u2236\",\n  \"&rationals;\": \"\\u211A\",\n  \"&rbarr;\": \"\\u290D\",\n  \"&rbbrk;\": \"\\u2773\",\n  \"&rbrace;\": \"}\",\n  \"&rbrack;\": \"]\",\n  \"&rbrke;\": \"\\u298C\",\n  \"&rbrksld;\": \"\\u298E\",\n  \"&rbrkslu;\": \"\\u2990\",\n  \"&rcaron;\": \"\\u0159\",\n  \"&rcedil;\": \"\\u0157\",\n  \"&rceil;\": \"\\u2309\",\n  \"&rcub;\": \"}\",\n  \"&rcy;\": \"\\u0440\",\n  \"&rdca;\": \"\\u2937\",\n  \"&rdldhar;\": \"\\u2969\",\n  \"&rdquo;\": \"\\u201D\",\n  \"&rdquor;\": \"\\u201D\",\n  \"&rdsh;\": \"\\u21B3\",\n  \"&real;\": \"\\u211C\",\n  \"&realine;\": \"\\u211B\",\n  \"&realpart;\": \"\\u211C\",\n  \"&reals;\": \"\\u211D\",\n  \"&rect;\": \"\\u25AD\",\n  \"&reg\": \"\\xAE\",\n  \"&reg;\": \"\\xAE\",\n  \"&rfisht;\": \"\\u297D\",\n  \"&rfloor;\": \"\\u230B\",\n  \"&rfr;\": \"\\u{1D52F}\",\n  \"&rhard;\": \"\\u21C1\",\n  \"&rharu;\": \"\\u21C0\",\n  \"&rharul;\": \"\\u296C\",\n  \"&rho;\": \"\\u03C1\",\n  \"&rhov;\": \"\\u03F1\",\n  \"&rightarrow;\": \"\\u2192\",\n  \"&rightarrowtail;\": \"\\u21A3\",\n  \"&rightharpoondown;\": \"\\u21C1\",\n  \"&rightharpoonup;\": \"\\u21C0\",\n  \"&rightleftarrows;\": \"\\u21C4\",\n  \"&rightleftharpoons;\": \"\\u21CC\",\n  \"&rightrightarrows;\": \"\\u21C9\",\n  \"&rightsquigarrow;\": \"\\u219D\",\n  \"&rightthreetimes;\": \"\\u22CC\",\n  \"&ring;\": \"\\u02DA\",\n  \"&risingdotseq;\": \"\\u2253\",\n  \"&rlarr;\": \"\\u21C4\",\n  \"&rlhar;\": \"\\u21CC\",\n  \"&rlm;\": \"\\u200F\",\n  \"&rmoust;\": \"\\u23B1\",\n  \"&rmoustache;\": \"\\u23B1\",\n  \"&rnmid;\": \"\\u2AEE\",\n  \"&roang;\": \"\\u27ED\",\n  \"&roarr;\": \"\\u21FE\",\n  \"&robrk;\": \"\\u27E7\",\n  \"&ropar;\": \"\\u2986\",\n  \"&ropf;\": \"\\u{1D563}\",\n  \"&roplus;\": \"\\u2A2E\",\n  \"&rotimes;\": \"\\u2A35\",\n  \"&rpar;\": \")\",\n  \"&rpargt;\": \"\\u2994\",\n  \"&rppolint;\": \"\\u2A12\",\n  \"&rrarr;\": \"\\u21C9\",\n  \"&rsaquo;\": \"\\u203A\",\n  \"&rscr;\": \"\\u{1D4C7}\",\n  \"&rsh;\": \"\\u21B1\",\n  \"&rsqb;\": \"]\",\n  \"&rsquo;\": \"\\u2019\",\n  \"&rsquor;\": \"\\u2019\",\n  \"&rthree;\": \"\\u22CC\",\n  \"&rtimes;\": \"\\u22CA\",\n  \"&rtri;\": \"\\u25B9\",\n  \"&rtrie;\": \"\\u22B5\",\n  \"&rtrif;\": \"\\u25B8\",\n  \"&rtriltri;\": \"\\u29CE\",\n  \"&ruluhar;\": \"\\u2968\",\n  \"&rx;\": \"\\u211E\",\n  \"&sacute;\": \"\\u015B\",\n  \"&sbquo;\": \"\\u201A\",\n  \"&sc;\": \"\\u227B\",\n  \"&scE;\": \"\\u2AB4\",\n  \"&scap;\": \"\\u2AB8\",\n  \"&scaron;\": \"\\u0161\",\n  \"&sccue;\": \"\\u227D\",\n  \"&sce;\": \"\\u2AB0\",\n  \"&scedil;\": \"\\u015F\",\n  \"&scirc;\": \"\\u015D\",\n  \"&scnE;\": \"\\u2AB6\",\n  \"&scnap;\": \"\\u2ABA\",\n  \"&scnsim;\": \"\\u22E9\",\n  \"&scpolint;\": \"\\u2A13\",\n  \"&scsim;\": \"\\u227F\",\n  \"&scy;\": \"\\u0441\",\n  \"&sdot;\": \"\\u22C5\",\n  \"&sdotb;\": \"\\u22A1\",\n  \"&sdote;\": \"\\u2A66\",\n  \"&seArr;\": \"\\u21D8\",\n  \"&searhk;\": \"\\u2925\",\n  \"&searr;\": \"\\u2198\",\n  \"&searrow;\": \"\\u2198\",\n  \"&sect\": \"\\xA7\",\n  \"&sect;\": \"\\xA7\",\n  \"&semi;\": \";\",\n  \"&seswar;\": \"\\u2929\",\n  \"&setminus;\": \"\\u2216\",\n  \"&setmn;\": \"\\u2216\",\n  \"&sext;\": \"\\u2736\",\n  \"&sfr;\": \"\\u{1D530}\",\n  \"&sfrown;\": \"\\u2322\",\n  \"&sharp;\": \"\\u266F\",\n  \"&shchcy;\": \"\\u0449\",\n  \"&shcy;\": \"\\u0448\",\n  \"&shortmid;\": \"\\u2223\",\n  \"&shortparallel;\": \"\\u2225\",\n  \"&shy\": \"\\xAD\",\n  \"&shy;\": \"\\xAD\",\n  \"&sigma;\": \"\\u03C3\",\n  \"&sigmaf;\": \"\\u03C2\",\n  \"&sigmav;\": \"\\u03C2\",\n  \"&sim;\": \"\\u223C\",\n  \"&simdot;\": \"\\u2A6A\",\n  \"&sime;\": \"\\u2243\",\n  \"&simeq;\": \"\\u2243\",\n  \"&simg;\": \"\\u2A9E\",\n  \"&simgE;\": \"\\u2AA0\",\n  \"&siml;\": \"\\u2A9D\",\n  \"&simlE;\": \"\\u2A9F\",\n  \"&simne;\": \"\\u2246\",\n  \"&simplus;\": \"\\u2A24\",\n  \"&simrarr;\": \"\\u2972\",\n  \"&slarr;\": \"\\u2190\",\n  \"&smallsetminus;\": \"\\u2216\",\n  \"&smashp;\": \"\\u2A33\",\n  \"&smeparsl;\": \"\\u29E4\",\n  \"&smid;\": \"\\u2223\",\n  \"&smile;\": \"\\u2323\",\n  \"&smt;\": \"\\u2AAA\",\n  \"&smte;\": \"\\u2AAC\",\n  \"&smtes;\": \"\\u2AAC\\uFE00\",\n  \"&softcy;\": \"\\u044C\",\n  \"&sol;\": \"/\",\n  \"&solb;\": \"\\u29C4\",\n  \"&solbar;\": \"\\u233F\",\n  \"&sopf;\": \"\\u{1D564}\",\n  \"&spades;\": \"\\u2660\",\n  \"&spadesuit;\": \"\\u2660\",\n  \"&spar;\": \"\\u2225\",\n  \"&sqcap;\": \"\\u2293\",\n  \"&sqcaps;\": \"\\u2293\\uFE00\",\n  \"&sqcup;\": \"\\u2294\",\n  \"&sqcups;\": \"\\u2294\\uFE00\",\n  \"&sqsub;\": \"\\u228F\",\n  \"&sqsube;\": \"\\u2291\",\n  \"&sqsubset;\": \"\\u228F\",\n  \"&sqsubseteq;\": \"\\u2291\",\n  \"&sqsup;\": \"\\u2290\",\n  \"&sqsupe;\": \"\\u2292\",\n  \"&sqsupset;\": \"\\u2290\",\n  \"&sqsupseteq;\": \"\\u2292\",\n  \"&squ;\": \"\\u25A1\",\n  \"&square;\": \"\\u25A1\",\n  \"&squarf;\": \"\\u25AA\",\n  \"&squf;\": \"\\u25AA\",\n  \"&srarr;\": \"\\u2192\",\n  \"&sscr;\": \"\\u{1D4C8}\",\n  \"&ssetmn;\": \"\\u2216\",\n  \"&ssmile;\": \"\\u2323\",\n  \"&sstarf;\": \"\\u22C6\",\n  \"&star;\": \"\\u2606\",\n  \"&starf;\": \"\\u2605\",\n  \"&straightepsilon;\": \"\\u03F5\",\n  \"&straightphi;\": \"\\u03D5\",\n  \"&strns;\": \"\\xAF\",\n  \"&sub;\": \"\\u2282\",\n  \"&subE;\": \"\\u2AC5\",\n  \"&subdot;\": \"\\u2ABD\",\n  \"&sube;\": \"\\u2286\",\n  \"&subedot;\": \"\\u2AC3\",\n  \"&submult;\": \"\\u2AC1\",\n  \"&subnE;\": \"\\u2ACB\",\n  \"&subne;\": \"\\u228A\",\n  \"&subplus;\": \"\\u2ABF\",\n  \"&subrarr;\": \"\\u2979\",\n  \"&subset;\": \"\\u2282\",\n  \"&subseteq;\": \"\\u2286\",\n  \"&subseteqq;\": \"\\u2AC5\",\n  \"&subsetneq;\": \"\\u228A\",\n  \"&subsetneqq;\": \"\\u2ACB\",\n  \"&subsim;\": \"\\u2AC7\",\n  \"&subsub;\": \"\\u2AD5\",\n  \"&subsup;\": \"\\u2AD3\",\n  \"&succ;\": \"\\u227B\",\n  \"&succapprox;\": \"\\u2AB8\",\n  \"&succcurlyeq;\": \"\\u227D\",\n  \"&succeq;\": \"\\u2AB0\",\n  \"&succnapprox;\": \"\\u2ABA\",\n  \"&succneqq;\": \"\\u2AB6\",\n  \"&succnsim;\": \"\\u22E9\",\n  \"&succsim;\": \"\\u227F\",\n  \"&sum;\": \"\\u2211\",\n  \"&sung;\": \"\\u266A\",\n  \"&sup1\": \"\\xB9\",\n  \"&sup1;\": \"\\xB9\",\n  \"&sup2\": \"\\xB2\",\n  \"&sup2;\": \"\\xB2\",\n  \"&sup3\": \"\\xB3\",\n  \"&sup3;\": \"\\xB3\",\n  \"&sup;\": \"\\u2283\",\n  \"&supE;\": \"\\u2AC6\",\n  \"&supdot;\": \"\\u2ABE\",\n  \"&supdsub;\": \"\\u2AD8\",\n  \"&supe;\": \"\\u2287\",\n  \"&supedot;\": \"\\u2AC4\",\n  \"&suphsol;\": \"\\u27C9\",\n  \"&suphsub;\": \"\\u2AD7\",\n  \"&suplarr;\": \"\\u297B\",\n  \"&supmult;\": \"\\u2AC2\",\n  \"&supnE;\": \"\\u2ACC\",\n  \"&supne;\": \"\\u228B\",\n  \"&supplus;\": \"\\u2AC0\",\n  \"&supset;\": \"\\u2283\",\n  \"&supseteq;\": \"\\u2287\",\n  \"&supseteqq;\": \"\\u2AC6\",\n  \"&supsetneq;\": \"\\u228B\",\n  \"&supsetneqq;\": \"\\u2ACC\",\n  \"&supsim;\": \"\\u2AC8\",\n  \"&supsub;\": \"\\u2AD4\",\n  \"&supsup;\": \"\\u2AD6\",\n  \"&swArr;\": \"\\u21D9\",\n  \"&swarhk;\": \"\\u2926\",\n  \"&swarr;\": \"\\u2199\",\n  \"&swarrow;\": \"\\u2199\",\n  \"&swnwar;\": \"\\u292A\",\n  \"&szlig\": \"\\xDF\",\n  \"&szlig;\": \"\\xDF\",\n  \"&target;\": \"\\u2316\",\n  \"&tau;\": \"\\u03C4\",\n  \"&tbrk;\": \"\\u23B4\",\n  \"&tcaron;\": \"\\u0165\",\n  \"&tcedil;\": \"\\u0163\",\n  \"&tcy;\": \"\\u0442\",\n  \"&tdot;\": \"\\u20DB\",\n  \"&telrec;\": \"\\u2315\",\n  \"&tfr;\": \"\\u{1D531}\",\n  \"&there4;\": \"\\u2234\",\n  \"&therefore;\": \"\\u2234\",\n  \"&theta;\": \"\\u03B8\",\n  \"&thetasym;\": \"\\u03D1\",\n  \"&thetav;\": \"\\u03D1\",\n  \"&thickapprox;\": \"\\u2248\",\n  \"&thicksim;\": \"\\u223C\",\n  \"&thinsp;\": \"\\u2009\",\n  \"&thkap;\": \"\\u2248\",\n  \"&thksim;\": \"\\u223C\",\n  \"&thorn\": \"\\xFE\",\n  \"&thorn;\": \"\\xFE\",\n  \"&tilde;\": \"\\u02DC\",\n  \"&times\": \"\\xD7\",\n  \"&times;\": \"\\xD7\",\n  \"&timesb;\": \"\\u22A0\",\n  \"&timesbar;\": \"\\u2A31\",\n  \"&timesd;\": \"\\u2A30\",\n  \"&tint;\": \"\\u222D\",\n  \"&toea;\": \"\\u2928\",\n  \"&top;\": \"\\u22A4\",\n  \"&topbot;\": \"\\u2336\",\n  \"&topcir;\": \"\\u2AF1\",\n  \"&topf;\": \"\\u{1D565}\",\n  \"&topfork;\": \"\\u2ADA\",\n  \"&tosa;\": \"\\u2929\",\n  \"&tprime;\": \"\\u2034\",\n  \"&trade;\": \"\\u2122\",\n  \"&triangle;\": \"\\u25B5\",\n  \"&triangledown;\": \"\\u25BF\",\n  \"&triangleleft;\": \"\\u25C3\",\n  \"&trianglelefteq;\": \"\\u22B4\",\n  \"&triangleq;\": \"\\u225C\",\n  \"&triangleright;\": \"\\u25B9\",\n  \"&trianglerighteq;\": \"\\u22B5\",\n  \"&tridot;\": \"\\u25EC\",\n  \"&trie;\": \"\\u225C\",\n  \"&triminus;\": \"\\u2A3A\",\n  \"&triplus;\": \"\\u2A39\",\n  \"&trisb;\": \"\\u29CD\",\n  \"&tritime;\": \"\\u2A3B\",\n  \"&trpezium;\": \"\\u23E2\",\n  \"&tscr;\": \"\\u{1D4C9}\",\n  \"&tscy;\": \"\\u0446\",\n  \"&tshcy;\": \"\\u045B\",\n  \"&tstrok;\": \"\\u0167\",\n  \"&twixt;\": \"\\u226C\",\n  \"&twoheadleftarrow;\": \"\\u219E\",\n  \"&twoheadrightarrow;\": \"\\u21A0\",\n  \"&uArr;\": \"\\u21D1\",\n  \"&uHar;\": \"\\u2963\",\n  \"&uacute\": \"\\xFA\",\n  \"&uacute;\": \"\\xFA\",\n  \"&uarr;\": \"\\u2191\",\n  \"&ubrcy;\": \"\\u045E\",\n  \"&ubreve;\": \"\\u016D\",\n  \"&ucirc\": \"\\xFB\",\n  \"&ucirc;\": \"\\xFB\",\n  \"&ucy;\": \"\\u0443\",\n  \"&udarr;\": \"\\u21C5\",\n  \"&udblac;\": \"\\u0171\",\n  \"&udhar;\": \"\\u296E\",\n  \"&ufisht;\": \"\\u297E\",\n  \"&ufr;\": \"\\u{1D532}\",\n  \"&ugrave\": \"\\xF9\",\n  \"&ugrave;\": \"\\xF9\",\n  \"&uharl;\": \"\\u21BF\",\n  \"&uharr;\": \"\\u21BE\",\n  \"&uhblk;\": \"\\u2580\",\n  \"&ulcorn;\": \"\\u231C\",\n  \"&ulcorner;\": \"\\u231C\",\n  \"&ulcrop;\": \"\\u230F\",\n  \"&ultri;\": \"\\u25F8\",\n  \"&umacr;\": \"\\u016B\",\n  \"&uml\": \"\\xA8\",\n  \"&uml;\": \"\\xA8\",\n  \"&uogon;\": \"\\u0173\",\n  \"&uopf;\": \"\\u{1D566}\",\n  \"&uparrow;\": \"\\u2191\",\n  \"&updownarrow;\": \"\\u2195\",\n  \"&upharpoonleft;\": \"\\u21BF\",\n  \"&upharpoonright;\": \"\\u21BE\",\n  \"&uplus;\": \"\\u228E\",\n  \"&upsi;\": \"\\u03C5\",\n  \"&upsih;\": \"\\u03D2\",\n  \"&upsilon;\": \"\\u03C5\",\n  \"&upuparrows;\": \"\\u21C8\",\n  \"&urcorn;\": \"\\u231D\",\n  \"&urcorner;\": \"\\u231D\",\n  \"&urcrop;\": \"\\u230E\",\n  \"&uring;\": \"\\u016F\",\n  \"&urtri;\": \"\\u25F9\",\n  \"&uscr;\": \"\\u{1D4CA}\",\n  \"&utdot;\": \"\\u22F0\",\n  \"&utilde;\": \"\\u0169\",\n  \"&utri;\": \"\\u25B5\",\n  \"&utrif;\": \"\\u25B4\",\n  \"&uuarr;\": \"\\u21C8\",\n  \"&uuml\": \"\\xFC\",\n  \"&uuml;\": \"\\xFC\",\n  \"&uwangle;\": \"\\u29A7\",\n  \"&vArr;\": \"\\u21D5\",\n  \"&vBar;\": \"\\u2AE8\",\n  \"&vBarv;\": \"\\u2AE9\",\n  \"&vDash;\": \"\\u22A8\",\n  \"&vangrt;\": \"\\u299C\",\n  \"&varepsilon;\": \"\\u03F5\",\n  \"&varkappa;\": \"\\u03F0\",\n  \"&varnothing;\": \"\\u2205\",\n  \"&varphi;\": \"\\u03D5\",\n  \"&varpi;\": \"\\u03D6\",\n  \"&varpropto;\": \"\\u221D\",\n  \"&varr;\": \"\\u2195\",\n  \"&varrho;\": \"\\u03F1\",\n  \"&varsigma;\": \"\\u03C2\",\n  \"&varsubsetneq;\": \"\\u228A\\uFE00\",\n  \"&varsubsetneqq;\": \"\\u2ACB\\uFE00\",\n  \"&varsupsetneq;\": \"\\u228B\\uFE00\",\n  \"&varsupsetneqq;\": \"\\u2ACC\\uFE00\",\n  \"&vartheta;\": \"\\u03D1\",\n  \"&vartriangleleft;\": \"\\u22B2\",\n  \"&vartriangleright;\": \"\\u22B3\",\n  \"&vcy;\": \"\\u0432\",\n  \"&vdash;\": \"\\u22A2\",\n  \"&vee;\": \"\\u2228\",\n  \"&veebar;\": \"\\u22BB\",\n  \"&veeeq;\": \"\\u225A\",\n  \"&vellip;\": \"\\u22EE\",\n  \"&verbar;\": \"|\",\n  \"&vert;\": \"|\",\n  \"&vfr;\": \"\\u{1D533}\",\n  \"&vltri;\": \"\\u22B2\",\n  \"&vnsub;\": \"\\u2282\\u20D2\",\n  \"&vnsup;\": \"\\u2283\\u20D2\",\n  \"&vopf;\": \"\\u{1D567}\",\n  \"&vprop;\": \"\\u221D\",\n  \"&vrtri;\": \"\\u22B3\",\n  \"&vscr;\": \"\\u{1D4CB}\",\n  \"&vsubnE;\": \"\\u2ACB\\uFE00\",\n  \"&vsubne;\": \"\\u228A\\uFE00\",\n  \"&vsupnE;\": \"\\u2ACC\\uFE00\",\n  \"&vsupne;\": \"\\u228B\\uFE00\",\n  \"&vzigzag;\": \"\\u299A\",\n  \"&wcirc;\": \"\\u0175\",\n  \"&wedbar;\": \"\\u2A5F\",\n  \"&wedge;\": \"\\u2227\",\n  \"&wedgeq;\": \"\\u2259\",\n  \"&weierp;\": \"\\u2118\",\n  \"&wfr;\": \"\\u{1D534}\",\n  \"&wopf;\": \"\\u{1D568}\",\n  \"&wp;\": \"\\u2118\",\n  \"&wr;\": \"\\u2240\",\n  \"&wreath;\": \"\\u2240\",\n  \"&wscr;\": \"\\u{1D4CC}\",\n  \"&xcap;\": \"\\u22C2\",\n  \"&xcirc;\": \"\\u25EF\",\n  \"&xcup;\": \"\\u22C3\",\n  \"&xdtri;\": \"\\u25BD\",\n  \"&xfr;\": \"\\u{1D535}\",\n  \"&xhArr;\": \"\\u27FA\",\n  \"&xharr;\": \"\\u27F7\",\n  \"&xi;\": \"\\u03BE\",\n  \"&xlArr;\": \"\\u27F8\",\n  \"&xlarr;\": \"\\u27F5\",\n  \"&xmap;\": \"\\u27FC\",\n  \"&xnis;\": \"\\u22FB\",\n  \"&xodot;\": \"\\u2A00\",\n  \"&xopf;\": \"\\u{1D569}\",\n  \"&xoplus;\": \"\\u2A01\",\n  \"&xotime;\": \"\\u2A02\",\n  \"&xrArr;\": \"\\u27F9\",\n  \"&xrarr;\": \"\\u27F6\",\n  \"&xscr;\": \"\\u{1D4CD}\",\n  \"&xsqcup;\": \"\\u2A06\",\n  \"&xuplus;\": \"\\u2A04\",\n  \"&xutri;\": \"\\u25B3\",\n  \"&xvee;\": \"\\u22C1\",\n  \"&xwedge;\": \"\\u22C0\",\n  \"&yacute\": \"\\xFD\",\n  \"&yacute;\": \"\\xFD\",\n  \"&yacy;\": \"\\u044F\",\n  \"&ycirc;\": \"\\u0177\",\n  \"&ycy;\": \"\\u044B\",\n  \"&yen\": \"\\xA5\",\n  \"&yen;\": \"\\xA5\",\n  \"&yfr;\": \"\\u{1D536}\",\n  \"&yicy;\": \"\\u0457\",\n  \"&yopf;\": \"\\u{1D56A}\",\n  \"&yscr;\": \"\\u{1D4CE}\",\n  \"&yucy;\": \"\\u044E\",\n  \"&yuml\": \"\\xFF\",\n  \"&yuml;\": \"\\xFF\",\n  \"&zacute;\": \"\\u017A\",\n  \"&zcaron;\": \"\\u017E\",\n  \"&zcy;\": \"\\u0437\",\n  \"&zdot;\": \"\\u017C\",\n  \"&zeetrf;\": \"\\u2128\",\n  \"&zeta;\": \"\\u03B6\",\n  \"&zfr;\": \"\\u{1D537}\",\n  \"&zhcy;\": \"\\u0436\",\n  \"&zigrarr;\": \"\\u21DD\",\n  \"&zopf;\": \"\\u{1D56B}\",\n  \"&zscr;\": \"\\u{1D4CF}\",\n  \"&zwj;\": \"\\u200D\",\n  \"&zwnj;\": \"\\u200C\"\n}, html_entities_default = htmlEntities;\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/text-format.js\nfunction decodeHTMLEntities(str) {\n  return str.replace(/&(#\\d+|#x[a-f0-9]+|[a-z]+\\d*);?/gi, (match, entity) => {\n    if (typeof html_entities_default[match] == \"string\")\n      return html_entities_default[match];\n    if (entity.charAt(0) !== \"#\" || match.charAt(match.length - 1) !== \";\")\n      return match;\n    let codePoint;\n    entity.charAt(1) === \"x\" ? codePoint = parseInt(entity.substr(2), 16) : codePoint = parseInt(entity.substr(1), 10);\n    var output = \"\";\n    return codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111 ? \"\\uFFFD\" : (codePoint > 65535 && (codePoint -= 65536, output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296), codePoint = 56320 | codePoint & 1023), output += String.fromCharCode(codePoint), output);\n  });\n}\nfunction escapeHtml(str) {\n  return str.trim().replace(/[<>\"'?&]/g, (c) => {\n    let hex = c.charCodeAt(0).toString(16);\n    return hex.length < 2 && (hex = \"0\" + hex), \"&#x\" + hex.toUpperCase() + \";\";\n  });\n}\nfunction textToHtml(str) {\n  return \"<div>\" + escapeHtml(str).replace(/\\n/g, \"<br />\") + \"</div>\";\n}\nfunction htmlToText(str) {\n  return str = str.replace(/\\r?\\n/g, \"\u0001\").replace(/<\\!\\-\\-.*?\\-\\->/gi, \" \").replace(/<br\\b[^>]*>/gi, `\n`).replace(/<\\/?(p|div|table|tr|td|th)\\b[^>]*>/gi, `\n\n`).replace(/<script\\b[^>]*>.*?<\\/script\\b[^>]*>/gi, \" \").replace(/^.*<body\\b[^>]*>/i, \"\").replace(/^.*<\\/head\\b[^>]*>/i, \"\").replace(/^.*<\\!doctype\\b[^>]*>/i, \"\").replace(/<\\/body\\b[^>]*>.*$/i, \"\").replace(/<\\/html\\b[^>]*>.*$/i, \"\").replace(/<a\\b[^>]*href\\s*=\\s*[\"']?([^\\s\"']+)[^>]*>/gi, \" ($1) \").replace(/<\\/?(span|em|i|strong|b|u|a)\\b[^>]*>/gi, \"\").replace(/<li\\b[^>]*>[\\n\\u0001\\s]*/gi, \"* \").replace(/<hr\\b[^>]*>/g, `\n-------------\n`).replace(/<[^>]*>/g, \" \").replace(/\\u0001/g, `\n`).replace(/[ \\t]+/g, \" \").replace(/^\\s+$/gm, \"\").replace(/\\n\\n+/g, `\n\n`).replace(/^\\n+/, `\n`).replace(/\\n+$/, `\n`), str = decodeHTMLEntities(str), str;\n}\nfunction formatTextAddress(address) {\n  return [].concat(address.name || []).concat(address.name ? `<${address.address}>` : address.address).join(\" \");\n}\nfunction formatTextAddresses(addresses) {\n  let parts = [], processAddress = (address, partCounter) => {\n    if (partCounter && parts.push(\", \"), address.group) {\n      let groupStart = `${address.name}:`, groupEnd = \";\";\n      parts.push(groupStart), address.group.forEach(processAddress), parts.push(groupEnd);\n    } else\n      parts.push(formatTextAddress(address));\n  };\n  return addresses.forEach(processAddress), parts.join(\"\");\n}\nfunction formatHtmlAddress(address) {\n  return `<a href=\"mailto:${escapeHtml(address.address)}\" class=\"postal-email-address\">${escapeHtml(address.name || `<${address.address}>`)}</a>`;\n}\nfunction formatHtmlAddresses(addresses) {\n  let parts = [], processAddress = (address, partCounter) => {\n    if (partCounter && parts.push('<span class=\"postal-email-address-separator\">, </span>'), address.group) {\n      let groupStart = `<span class=\"postal-email-address-group\">${escapeHtml(address.name)}:</span>`, groupEnd = '<span class=\"postal-email-address-group\">;</span>';\n      parts.push(groupStart), address.group.forEach(processAddress), parts.push(groupEnd);\n    } else\n      parts.push(formatHtmlAddress(address));\n  };\n  return addresses.forEach(processAddress), parts.join(\" \");\n}\nfunction foldLines(str, lineLength, afterSpace) {\n  str = (str || \"\").toString(), lineLength = lineLength || 76;\n  let pos = 0, len = str.length, result = \"\", line, match;\n  for (; pos < len; ) {\n    if (line = str.substr(pos, lineLength), line.length < lineLength) {\n      result += line;\n      break;\n    }\n    if (match = line.match(/^[^\\n\\r]*(\\r?\\n|\\r)/)) {\n      line = match[0], result += line, pos += line.length;\n      continue;\n    } else (match = line.match(/(\\s+)[^\\s]*$/)) && match[0].length - (afterSpace ? (match[1] || \"\").length : 0) < line.length ? line = line.substr(0, line.length - (match[0].length - (afterSpace ? (match[1] || \"\").length : 0))) : (match = str.substr(pos + line.length).match(/^[^\\s]+(\\s*)/)) && (line = line + match[0].substr(0, match[0].length - (afterSpace ? 0 : (match[1] || \"\").length)));\n    result += line, pos += line.length, pos < len && (result += `\\r\n`);\n  }\n  return result;\n}\nfunction formatTextHeader(message) {\n  let rows = [];\n  if (message.from && rows.push({ key: \"From\", val: formatTextAddress(message.from) }), message.subject && rows.push({ key: \"Subject\", val: message.subject }), message.date) {\n    let dateOptions = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n      hour12: !1\n    }, dateStr = typeof Intl > \"u\" ? message.date : new Intl.DateTimeFormat(\"default\", dateOptions).format(new Date(message.date));\n    rows.push({ key: \"Date\", val: dateStr });\n  }\n  message.to && message.to.length && rows.push({ key: \"To\", val: formatTextAddresses(message.to) }), message.cc && message.cc.length && rows.push({ key: \"Cc\", val: formatTextAddresses(message.cc) }), message.bcc && message.bcc.length && rows.push({ key: \"Bcc\", val: formatTextAddresses(message.bcc) });\n  let maxKeyLength = rows.map((r) => r.key.length).reduce((acc, cur) => cur > acc ? cur : acc, 0);\n  rows = rows.flatMap((row) => {\n    let sepLen = maxKeyLength - row.key.length, prefix = `${row.key}: ${\" \".repeat(sepLen)}`, emptyPrefix = `${\" \".repeat(row.key.length + 1)} ${\" \".repeat(sepLen)}`;\n    return foldLines(row.val, 80, !0).split(/\\r?\\n/).map((line) => line.trim()).map((line, i) => `${i ? emptyPrefix : prefix}${line}`);\n  });\n  let maxLineLength = rows.map((r) => r.length).reduce((acc, cur) => cur > acc ? cur : acc, 0), lineMarker = \"-\".repeat(maxLineLength);\n  return `\n${lineMarker}\n${rows.join(`\n`)}\n${lineMarker}\n`;\n}\nfunction formatHtmlHeader(message) {\n  let rows = [];\n  if (message.from && rows.push(`<div class=\"postal-email-header-key\">From</div><div class=\"postal-email-header-value\">${formatHtmlAddress(message.from)}</div>`), message.subject && rows.push(\n    `<div class=\"postal-email-header-key\">Subject</div><div class=\"postal-email-header-value postal-email-header-subject\">${escapeHtml(\n      message.subject\n    )}</div>`\n  ), message.date) {\n    let dateOptions = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n      hour12: !1\n    }, dateStr = typeof Intl > \"u\" ? message.date : new Intl.DateTimeFormat(\"default\", dateOptions).format(new Date(message.date));\n    rows.push(\n      `<div class=\"postal-email-header-key\">Date</div><div class=\"postal-email-header-value postal-email-header-date\" data-date=\"${escapeHtml(\n        message.date\n      )}\">${escapeHtml(dateStr)}</div>`\n    );\n  }\n  return message.to && message.to.length && rows.push(`<div class=\"postal-email-header-key\">To</div><div class=\"postal-email-header-value\">${formatHtmlAddresses(message.to)}</div>`), message.cc && message.cc.length && rows.push(`<div class=\"postal-email-header-key\">Cc</div><div class=\"postal-email-header-value\">${formatHtmlAddresses(message.cc)}</div>`), message.bcc && message.bcc.length && rows.push(`<div class=\"postal-email-header-key\">Bcc</div><div class=\"postal-email-header-value\">${formatHtmlAddresses(message.bcc)}</div>`), `<div class=\"postal-email-header\">${rows.length ? '<div class=\"postal-email-header-row\">' : \"\"}${rows.join(\n    `</div>\n<div class=\"postal-email-header-row\">`\n  )}${rows.length ? \"</div>\" : \"\"}</div>`;\n}\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/address-parser.js\nfunction _handleAddress(tokens) {\n  let token, isGroup = !1, state = \"text\", address, addresses = [], data = {\n    address: [],\n    comment: [],\n    group: [],\n    text: []\n  }, i, len;\n  for (i = 0, len = tokens.length; i < len; i++)\n    if (token = tokens[i], token.type === \"operator\")\n      switch (token.value) {\n        case \"<\":\n          state = \"address\";\n          break;\n        case \"(\":\n          state = \"comment\";\n          break;\n        case \":\":\n          state = \"group\", isGroup = !0;\n          break;\n        default:\n          state = \"text\";\n      }\n    else token.value && (state === \"address\" && (token.value = token.value.replace(/^[^<]*<\\s*/, \"\")), data[state].push(token.value));\n  if (!data.text.length && data.comment.length && (data.text = data.comment, data.comment = []), isGroup)\n    data.text = data.text.join(\" \"), addresses.push({\n      name: decodeWords(data.text || address && address.name),\n      group: data.group.length ? addressParser(data.group.join(\",\")) : []\n    });\n  else {\n    if (!data.address.length && data.text.length) {\n      for (i = data.text.length - 1; i >= 0; i--)\n        if (data.text[i].match(/^[^@\\s]+@[^@\\s]+$/)) {\n          data.address = data.text.splice(i, 1);\n          break;\n        }\n      let _regexHandler = function(address2) {\n        return data.address.length ? address2 : (data.address = [address2.trim()], \" \");\n      };\n      if (!data.address.length)\n        for (i = data.text.length - 1; i >= 0 && (data.text[i] = data.text[i].replace(/\\s*\\b[^@\\s]+@[^\\s]+\\b\\s*/, _regexHandler).trim(), !data.address.length); i--)\n          ;\n    }\n    if (!data.text.length && data.comment.length && (data.text = data.comment, data.comment = []), data.address.length > 1 && (data.text = data.text.concat(data.address.splice(1))), data.text = data.text.join(\" \"), data.address = data.address.join(\" \"), !data.address && /^=\\?[^=]+?=$/.test(data.text.trim())) {\n      let parsedSubAddresses = addressParser(decodeWords(data.text));\n      if (parsedSubAddresses && parsedSubAddresses.length)\n        return parsedSubAddresses;\n    }\n    if (!data.address && isGroup)\n      return [];\n    address = {\n      address: data.address || data.text || \"\",\n      name: decodeWords(data.text || data.address || \"\")\n    }, address.address === address.name && ((address.address || \"\").match(/@/) ? address.name = \"\" : address.address = \"\"), addresses.push(address);\n  }\n  return addresses;\n}\nvar Tokenizer = class {\n  constructor(str) {\n    this.str = (str || \"\").toString(), this.operatorCurrent = \"\", this.operatorExpecting = \"\", this.node = null, this.escaped = !1, this.list = [], this.operators = {\n      '\"': '\"',\n      \"(\": \")\",\n      \"<\": \">\",\n      \",\": \"\",\n      \":\": \";\",\n      // Semicolons are not a legal delimiter per the RFC2822 grammar other\n      // than for terminating a group, but they are also not valid for any\n      // other use in this context.  Given that some mail clients have\n      // historically allowed the semicolon as a delimiter equivalent to the\n      // comma in their UI, it makes sense to treat them the same as a comma\n      // when used outside of a group.\n      \";\": \"\"\n    };\n  }\n  /**\n   * Tokenizes the original input string\n   *\n   * @return {Array} An array of operator|text tokens\n   */\n  tokenize() {\n    let chr, list = [];\n    for (let i = 0, len = this.str.length; i < len; i++)\n      chr = this.str.charAt(i), this.checkChar(chr);\n    return this.list.forEach((node) => {\n      node.value = (node.value || \"\").toString().trim(), node.value && list.push(node);\n    }), list;\n  }\n  /**\n   * Checks if a character is an operator or text and acts accordingly\n   *\n   * @param {String} chr Character from the address field\n   */\n  checkChar(chr) {\n    if (!this.escaped) {\n      if (chr === this.operatorExpecting) {\n        this.node = {\n          type: \"operator\",\n          value: chr\n        }, this.list.push(this.node), this.node = null, this.operatorExpecting = \"\", this.escaped = !1;\n        return;\n      } else if (!this.operatorExpecting && chr in this.operators) {\n        this.node = {\n          type: \"operator\",\n          value: chr\n        }, this.list.push(this.node), this.node = null, this.operatorExpecting = this.operators[chr], this.escaped = !1;\n        return;\n      } else if (['\"', \"'\"].includes(this.operatorExpecting) && chr === \"\\\\\") {\n        this.escaped = !0;\n        return;\n      }\n    }\n    this.node || (this.node = {\n      type: \"text\",\n      value: \"\"\n    }, this.list.push(this.node)), chr === `\n` && (chr = \" \"), (chr.charCodeAt(0) >= 33 || [\" \", \"\t\"].includes(chr)) && (this.node.value += chr), this.escaped = !1;\n  }\n};\nfunction addressParser(str, options) {\n  options = options || {};\n  let tokens = new Tokenizer(str).tokenize(), addresses = [], address = [], parsedAddresses = [];\n  if (tokens.forEach((token) => {\n    token.type === \"operator\" && (token.value === \",\" || token.value === \";\") ? (address.length && addresses.push(address), address = []) : address.push(token);\n  }), address.length && addresses.push(address), addresses.forEach((address2) => {\n    address2 = _handleAddress(address2), address2.length && (parsedAddresses = parsedAddresses.concat(address2));\n  }), options.flatten) {\n    let addresses2 = [], walkAddressList = (list) => {\n      list.forEach((address2) => {\n        if (address2.group)\n          return walkAddressList(address2.group);\n        addresses2.push(address2);\n      });\n    };\n    return walkAddressList(parsedAddresses), addresses2;\n  }\n  return parsedAddresses;\n}\nvar address_parser_default = addressParser;\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/base64-encoder.js\nfunction base64ArrayBuffer(arrayBuffer) {\n  for (var base64 = \"\", encodings = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", bytes = new Uint8Array(arrayBuffer), byteLength = bytes.byteLength, byteRemainder = byteLength % 3, mainLength = byteLength - byteRemainder, a, b, c, d, chunk, i = 0; i < mainLength; i = i + 3)\n    chunk = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2], a = (chunk & 16515072) >> 18, b = (chunk & 258048) >> 12, c = (chunk & 4032) >> 6, d = chunk & 63, base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n  return byteRemainder == 1 ? (chunk = bytes[mainLength], a = (chunk & 252) >> 2, b = (chunk & 3) << 4, base64 += encodings[a] + encodings[b] + \"==\") : byteRemainder == 2 && (chunk = bytes[mainLength] << 8 | bytes[mainLength + 1], a = (chunk & 64512) >> 10, b = (chunk & 1008) >> 4, c = (chunk & 15) << 2, base64 += encodings[a] + encodings[b] + encodings[c] + \"=\"), base64;\n}\n\n// ../../node_modules/.pnpm/postal-mime@2.4.3_patch_hash=ngwql2fj2dlex3jjynq4iizhk4/node_modules/postal-mime/src/postal-mime.js\nvar PostalMime = class _PostalMime {\n  static parse(buf, options) {\n    return new _PostalMime(options).parse(buf);\n  }\n  constructor(options) {\n    this.options = options || {}, this.root = this.currentNode = new MimeNode({\n      postalMime: this\n    }), this.boundaries = [], this.textContent = {}, this.attachments = [], this.attachmentEncoding = (this.options.attachmentEncoding || \"\").toString().replace(/[-_\\s]/g, \"\").trim().toLowerCase() || \"arraybuffer\", this.started = !1;\n  }\n  async finalize() {\n    await this.root.finalize();\n  }\n  async processLine(line, isFinal) {\n    let boundaries = this.boundaries;\n    if (boundaries.length && line.length > 2 && line[0] === 45 && line[1] === 45)\n      for (let i = boundaries.length - 1; i >= 0; i--) {\n        let boundary = boundaries[i];\n        if (line.length !== boundary.value.length + 2 && line.length !== boundary.value.length + 4)\n          continue;\n        let isTerminator = line.length === boundary.value.length + 4;\n        if (isTerminator && (line[line.length - 2] !== 45 || line[line.length - 1] !== 45))\n          continue;\n        let boudaryMatches = !0;\n        for (let i2 = 0; i2 < boundary.value.length; i2++)\n          if (line[i2 + 2] !== boundary.value[i2]) {\n            boudaryMatches = !1;\n            break;\n          }\n        if (boudaryMatches)\n          return isTerminator ? (await boundary.node.finalize(), this.currentNode = boundary.node.parentNode || this.root) : (await boundary.node.finalizeChildNodes(), this.currentNode = new MimeNode({\n            postalMime: this,\n            parentNode: boundary.node\n          })), isFinal ? this.finalize() : void 0;\n      }\n    if (this.currentNode.feed(line), isFinal)\n      return this.finalize();\n  }\n  readLine() {\n    let startPos = this.readPos, endPos = this.readPos, res = () => ({\n      bytes: new Uint8Array(this.buf, startPos, endPos - startPos),\n      done: this.readPos >= this.av.length\n    });\n    for (; this.readPos < this.av.length; ) {\n      let c = this.av[this.readPos++];\n      if (c !== 13 && c !== 10 && (endPos = this.readPos), c === 10)\n        return res();\n    }\n    return res();\n  }\n  async processNodeTree() {\n    let textContent = {}, textTypes = /* @__PURE__ */ new Set(), textMap = this.textMap = /* @__PURE__ */ new Map(), forceRfc822Attachments = this.forceRfc822Attachments(), walk = async (node, alternative, related) => {\n      if (alternative = alternative || !1, related = related || !1, node.contentType.multipart)\n        node.contentType.multipart === \"alternative\" ? alternative = node : node.contentType.multipart === \"related\" && (related = node);\n      else if (this.isInlineMessageRfc822(node) && !forceRfc822Attachments) {\n        let subParser = new _PostalMime();\n        node.subMessage = await subParser.parse(node.content), textMap.has(node) || textMap.set(node, {});\n        let textEntry = textMap.get(node);\n        (node.subMessage.text || !node.subMessage.html) && (textEntry.plain = textEntry.plain || [], textEntry.plain.push({ type: \"subMessage\", value: node.subMessage }), textTypes.add(\"plain\")), node.subMessage.html && (textEntry.html = textEntry.html || [], textEntry.html.push({ type: \"subMessage\", value: node.subMessage }), textTypes.add(\"html\")), subParser.textMap && subParser.textMap.forEach((subTextEntry, subTextNode) => {\n          textMap.set(subTextNode, subTextEntry);\n        });\n        for (let attachment of node.subMessage.attachments || [])\n          this.attachments.push(attachment);\n      } else if (this.isInlineTextNode(node)) {\n        let textType = node.contentType.parsed.value.substr(node.contentType.parsed.value.indexOf(\"/\") + 1), selectorNode = alternative || node;\n        textMap.has(selectorNode) || textMap.set(selectorNode, {});\n        let textEntry = textMap.get(selectorNode);\n        textEntry[textType] = textEntry[textType] || [], textEntry[textType].push({ type: \"text\", value: node.getTextContent() }), textTypes.add(textType);\n      } else if (node.content) {\n        let filename = node.contentDisposition.parsed.params.filename || node.contentType.parsed.params.name || null, attachment = {\n          filename: filename ? decodeWords(filename) : null,\n          mimeType: node.contentType.parsed.value,\n          disposition: node.contentDisposition.parsed.value || null\n        };\n        switch (related && node.contentId && (attachment.related = !0), node.contentDescription && (attachment.description = node.contentDescription), node.contentId && (attachment.contentId = node.contentId), node.contentType.parsed.value) {\n          // Special handling for calendar events\n          case \"text/calendar\":\n          case \"application/ics\": {\n            node.contentType.parsed.params.method && (attachment.method = node.contentType.parsed.params.method.toString().toUpperCase().trim());\n            let decodedText = node.getTextContent().replace(/\\r?\\n/g, `\n`).replace(/\\n*$/, `\n`);\n            attachment.content = textEncoder.encode(decodedText);\n            break;\n          }\n          // Regular attachments\n          default:\n            attachment.content = node.content;\n        }\n        this.attachments.push(attachment);\n      }\n      for (let childNode of node.childNodes)\n        await walk(childNode, alternative, related);\n    };\n    await walk(this.root, !1, []), textMap.forEach((mapEntry) => {\n      textTypes.forEach((textType) => {\n        if (textContent[textType] || (textContent[textType] = []), mapEntry[textType])\n          mapEntry[textType].forEach((textEntry) => {\n            switch (textEntry.type) {\n              case \"text\":\n                textContent[textType].push(textEntry.value);\n                break;\n              case \"subMessage\":\n                switch (textType) {\n                  case \"html\":\n                    textContent[textType].push(formatHtmlHeader(textEntry.value));\n                    break;\n                  case \"plain\":\n                    textContent[textType].push(formatTextHeader(textEntry.value));\n                    break;\n                }\n                break;\n            }\n          });\n        else {\n          let alternativeType;\n          switch (textType) {\n            case \"html\":\n              alternativeType = \"plain\";\n              break;\n            case \"plain\":\n              alternativeType = \"html\";\n              break;\n          }\n          (mapEntry[alternativeType] || []).forEach((textEntry) => {\n            switch (textEntry.type) {\n              case \"text\":\n                switch (textType) {\n                  case \"html\":\n                    textContent[textType].push(textToHtml(textEntry.value));\n                    break;\n                  case \"plain\":\n                    textContent[textType].push(htmlToText(textEntry.value));\n                    break;\n                }\n                break;\n              case \"subMessage\":\n                switch (textType) {\n                  case \"html\":\n                    textContent[textType].push(formatHtmlHeader(textEntry.value));\n                    break;\n                  case \"plain\":\n                    textContent[textType].push(formatTextHeader(textEntry.value));\n                    break;\n                }\n                break;\n            }\n          });\n        }\n      });\n    }), Object.keys(textContent).forEach((textType) => {\n      textContent[textType] = textContent[textType].join(`\n`);\n    }), this.textContent = textContent;\n  }\n  isInlineTextNode(node) {\n    if (node.contentDisposition.parsed.value === \"attachment\")\n      return !1;\n    switch (node.contentType.parsed.value) {\n      case \"text/html\":\n      case \"text/plain\":\n        return !0;\n      case \"text/calendar\":\n      case \"text/csv\":\n      default:\n        return !1;\n    }\n  }\n  isInlineMessageRfc822(node) {\n    return node.contentType.parsed.value !== \"message/rfc822\" ? !1 : (node.contentDisposition.parsed.value || (this.options.rfc822Attachments ? \"attachment\" : \"inline\")) === \"inline\";\n  }\n  // Check if this is a specially crafted report email where message/rfc822 content should not be inlined\n  forceRfc822Attachments() {\n    if (this.options.forceRfc822Attachments)\n      return !0;\n    let forceRfc822Attachments = !1, walk = (node) => {\n      node.contentType.multipart || [\"message/delivery-status\", \"message/feedback-report\"].includes(node.contentType.parsed.value) && (forceRfc822Attachments = !0);\n      for (let childNode of node.childNodes)\n        walk(childNode);\n    };\n    return walk(this.root), forceRfc822Attachments;\n  }\n  async resolveStream(stream) {\n    let chunkLen = 0, chunks = [], reader = stream.getReader();\n    for (; ; ) {\n      let { done, value } = await reader.read();\n      if (done)\n        break;\n      chunks.push(value), chunkLen += value.length;\n    }\n    let result = new Uint8Array(chunkLen), chunkPointer = 0;\n    for (let chunk of chunks)\n      result.set(chunk, chunkPointer), chunkPointer += chunk.length;\n    return result;\n  }\n  async parse(buf) {\n    if (this.started)\n      throw new Error(\"Can not reuse parser, create a new PostalMime object\");\n    for (this.started = !0, buf && typeof buf.getReader == \"function\" && (buf = await this.resolveStream(buf)), buf = buf || new ArrayBuffer(0), typeof buf == \"string\" && (buf = textEncoder.encode(buf)), (buf instanceof Blob || Object.prototype.toString.call(buf) === \"[object Blob]\") && (buf = await blobToArrayBuffer(buf)), buf.buffer instanceof ArrayBuffer && (buf = new Uint8Array(buf).buffer), this.buf = buf, this.av = new Uint8Array(buf), this.readPos = 0; this.readPos < this.av.length; ) {\n      let line = this.readLine();\n      await this.processLine(line.bytes, line.done);\n    }\n    await this.processNodeTree();\n    let message = {\n      headers: this.root.headers.map((entry) => ({ key: entry.key, value: entry.value })).reverse()\n    };\n    for (let key of [\"from\", \"sender\"]) {\n      let addressHeader = this.root.headers.find((line) => line.key === key);\n      if (addressHeader && addressHeader.value) {\n        let addresses = address_parser_default(addressHeader.value);\n        addresses && addresses.length && (message[key] = addresses[0]);\n      }\n    }\n    for (let key of [\"delivered-to\", \"return-path\"]) {\n      let addressHeader = this.root.headers.find((line) => line.key === key);\n      if (addressHeader && addressHeader.value) {\n        let addresses = address_parser_default(addressHeader.value);\n        if (addresses && addresses.length && addresses[0].address) {\n          let camelKey = key.replace(/\\-(.)/g, (o, c) => c.toUpperCase());\n          message[camelKey] = addresses[0].address;\n        }\n      }\n    }\n    for (let key of [\"to\", \"cc\", \"bcc\", \"reply-to\"]) {\n      let addressHeaders = this.root.headers.filter((line) => line.key === key), addresses = [];\n      if (addressHeaders.filter((entry) => entry && entry.value).map((entry) => address_parser_default(entry.value)).forEach((parsed) => addresses = addresses.concat(parsed || [])), addresses && addresses.length) {\n        let camelKey = key.replace(/\\-(.)/g, (o, c) => c.toUpperCase());\n        message[camelKey] = addresses;\n      }\n    }\n    for (let key of [\"subject\", \"message-id\", \"in-reply-to\", \"references\"]) {\n      let header = this.root.headers.find((line) => line.key === key);\n      if (header && header.value) {\n        let camelKey = key.replace(/\\-(.)/g, (o, c) => c.toUpperCase());\n        message[camelKey] = decodeWords(header.value);\n      }\n    }\n    let dateHeader = this.root.headers.find((line) => line.key === \"date\");\n    if (dateHeader) {\n      let date = new Date(dateHeader.value);\n      !date || date.toString() === \"Invalid Date\" ? date = dateHeader.value : date = date.toISOString(), message.date = date;\n    }\n    switch (this.textContent?.html && (message.html = this.textContent.html), this.textContent?.plain && (message.text = this.textContent.plain), message.attachments = this.attachments, this.attachmentEncoding) {\n      case \"arraybuffer\":\n        break;\n      case \"base64\":\n        for (let attachment of message.attachments || [])\n          attachment?.content && (attachment.content = base64ArrayBuffer(attachment.content), attachment.encoding = \"base64\");\n        break;\n      case \"utf8\":\n        let attachmentDecoder = new TextDecoder(\"utf8\");\n        for (let attachment of message.attachments || [])\n          attachment?.content && (attachment.content = attachmentDecoder.decode(attachment.content), attachment.encoding = \"utf8\");\n        break;\n      default:\n        throw new Error(\"Unknwon attachment encoding\");\n    }\n    return message;\n  }\n};\n\n// src/workers/email/constants.ts\nvar RAW_EMAIL = \"EmailMessage::raw\";\n\n// src/workers/email/validate.ts\nasync function isEmailReplyable(email, incomingEmailHeaders, log) {\n  let autoResponseSuppress = incomingEmailHeaders.get(\"x-auto-response-suppress\")?.toLowerCase();\n  if (autoResponseSuppress !== void 0 && autoResponseSuppress !== \"none\")\n    return !1;\n  let autoSubmittedValue = incomingEmailHeaders.get(\"auto-submitted\")?.toLowerCase();\n  return autoSubmittedValue !== void 0 && autoSubmittedValue !== \"no\" ? !1 : email.inReplyTo === void 0 && email.references === void 0 ? !0 : email.inReplyTo !== void 0 && email.references !== void 0 ? (email.references.match(/@/g)?.length ?? 0) >= 100 ? (await log(\n    red(\n      `The incoming email's \"References\" header has more than 100 entries. As such, your Worker cannot respond to this email. Refer to https://developers.cloudflare.com/email-routing/email-workers/reply-email-workers/.`\n    )\n  ), !1) : !0 : !1;\n}\nasync function validateReply(incomingMessage, replyMessage) {\n  let rawEmail = replyMessage[RAW_EMAIL], rawEmailBuffer = new Uint8Array(\n    await new Response(rawEmail).arrayBuffer()\n  ), parsedReply;\n  try {\n    parsedReply = await PostalMime.parse(rawEmailBuffer);\n  } catch (e) {\n    let error = e;\n    throw new Error(`could not parse email: ${error.message}`);\n  }\n  if (parsedReply.from?.address !== replyMessage.from)\n    throw new Error(\"From: header does not match mail from\");\n  if (parsedReply.messageId === void 0)\n    throw new Error(\"invalid message-id\");\n  if (new Headers(\n    parsedReply.headers.map((header) => [header.key, header.value])\n  ).get(\"received\") !== null)\n    throw new Error(\"invalid headers set\");\n  if (parsedReply.inReplyTo === void 0)\n    throw new Error(\"no In-Reply-To header found in reply message\");\n  if (parsedReply.inReplyTo !== incomingMessage.messageId)\n    throw new Error(\"In-Reply-To does not match original Message-ID\");\n  let incomingReferences = incomingMessage.references ?? \"\";\n  if (parsedReply.references !== void 0) {\n    if (!(parsedReply.references.includes(incomingMessage.messageId) && parsedReply.references.includes(incomingReferences)))\n      throw new Error(\"provided References header is invalid\");\n  } else {\n    let replyReferences = `References: ${incomingMessage.messageId}${incomingReferences.length > 0 ? \" \" : \"\"}${incomingReferences}\\r\n`, encodedReferences = new TextEncoder().encode(replyReferences), finalReplyEmail = new Uint8Array(\n      encodedReferences.byteLength + rawEmailBuffer.byteLength\n    );\n    return finalReplyEmail.set(encodedReferences, 0), finalReplyEmail.set(rawEmailBuffer, encodedReferences.byteLength), finalReplyEmail;\n  }\n  return rawEmailBuffer;\n}\n\n// src/workers/core/email.ts\n$.enabled = !0;\nfunction renderEmailHeaders(headers) {\n  return headers ? `\n  headers:\n${[...headers.entries()].map(([k, v]) => `    ${k}: ${v}`).join(`\n`)}` : \"\";\n}\nasync function handleEmail(params, request, service, env, ctx) {\n  let from = params.get(\"from\"), to = params.get(\"to\");\n  if (!request.body || !from || !to)\n    return new Response(\n      \"Invalid email. Your request must include URL parameters specifying the `from` and `to` addresses, as well as an email in the body\",\n      {\n        status: 400\n      }\n    );\n  let clonedRequest = request.clone();\n  assert(clonedRequest.body !== null, \"Cloned request body is null\");\n  let incomingEmailRaw = new Uint8Array(await request.arrayBuffer());\n  if (incomingEmailRaw.byteLength > 25 * 1024 * 1024)\n    return new Response(\n      \"Email message size is bigger than the production size limit of 25MiB. Local development has a lower limit of 1Mib.\",\n      {\n        status: 400\n      }\n    );\n  if (incomingEmailRaw.byteLength > 1024 * 1024)\n    return new Response(\n      \"Email message size is within the production size limit of 25MiB, but exceeds the lower 1Mib limit for testing locally.\",\n      {\n        status: 400\n      }\n    );\n  let parsedIncomingEmail;\n  try {\n    parsedIncomingEmail = await PostalMime.parse(incomingEmailRaw);\n  } catch (e) {\n    let error = e;\n    return new Response(\n      `Email could not be parsed: ${error.name}: ${error.message}`,\n      { status: 400 }\n    );\n  }\n  if (parsedIncomingEmail.messageId === void 0)\n    return new Response(\n      \"Email could not be parsed: invalid or no message id provided\",\n      { status: 400 }\n    );\n  from !== parsedIncomingEmail.from.address && await env[CoreBindings.SERVICE_LOOPBACK].fetch(\n    \"http://localhost/core/log\",\n    {\n      method: \"POST\",\n      headers: { [SharedHeaders.LOG_LEVEL]: LogLevel.WARN.toString() },\n      body: `${yellow(`Provided MAIL FROM address doesn't match the email message's \"From\" header`)}:\n  MAIL FROM: ${from}\n  \"From\" header: ${parsedIncomingEmail.from.address}`\n    }\n  ), parsedIncomingEmail.to?.map((addr) => addr.address).includes(to) || await env[CoreBindings.SERVICE_LOOPBACK].fetch(\n    \"http://localhost/core/log\",\n    {\n      method: \"POST\",\n      headers: { [SharedHeaders.LOG_LEVEL]: LogLevel.WARN.toString() },\n      body: `${yellow(`Provided RCPT TO address doesn't match any \"To\" header in the email message`)}:\n  RCPT TO: ${to}\n  \"To\" header: ${parsedIncomingEmail.to?.map((addr) => addr.address).join(\", \")}`\n    }\n  );\n  let incomingEmailHeaders = new Headers(\n    parsedIncomingEmail.headers.map((header) => [header.key, header.value])\n  ), maybeClientError;\n  return await service.email(\n    // Construct a ForwardableEmailMessage-like object. We need\n    // - ForwardableEmailMessage to be able to be passed across JSRPC (to support e.g. userWorker.email(ForwardableEmailMessage))\n    // - ForwardableEmailMessage properties to be synchronously available (to match production). This rules out a class extending `RpcStub`\n    // However, unlike EmailMessage (see email.worker.ts) it doesn't need to be user-constructable, and so we can just use an object with `satisfies`\n    {\n      from,\n      to,\n      raw: clonedRequest.body,\n      rawSize: incomingEmailRaw.byteLength,\n      headers: incomingEmailHeaders,\n      setReject: (reason) => {\n        ctx.waitUntil(\n          env[CoreBindings.SERVICE_LOOPBACK].fetch(\n            \"http://localhost/core/log\",\n            {\n              method: \"POST\",\n              headers: { [SharedHeaders.LOG_LEVEL]: LogLevel.ERROR.toString() },\n              body: `${red(\"Email handler rejected message\")}${reset(` with the following reason: \"${reason}\"`)}`\n            }\n          )\n        ), maybeClientError = reason;\n      },\n      forward: async (rcptTo, headers) => {\n        await env[CoreBindings.SERVICE_LOOPBACK].fetch(\n          \"http://localhost/core/log\",\n          {\n            method: \"POST\",\n            headers: { [SharedHeaders.LOG_LEVEL]: LogLevel.INFO.toString() },\n            body: `${blue(\"Email handler forwarded message\")}${reset(` with\n  rcptTo: ${rcptTo}${renderEmailHeaders(headers)}`)}`\n          }\n        );\n      },\n      reply: async (replyMessage) => {\n        if (!await isEmailReplyable(\n          parsedIncomingEmail,\n          incomingEmailHeaders,\n          async (msg) => void await env[CoreBindings.SERVICE_LOOPBACK].fetch(\n            \"http://localhost/core/log\",\n            {\n              method: \"POST\",\n              headers: {\n                [SharedHeaders.LOG_LEVEL]: LogLevel.ERROR.toString()\n              },\n              body: msg\n            }\n          )\n        ))\n          throw new Error(\"Original email is not replyable\");\n        let finalReply = await validateReply(\n          parsedIncomingEmail,\n          replyMessage\n        ), file = await (await env[CoreBindings.SERVICE_LOOPBACK].fetch(\n          \"http://localhost/core/store-temp-file?extension=eml&prefix=email\",\n          {\n            method: \"POST\",\n            body: finalReply\n          }\n        )).text();\n        await env[CoreBindings.SERVICE_LOOPBACK].fetch(\n          \"http://localhost/core/log\",\n          {\n            method: \"POST\",\n            headers: { [SharedHeaders.LOG_LEVEL]: LogLevel.INFO.toString() },\n            body: `${blue(\"Email handler replied to sender\")}${reset(` with the following message:\n  ${file}`)}`\n          }\n        );\n      }\n    }\n  ), maybeClientError !== void 0 ? new Response(\n    `Worker rejected email with the following reason: ${maybeClientError}`,\n    { status: 400 }\n  ) : new Response(\"Worker successfully processed email\", {\n    status: 200\n  });\n}\n\n// src/workers/core/http.ts\nvar STATUS_CODES = {\n  100: \"Continue\",\n  101: \"Switching Protocols\",\n  102: \"Processing\",\n  103: \"Early Hints\",\n  200: \"OK\",\n  201: \"Created\",\n  202: \"Accepted\",\n  203: \"Non-Authoritative Information\",\n  204: \"No Content\",\n  205: \"Reset Content\",\n  206: \"Partial Content\",\n  207: \"Multi-Status\",\n  208: \"Already Reported\",\n  226: \"IM Used\",\n  300: \"Multiple Choices\",\n  301: \"Moved Permanently\",\n  302: \"Found\",\n  303: \"See Other\",\n  304: \"Not Modified\",\n  305: \"Use Proxy\",\n  307: \"Temporary Redirect\",\n  308: \"Permanent Redirect\",\n  400: \"Bad Request\",\n  401: \"Unauthorized\",\n  402: \"Payment Required\",\n  403: \"Forbidden\",\n  404: \"Not Found\",\n  405: \"Method Not Allowed\",\n  406: \"Not Acceptable\",\n  407: \"Proxy Authentication Required\",\n  408: \"Request Timeout\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"Length Required\",\n  412: \"Precondition Failed\",\n  413: \"Payload Too Large\",\n  414: \"URI Too Long\",\n  415: \"Unsupported Media Type\",\n  416: \"Range Not Satisfiable\",\n  417: \"Expectation Failed\",\n  418: \"I'm a Teapot\",\n  421: \"Misdirected Request\",\n  422: \"Unprocessable Entity\",\n  423: \"Locked\",\n  424: \"Failed Dependency\",\n  425: \"Too Early\",\n  426: \"Upgrade Required\",\n  428: \"Precondition Required\",\n  429: \"Too Many Requests\",\n  431: \"Request Header Fields Too Large\",\n  451: \"Unavailable For Legal Reasons\",\n  500: \"Internal Server Error\",\n  501: \"Not Implemented\",\n  502: \"Bad Gateway\",\n  503: \"Service Unavailable\",\n  504: \"Gateway Timeout\",\n  505: \"HTTP Version Not Supported\",\n  506: \"Variant Also Negotiates\",\n  507: \"Insufficient Storage\",\n  508: \"Loop Detected\",\n  509: \"Bandwidth Limit Exceeded\",\n  510: \"Not Extended\",\n  511: \"Network Authentication Required\"\n};\n\n// src/workers/core/routing.ts\nfunction matchRoutes(routes, url) {\n  for (let route of routes) {\n    if (route.protocol && route.protocol !== url.protocol) continue;\n    if (route.allowHostnamePrefix) {\n      if (!url.hostname.endsWith(route.hostname)) continue;\n    } else if (url.hostname !== route.hostname) continue;\n    let path = url.pathname + url.search;\n    if (route.allowPathSuffix) {\n      if (!path.startsWith(route.path)) continue;\n    } else if (path !== route.path) continue;\n    return route.target;\n  }\n  return null;\n}\n\n// src/workers/core/scheduled.ts\nasync function handleScheduled(params, service) {\n  let time = params.get(\"time\"), scheduledTime = time ? new Date(parseInt(time)) : void 0, cron = params.get(\"cron\") ?? void 0, result = await service.scheduled({\n    scheduledTime,\n    cron\n  });\n  return new Response(result.outcome, {\n    status: result.outcome === \"ok\" ? 200 : 500\n  });\n}\n\n// src/workers/core/proxy.worker.ts\nimport assert3 from \"node:assert\";\nimport { Buffer as Buffer2 } from \"node:buffer\";\n\n// ../../node_modules/.pnpm/devalue@5.3.2/node_modules/devalue/src/utils.js\nvar DevalueError = class extends Error {\n  /**\n   * @param {string} message\n   * @param {string[]} keys\n   */\n  constructor(message, keys) {\n    super(message), this.name = \"DevalueError\", this.path = keys.join(\"\");\n  }\n};\nfunction is_primitive(thing) {\n  return Object(thing) !== thing;\n}\nvar object_proto_names = /* @__PURE__ */ Object.getOwnPropertyNames(\n  Object.prototype\n).sort().join(\"\\0\");\nfunction is_plain_object(thing) {\n  let proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getPrototypeOf(proto) === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === object_proto_names;\n}\nfunction get_type(thing) {\n  return Object.prototype.toString.call(thing).slice(8, -1);\n}\nfunction get_escaped_char(char) {\n  switch (char) {\n    case '\"':\n      return '\\\\\"';\n    case \"<\":\n      return \"\\\\u003C\";\n    case \"\\\\\":\n      return \"\\\\\\\\\";\n    case `\n`:\n      return \"\\\\n\";\n    case \"\\r\":\n      return \"\\\\r\";\n    case \"\t\":\n      return \"\\\\t\";\n    case \"\\b\":\n      return \"\\\\b\";\n    case \"\\f\":\n      return \"\\\\f\";\n    case \"\\u2028\":\n      return \"\\\\u2028\";\n    case \"\\u2029\":\n      return \"\\\\u2029\";\n    default:\n      return char < \" \" ? `\\\\u${char.charCodeAt(0).toString(16).padStart(4, \"0\")}` : \"\";\n  }\n}\nfunction stringify_string(str) {\n  let result = \"\", last_pos = 0, len = str.length;\n  for (let i = 0; i < len; i += 1) {\n    let char = str[i], replacement = get_escaped_char(char);\n    replacement && (result += str.slice(last_pos, i) + replacement, last_pos = i + 1);\n  }\n  return `\"${last_pos === 0 ? str : result + str.slice(last_pos)}\"`;\n}\nfunction enumerable_symbols(object) {\n  return Object.getOwnPropertySymbols(object).filter(\n    (symbol) => Object.getOwnPropertyDescriptor(object, symbol).enumerable\n  );\n}\nvar is_identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\nfunction stringify_key(key) {\n  return is_identifier.test(key) ? \".\" + key : \"[\" + JSON.stringify(key) + \"]\";\n}\n\n// ../../node_modules/.pnpm/devalue@5.3.2/node_modules/devalue/src/base64.js\nfunction encode64(arraybuffer) {\n  let dv = new DataView(arraybuffer), binaryString = \"\";\n  for (let i = 0; i < arraybuffer.byteLength; i++)\n    binaryString += String.fromCharCode(dv.getUint8(i));\n  return binaryToAscii(binaryString);\n}\nfunction decode64(string) {\n  let binaryString = asciiToBinary(string), arraybuffer = new ArrayBuffer(binaryString.length), dv = new DataView(arraybuffer);\n  for (let i = 0; i < arraybuffer.byteLength; i++)\n    dv.setUint8(i, binaryString.charCodeAt(i));\n  return arraybuffer;\n}\nvar KEY_STRING = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfunction asciiToBinary(data) {\n  data.length % 4 === 0 && (data = data.replace(/==?$/, \"\"));\n  let output = \"\", buffer = 0, accumulatedBits = 0;\n  for (let i = 0; i < data.length; i++)\n    buffer <<= 6, buffer |= KEY_STRING.indexOf(data[i]), accumulatedBits += 6, accumulatedBits === 24 && (output += String.fromCharCode((buffer & 16711680) >> 16), output += String.fromCharCode((buffer & 65280) >> 8), output += String.fromCharCode(buffer & 255), buffer = accumulatedBits = 0);\n  return accumulatedBits === 12 ? (buffer >>= 4, output += String.fromCharCode(buffer)) : accumulatedBits === 18 && (buffer >>= 2, output += String.fromCharCode((buffer & 65280) >> 8), output += String.fromCharCode(buffer & 255)), output;\n}\nfunction binaryToAscii(str) {\n  let out = \"\";\n  for (let i = 0; i < str.length; i += 3) {\n    let groupsOfSix = [void 0, void 0, void 0, void 0];\n    groupsOfSix[0] = str.charCodeAt(i) >> 2, groupsOfSix[1] = (str.charCodeAt(i) & 3) << 4, str.length > i + 1 && (groupsOfSix[1] |= str.charCodeAt(i + 1) >> 4, groupsOfSix[2] = (str.charCodeAt(i + 1) & 15) << 2), str.length > i + 2 && (groupsOfSix[2] |= str.charCodeAt(i + 2) >> 6, groupsOfSix[3] = str.charCodeAt(i + 2) & 63);\n    for (let j = 0; j < groupsOfSix.length; j++)\n      typeof groupsOfSix[j] > \"u\" ? out += \"=\" : out += KEY_STRING[groupsOfSix[j]];\n  }\n  return out;\n}\n\n// ../../node_modules/.pnpm/devalue@5.3.2/node_modules/devalue/src/parse.js\nfunction parse(serialized, revivers) {\n  return unflatten(JSON.parse(serialized), revivers);\n}\nfunction unflatten(parsed, revivers) {\n  if (typeof parsed == \"number\") return hydrate(parsed, !0);\n  if (!Array.isArray(parsed) || parsed.length === 0)\n    throw new Error(\"Invalid input\");\n  let values = (\n    /** @type {any[]} */\n    parsed\n  ), hydrated = Array(values.length);\n  function hydrate(index, standalone = !1) {\n    if (index === -1) return;\n    if (index === -3) return NaN;\n    if (index === -4) return 1 / 0;\n    if (index === -5) return -1 / 0;\n    if (index === -6) return -0;\n    if (standalone || typeof index != \"number\")\n      throw new Error(\"Invalid input\");\n    if (index in hydrated) return hydrated[index];\n    let value = values[index];\n    if (!value || typeof value != \"object\")\n      hydrated[index] = value;\n    else if (Array.isArray(value))\n      if (typeof value[0] == \"string\") {\n        let type = value[0], reviver = revivers?.[type];\n        if (reviver)\n          return hydrated[index] = reviver(hydrate(value[1]));\n        switch (type) {\n          case \"Date\":\n            hydrated[index] = new Date(value[1]);\n            break;\n          case \"Set\":\n            let set = /* @__PURE__ */ new Set();\n            hydrated[index] = set;\n            for (let i = 1; i < value.length; i += 1)\n              set.add(hydrate(value[i]));\n            break;\n          case \"Map\":\n            let map = /* @__PURE__ */ new Map();\n            hydrated[index] = map;\n            for (let i = 1; i < value.length; i += 2)\n              map.set(hydrate(value[i]), hydrate(value[i + 1]));\n            break;\n          case \"RegExp\":\n            hydrated[index] = new RegExp(value[1], value[2]);\n            break;\n          case \"Object\":\n            hydrated[index] = Object(value[1]);\n            break;\n          case \"BigInt\":\n            hydrated[index] = BigInt(value[1]);\n            break;\n          case \"null\":\n            let obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index] = obj;\n            for (let i = 1; i < value.length; i += 2)\n              obj[value[i]] = hydrate(value[i + 1]);\n            break;\n          case \"Int8Array\":\n          case \"Uint8Array\":\n          case \"Uint8ClampedArray\":\n          case \"Int16Array\":\n          case \"Uint16Array\":\n          case \"Int32Array\":\n          case \"Uint32Array\":\n          case \"Float32Array\":\n          case \"Float64Array\":\n          case \"BigInt64Array\":\n          case \"BigUint64Array\": {\n            let TypedArrayConstructor = globalThis[type], typedArray = new TypedArrayConstructor(hydrate(value[1]));\n            hydrated[index] = value[2] !== void 0 ? typedArray.subarray(value[2], value[3]) : typedArray;\n            break;\n          }\n          case \"ArrayBuffer\": {\n            let base64 = value[1], arraybuffer = decode64(base64);\n            hydrated[index] = arraybuffer;\n            break;\n          }\n          case \"Temporal.Duration\":\n          case \"Temporal.Instant\":\n          case \"Temporal.PlainDate\":\n          case \"Temporal.PlainTime\":\n          case \"Temporal.PlainDateTime\":\n          case \"Temporal.PlainMonthDay\":\n          case \"Temporal.PlainYearMonth\":\n          case \"Temporal.ZonedDateTime\": {\n            let temporalName = type.slice(9);\n            hydrated[index] = Temporal[temporalName].from(value[1]);\n            break;\n          }\n          case \"URL\": {\n            let url = new URL(value[1]);\n            hydrated[index] = url;\n            break;\n          }\n          case \"URLSearchParams\": {\n            let url = new URLSearchParams(value[1]);\n            hydrated[index] = url;\n            break;\n          }\n          default:\n            throw new Error(`Unknown type ${type}`);\n        }\n      } else {\n        let array = new Array(value.length);\n        hydrated[index] = array;\n        for (let i = 0; i < value.length; i += 1) {\n          let n = value[i];\n          n !== -2 && (array[i] = hydrate(n));\n        }\n      }\n    else {\n      let object = {};\n      hydrated[index] = object;\n      for (let key in value) {\n        if (key === \"__proto__\")\n          throw new Error(\"Cannot parse an object with a `__proto__` property\");\n        let n = value[key];\n        object[key] = hydrate(n);\n      }\n    }\n    return hydrated[index];\n  }\n  return hydrate(0);\n}\n\n// ../../node_modules/.pnpm/devalue@5.3.2/node_modules/devalue/src/stringify.js\nfunction stringify(value, reducers) {\n  let stringified = [], indexes = /* @__PURE__ */ new Map(), custom = [];\n  if (reducers)\n    for (let key of Object.getOwnPropertyNames(reducers))\n      custom.push({ key, fn: reducers[key] });\n  let keys = [], p = 0;\n  function flatten(thing) {\n    if (typeof thing == \"function\")\n      throw new DevalueError(\"Cannot stringify a function\", keys);\n    if (thing === void 0) return -1;\n    if (Number.isNaN(thing)) return -3;\n    if (thing === 1 / 0) return -4;\n    if (thing === -1 / 0) return -5;\n    if (thing === 0 && 1 / thing < 0) return -6;\n    if (indexes.has(thing)) return indexes.get(thing);\n    let index2 = p++;\n    indexes.set(thing, index2);\n    for (let { key, fn } of custom) {\n      let value2 = fn(thing);\n      if (value2)\n        return stringified[index2] = `[\"${key}\",${flatten(value2)}]`, index2;\n    }\n    let str = \"\";\n    if (is_primitive(thing))\n      str = stringify_primitive(thing);\n    else {\n      let type = get_type(thing);\n      switch (type) {\n        case \"Number\":\n        case \"String\":\n        case \"Boolean\":\n          str = `[\"Object\",${stringify_primitive(thing)}]`;\n          break;\n        case \"BigInt\":\n          str = `[\"BigInt\",${thing}]`;\n          break;\n        case \"Date\":\n          str = `[\"Date\",\"${!isNaN(thing.getDate()) ? thing.toISOString() : \"\"}\"]`;\n          break;\n        case \"URL\":\n          str = `[\"URL\",${stringify_string(thing.toString())}]`;\n          break;\n        case \"URLSearchParams\":\n          str = `[\"URLSearchParams\",${stringify_string(thing.toString())}]`;\n          break;\n        case \"RegExp\":\n          let { source, flags } = thing;\n          str = flags ? `[\"RegExp\",${stringify_string(source)},\"${flags}\"]` : `[\"RegExp\",${stringify_string(source)}]`;\n          break;\n        case \"Array\":\n          str = \"[\";\n          for (let i = 0; i < thing.length; i += 1)\n            i > 0 && (str += \",\"), i in thing ? (keys.push(`[${i}]`), str += flatten(thing[i]), keys.pop()) : str += -2;\n          str += \"]\";\n          break;\n        case \"Set\":\n          str = '[\"Set\"';\n          for (let value2 of thing)\n            str += `,${flatten(value2)}`;\n          str += \"]\";\n          break;\n        case \"Map\":\n          str = '[\"Map\"';\n          for (let [key, value2] of thing)\n            keys.push(\n              `.get(${is_primitive(key) ? stringify_primitive(key) : \"...\"})`\n            ), str += `,${flatten(key)},${flatten(value2)}`, keys.pop();\n          str += \"]\";\n          break;\n        case \"Int8Array\":\n        case \"Uint8Array\":\n        case \"Uint8ClampedArray\":\n        case \"Int16Array\":\n        case \"Uint16Array\":\n        case \"Int32Array\":\n        case \"Uint32Array\":\n        case \"Float32Array\":\n        case \"Float64Array\":\n        case \"BigInt64Array\":\n        case \"BigUint64Array\": {\n          let typedArray = thing;\n          str = '[\"' + type + '\",' + flatten(typedArray.buffer);\n          let a = thing.byteOffset, b = a + thing.byteLength;\n          if (a > 0 || b !== typedArray.buffer.byteLength) {\n            let m = +/(\\d+)/.exec(type)[1] / 8;\n            str += `,${a / m},${b / m}`;\n          }\n          str += \"]\";\n          break;\n        }\n        case \"ArrayBuffer\": {\n          str = `[\"ArrayBuffer\",\"${encode64(thing)}\"]`;\n          break;\n        }\n        case \"Temporal.Duration\":\n        case \"Temporal.Instant\":\n        case \"Temporal.PlainDate\":\n        case \"Temporal.PlainTime\":\n        case \"Temporal.PlainDateTime\":\n        case \"Temporal.PlainMonthDay\":\n        case \"Temporal.PlainYearMonth\":\n        case \"Temporal.ZonedDateTime\":\n          str = `[\"${type}\",${stringify_string(thing.toString())}]`;\n          break;\n        default:\n          if (!is_plain_object(thing))\n            throw new DevalueError(\n              \"Cannot stringify arbitrary non-POJOs\",\n              keys\n            );\n          if (enumerable_symbols(thing).length > 0)\n            throw new DevalueError(\n              \"Cannot stringify POJOs with symbolic keys\",\n              keys\n            );\n          if (Object.getPrototypeOf(thing) === null) {\n            str = '[\"null\"';\n            for (let key in thing)\n              keys.push(stringify_key(key)), str += `,${stringify_string(key)},${flatten(thing[key])}`, keys.pop();\n            str += \"]\";\n          } else {\n            str = \"{\";\n            let started = !1;\n            for (let key in thing)\n              started && (str += \",\"), started = !0, keys.push(stringify_key(key)), str += `${stringify_string(key)}:${flatten(thing[key])}`, keys.pop();\n            str += \"}\";\n          }\n      }\n    }\n    return stringified[index2] = str, index2;\n  }\n  let index = flatten(value);\n  return index < 0 ? `${index}` : `[${stringified.join(\",\")}]`;\n}\nfunction stringify_primitive(thing) {\n  let type = typeof thing;\n  return type === \"string\" ? stringify_string(thing) : thing instanceof String ? stringify_string(thing.toString()) : thing === void 0 ? (-1).toString() : thing === 0 && 1 / thing < 0 ? (-6).toString() : type === \"bigint\" ? `[\"BigInt\",\"${thing}\"]` : String(thing);\n}\n\n// src/workers/core/proxy.worker.ts\nimport { readPrefix, reduceError } from \"miniflare:shared\";\n\n// src/workers/core/devalue.ts\nimport assert2 from \"node:assert\";\nimport { Buffer } from \"node:buffer\";\nvar ALLOWED_ARRAY_BUFFER_VIEW_CONSTRUCTORS = [\n  DataView,\n  Int8Array,\n  Uint8Array,\n  Uint8ClampedArray,\n  Int16Array,\n  Uint16Array,\n  Int32Array,\n  Uint32Array,\n  Float32Array,\n  Float64Array,\n  BigInt64Array,\n  BigUint64Array\n], ALLOWED_ERROR_CONSTRUCTORS = [\n  EvalError,\n  RangeError,\n  ReferenceError,\n  SyntaxError,\n  TypeError,\n  URIError,\n  Error\n  // `Error` last so more specific error subclasses preferred\n], structuredSerializableReducers = {\n  ArrayBuffer(value) {\n    if (value instanceof ArrayBuffer)\n      return [Buffer.from(value).toString(\"base64\")];\n  },\n  ArrayBufferView(value) {\n    if (ArrayBuffer.isView(value))\n      return [\n        value.constructor.name,\n        value.buffer,\n        value.byteOffset,\n        value.byteLength\n      ];\n  },\n  RegExp(value) {\n    if (value instanceof RegExp) {\n      let { source, flags } = value, encoded = Buffer.from(source).toString(\"base64\");\n      return flags ? [\"RegExp\", encoded, flags] : [\"RegExp\", encoded];\n    }\n  },\n  Error(value) {\n    for (let ctor of ALLOWED_ERROR_CONSTRUCTORS)\n      if (value instanceof ctor && value.name === ctor.name)\n        return [value.name, value.message, value.stack, value.cause];\n    if (value instanceof Error)\n      return [\"Error\", value.message, value.stack, value.cause];\n  }\n}, structuredSerializableRevivers = {\n  ArrayBuffer(value) {\n    assert2(Array.isArray(value));\n    let [encoded] = value;\n    assert2(typeof encoded == \"string\");\n    let view = Buffer.from(encoded, \"base64\");\n    return view.buffer.slice(\n      view.byteOffset,\n      view.byteOffset + view.byteLength\n    );\n  },\n  ArrayBufferView(value) {\n    assert2(Array.isArray(value));\n    let [name, buffer, byteOffset, byteLength] = value;\n    assert2(typeof name == \"string\"), assert2(buffer instanceof ArrayBuffer), assert2(typeof byteOffset == \"number\"), assert2(typeof byteLength == \"number\");\n    let ctor = globalThis[name];\n    assert2(ALLOWED_ARRAY_BUFFER_VIEW_CONSTRUCTORS.includes(ctor));\n    let length = byteLength;\n    return \"BYTES_PER_ELEMENT\" in ctor && (length /= ctor.BYTES_PER_ELEMENT), new ctor(buffer, byteOffset, length);\n  },\n  RegExp(value) {\n    assert2(Array.isArray(value));\n    let [name, encoded, flags] = value;\n    assert2(typeof name == \"string\"), assert2(typeof encoded == \"string\");\n    let source = Buffer.from(encoded, \"base64\").toString(\"utf-8\");\n    return new RegExp(source, flags);\n  },\n  Error(value) {\n    assert2(Array.isArray(value));\n    let [name, message, stack, cause] = value;\n    assert2(typeof name == \"string\"), assert2(typeof message == \"string\"), assert2(stack === void 0 || typeof stack == \"string\");\n    let ctor = globalThis[name];\n    assert2(ALLOWED_ERROR_CONSTRUCTORS.includes(ctor));\n    let error = new ctor(message, { cause });\n    return error.stack = stack, error;\n  }\n};\nfunction createHTTPReducers(impl) {\n  return {\n    Headers(val) {\n      if (val instanceof impl.Headers) return [...val.entries()];\n    },\n    Request(val) {\n      if (val instanceof impl.Request)\n        return [val.method, val.url, val.headers, val.cf, val.body];\n    },\n    Response(val) {\n      if (val instanceof impl.Response)\n        return [val.status, val.statusText, val.headers, val.cf, val.body];\n    }\n  };\n}\nfunction createHTTPRevivers(impl) {\n  return {\n    Headers(value) {\n      return assert2(typeof value == \"object\" && value !== null), new impl.Headers(value);\n    },\n    Request(value) {\n      assert2(Array.isArray(value));\n      let [method, url, headers, cf, body] = value;\n      return assert2(typeof method == \"string\"), assert2(typeof url == \"string\"), assert2(headers instanceof impl.Headers), assert2(body === null || impl.isReadableStream(body)), new impl.Request(url, {\n        method,\n        headers,\n        cf,\n        // @ts-expect-error `duplex` is not required by `workerd` yet\n        duplex: body === null ? void 0 : \"half\",\n        body\n      });\n    },\n    Response(value) {\n      assert2(Array.isArray(value));\n      let [status, statusText, headers, cf, body] = value;\n      return assert2(typeof status == \"number\"), assert2(typeof statusText == \"string\"), assert2(headers instanceof impl.Headers), assert2(body === null || impl.isReadableStream(body)), new impl.Response(body, {\n        status,\n        statusText,\n        headers,\n        cf\n      });\n    }\n  };\n}\nfunction stringifyWithStreams(impl, value, reducers, allowUnbufferedStream) {\n  let unbufferedStream, bufferPromises = [], streamReducers = {\n    ReadableStream(value2) {\n      if (impl.isReadableStream(value2))\n        return allowUnbufferedStream && unbufferedStream === void 0 ? unbufferedStream = value2 : bufferPromises.push(impl.bufferReadableStream(value2)), !0;\n    },\n    Blob(value2) {\n      if (value2 instanceof impl.Blob)\n        return bufferPromises.push(value2.arrayBuffer()), !0;\n    },\n    ...reducers\n  };\n  typeof value == \"function\" && (value = new __MiniflareFunctionWrapper(\n    value\n  ));\n  let stringifiedValue = stringify(value, streamReducers);\n  return bufferPromises.length === 0 ? { value: stringifiedValue, unbufferedStream } : Promise.all(bufferPromises).then((streamBuffers) => (streamReducers.ReadableStream = function(value2) {\n    if (impl.isReadableStream(value2))\n      return value2 === unbufferedStream ? !0 : streamBuffers.shift();\n  }, streamReducers.Blob = function(value2) {\n    if (value2 instanceof impl.Blob) {\n      let array = [streamBuffers.shift(), value2.type];\n      return value2 instanceof impl.File && array.push(value2.name, value2.lastModified), array;\n    }\n  }, { value: stringify(value, streamReducers), unbufferedStream }));\n}\nvar __MiniflareFunctionWrapper = class {\n  constructor(fnWithProps) {\n    return new Proxy(this, {\n      get: (_, key) => key === \"__miniflareWrappedFunction\" ? fnWithProps : fnWithProps[key]\n    });\n  }\n};\nfunction parseWithReadableStreams(impl, stringified, revivers) {\n  let streamRevivers = {\n    ReadableStream(value) {\n      return value === !0 ? (assert2(stringified.unbufferedStream !== void 0), stringified.unbufferedStream) : (assert2(value instanceof ArrayBuffer), impl.unbufferReadableStream(value));\n    },\n    Blob(value) {\n      if (assert2(Array.isArray(value)), value.length === 2) {\n        let [buffer, type] = value;\n        assert2(buffer instanceof ArrayBuffer), assert2(typeof type == \"string\");\n        let opts = {};\n        return type !== \"\" && (opts.type = type), new impl.Blob([buffer], opts);\n      } else {\n        assert2(value.length === 4);\n        let [buffer, type, name, lastModified] = value;\n        assert2(buffer instanceof ArrayBuffer), assert2(typeof type == \"string\"), assert2(typeof name == \"string\"), assert2(typeof lastModified == \"number\");\n        let opts = { lastModified };\n        return type !== \"\" && (opts.type = type), new impl.File([buffer], name, opts);\n      }\n    },\n    ...revivers\n  };\n  return parse(stringified.value, streamRevivers);\n}\n\n// src/workers/core/proxy.worker.ts\nvar ENCODER = new TextEncoder(), DECODER = new TextDecoder(), ALLOWED_HOSTNAMES = [\"127.0.0.1\", \"[::1]\", \"localhost\"], WORKERS_PLATFORM_IMPL = {\n  Blob,\n  File,\n  Headers,\n  Request,\n  Response,\n  isReadableStream(value) {\n    return value instanceof ReadableStream;\n  },\n  bufferReadableStream(stream) {\n    return new Response(stream).arrayBuffer();\n  },\n  unbufferReadableStream(buffer) {\n    let body = new Response(buffer).body;\n    return assert3(body !== null), body;\n  }\n}, objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(value) {\n  let proto = Object.getPrototypeOf(value);\n  return value?.constructor?.name === \"RpcStub\" || isObject(value) && objectContainsFunctions(value) ? !1 : proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\nfunction objectContainsFunctions(obj) {\n  let propertyNames = Object.getOwnPropertyNames(obj), propertySymbols = Object.getOwnPropertySymbols(obj), properties = [...propertyNames, ...propertySymbols];\n  for (let property of properties) {\n    let entry = obj[property];\n    if (typeof entry == \"function\" || isObject(entry) && objectContainsFunctions(entry))\n      return !0;\n  }\n  return !1;\n}\nfunction isObject(value) {\n  return !!value && typeof value == \"object\";\n}\nfunction getType(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n}\nfunction isInternal(value) {\n  return isObject(value) && value[Symbol.for(\"cloudflare:internal-class\")];\n}\nvar ProxyServer = class {\n  constructor(_state, env) {\n    this.env = env;\n    this.heap.set(ProxyAddresses.GLOBAL, globalThis), this.heap.set(ProxyAddresses.ENV, env);\n  }\n  nextHeapAddress = ProxyAddresses.USER_START;\n  heap = /* @__PURE__ */ new Map();\n  reducers = {\n    ...structuredSerializableReducers,\n    ...createHTTPReducers(WORKERS_PLATFORM_IMPL),\n    // Corresponding revivers in `ProxyClient`\n    // `Native` reducer *MUST* be applied last\n    Native: (value) => {\n      let type = getType(value);\n      if ((type === \"Object\" || isInternal(value)) && !isPlainObject(value) || type === \"Promise\") {\n        let address = this.nextHeapAddress++;\n        this.heap.set(address, value), assert3(value !== null);\n        let name = value?.constructor.name, isFunction = value instanceof __MiniflareFunctionWrapper;\n        return [address, name, isFunction];\n      }\n    }\n  };\n  revivers = {\n    ...structuredSerializableRevivers,\n    ...createHTTPRevivers(WORKERS_PLATFORM_IMPL),\n    // Corresponding reducers in `ProxyClient`\n    Native: (value) => {\n      assert3(Array.isArray(value));\n      let [address] = value;\n      assert3(typeof address == \"number\");\n      let heapValue = this.heap.get(address);\n      return assert3(heapValue !== void 0), heapValue instanceof Promise && this.heap.delete(address), heapValue;\n    }\n  };\n  nativeReviver = { Native: this.revivers.Native };\n  async fetch(request) {\n    try {\n      return await this.#fetch(request);\n    } catch (e) {\n      let error = reduceError(e);\n      return Response.json(error, {\n        status: 500,\n        headers: { [CoreHeaders.ERROR_STACK]: \"true\" }\n      });\n    }\n  }\n  async #fetch(request) {\n    let hostHeader = request.headers.get(\"Host\");\n    if (hostHeader == null) return new Response(null, { status: 400 });\n    try {\n      let host = new URL(`http://${hostHeader}`);\n      if (!ALLOWED_HOSTNAMES.includes(host.hostname))\n        return new Response(null, { status: 401 });\n    } catch {\n      return new Response(null, { status: 400 });\n    }\n    let secretHex = request.headers.get(CoreHeaders.OP_SECRET);\n    if (secretHex == null) return new Response(null, { status: 401 });\n    let expectedSecret = this.env[CoreBindings.DATA_PROXY_SECRET], secretBuffer = Buffer2.from(secretHex, \"hex\");\n    if (secretBuffer.byteLength !== expectedSecret.byteLength || !crypto.subtle.timingSafeEqual(secretBuffer, expectedSecret))\n      return new Response(null, { status: 401 });\n    let opHeader = request.headers.get(CoreHeaders.OP), targetHeader = request.headers.get(CoreHeaders.OP_TARGET), keyHeader = request.headers.get(CoreHeaders.OP_KEY), allowAsync = request.headers.get(CoreHeaders.OP_SYNC) === null, argsSizeHeader = request.headers.get(CoreHeaders.OP_STRINGIFIED_SIZE), contentLengthHeader = request.headers.get(\"Content-Length\");\n    if (targetHeader === null) return new Response(null, { status: 400 });\n    if (opHeader === ProxyOps.FREE) {\n      for (let targetValue of targetHeader.split(\",\")) {\n        let targetAddress = parseInt(targetValue);\n        assert3(!Number.isNaN(targetAddress)), this.heap.delete(targetAddress);\n      }\n      return new Response(null, { status: 204 });\n    }\n    let target = parse(\n      targetHeader,\n      this.nativeReviver\n    ), targetName = target.constructor.name, status = 200, result, unbufferedRest;\n    if (opHeader === ProxyOps.GET) {\n      if (result = keyHeader === null ? target : target[keyHeader], result?.constructor.name === \"RpcProperty\" && (result = await result), typeof result == \"function\")\n        return new Response(null, {\n          status: 204,\n          headers: { [CoreHeaders.OP_RESULT_TYPE]: \"Function\" }\n        });\n    } else if (opHeader === ProxyOps.GET_OWN_DESCRIPTOR) {\n      if (keyHeader === null) return new Response(null, { status: 400 });\n      let descriptor = Object.getOwnPropertyDescriptor(target, keyHeader);\n      descriptor !== void 0 && (result = {\n        configurable: descriptor.configurable,\n        enumerable: descriptor.enumerable,\n        writable: descriptor.writable\n      });\n    } else if (opHeader === ProxyOps.GET_OWN_KEYS)\n      result = Object.getOwnPropertyNames(target);\n    else if (opHeader === ProxyOps.CALL) {\n      assert3(keyHeader !== null);\n      let func = target[keyHeader];\n      if (assert3(typeof func == \"function\"), isFetcherFetch(targetName, keyHeader)) {\n        let originalUrl = request.headers.get(CoreHeaders.ORIGINAL_URL), url = new URL(originalUrl ?? request.url);\n        return request = new Request(url, request), request.headers.delete(CoreHeaders.OP_SECRET), request.headers.delete(CoreHeaders.OP), request.headers.delete(CoreHeaders.OP_TARGET), request.headers.delete(CoreHeaders.OP_KEY), request.headers.delete(CoreHeaders.ORIGINAL_URL), request.headers.delete(CoreHeaders.DISABLE_PRETTY_ERROR), func.call(target, request);\n      }\n      let args;\n      if (argsSizeHeader === null || argsSizeHeader === contentLengthHeader)\n        args = parseWithReadableStreams(\n          WORKERS_PLATFORM_IMPL,\n          { value: await request.text() },\n          this.revivers\n        );\n      else {\n        let argsSize = parseInt(argsSizeHeader);\n        assert3(!Number.isNaN(argsSize)), assert3(request.body !== null);\n        let [encodedArgs, rest] = await readPrefix(request.body, argsSize);\n        unbufferedRest = rest;\n        let stringifiedArgs = DECODER.decode(encodedArgs);\n        args = parseWithReadableStreams(\n          WORKERS_PLATFORM_IMPL,\n          { value: stringifiedArgs, unbufferedStream: rest },\n          this.revivers\n        );\n      }\n      assert3(Array.isArray(args));\n      try {\n        if (isImagesInput(targetName, keyHeader)) {\n          let transform = func.apply(target, [args[0]]);\n          for (let operation of args[1])\n            transform = transform[operation.type](...operation.arguments);\n          result = transform.output(args[2]);\n        } else [\"RpcProperty\", \"RpcStub\"].includes(func.constructor.name) ? result = await func(...args) : result = func.apply(target, args);\n        isR2ObjectWriteHttpMetadata(targetName, keyHeader) && (result = args[0]);\n      } catch (e) {\n        status = 500, result = e;\n      }\n    } else\n      return new Response(null, { status: 404 });\n    let headers = new Headers();\n    if (allowAsync && result instanceof Promise) {\n      try {\n        result = await result;\n      } catch (e) {\n        status = 500, result = e;\n      }\n      headers.append(CoreHeaders.OP_RESULT_TYPE, \"Promise\");\n    }\n    if (unbufferedRest !== void 0 && !unbufferedRest.locked)\n      try {\n        await unbufferedRest.pipeTo(new WritableStream());\n      } catch {\n      }\n    if (result instanceof ReadableStream)\n      return headers.append(CoreHeaders.OP_RESULT_TYPE, \"ReadableStream\"), new Response(result, { status, headers });\n    {\n      let stringified = await stringifyWithStreams(\n        WORKERS_PLATFORM_IMPL,\n        result,\n        this.reducers,\n        /* allowUnbufferedStream */\n        allowAsync\n      );\n      if (stringified.unbufferedStream === void 0)\n        return new Response(stringified.value, { status, headers });\n      {\n        let body = new IdentityTransformStream(), encodedValue = ENCODER.encode(stringified.value), encodedSize = encodedValue.byteLength.toString();\n        return headers.set(CoreHeaders.OP_STRINGIFIED_SIZE, encodedSize), this.#writeWithUnbufferedStream(\n          body.writable,\n          encodedValue,\n          stringified.unbufferedStream\n        ), new Response(body.readable, { status, headers });\n      }\n    }\n  }\n  async #writeWithUnbufferedStream(writable, encodedValue, unbufferedStream) {\n    let writer = writable.getWriter();\n    await writer.write(encodedValue), writer.releaseLock(), await unbufferedStream.pipeTo(writable);\n  }\n};\n\n// src/workers/core/entry.worker.ts\nvar encoder = new TextEncoder();\nfunction getUserRequest(request, env, clientIp) {\n  let originalUrl = request.headers.get(CoreHeaders.ORIGINAL_URL), url = new URL(originalUrl ?? request.url), rewriteHeadersFromOriginalUrl = !1, proxySharedSecret = request.headers.get(\n    CoreHeaders.PROXY_SHARED_SECRET\n  );\n  if (proxySharedSecret) {\n    let secretFromHeader = encoder.encode(proxySharedSecret), configuredSecret = env[CoreBindings.DATA_PROXY_SHARED_SECRET];\n    if (secretFromHeader.byteLength === configuredSecret?.byteLength && crypto.subtle.timingSafeEqual(secretFromHeader, configuredSecret))\n      rewriteHeadersFromOriginalUrl = !0;\n    else\n      throw new HttpError(\n        400,\n        `Disallowed header in request: ${CoreHeaders.PROXY_SHARED_SECRET}=${proxySharedSecret}`\n      );\n  }\n  let upstreamUrl = env[CoreBindings.TEXT_UPSTREAM_URL];\n  if (upstreamUrl !== void 0) {\n    let path = url.pathname + url.search;\n    path.startsWith(\"/\") && (path = `./${path.substring(1)}`), url = new URL(path, upstreamUrl), rewriteHeadersFromOriginalUrl = !0;\n  }\n  request = new Request(url, request), request.headers.set(\"Accept-Encoding\", \"br, gzip\");\n  let secFetchMode = request.headers.get(\"X-Mf-Sec-Fetch-Mode\");\n  if (secFetchMode && request.headers.set(\"Sec-Fetch-Mode\", secFetchMode), request.headers.delete(\"X-Mf-Sec-Fetch-Mode\"), rewriteHeadersFromOriginalUrl && request.headers.set(\"Host\", url.host), clientIp && !request.headers.get(\"CF-Connecting-IP\")) {\n    let ipv4Regex = /(?<ip>.*?):\\d+/, ipv6Regex = /\\[(?<ip>.*?)\\]:\\d+/, ip = clientIp.match(ipv6Regex)?.groups?.ip ?? clientIp.match(ipv4Regex)?.groups?.ip;\n    ip && request.headers.set(\"CF-Connecting-IP\", ip);\n  }\n  return request.headers.delete(CoreHeaders.PROXY_SHARED_SECRET), request.headers.delete(CoreHeaders.ORIGINAL_URL), env[CoreBindings.STRIP_DISABLE_PRETTY_ERROR] && request.headers.delete(CoreHeaders.DISABLE_PRETTY_ERROR), request;\n}\nfunction getTargetService(request, url, env) {\n  let service = env[CoreBindings.SERVICE_USER_FALLBACK], override = request.headers.get(CoreHeaders.ROUTE_OVERRIDE);\n  request.headers.delete(CoreHeaders.ROUTE_OVERRIDE);\n  let route = override ?? matchRoutes(env[CoreBindings.JSON_ROUTES], url);\n  return route !== null && (service = env[`${CoreBindings.SERVICE_USER_ROUTE_PREFIX}${route}`]), service;\n}\nfunction maybePrettifyError(request, response, env) {\n  return response.status !== 500 || response.headers.get(CoreHeaders.ERROR_STACK) === null ? response : env[CoreBindings.SERVICE_LOOPBACK].fetch(\n    \"http://localhost/core/error\",\n    {\n      method: \"POST\",\n      headers: request.headers,\n      body: response.body,\n      cf: { prettyErrorOriginalUrl: request.url }\n    }\n  );\n}\nfunction maybeInjectLiveReload(response, env, ctx) {\n  let liveReloadScript = env[CoreBindings.DATA_LIVE_RELOAD_SCRIPT];\n  if (liveReloadScript === void 0 || !response.headers.get(\"Content-Type\")?.toLowerCase().includes(\"text/html\"))\n    return response;\n  let headers = new Headers(response.headers), contentLength = parseInt(headers.get(\"content-length\"));\n  isNaN(contentLength) || headers.set(\n    \"content-length\",\n    String(contentLength + liveReloadScript.byteLength)\n  );\n  let { readable, writable } = new IdentityTransformStream();\n  return ctx.waitUntil(\n    (async () => {\n      await response.body?.pipeTo(writable, { preventClose: !0 });\n      let writer = writable.getWriter();\n      await writer.write(liveReloadScript), await writer.close();\n    })()\n  ), new Response(readable, {\n    status: response.status,\n    statusText: response.statusText,\n    headers\n  });\n}\nvar acceptEncodingElement = /^(?<coding>[a-z]+|\\*)(?:\\s*;\\s*q=(?<weight>\\d+(?:.\\d+)?))?$/;\nfunction maybeParseAcceptEncodingElement(element) {\n  let match = acceptEncodingElement.exec(element);\n  if (match?.groups != null)\n    return {\n      coding: match.groups.coding,\n      weight: match.groups.weight === void 0 ? 1 : parseFloat(match.groups.weight)\n    };\n}\nfunction parseAcceptEncoding(header) {\n  let encodings = [];\n  for (let element of header.split(\",\")) {\n    let maybeEncoding = maybeParseAcceptEncodingElement(element.trim());\n    maybeEncoding !== void 0 && encodings.push(maybeEncoding);\n  }\n  return encodings.sort((a, b) => b.weight - a.weight);\n}\nfunction ensureAcceptableEncoding(clientAcceptEncoding, response) {\n  if (clientAcceptEncoding === null) return response;\n  let encodings = parseAcceptEncoding(clientAcceptEncoding);\n  if (encodings.length === 0) return response;\n  let contentEncoding = response.headers.get(\"Content-Encoding\"), contentType = response.headers.get(\"Content-Type\");\n  if (!isCompressedByCloudflareFL(contentType) || contentEncoding !== null && contentEncoding !== \"gzip\" && contentEncoding !== \"br\")\n    return response;\n  let desiredEncoding, identityDisallowed = !1;\n  for (let encoding of encodings)\n    if (encoding.weight === 0)\n      (encoding.coding === \"identity\" || encoding.coding === \"*\") && (identityDisallowed = !0);\n    else if (encoding.coding === \"gzip\" || encoding.coding === \"br\") {\n      desiredEncoding = encoding.coding;\n      break;\n    } else if (encoding.coding === \"identity\")\n      break;\n  return desiredEncoding === void 0 ? identityDisallowed ? new Response(\"Unsupported Media Type\", {\n    status: 415,\n    headers: { \"Accept-Encoding\": \"br, gzip\" }\n  }) : (contentEncoding === null || (response = new Response(response.body, response), response.headers.delete(\"Content-Encoding\")), response) : (contentEncoding === desiredEncoding || (response = new Response(response.body, response), response.headers.set(\"Content-Encoding\", desiredEncoding)), response);\n}\nfunction colourFromHTTPStatus(status) {\n  return 200 <= status && status < 300 ? green : 400 <= status && status < 500 ? yellow : 500 <= status ? red : blue;\n}\nvar ADDITIONAL_RESPONSE_LOG_HEADER_NAME = \"X-Mf-Additional-Response-Log\";\nfunction maybeLogRequest(req, res, env, ctx, startTime) {\n  res = new Response(res.body, res);\n  let additionalResponseLog = res.headers.get(\n    ADDITIONAL_RESPONSE_LOG_HEADER_NAME\n  );\n  if (res.headers.delete(ADDITIONAL_RESPONSE_LOG_HEADER_NAME), env[CoreBindings.JSON_LOG_LEVEL] < LogLevel2.INFO) return res;\n  let url = new URL(req.url), statusText = (res.statusText.trim() || STATUS_CODES[res.status]) ?? \"\", lines = [\n    `${bold(req.method)} ${url.pathname} `,\n    colourFromHTTPStatus(res.status)(`${bold(res.status)} ${statusText} `),\n    grey(`(${Date.now() - startTime}ms)`)\n  ];\n  additionalResponseLog && lines.push(` ${grey(additionalResponseLog)}`);\n  let message = reset(lines.join(\"\"));\n  return ctx.waitUntil(\n    env[CoreBindings.SERVICE_LOOPBACK].fetch(\"http://localhost/core/log\", {\n      method: \"POST\",\n      headers: { [SharedHeaders2.LOG_LEVEL]: LogLevel2.INFO.toString() },\n      body: message\n    })\n  ), res;\n}\nfunction handleProxy(request, env) {\n  let ns = env[CoreBindings.DURABLE_OBJECT_NAMESPACE_PROXY], id = ns.idFromName(\"\");\n  return ns.get(id).fetch(request);\n}\nvar entry_worker_default = {\n  async fetch(request, env, ctx) {\n    let startTime = Date.now(), clientIp = request.cf?.clientIp, clientCfBlobHeader = request.headers.get(CoreHeaders.CF_BLOB), cf = clientCfBlobHeader ? JSON.parse(clientCfBlobHeader) : {\n      ...env[CoreBindings.JSON_CF_BLOB],\n      // Defaulting to empty string to preserve undefined `Accept-Encoding`\n      // through Wrangler's proxy worker.\n      clientAcceptEncoding: request.headers.get(\"Accept-Encoding\") ?? \"\"\n    };\n    if (request = new Request(request, { cf }), request.headers.get(CoreHeaders.OP) !== null) return handleProxy(request, env);\n    let disablePrettyErrorPage = request.headers.get(CoreHeaders.DISABLE_PRETTY_ERROR) !== null, clientAcceptEncoding = request.headers.get(\"Accept-Encoding\");\n    try {\n      request = getUserRequest(request, env, clientIp);\n    } catch (e) {\n      if (e instanceof HttpError)\n        return e.toResponse();\n      throw e;\n    }\n    let url = new URL(request.url), service = getTargetService(request, url, env);\n    if (service === void 0)\n      return new Response(\"No entrypoint worker found\", { status: 404 });\n    try {\n      if (env[CoreBindings.TRIGGER_HANDLERS]) {\n        if (url.pathname === \"/cdn-cgi/handler/scheduled\" || /* legacy URL path */\n        url.pathname === \"/cdn-cgi/mf/scheduled\")\n          return url.pathname === \"/cdn-cgi/mf/scheduled\" && ctx.waitUntil(\n            env[CoreBindings.SERVICE_LOOPBACK].fetch(\n              \"http://localhost/core/log\",\n              {\n                method: \"POST\",\n                headers: {\n                  [SharedHeaders2.LOG_LEVEL]: LogLevel2.WARN.toString()\n                },\n                body: \"Triggering scheduled handlers via a request to `/cdn-cgi/mf/scheduled` is deprecated, and will be removed in a future version of Miniflare. Instead, send a request to `/cdn-cgi/handler/scheduled`\"\n              }\n            )\n          ), await handleScheduled(url.searchParams, service);\n        if (url.pathname === \"/cdn-cgi/handler/email\")\n          return await handleEmail(\n            url.searchParams,\n            request,\n            service,\n            env,\n            ctx\n          );\n        if (url.pathname.startsWith(\"/cdn-cgi/handler/\"))\n          return new Response(\n            `\"${url.pathname}\" is not a valid handler. Did you mean to use \"/cdn-cgi/handler/scheduled\" or \"/cdn-cgi/handler/email\"?`,\n            { status: 404 }\n          );\n      }\n      let response = await service.fetch(request);\n      return disablePrettyErrorPage || (response = await maybePrettifyError(request, response, env)), response = maybeInjectLiveReload(response, env, ctx), response = ensureAcceptableEncoding(clientAcceptEncoding, response), env[CoreBindings.LOG_REQUESTS] && (response = maybeLogRequest(request, response, env, ctx, startTime)), response;\n    } catch (e) {\n      return new Response(e?.stack ?? String(e), { status: 500 });\n    }\n  }\n};\nexport {\n  ProxyServer,\n  entry_worker_default as default\n};\n//# sourceMappingURL=entry.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/core/entry.worker.js"
          }
        ],
        "compatibilityDate": "2025-03-17",
        "compatibilityFlags": [
          "nodejs_compat",
          "service_binding_extra_handlers"
        ],
        "bindings": [
          {
            "name": "MINIFLARE_LOOPBACK",
            "service": {
              "name": "loopback"
            }
          },
          {
            "name": "MINIFLARE_ROUTES",
            "json": "[]"
          },
          {
            "name": "TRIGGER_HANDLERS",
            "json": "false"
          },
          {
            "name": "LOG_REQUESTS",
            "json": "true"
          },
          {
            "name": "CF_BLOB",
            "json": "{\"asOrganization\":\"\",\"asn\":395747,\"colo\":\"DFW\",\"city\":\"Austin\",\"region\":\"Texas\",\"regionCode\":\"TX\",\"metroCode\":\"635\",\"postalCode\":\"78701\",\"country\":\"US\",\"continent\":\"NA\",\"timezone\":\"America/Chicago\",\"latitude\":\"30.27130\",\"longitude\":\"-97.74260\",\"clientTcpRtt\":0,\"httpProtocol\":\"HTTP/1.1\",\"requestPriority\":\"weight=192;exclusive=0\",\"tlsCipher\":\"AEAD-AES128-GCM-SHA256\",\"tlsVersion\":\"TLSv1.3\",\"tlsClientAuth\":{\"certPresented\":\"0\",\"certVerified\":\"NONE\",\"certRevoked\":\"0\",\"certIssuerDN\":\"\",\"certSubjectDN\":\"\",\"certIssuerDNRFC2253\":\"\",\"certSubjectDNRFC2253\":\"\",\"certIssuerDNLegacy\":\"\",\"certSubjectDNLegacy\":\"\",\"certSerial\":\"\",\"certIssuerSerial\":\"\",\"certSKI\":\"\",\"certIssuerSKI\":\"\",\"certFingerprintSHA1\":\"\",\"certFingerprintSHA256\":\"\",\"certNotBefore\":\"\",\"certNotAfter\":\"\"},\"edgeRequestKeepAliveStatus\":0,\"clientTrustScore\":99,\"botManagement\":{\"corporateProxy\":false,\"verifiedBot\":false,\"ja3Hash\":\"25b4882c2bcb50cd6b469ff28c596742\",\"staticResource\":false,\"detectionIds\":[],\"score\":99}}"
          },
          {
            "name": "MINIFLARE_LOG_LEVEL",
            "json": "2"
          },
          {
            "name": "MINIFLARE_USER_FALLBACK",
            "service": {
              "name": "core:user:vitest-pool-workers-runner-web-assembly"
            }
          },
          {
            "name": "MINIFLARE_USER_ROUTE_vitest-pool-workers-runner-web-assembly",
            "service": {
              "name": "core:user:vitest-pool-workers-runner-web-assembly"
            }
          },
          {
            "name": "MINIFLARE_USER_ROUTE_vitest-pool-workers-abort-all",
            "service": {
              "name": "core:user:vitest-pool-workers-abort-all"
            }
          },
          {
            "name": "MINIFLARE_PROXY",
            "durableObjectNamespace": {
              "className": "ProxyServer"
            }
          },
          {
            "name": "MINIFLARE_PROXY_SECRET",
            "data": {
              "type": "Buffer",
              "data": [
                53,
                183,
                238,
                22,
                110,
                156,
                56,
                81,
                189,
                81,
                174,
                123,
                241,
                197,
                164,
                68
              ]
            }
          },
          {
            "name": "STRIP_DISABLE_PRETTY_ERROR",
            "json": "true"
          },
          {
            "name": "MINIFLARE_PROXY:core:vitest-pool-workers-runner-web-assembly:__VITEST_POOL_WORKERS_SELF_SERVICE",
            "service": {
              "name": "core:user:vitest-pool-workers-runner-web-assembly"
            }
          },
          {
            "name": "MINIFLARE_PROXY:core:vitest-pool-workers-runner-web-assembly:__VITEST_POOL_WORKERS_LOOPBACK_SERVICE",
            "service": {
              "name": "core:custom-fetch:0:#__VITEST_POOL_WORKERS_LOOPBACK_SERVICE"
            }
          },
          {
            "name": "MINIFLARE_PROXY:core:vitest-pool-workers-runner-web-assembly:__VITEST_POOL_WORKERS_UNSAFE_EVAL"
          },
          {
            "name": "MINIFLARE_PROXY:do:vitest-pool-workers-runner-web-assembly:__VITEST_POOL_WORKERS_RUNNER_OBJECT",
            "durableObjectNamespace": {
              "className": "RunnerObject",
              "serviceName": "core:user:vitest-pool-workers-runner-web-assembly"
            }
          },
          {
            "name": "MINIFLARE_PROXY:core-internal:core:user:vitest-pool-workers-runner-web-assembly:RunnerObject",
            "durableObjectNamespace": {
              "serviceName": "core:user:vitest-pool-workers-runner-web-assembly",
              "className": "RunnerObject"
            }
          },
          {
            "name": "MINIFLARE_PROXY:cache-internal:cache:cache:CacheObject",
            "durableObjectNamespace": {
              "serviceName": "cache:cache",
              "className": "CacheObject"
            }
          }
        ],
        "durableObjectNamespaces": [
          {
            "className": "ProxyServer",
            "uniqueKey": "core:entry-ProxyServer",
            "preventEviction": true
          }
        ],
        "durableObjectStorage": {},
        "cacheApiOutbound": {
          "name": "cache:0"
        }
      }
    },
    {
      "name": "internet",
      "network": {
        "allow": [
          "public",
          "private",
          "240.0.0.0/4"
        ],
        "deny": [],
        "tlsOptions": {
          "trustBrowserCas": true,
          "trustedCertificates": [
            "-----BEGIN CERTIFICATE-----\nMIIDxTCCAq2gAwIBAgIBADANBgkqhkiG9w0BAQsFADCBgzELMAkGA1UEBhMCVVMx\nEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoT\nEUdvRGFkZHkuY29tLCBJbmMuMTEwLwYDVQQDEyhHbyBEYWRkeSBSb290IENlcnRp\nZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5MDkwMTAwMDAwMFoXDTM3MTIzMTIz\nNTk1OVowgYMxCzAJBgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6b25hMRMwEQYDVQQH\nEwpTY290dHNkYWxlMRowGAYDVQQKExFHb0RhZGR5LmNvbSwgSW5jLjExMC8GA1UE\nAxMoR28gRGFkZHkgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIw\nDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL9xYgjx+lk09xvJGKP3gElY6SKD\nE6bFIEMBO4Tx5oVJnyfq9oQbTqC023CYxzIBsQU+B07u9PpPL1kwIuerGVZr4oAH\n/PMWdYA5UXvl+TW2dE6pjYIT5LY/qQOD+qK+ihVqf94Lw7YZFAXK6sOoBJQ7Rnwy\nDfMAZiLIjWltNowRGLfTshxgtDj6AozO091GB94KPutdfMh8+7ArU6SSYmlRJQVh\nGkSBjCypQ5Yj36w6gZoOKcUcqeldHraenjAKOc7xiID7S13MMuyFYkMlNAJWJwGR\ntDtwKj9useiciAF9n9T521NtYJ2/LOdYq7hfRvzOxBsDPAnrSTFcaUaz4EcCAwEA\nAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYE\nFDqahQcQZyi27/a9BUFuIMGU2g/eMA0GCSqGSIb3DQEBCwUAA4IBAQCZ21151fmX\nWWcDYfF+OwYxdS2hII5PZYe096acvNjpL9DbWu7PdIxztDhC2gV7+AJ1uP2lsdeu\n9tfeE8tTEH6KRtGX+rcuKxGrkLAngPnon1rpN5+r5N9ss4UXnT3ZJE95kTXWXwTr\ngIOrmgIttRD02JDHBHNA7XIloKmf7J6raBKZV8aPEjoJpL1E/QYVN8Gb5DKj7Tjo\n2GTzLH4U/ALqn83/B2gX2yKQOC16jdFU8WnjXzPKej17CuPKf1855eJ1usV2GDPO\nLPAvTK33sefOT6jEm0pUBsV/fdUID+Ic/n4XuKxe9tQWskMJDE32p2u0mYRlynqI\n4uJEvlz36hz1\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICVDCCAdugAwIBAgIQZ3SdjXfYO2rbIvT/WeK/zjAKBggqhkjOPQQDAzBsMQsw\nCQYDVQQGEwJHUjE3MDUGA1UECgwuSGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2Vh\ncmNoIEluc3RpdHV0aW9ucyBDQTEkMCIGA1UEAwwbSEFSSUNBIFRMUyBFQ0MgUm9v\ndCBDQSAyMDIxMB4XDTIxMDIxOTExMDExMFoXDTQ1MDIxMzExMDEwOVowbDELMAkG\nA1UEBhMCR1IxNzA1BgNVBAoMLkhlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJj\naCBJbnN0aXR1dGlvbnMgQ0ExJDAiBgNVBAMMG0hBUklDQSBUTFMgRUNDIFJvb3Qg\nQ0EgMjAyMTB2MBAGByqGSM49AgEGBSuBBAAiA2IABDgI/rGgltJ6rK9JOtDA4MM7\nKKrxcm1lAEeIhPyaJmuqS7psBAqIXhfyVYf8MLA04jRYVxqEU+kw2anylnTDUR9Y\nSTHMmE5gEYd103KUkE+bECUqqHgtvpBBWJAVcqeht6NCMEAwDwYDVR0TAQH/BAUw\nAwEB/zAdBgNVHQ4EFgQUyRtTgRL+BNUW0aq8mm+3oJUZbsowDgYDVR0PAQH/BAQD\nAgGGMAoGCCqGSM49BAMDA2cAMGQCMBHervjcToiwqfAircJRQO9gcS3ujwLEXQNw\nSaSS6sUUiHCm0w2wqsosQJz76YJumgIwK0eaB8bRwoF8yguWGEEbo/QwCZ61IygN\nnxS2PFOiTAZpffpskcYqSUXm7LcT4Tps\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFwTCCA6mgAwIBAgIITrIAZwwDXU8wDQYJKoZIhvcNAQEFBQAwSTELMAkGA1UE\nBhMCQ0gxFTATBgNVBAoTDFN3aXNzU2lnbiBBRzEjMCEGA1UEAxMaU3dpc3NTaWdu\nIFBsYXRpbnVtIENBIC0gRzIwHhcNMDYxMDI1MDgzNjAwWhcNMzYxMDI1MDgzNjAw\nWjBJMQswCQYDVQQGEwJDSDEVMBMGA1UEChMMU3dpc3NTaWduIEFHMSMwIQYDVQQD\nExpTd2lzc1NpZ24gUGxhdGludW0gQ0EgLSBHMjCCAiIwDQYJKoZIhvcNAQEBBQAD\nggIPADCCAgoCggIBAMrfogLi2vj8Bxax3mCq3pZcZB/HL37PZ/pEQtZ2Y5Wu669y\nIIpFR4ZieIbWIDkm9K6j/SPnpZy1IiEZtzeTIsBQnIJ71NUERFzLtMKfkr4k2Htn\nIuJpX+UFeNSH2XFwMyVTtIc7KZAoNppVRDBopIOXfw0enHb/FZ1glwCNioUD7IC+\n6ixuEFGSzH7VozPY1kneWCqv9hbrS3uQMpe5up1Y8fhXSQQeol0GcN1x2/ndi5ob\njM89o03Oy3z2u5yg+gnOI2Ky6Q0f4nIoj5+saCB9bzuohTEJfwvH6GXp43gOCWcw\nizSC+13gzJ2BbWLuCB4ELE6b7P6pT1/9aXjvCR+htL/68++QHkwFix7qepF6w9fl\n+zC8bBsQWJj3Gl/QKTIDE0ZNYWqFTFJ0LwYfexHihJfGmfNtf9dng34TaNhxKFrY\nzt3oEBSa/m0jh26OWnA81Y0JAKeqvLAxN23IhBQeW71FYyBrS3SMvds6DsHPWhaP\npZjydomyExI7C3d3rLvlPClKknLKYRorXkzig3R3+jVIeoVNjZpTxN94ypeRSCtF\nKwH3HBqi7Ri6Cr2D+m+8jVeTO9TUps4e8aCxzqv9KyiaTxvXw3LbpMS/XUz13XuW\nae5ogObnmLo2t/5u7Su9IPhlGdpVCX4l3P5hYnL5fhgC72O00Puv5TtjjGePAgMB\nAAGjgawwgakwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0O\nBBYEFFCvzAeHFUdvOMW0ZdHelarp35zMMB8GA1UdIwQYMBaAFFCvzAeHFUdvOMW0\nZdHelarp35zMMEYGA1UdIAQ/MD0wOwYJYIV0AVkBAQEBMC4wLAYIKwYBBQUHAgEW\nIGh0dHA6Ly9yZXBvc2l0b3J5LnN3aXNzc2lnbi5jb20vMA0GCSqGSIb3DQEBBQUA\nA4ICAQAIhab1Fgz8RBrBY+D5VUYI/HAcQiiWjrfFwUF1TglxeeVtlspLpYhg0DB0\nuMoI3LQwnkAHFmtllXcBrqS3NQuB2nEVqXQXOHtYyvkv+8Bldo1bAbl93oI9ZLi+\nFHSjClTTLJUYFzX1UWs/j6KWYTl4a0vlpqD4U99REJNi54Av4tHgvI42Rncz7Lj7\njposiU0xEQ8mngS7twSNC/K5/FqdOxa3L8iYq/6KUFkuozv8KV2LwUvJ4ooTHbG/\nu0IdUt1O2BReEMYxB+9xJ/cbOQncguqLs5WGXv312l0xpuAxtpTmREl0xRbl9x8D\nYSjFyMsSoEJL+WuICI20MhjzdZ/EfwBPBZWcoxcCw7NTm6ogOSkrZvqdr16zktK1\npuEa+S1BaYEUtLS17Yk9zvupnTVCRLEcFHOBzyoBNZox1S2PbYTfgE1X4z/FhHXa\nicYwu+uPyyIIoK6q8QNsOktNCaUOcsZWayFCTiMlFGiudgp8DAdwZPmaL/YFOSbG\nDI8Zf0NebvRbFS/bYV3mZy8/CJT5YLSYMdp08YSTcU1f+2BY0fvEwW2JorsgH51x\nkcsymxM9Pn2SUjWskpSi0xjCfMfqr3YFFt1nJ8J+HAciIfNAChs0B0QTwoRqjt8Z\nWr9/6x3iGjjRXK9HkmuAtTClyY3YqzGBH9/CZjfTk6mFhnll0g==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFojCCA4qgAwIBAgIUAZQwHqIL3fXFMyqxQ0Rx+NZQTQ0wDQYJKoZIhvcNAQEM\nBQAwaTELMAkGA1UEBhMCS1IxJjAkBgNVBAoMHU5BVkVSIEJVU0lORVNTIFBMQVRG\nT1JNIENvcnAuMTIwMAYDVQQDDClOQVZFUiBHbG9iYWwgUm9vdCBDZXJ0aWZpY2F0\naW9uIEF1dGhvcml0eTAeFw0xNzA4MTgwODU4NDJaFw0zNzA4MTgyMzU5NTlaMGkx\nCzAJBgNVBAYTAktSMSYwJAYDVQQKDB1OQVZFUiBCVVNJTkVTUyBQTEFURk9STSBD\nb3JwLjEyMDAGA1UEAwwpTkFWRVIgR2xvYmFsIFJvb3QgQ2VydGlmaWNhdGlvbiBB\ndXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC21PGTXLVA\niQqrDZBbUGOukJR0F0Vy1ntlWilLp1agS7gvQnXp2XskWjFlqxcX0TM62RHcQDaH\n38dq6SZeWYp34+hInDEW+j6RscrJo+KfziFTowI2MMtSAuXaMl3Dxeb57hHHi8lE\nHoSTGEq0n+USZGnQJoViAbbJAh2+g1G7XNr4rRVqmfeSVPc0W+m/6imBEtRTkZaz\nkVrd/pBzKPswRrXKCAfHcXLJZtM0l/aM9BhK4dA9WkW2aacp+yPOiNgSnABIqKYP\nszuSjXEOdMWLyEz59JuOuDxp7W87UC9Y7cSw0BwbagzivESq2M0UXZR4Yb8Obtoq\nvC8MC3GmsxY/nOb5zJ9TNeIDoKAYv7vxvvTWjIcNQvcGufFt7QSUqP620wbGQGHf\nnZ3zVHbOUzoBppJB7ASjjw2i1QnK1sua8e9DXcCrpUHPXFNwcMmIpi3Ua2FzUCaG\nYQ5fG8Ir4ozVu53BA0K6lNpfqbDKzE0K70dpAy8i+/Eozr9dUGWokG2zdLAIx6yo\n0es+nPxdGoMuK8u180SdOqcXYZaicdNwlhVNt0xz7hlcxVs+Qf6sdWA7G2POAN3a\nCJBitOUt7kinaxeZVL6HSuOpXgRM6xBtVNbv8ejyYhbLgGvtPe31HzClrkvJE+2K\nAQHJuFFYwGY6sWZLxNUxAmLpdIQM201GLQIDAQABo0IwQDAdBgNVHQ4EFgQU0p+I\n36HNLL3s9TsBAZMzJ7LrYEswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMB\nAf8wDQYJKoZIhvcNAQEMBQADggIBADLKgLOdPVQG3dLSLvCkASELZ0jKbY7gyKoN\nqo0hV4/GPnrK21HUUrPUloSlWGB/5QuOH/XcChWB5Tu2tyIvCZwTFrFsDDUIbatj\ncu3cvuzHV+YwIHHW1xDBE1UBjCpD5EHxzzp6U5LOogMFDTjfArsQLtk70pt6wKGm\n+LUx5vR1yblTmXVHIloUFcd4G7ad6Qz4G3bxhYTeodoS76TiEJd6eN4MUZeoIUCL\nhr0N8F5OSza7OyAfikJW4Qsav3vQIkMsRIz75Sq0bBwcupTgE34h5prCy8VCZLQe\nlHsIJchxzIdFV4XTnyliIoNRlwAYl3dqmJLJfGBs32x9SuRwTMKeuB330DTHD8z7\np/8Dvq1wkNoL3chtl1+afwkyQf3NosxabUzyqkn+Zvjp2DXrDige7kgvOtB5CTh8\npiKCk5XQA76+AqAF3SAi428diDRgxuYKuQl1C/AH6GmWNcf7I4GOODm4RStDeKLR\nLBT/DShycpWbXgnbiUSYqqFJu3FS8r/2/yehNq+4tneI3TqkbZs0kNwUXTC/t+sX\n5Ie3cdCh13cV1ELX8vMxmV2b3RZtP+oGI/hGoiLtk/bdmuYqh7GYVPEi92tF4+KO\ndh2ajcQGjTa3FPOdVGm3jjzVpG2Tgbet9r1ke8LJaDmgkpzNNIaRkPpkUZ3+/uul\n9XXeifdy\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIExTCCA62gAwIBAgIBADANBgkqhkiG9w0BAQUFADB9MQswCQYDVQQGEwJFVTEn\nMCUGA1UEChMeQUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQL\nExpodHRwOi8vd3d3LmNoYW1iZXJzaWduLm9yZzEgMB4GA1UEAxMXR2xvYmFsIENo\nYW1iZXJzaWduIFJvb3QwHhcNMDMwOTMwMTYxNDE4WhcNMzcwOTMwMTYxNDE4WjB9\nMQswCQYDVQQGEwJFVTEnMCUGA1UEChMeQUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgy\nNzQzMjg3MSMwIQYDVQQLExpodHRwOi8vd3d3LmNoYW1iZXJzaWduLm9yZzEgMB4G\nA1UEAxMXR2xvYmFsIENoYW1iZXJzaWduIFJvb3QwggEgMA0GCSqGSIb3DQEBAQUA\nA4IBDQAwggEIAoIBAQCicKLQn0KuWxfH2H3PFIP8T8mhtxOviteePgQKkotgVvq0\nMi+ITaFgCPS3CU6gSS9J1tPfnZdan5QEcOw/Wdm3zGaLmFIoCQLfxS+EjXqXd7/s\nQJ0lcqu1PzKY+7e3/HKE5TWH+VX6ox8Oby4o3Wmg2UIQxvi1RMLQQ3/bvOSiPGpV\neAp3qdjqGTK3L/5cPxvusZjsyq16aUXjlg9V9ubtdepl6DJWk0aJqCWKZQbua795\nB9Dxt6/tLE2Su8CoX6dnfQTyFQhwrJLWfQTSM/tMtgsL+xrJxI0DqX5c8lCrEqWh\nz0hQpe/SyBoT+rB/sYIcd2oPX9wLlY/vQ37mRQklAgEDo4IBUDCCAUwwEgYDVR0T\nAQH/BAgwBgEB/wIBDDA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vY3JsLmNoYW1i\nZXJzaWduLm9yZy9jaGFtYmVyc2lnbnJvb3QuY3JsMB0GA1UdDgQWBBRDnDafsJ4w\nTcbOX60Qq+UDpfqpFDAOBgNVHQ8BAf8EBAMCAQYwEQYJYIZIAYb4QgEBBAQDAgAH\nMCoGA1UdEQQjMCGBH2NoYW1iZXJzaWducm9vdEBjaGFtYmVyc2lnbi5vcmcwKgYD\nVR0SBCMwIYEfY2hhbWJlcnNpZ25yb290QGNoYW1iZXJzaWduLm9yZzBbBgNVHSAE\nVDBSMFAGCysGAQQBgYcuCgEBMEEwPwYIKwYBBQUHAgEWM2h0dHA6Ly9jcHMuY2hh\nbWJlcnNpZ24ub3JnL2Nwcy9jaGFtYmVyc2lnbnJvb3QuaHRtbDANBgkqhkiG9w0B\nAQUFAAOCAQEAPDtwkfkEVCeR4e3t/mh/YV3lQWVPMvEYBZRqHN4fcNs+ezICNLUM\nbKGKfKX0j//U2K0X1S0E0T9YgOKBWYi+wONGkyT+kL0mojAt6JcmVzWJdJYY9hXi\nryQZVgICsroPFOrGimbBhkVVi76SvpykBMdJPJ7oKXqJ1/6v/2j1pReQvayZzKWG\nVwlnRtvWFsJG8eSpUPWP0ZIV018+xgBJOm5YstHRJw0lyDL4IBHNfTIzSJRUTN3c\necQwn+uOuFW114hcxWokPbLTBQNRxgfvzBRydD1ucs4YKIxKoHflCStFREest2d/\nAYoFWpO+ocH/+OcOZ6RHSXZddZAa9SaP8A==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIID8TCCAtmgAwIBAgIQQT1yx/RrH4FDffHSKFTfmjANBgkqhkiG9w0BAQUFADCB\nijELMAkGA1UEBhMCQ0gxEDAOBgNVBAoTB1dJU2VLZXkxGzAZBgNVBAsTEkNvcHly\naWdodCAoYykgMjAwNTEiMCAGA1UECxMZT0lTVEUgRm91bmRhdGlvbiBFbmRvcnNl\nZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBHbG9iYWwgUm9vdCBHQSBDQTAeFw0w\nNTEyMTExNjAzNDRaFw0zNzEyMTExNjA5NTFaMIGKMQswCQYDVQQGEwJDSDEQMA4G\nA1UEChMHV0lTZUtleTEbMBkGA1UECxMSQ29weXJpZ2h0IChjKSAyMDA1MSIwIAYD\nVQQLExlPSVNURSBGb3VuZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9PSVNURSBX\nSVNlS2V5IEdsb2JhbCBSb290IEdBIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\nMIIBCgKCAQEAy0+zAJs9Nt350UlqaxBJH+zYK7LG+DKBKUOVTJoZIyEVRd7jyBxR\nVVuuk+g3/ytr6dTqvirdqFEr12bDYVxgAsj1znJ7O7jyTmUIms2kahnBAbtzptf2\nw93NvKSLtZlhuAGio9RN1AU9ka34tAhxZK9w8RxrfvbDd50kc3vkDIzh2TbhmYsF\nmQvtRTEJysIA2/dyoJaqlYfQjse2YXMNdmaM3Bu0Y6Kff5MTMPGhJ9vZ/yxViJGg\n4E8HsChWjBgbl0SOid3gF27nKu+POQoxhILYQBRJLnpB5Kf+42TMwVlxSywhp1t9\n4B3RLoGbw9ho972WG6xwsRYUC9tguSYBBQIDAQABo1EwTzALBgNVHQ8EBAMCAYYw\nDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUswN+rja8sHnR3JQmthG+IbJphpQw\nEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggEBAEuh/wuHbrP5wUOx\nSPMowB0uyQlB+pQAHKSkq0lPjz0e701vvbyk9vImMMkQyh2I+3QZH4VFvbBsUfk2\nftv1TDI6QU9bR8/oCy22xBmddMVHxjtqD6wU2zz0c5ypBd8A3HR4+vg1YFkCExh8\nvPtNsCBtQ7tgMHpnM1zFmdH4LTlSc/uMqpclXHLZCB6rTjzjgTGfA6b7wP4piFXa\nhNVQA7bihKOmNqoROgHhGEvWRGizPflTdISzRpFGlgC3gCy24eMQ4tui5yiPAZZi\nFj4A4xylNoEYokxSdsARo27mHbrjWr42U8U+dY+GaSlYU7Wcu2+fXMUY7N0v4ZjJ\n/L7fCg0=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICnTCCAiSgAwIBAgIMCL2Fl2yZJ6SAaEc7MAoGCCqGSM49BAMDMIGRMQswCQYD\nVQQGEwJVUzERMA8GA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAf\nBgNVBAoTGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3\nYXZlIEdsb2JhbCBFQ0MgUDM4NCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0x\nNzA4MjMxOTM2NDNaFw00MjA4MjMxOTM2NDNaMIGRMQswCQYDVQQGEwJVUzERMA8G\nA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAfBgNVBAoTGFRydXN0\nd2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3YXZlIEdsb2JhbCBF\nQ0MgUDM4NCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTB2MBAGByqGSM49AgEGBSuB\nBAAiA2IABGvaDXU1CDFHBa5FmVXxERMuSvgQMSOjfoPTfygIOiYaOs+Xgh+AtycJ\nj9GOMMQKmw6sWASr9zZ9lCOkmwqKi6vr/TklZvFe/oyujUF5nQlgziip04pt89ZF\n1PKYhDhloKNDMEEwDwYDVR0TAQH/BAUwAwEB/zAPBgNVHQ8BAf8EBQMDBwYAMB0G\nA1UdDgQWBBRVqYSJ0sEyvRjLbKYHTsjnnb6CkDAKBggqhkjOPQQDAwNnADBkAjA3\nAZKXRRJ+oPM+rRk6ct30UJMDEr5E0k9BpIycnR+j9sKS50gU/k6bpZFXrsY3crsC\nMGclCrEMXu6pY5Jv5ZAL/mYiykf9ijH3g/56vxC+GCsej/YpHpRZ744hN8tRmKVu\nSw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFuzCCA6OgAwIBAgIIVwoRl0LE48wwDQYJKoZIhvcNAQELBQAwazELMAkGA1UE\nBhMCSVQxDjAMBgNVBAcMBU1pbGFuMSMwIQYDVQQKDBpBY3RhbGlzIFMucC5BLi8w\nMzM1ODUyMDk2NzEnMCUGA1UEAwweQWN0YWxpcyBBdXRoZW50aWNhdGlvbiBSb290\nIENBMB4XDTExMDkyMjExMjIwMloXDTMwMDkyMjExMjIwMlowazELMAkGA1UEBhMC\nSVQxDjAMBgNVBAcMBU1pbGFuMSMwIQYDVQQKDBpBY3RhbGlzIFMucC5BLi8wMzM1\nODUyMDk2NzEnMCUGA1UEAwweQWN0YWxpcyBBdXRoZW50aWNhdGlvbiBSb290IENB\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAp8bEpSmkLO/lGMWwUKNv\nUTufClrJwkg4CsIcoBh/kbWHuUA/3R1oHwiD1S0eiKD4j1aPbZkCkpAW1V8IbInX\n4ay8IMKx4INRimlNAJZaby/ARH6jDuSRzVju3PvHHkVH3Se5CAGfpiEd9UEtL0z9\nKK3giq0itFZljoZUj5NDKd45RnijMCO6zfB9E1fAXdKDa0hMxKufgFpbOr3JpyI/\ngCczWw63igxdBzcIy2zSekciRDXFzMwujt0q7bd9Zg1fYVEiVRvjRuPjPdA1Yprb\nrxTIW6HMiRvhMCb8oJsfgadHHwTrozmSBp+Z07/T6k9QnBn+locePGX2oxgkg4YQ\n51Q+qDp2JE+BIcXjDwL4k5RHILv+1A7TaLndxHqEguNTVHnd25zS8gebLra8Pu2F\nbe8lEfKXGkJh90qX6IuxEAf6ZYGyojnP9zz/GPvG8VqLWeICrHuS0E4UT1lF9gxe\nKF+w6D9Fz8+vm2/7hNN3WpVvrJSEnu68wEqPSpP4RCHiMUVhUE4Q2OM1fEwZtN4F\nv6MGn8i1zeQf1xcGDXqVdFUNaBr8EBtiZJ1t4JWgw5QHVw0U5r0F+7if5t+L4sbn\nfpb2U8WANFAoWPASUHEXMLrmeGO89LKtmyuy/uE5jF66CyCU3nuDuP/jVo23Eek7\njPKxwV2dpAtMK9myGPW1n0sCAwEAAaNjMGEwHQYDVR0OBBYEFFLYiDrIn3hm7Ynz\nezhwlMkCAjbQMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUUtiIOsifeGbt\nifN7OHCUyQICNtAwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQAL\ne3KHwGCmSUyIWOYdiPcUZEim2FgKDk8TNd81HdTtBjHIgT5q1d07GjLukD0R0i70\njsNjLiNmsGe+b7bAEzlgqqI0JZN1Ut6nna0Oh4lScWoWPBkdg/iaKWW+9D+a2fDz\nWochcYBNy+A4mz+7+uAwTc+G02UQGRjRlwKxK3JCaKygvU5a2hi/a5iB0P2avl4V\nSM0RFbnAKVy06Ij3Pjaut2L9HmLecHgQHEhb2rykOLpn7VU+Xlff1ANATIGk0k9j\npwlCCRT8AKnCgHNPLsBA2RF7SOp6AsDT6ygBJlh0wcBzIm2Tlf05fbsq4/aC4yyX\nX04fkZT6/iyj2HYauE2yOE+b+h1IYHkm4vP9qdCa6HCPSXrW5b0KDtst842/6+Ok\nfcvHlXHo2qN8xcL4dJIEG4aspCJTQLas/kx2z/uUMsA1n3Y/buWQbqCmJqK4LL7R\nK4X9p2jIugErsWx0Hbhzlefut8cl8ABMALJ+tguLHPPAUJ4lueAI3jZm/zel0btU\nZCzJJ7VLkn5l/9Mt4blOvH+kQSGQQXemOR/qnuOf0GZvBeyqdn6/axag67XH/JJU\nLysRJyU3eExRarDzzFhdFPFqSBX/wge2sY0PjlxQRrM9vwGYT7JZVEc+NHt4bVaT\nLnPqZih4zR0Uv6CPLy64Lo7yFIrM6bV8+2ydDKXhlg==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEDjCCAvagAwIBAgIDD92sMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNVBAYTAkRF\nMRUwEwYDVQQKDAxELVRydXN0IEdtYkgxHzAdBgNVBAMMFkQtVFJVU1QgUm9vdCBD\nQSAzIDIwMTMwHhcNMTMwOTIwMDgyNTUxWhcNMjgwOTIwMDgyNTUxWjBFMQswCQYD\nVQQGEwJERTEVMBMGA1UECgwMRC1UcnVzdCBHbWJIMR8wHQYDVQQDDBZELVRSVVNU\nIFJvb3QgQ0EgMyAyMDEzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nxHtCkoIf7O1UmI4SwMoJ35NuOpNcG+QQd55OaYhs9uFp8vabomGxvQcgdJhl8Ywm\nCM2oNcqANtFjbehEeoLDbF7eu+g20sRoNoyfMr2EIuDcwu4QRjltr5M5rofmw7wJ\nySxrZ1vZm3Z1TAvgu8XXvD558l++0ZBX+a72Zl8xv9Ntj6e6SvMjZbu376Ml1wrq\nWLbviPr6ebJSWNXwrIyhUXQplapRO5AyA58ccnSQ3j3tYdLl4/1kR+W5t0qp9x+u\nloYErC/jpIF3t1oW/9gPP/a3eMykr/pbPBJbqFKJcu+I89VEgYaVI5973bzZNO98\nlDyqwEHC451QGsDkGSL8swIDAQABo4IBBTCCAQEwDwYDVR0TAQH/BAUwAwEB/zAd\nBgNVHQ4EFgQUP5DIfccVb/Mkj6nDL0uiDyGyL+cwDgYDVR0PAQH/BAQDAgEGMIG+\nBgNVHR8EgbYwgbMwdKByoHCGbmxkYXA6Ly9kaXJlY3RvcnkuZC10cnVzdC5uZXQv\nQ049RC1UUlVTVCUyMFJvb3QlMjBDQSUyMDMlMjAyMDEzLE89RC1UcnVzdCUyMEdt\nYkgsQz1ERT9jZXJ0aWZpY2F0ZXJldm9jYXRpb25saXN0MDugOaA3hjVodHRwOi8v\nY3JsLmQtdHJ1c3QubmV0L2NybC9kLXRydXN0X3Jvb3RfY2FfM18yMDEzLmNybDAN\nBgkqhkiG9w0BAQsFAAOCAQEADlkOWOR0SCNEzzQhtZwUGq2aS7eziG1cqRdw8Cqf\njXv5e4X6xznoEAiwNStfzwLS05zICx7uBVSuN5MECX1sj8J0vPgclL4xAUAt8yQg\nt4RVLFzI9XRKEBmLo8ftNdYJSNMOwLo5qLBGArDbxohZwr78e7Erz35ih1WWzAFv\nm2chlTWL+BD8cRu3SzdppjvW7IvuwbDzJcmPkn2h6sPKRL8mpXSSnON065102ctN\nh9j8tGlsi6BDB2B4l+nZk3zCRrybN1Kj7Yo8E6l7U0tJmhEFLAtuVqwfLoJs4Gln\ntQ5tLdnkwBXxP/oYcuEVbSdbLTAoK59ImmQrme/ydUlfXA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFkjCCA3qgAwIBAgIIAeDltYNno+AwDQYJKoZIhvcNAQEMBQAwZzEbMBkGA1UE\nAwwSQXBwbGUgUm9vdCBDQSAtIEcyMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0\naW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMw\nHhcNMTQwNDMwMTgxMDA5WhcNMzkwNDMwMTgxMDA5WjBnMRswGQYDVQQDDBJBcHBs\nZSBSb290IENBIC0gRzIxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBANgREkhI2imKScUcx+xuM23+TfvgHN6s\nXuI2pyT5f1BrTM65MFQn5bPW7SXmMLYFN14UIhHF6Kob0vuy0gmVOKTvKkmMXT5x\nZgM4+xb1hYjkWpIMBDLyyED7Ul+f9sDx47pFoFDVEovy3d6RhiPw9bZyLgHaC/Yu\nOQhfGaFjQQscp5TBhsRTL3b2CtcM0YM/GlMZ81fVJ3/8E7j4ko380yhDPLVoACVd\nJ2LT3VXdRCCQgzWTxb+4Gftr49wIQuavbfqeQMpOhYV4SbHXw8EwOTKrfl+q04tv\nny0aIWhwZ7Oj8ZhBbZF8+NfbqOdfIRqMM78xdLe40fTgIvS/cjTf94FNcX1RoeKz\n8NMoFnNvzcytN31O661A4T+B/fc9Cj6i8b0xlilZ3MIZgIxbdMYs0xBTJh0UT8TU\ngWY8h2czJxQI6bR3hDRSj4n4aJgXv8O7qhOTH11UL6jHfPsNFL4VPSQ08prcdUFm\nIrQB1guvkJ4M6mL4m1k8COKWNORj3rw31OsMiANDC1CvoDTdUE0V+1ok2Az6DGOe\nHwOx4e7hqkP0ZmUoNwIx7wHHHtHMn23KVDpA287PT0aLSmWaasZobNfMmRtHsHLD\nd4/E92GcdB/O/WuhwpyUgquUoue9G7q5cDmVF8Up8zlYNPXEpMZ7YLlmQ1A/bmH8\nDvmGqmAMQ0uVAgMBAAGjQjBAMB0GA1UdDgQWBBTEmRNsGAPCe8CjoA1/coB6HHcm\njTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQwF\nAAOCAgEAUabz4vS4PZO/Lc4Pu1vhVRROTtHlznldgX/+tvCHM/jvlOV+3Gp5pxy+\n8JS3ptEwnMgNCnWefZKVfhidfsJxaXwU6s+DDuQUQp50DhDNqxq6EWGBeNjxtUVA\neKuowM77fWM3aPbn+6/Gw0vsHzYmE1SGlHKy6gLti23kDKaQwFd1z4xCfVzmMX3z\nybKSaUYOiPjjLUKyOKimGY3xn83uamW8GrAlvacp/fQ+onVJv57byfenHmOZ4VxG\n/5IFjPoeIPmGlFYl5bRXOJ3riGQUIUkhOb9iZqmxospvPyFgxYnURTbImHy99v6Z\nSYA7LNKmp4gDBDEZt7Y6YUX6yfIjyGNzv1aJMbDZfGKnexWoiIqrOEDCzBL/FePw\nN983csvMmOa/orz6JopxVtfnJBtIRD6e/J/JzBrsQzwBvDR4yGn1xuZW7AYJNpDr\nFEobXsmII9oDMJELuDY++ee1KG++P+w8j2Ud5cAeh6Squpj9kuNsJnfdBrRkBof0\nTta6SqoWqPQFZ2aWuuJVecMsXUmPgEkrihLHdoBR37q9ZV0+N0djMenl9MU/S60E\ninpxLK8JQzcPqOMyT/RFtm2XNuyE9QoB6he7hY1Ck3DDUOUUi78/w0EP3SIEIwiK\num1xRKtzCTrJ+VKACd+66eYWyi4uTLLT3OUEVLLUNIAytbwPF+E=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFYzCCA0ugAwIBAgIBOzANBgkqhkiG9w0BAQsFADBTMQswCQYDVQQGEwJJTDEW\nMBQGA1UEChMNU3RhcnRDb20gTHRkLjEsMCoGA1UEAxMjU3RhcnRDb20gQ2VydGlm\naWNhdGlvbiBBdXRob3JpdHkgRzIwHhcNMTAwMTAxMDEwMDAxWhcNMzkxMjMxMjM1\nOTAxWjBTMQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjEsMCoG\nA1UEAxMjU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgRzIwggIiMA0G\nCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC2iTZbB7cgNr2Cu+EWIAOVeq8Oo1XJ\nJZlKxdBWQYeQTSFgpBSHO839sj60ZwNq7eEPS8CRhXBF4EKe3ikj1AENoBB5uNsD\nvfOpL9HG4A/LnooUCri99lZi8cVytjIl2bLzvWXFDSxu1ZJvGIsAQRSCb0AgJnoo\nD/Uefyf3lLE3PbfHkffiAez9lInhzG7TNtYKGXmu1zSCZf98Qru23QumNK9LYP5/\nQ0kGi4xDuFby2X8hQxfqp0iVAXV16iulQ5XqFYSdCI0mblWbq9zSOdIxHWDirMxW\nRST1HFSr7obdljKF+ExP6JV2tgXdNiNnvP8V4so75qbsO+wmETRIjfaAKxojAuuK\nHDp2KntWFhxyKrOq42ClAJ8Em+JvHhRYW6Vsi1g8w7pOOlz34ZYrPu8HvKTlXcxN\nnw3h3Kq74W4a7I/htkxNeXJdFzULHdfBR9qWJODQcqhaX2YtENwvKhOuJv4KHBnM\n0D4LnMgJLvlblnpHnOl68wVQdJVznjAJ85eCXuaPOQgeWeU1FEIT/wCc976qUM/i\nUUjXuG+v+E5+M5iSFGI6dWPPe/regjupuznixL0sAA7IF6wT700ljtizkC+p2il9\nHa90OrInwMEePnWjFqmveiJdnxMaz6eg6+OGCtP95paV1yPIN93EfKo2rJgaErHg\nTuixO/XWb/Ew1wIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQE\nAwIBBjAdBgNVHQ4EFgQUS8W0QGutHLOlHGVuRjaJhwUMDrYwDQYJKoZIhvcNAQEL\nBQADggIBAHNXPyzVlTJ+N9uWkusZXn5T50HsEbZH77Xe7XRcxfGOSeD8bpkTzZ+K\n2s06Ctg6Wgk/XzTQLwPSZh0avZyQN8gMjgdalEVGKua+etqhqaRpEpKwfTbURIfX\nUfEpY9Z1zRbkJ4kd+MIySP3bmdCPX1R0zKxnNBFi2QwKN4fRoxdIjtIXHfbX/dtl\n6/2o1PXWT6RbdejF0mCy2wl+JYt7ulKSnj7oxXehPOBKc2thz4bcQ///If4jXSRK\n9dNtD2IEBVeC2m6kMyV5Sy5UGYvMLD0w6dEG/+gyRr61M3Z3qAFdlsHB1b6uJcDJ\nHgoJIIihDsnzb02CVAAgp9KP5DlUFy6NHrgbuxu9mk47EDTcnIhT76IxW1hPkWLI\nwpqazRVdOKnWvvgTtZ8SafJQYqz7Fzf07rh1Z2AQ+4NQ+US1dZxAF7L+/XldblhY\nXzD8AK6vM8EOTmy6p6ahfzLbOOCxchcKK5HsamMm7YnUeMx0HgX4a/6ManY5Ka5l\nIxKVCCIcl85bBu4M4ru8H0ST9tg4RQUh7eStqxK2A6RCLi3ECToDZ2mEmuFZkIoo\nhdVddLHRDiBYmxOlsGOm7XtH/UVVMKTumtTm4ofvmMkyghEpIrwACjFeLQ/Ajulr\nso8uBtjRkcfGEvRM/TAXw8HaOFvjqermobp573PYtlNXLfbQ4ddI\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIClDCCAhqgAwIBAgIILCmcWxbtBZUwCgYIKoZIzj0EAwIwfzELMAkGA1UEBhMC\nVVMxDjAMBgNVBAgMBVRleGFzMRAwDgYDVQQHDAdIb3VzdG9uMRgwFgYDVQQKDA9T\nU0wgQ29ycG9yYXRpb24xNDAyBgNVBAMMK1NTTC5jb20gRVYgUm9vdCBDZXJ0aWZp\nY2F0aW9uIEF1dGhvcml0eSBFQ0MwHhcNMTYwMjEyMTgxNTIzWhcNNDEwMjEyMTgx\nNTIzWjB/MQswCQYDVQQGEwJVUzEOMAwGA1UECAwFVGV4YXMxEDAOBgNVBAcMB0hv\ndXN0b24xGDAWBgNVBAoMD1NTTCBDb3Jwb3JhdGlvbjE0MDIGA1UEAwwrU1NMLmNv\nbSBFViBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IEVDQzB2MBAGByqGSM49\nAgEGBSuBBAAiA2IABKoSR5CYG/vvw0AHgyBO8TCCogbR8pKGYfL2IWjKAMTH6kMA\nVIbc/R/fALhBYlzccBYy3h+Z1MzFB8gIH2EWB1E9fVwHU+M1OIzfzZ/ZLg1Kthku\nWnBaBu2+8KGwytAJKaNjMGEwHQYDVR0OBBYEFFvKXuXe0oGqzagtZFG22XKbl+ZP\nMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUW8pe5d7SgarNqC1kUbbZcpuX\n5k8wDgYDVR0PAQH/BAQDAgGGMAoGCCqGSM49BAMCA2gAMGUCMQCK5kCJN+vp1RPZ\nytRrJPOwPYdGWBrssd9v+1a6cGvHOMzosYxPD/fxZ3YOg9AeUY8CMD32IygmTMZg\nh5Mmm7I1HrrW9zzRHM76JTymGoEVW/MSD2zuZYrJh6j5B+BimoxcSg==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIGCzCCA/OgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBpjELMAkGA1UEBhMCR1Ix\nDzANBgNVBAcTBkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNhZGVtaWMgYW5k\nIFJlc2VhcmNoIEluc3RpdHV0aW9ucyBDZXJ0LiBBdXRob3JpdHkxQDA+BgNVBAMT\nN0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgUm9v\ndENBIDIwMTUwHhcNMTUwNzA3MTAxMTIxWhcNNDAwNjMwMTAxMTIxWjCBpjELMAkG\nA1UEBhMCR1IxDzANBgNVBAcTBkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNh\nZGVtaWMgYW5kIFJlc2VhcmNoIEluc3RpdHV0aW9ucyBDZXJ0LiBBdXRob3JpdHkx\nQDA+BgNVBAMTN0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1\ndGlvbnMgUm9vdENBIDIwMTUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC\nAQDC+Kk/G4n8PDwEXT2QNrCROnk8ZlrvbTkBSRq0t89/TSNTt5AA4xMqKKYx8ZEA\n4yjsriFBzh/a/X0SWwGDD7mwX5nh8hKDgE0GPt+sr+ehiGsxr/CL0BgzuNtFajT0\nAoAkKAoCFZVedioNmToUW/bLy1O8E00BiDeUJRtCvCLYjqOWXjrZMts+6PAQZe10\n4S+nfK8nNLspfZu2zwnI5dMK/IhlZXQK3HMcXM1AsRzUtoSMTFDPaI6oWa7CJ06C\nojXdFPQf/7J31Ycvqm59JCfnxssm5uX+Zwdj2EUN3TpZZTlYepKZcj2chF6IIbjV\n9Cz82XBST3i4vTwri5WY9bPRaM8gFH5MXF/ni+X1NYEZN9cRCLdmvtNKzoNXADrD\ngfgXy5I2XdGj2HUb4Ysn6npIQf1FGQatJ5lOwXBH3bWfgVMS5bGMSF0xQxfjjMZ6\nY5ZLKTBOhE5iGV48zpeQpX8B653g+IuJ3SWYPZK2fu/Z8VFRfS0myGlZYeCsargq\nNhEEelC9MoS+L9xy1dcdFkfkR2YgP/SWxa+OAXqlD3pk9Q0Yh9muiNX6hME6wGko\nLfINaFGq46V3xqSQDqE3izEjR8EJCOtu93ib14L8hCCZSRm2Ekax+0VVFqmjZayc\nBw/qa9wfLgZy7IaIEuQt218FL+TwA9MmM+eAws1CoRc0CwIDAQABo0IwQDAPBgNV\nHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUcRVnyMjJvXVd\nctA4GGqd83EkVAswDQYJKoZIhvcNAQELBQADggIBAHW7bVRLqhBYRjTyYtcWNl0I\nXtVsyIe9tC5G8jH4fOpCtZMWVdyhDBKg2mF+D1hYc2Ryx+hFjtyp8iY/xnmMsVMI\nM4GwVhO+5lFc2JsKT0ucVlMC6U/2DWDqTUJV6HwbISHTGzrMd/K4kPFox/la/vot\n9L/J9UUbzjgQKjeKeaO04wlshYaT/4mWJ3iBj2fjRnRUjtkNaeJK9E10A/+yd+2V\nZ5fkscWrv2oj6NSU4kQoYsRL4vDY4ilrGnB+JGGTe08DMiUNRSQrlrRGar9KC/ea\nj8GsGsVn82800vpzY4zvFrCopEYq+OsS7HK07/grfoxSwIuEVPkvPuNVqNxmsdnh\nX9izjFk0WaSrT2y7HxjbdavYy5LNlDhhDgcGH0tGEPEVvo2FXDtKK4F5D7Rpn0lQ\nl033DlZdwJVqwjbDG2jJ9SrcR5q+ss7FJej6A7na+RZukYT1HCjI/CbM1xyQVqdf\nbzoEvM14iQuODy+jqk+iGxI9FghAD/FGTNeqewjBCvVtJ94Cj8rDtSvK6evIIVM4\npcw72Hc3MKJP2W/R8kCtQXoXxdZKNYm3QdV8hn9VTYNKpXMgwDqvkPGaJI7ZjnHK\ne7iG2rKPmT4dEw0SEe7Uq/DpFXYC5ODfqiAeW2GFZECpkJcNrVPSWh2HagCXZWK0\nvm9qp/UsQu0yrbYhnr68\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFsDCCA5igAwIBAgIQFci9ZUdcr7iXAF7kBtK8nTANBgkqhkiG9w0BAQUFADBe\nMQswCQYDVQQGEwJUVzEjMCEGA1UECgwaQ2h1bmdod2EgVGVsZWNvbSBDby4sIEx0\nZC4xKjAoBgNVBAsMIWVQS0kgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAe\nFw0wNDEyMjAwMjMxMjdaFw0zNDEyMjAwMjMxMjdaMF4xCzAJBgNVBAYTAlRXMSMw\nIQYDVQQKDBpDaHVuZ2h3YSBUZWxlY29tIENvLiwgTHRkLjEqMCgGA1UECwwhZVBL\nSSBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0BAQEF\nAAOCAg8AMIICCgKCAgEA4SUP7o3biDN1Z82tH306Tm2d0y8U82N0ywEhajfqhFAH\nSyZbCUNsIZ5qyNUD9WBpj8zwIuQf5/dqIjG3LBXy4P4AakP/h2XGtRrBp0xtInAh\nijHyl3SJCRImHJ7K2RKilTza6We/CKBk49ZCt0Xvl/T29de1ShUCWH2YWEtgvM3X\nDZoTM1PRYfl61dd4s5oz9wCGzh1NlDivqOx4UXCKXBCDUSH3ET00hl7lSM2XgYI1\nTBnsZfZrxQWh7kcT1rMhJ5QQCtkkO7q+RBNGMD+XPNjX12ruOzjjK9SXDrkb5wdJ\nfzcq+Xd4z1TtW0ado4AOkUPB1ltfFLqfpo0kR0BZv3I4sjZsN/+Z0V0OWQqraffA\nsgRFelQArr5T9rXn4fg8ozHSqf4hUmTFpmfwdQcGlBSBVcYn5AGPF8Fqcde+S/uU\nWH1+ETOxQvdibBjWzwloPn9s9h6PYq2lY9sJpx8iQkEeb5mKPtf5P0B6ebClAZLS\nnT0IFaUQAS2zMnaolQ2zepr7BxB4EW/hj8e6DyUadCrlHJhBmd8hh+iVBmoKs2pH\ndmX2Os+PYhcZewoozRrSgx4hxyy/vv9haLdnG7t4TY3OZ+XkwY63I2binZB1NJip\nNiuKmpS5nezMirH4JYlcWrYvjB9teSSnUmjDhDXiZo1jDiVN1Rmy5nk3pyKdVDEC\nAwEAAaNqMGgwHQYDVR0OBBYEFB4M97Zn8uGSJglFwFU5Lnc/QkqiMAwGA1UdEwQF\nMAMBAf8wOQYEZyoHAAQxMC8wLQIBADAJBgUrDgMCGgUAMAcGBWcqAwAABBRFsMLH\nClZ87lt4DJX5GFPBphzYEDANBgkqhkiG9w0BAQUFAAOCAgEACbODU1kBPpVJufGB\nuvl2ICO1J2B01GqZNF5sAFPZn/KmsSQHRGoqxqWOeBLoR9lYGxMqXnmbnwoqZ6Yl\nPwZpVnPDimZI+ymBV3QGypzqKOg4ZyYr8dW1P2WT+DZdjo2NQCCHGervJ8A9tDkP\nJXtoUHRVnAxZfVo9QZQlUgjgRywVMRnVvwdVxrsStZf0X4OFunHB2WyBEXYKCrC/\ngpf36j36+uwtqSiUO1bd0lEursC9CBWMd1I0ltabrNMdjmEPNXubrjlpC2JgQCA2\nj6/7Nu4tCEoduL+bXPjqpRugc6bY+G7gMwRfaKonh+3ZwZCc7b3jajWvY9+rGNm6\n5ulK6lCKD2GTHuItGeIwlDWSXQ62B68ZgI9HkFFLLk3dheLSClIKF5r8GrBQAuUB\no2M3IUxExJtRmREOc5wGj1QupyheRDmHVi03vYVElOEMSyycw5KFNGHLD7ibSkNS\n/jQ6fbjpKdx2qcgw+BRxgMYeNkh0IkFch4LoGHGLQYlE535YW6i4jRPpp2zDR+2z\nGp1iro2C6pSe3VkQw63d4k3jMdXH7OjysP6SHhYKGvzZ8/gntsm+HbRsZJB/9OTE\nW9c3rkIO3aQab3yIVMUWbuF6aC74Or8NpDyJO3inTmODBCEIZ43ygknQW/2xzQ+D\nhNQ+IIX3Sj0rnP0qCglN6oH4EZw=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEb\nMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow\nGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmlj\nYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVowezEL\nMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE\nBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNVBAMM\nGEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEP\nADCCAQoCggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686tdUIoWMQua\nBtDFcCLNSS1UY8y2bmhGC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe\n3M/vg4aijJRPn2jymJBGhCfHdr/jzDUsi14HZGWCwEiwqJH5YZ92IFCokcdmtet4\nYgNW8IoaE+oxox6gmf049vYnMlhvB/VruPsUK6+3qszWY19zjNoFmag4qMsXeDZR\nrOme9Hg6jc8P2ULimAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjHYpy+g8cm\nez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQU\noBEKIz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wewYDVR0fBHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5jb20v\nQUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29t\nb2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUF\nAAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm7l3sAg9g1o1Q\nGE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLz\nRt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2\nG9w84FoVxp7Z8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsi\nl2D4kF501KKaU73yqWjgom7C12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3\nsmPi9WIsgtRqAEFQ8TmDn5XpNpaYbg==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIE0zCCA7ugAwIBAgIQGNrRniZ96LtKIVjNzGs7SjANBgkqhkiG9w0BAQUFADCB\nyjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL\nExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJp\nU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxW\nZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IC0gRzUwHhcNMDYxMTA4MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCByjEL\nMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW\nZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2ln\nbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp\nU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y\naXR5IC0gRzUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvJAgIKXo1\nnmAMqudLO07cfLw8RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i6CqqpkKzj/i5Vbex\nt0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/WhkcIz\nSdhDY2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQG\nBO+QueQA5N06tRn/Arr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT2RT+\nrCpSx4/VBEnkjWNHiDxpg8v+R70rfk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/\nNIeWiu5T6CUVAgMBAAGjgbIwga8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8E\nBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAH\nBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVy\naXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFH/TZafC3ey78DAJ80M5+gKv\nMzEzMA0GCSqGSIb3DQEBBQUAA4IBAQCTJEowX2LP2BqYLz3q3JktvXf2pXkiOOzE\np6B4Eq1iDkVwZMXnl2YtmAl+X6/WzChl8gGqCBpH3vn5fJJaCGkgDdk+bW48DW7Y\n5gaRQBi5+MHt39tBquCWIMnNZBU4gcmU7qKEKQsTb47bDN0lAtukixlE0kF6BWlK\nWE9gyn6CagsCqiUXObXbf+eEZSqVir2G3l6BFoMtEMze/aiCKm0oHw0LxOXnGiYZ\n4fQRbxC1lfznQgUy286dUV4otp6F01vvpX1FQHKOtw5rDgb7MzVIcbidJ4vEZV8N\nhnacRHr2lVz2XTIIM6RUthg/aFzyQkqFOFSDX9HoLPKsEdao7WNq\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEGjCCAwICEQCbfgZJoz5iudXukEhxKe9XMA0GCSqGSIb3DQEBBQUAMIHKMQsw\nCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl\ncmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu\nLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT\naWduIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\ndHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD\nVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT\naWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ\nbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu\nIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg\nLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMu6nFL8eB8aHm8b\nN3O9+MlrlBIwT/A2R/XQkQr1F8ilYcEWQE37imGQ5XYgwREGfassbqb1EUGO+i2t\nKmFZpGcmTNDovFJbcCAEWNF6yaRpvIMXZK0Fi7zQWM6NjPXr8EJJC52XJ2cybuGu\nkxUccLwgTS8Y3pKI6GyFVxEa6X7jJhFUokWWVYPKMIno3Nij7SqAP395ZVc+FSBm\nCC+Vk7+qRy+oRpfwEuL+wgorUeZ25rdGt+INpsyow0xZVYnm6FNcHOqd8GIWC6fJ\nXwzw3sJ2zq/3avL6QaaiMxTJ5Xpj055iN9WFZZ4O5lMkdBteHRJTW8cs54NJOxWu\nimi5V5cCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAERSWwauSCPc/L8my/uRan2Te\n2yFPhpk0djZX3dAVL8WtfxUfN2JzPtTnX84XA9s1+ivbrmAJXx5fj267Cz3qWhMe\nDGBvtcC1IyIuBwvLqXTLR7sdwdela8wv0kL9Sd2nic9TutoAWii/gt/4uhMdUIaC\n/Y4wjylGsB49Ndo4YhYYSq3mtlFs3q9i6wHQHiT+eo8SGhJouPtmmRQURVyu565p\nF4ErWjfJXir0xuKhXFSbplQAz/DxwceYMBo7Nhbbo27q/a2ywtrvAkcTisDxszGt\nTxzhT5yvDwyd93gN2PQ1VoDat20Xj50egWTh/sVFuq1ruQp6Tk9LhO5L8X3dEQ==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICQzCCAcmgAwIBAgIILcX8iNLFS5UwCgYIKoZIzj0EAwMwZzEbMBkGA1UEAwwS\nQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9u\nIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcN\nMTQwNDMwMTgxOTA2WhcNMzkwNDMwMTgxOTA2WjBnMRswGQYDVQQDDBJBcHBsZSBS\nb290IENBIC0gRzMxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9y\naXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzB2MBAGByqGSM49\nAgEGBSuBBAAiA2IABJjpLz1AcqTtkyJygRMc3RCV8cWjTnHcFBbZDuWmBSp3ZHtf\nTjjTuxxEtX/1H7YyYl3J6YRbTzBPEVoA/VhYDKX1DyxNB0cTddqXl5dvMVztK517\nIDvYuVTZXpmkOlEKMaNCMEAwHQYDVR0OBBYEFLuw3qFYM4iapIqZ3r6966/ayySr\nMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMDA2gA\nMGUCMQCD6cHEFl4aXTQY2e3v9GwOAEZLuN+yRhHFD/3meoyhpmvOwgPUnPWTxnS4\nat+qIxUCMG1mihDK1A3UT82NQz60imOlM27jbdoXt2QfyFMm+YhidDkLF1vLUagM\n6BgD56KyKA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFZjCCA06gAwIBAgIQCgFCgAAAAUUjz0Z8AAAAAjANBgkqhkiG9w0BAQsFADBN\nMQswCQYDVQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0MSowKAYDVQQDEyFJZGVu\nVHJ1c3QgUHVibGljIFNlY3RvciBSb290IENBIDEwHhcNMTQwMTE2MTc1MzMyWhcN\nMzQwMTE2MTc1MzMyWjBNMQswCQYDVQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0\nMSowKAYDVQQDEyFJZGVuVHJ1c3QgUHVibGljIFNlY3RvciBSb290IENBIDEwggIi\nMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC2IpT8pEiv6EdrCvsnduTyP4o7\nekosMSqMjbCpwzFrqHd2hCa2rIFCDQjrVVi7evi8ZX3yoG2LqEfpYnYeEe4IFNGy\nRBb06tD6Hi9e28tzQa68ALBKK0CyrOE7S8ItneShm+waOh7wCLPQ5CQ1B5+ctMlS\nbdsHyo+1W/CD80/HLaXIrcuVIKQxKFdYWuSNG5qrng0M8gozOSI5Cpcu81N3uURF\n/YTLNiCBWS2ab21ISGHKTN9T0a9SvESfqy9rg3LvdYDaBjMbXcjaY8ZNzaxmMc3R\n3j6HEDbhuaR672BQssvKplbgN6+rNBM5Jeg5ZuSYeqoSmJxZZoY+rfGwyj4GD3vw\nEUs3oERte8uojHH01bWRNszwFcYr3lEXsZdMUD2xlVl8BX0tIdUAvwFnol57plzy\n9yLxkA2T26pEUWbMfXYD62qoKjgZl3YNa4ph+bz27nb9cCvdKTz4Ch5bQhyLVi9V\nGxyhLrXHFub4qjySjmm2AcG1hp2JDws4lFTo6tyePSW8Uybt1as5qsVATFSrsrTZ\n2fjXctscvG29ZV/viDUqZi/u9rNl8DONfJhBaUYPQxxp+pu10GFqzcpL2UyQRqsV\nWaFHVCkugyhfHMKiq3IXAAaOReyL4jM9f9oZRORicsPfIsbyVtTdX5Vy7W1f90gD\nW/3FKqD2cyOEEBsB5wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU43HgntinQtnbcZFrlJPrw6PRFKMwDQYJKoZIhvcN\nAQELBQADggIBAEf63QqwEZE4rU1d9+UOl1QZgkiHVIyqZJnYWv6IAcVYpZmxI1Qj\nt2odIFflAWJBF9MJ23XLblSQdf4an4EKwt3X9wnQW3IV5B4Jaj0z8yGa5hV+rVHV\nDRDtfULAj+7AmgjVQdZcDiFpboBhDhXAuM/FSRJSzL46zNQuOAXeNf0fb7iAaJg9\nTaDKQGXSc3z1i9kKlT/YPyNtGtEqJBnZhbMX73huqVjRI9PHE+1yJX9dsXNw0H8G\nlwmEKYBhHfpe/3OsoOOJuBxxFcbeMX8S3OFtm6/n6J91eEyrRjuazr8FGF1NFTwW\nmhlQBJqymm9li1JfPFgEKCXAZmExfrngdbkaqIHWchezxQMxNRF4eKLg6TCMf4Df\nWN88uieW4oA0beOY02QnrEh+KHdcxiVhJfiFDGX6xDIvpZgF5PgLZxYWxoK4Mhn5\n+bl53B/N66+rDt0b20XkeucC4pVd/GnwU2lhlXV5C15V5jgclKlZM57IcXR5f1GJ\ntshquDDIajjDbp7hNxbqBWJMWxJH7ae0s1hWx0nzfxJoCTFx8G34Tkf71oXuxVhA\nGaQdp/lLQzfcaFpPz+vCZHTetBXZ9FRUGi8c15dxVJCO2SCdUyt/q4/i6jC8UDfv\n8Ue1fXwsBOxonbRJRBD0ckscZOf85muQ3Wl9af0AVqW3rLatt8o+Ae+c\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIULvWbAiin23r/1aOp7r0DoM8Sah0wDQYJKoZIhvcNAQEL\nBQAwSDELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAc\nBgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMyBHMzAeFw0xMjAxMTIyMDI2MzJaFw00\nMjAxMTIyMDI2MzJaMEgxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBM\naW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDMgRzMwggIiMA0GCSqG\nSIb3DQEBAQUAA4ICDwAwggIKAoICAQCzyw4QZ47qFJenMioKVjZ/aEzHs286IxSR\n/xl/pcqs7rN2nXrpixurazHb+gtTTK/FpRp5PIpM/6zfJd5O2YIyC0TeytuMrKNu\nFoM7pmRLMon7FhY4futD4tN0SsJiCnMK3UmzV9KwCoWdcTzeo8vAMvMBOSBDGzXR\nU7Ox7sWTaYI+FrUoRqHe6okJ7UO4BUaKhvVZR74bbwEhELn9qdIoyhA5CcoTNs+c\nra1AdHkrAj80//ogaX3T7mH1urPnMNA3I4ZyYUUpSFlob3emLoG+B01vr87ERROR\nFHAGjx+f+IdpsQ7vw4kZ6+ocYfx6bIrc1gMLnia6Et3UVDmrJqMz6nWB2i3ND0/k\nA9HvFZcba5DFApCTZgIhsUfei5pKgLlVj7WiL8DWM2fafsSntARE60f75li59wzw\neyuxwHApw0BiLTtIadwjPEjrewl5qW3aqDCYz4ByA4imW0aucnl8CAMhZa634Ryl\nsSqiMd5mBPfAdOhx3v89WcyWJhKLhZVXGqtrdQtEPREoPHtht+KPZ0/l7DxMYIBp\nVzgeAVuNVejH38DMdyM0SXV89pgR6y3e7UEuFAUCf+D+IOs15xGsIs5XPd7JMG0Q\nA4XN8f+MFrXBsj6IbGB/kE+V9/YtrQE5BwT6dYB9v0lQ7e/JxHwc64B+27bQ3RP+\nydOc17KXqQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB\nBjAdBgNVHQ4EFgQUxhfQvKjqAkPyGwaZXSuQILnXnOQwDQYJKoZIhvcNAQELBQAD\nggIBADRh2Va1EodVTd2jNTFGu6QHcrxfYWLopfsLN7E8trP6KZ1/AvWkyaiTt3px\nKGmPc+FSkNrVvjrlt3ZqVoAh313m6Tqe5T72omnHKgqwGEfcIHB9UqM+WXzBusnI\nFUBhynLWcKzSt/Ac5IYp8M7vaGPQtSCKFWGafoaYtMnCdvvMujAWzKNhxnQT5Wvv\noxXqA/4Ti2Tk08HS6IT7SdEQTXlm66r99I0xHnAUrdzeZxNMgRVhvLfZkXdxGYFg\nu/BYpbWcC/ePIlUnwEsBbTuZDdQdm2NnL9DuDcpmvJRPpq3t/O5jrFc/ZSXPsoaP\n0Aj/uHYUbt7lJ+yreLVTubY/6CD50qi+YUbKh4yE8/nxoGibIh6BJpsQBJFxwAYf\n3KDTuVan45gtf4Od34wrnDKOMpTwATwiKp9Dwi7DmDkHOHv8XgBCH/MyJnmDhPbl\n8MFREsALHgQjDFSlTC9JxUrRtm5gDWv8a4uFJGS3iQ6rJUdbPM9+Sb3H6QrG2vd+\nDhcI00iX0HGS8A85PjRqHH3Y8iKuu2n0M7SmSFXRDw4m6Oy2Cy2nhTXN/VnIn9HN\nPlopNLk9hM6xZdRZkZFWdSHBd575euFgndOtBBj0fOtek49TSiIp+EgrPk2GrFt/\nywaZWWDYWGWVjUTR939+J399roD1B0y2PpxxVJkES/1Y+Zj0\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEBDCCAuygAwIBAgIIGHqpqMKWIQwwDQYJKoZIhvcNAQELBQAwYjELMAkGA1UE\nBhMCVVMxEzARBgNVBAoTCkFwcGxlIEluYy4xJjAkBgNVBAsTHUFwcGxlIENlcnRp\nZmljYXRpb24gQXV0aG9yaXR5MRYwFAYDVQQDEw1BcHBsZSBSb290IENBMB4XDTEy\nMDIwMTIyMTIxNVoXDTI3MDIwMTIyMTIxNVoweTEtMCsGA1UEAwwkRGV2ZWxvcGVy\nIElEIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSYwJAYDVQQLDB1BcHBsZSBDZXJ0\naWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UE\nBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCJdk8GW5pB7qUj\nKwKjX9dzP8A1sIuECj8GJH+nlT/rTw6Tr7QO0Mg+5W0Ysx/oiUe/1wkI5P9WmCkV\n55SduTWjCs20wOHiYPTK7Cl4RWlpYGtfipL8niPmOsIiszFPHLrytjRZQu6wqQID\nGJEEtrN4LjMfgEUNRW+7Dlpbfzrn2AjXCw4ybfuGNuRsq8QRinCEJqqfRNHxuMZ7\nlBebSPcLWBa6I8WfFTl+yl3DMl8P4FJ/QOq+rAhklVvJGpzlgMofakQcbD7EsCYf\nHex7r16gaj1HqVgSMT8gdihtHRywwk4RaSaLy9bQEYLJTg/xVnTQ2QhLZniiq6yn\n4tJMh1nJAgMBAAGjgaYwgaMwHQYDVR0OBBYEFFcX7aLP3HyYoRDg/L6HLSzy4xdU\nMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUK9BpR5R2Cf70a40uQKb3R01/\nCF4wLgYDVR0fBCcwJTAjoCGgH4YdaHR0cDovL2NybC5hcHBsZS5jb20vcm9vdC5j\ncmwwDgYDVR0PAQH/BAQDAgGGMBAGCiqGSIb3Y2QGAgYEAgUAMA0GCSqGSIb3DQEB\nCwUAA4IBAQBCOXRrodzGpI83KoyzHQpEvJUsf7xZuKxh+weQkjK51L87wVA5akR0\nouxbH3Dlqt1LbBwjcS1f0cWTvu6binBlgp0W4xoQF4ktqM39DHhYSQwofzPuAHob\ntHastrW7T9+oG53IGZdKC1ZnL8I+trPEgzrwd210xC4jUe6apQNvYPSlSKcGwrta\n4h8fRkV+5Jf1JxC3ICJyb3LaxlB1xT0lj12jAOmfNoxIOY+zO+qQgC6VmmD0eM70\nDgpTPqL6T9geroSVjTK8Vk2J6XgY4KyaQrp6RhuEoonOFOiI0ViL9q5WxCwFKkWv\nC9lLqQIPNKyIx2FViUTJJ3MH7oLlTvVw\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEMTCCAxmgAwIBAgIBADANBgkqhkiG9w0BAQUFADCBlTELMAkGA1UEBhMCR1Ix\nRDBCBgNVBAoTO0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1\ndGlvbnMgQ2VydC4gQXV0aG9yaXR5MUAwPgYDVQQDEzdIZWxsZW5pYyBBY2FkZW1p\nYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25zIFJvb3RDQSAyMDExMB4XDTExMTIw\nNjEzNDk1MloXDTMxMTIwMTEzNDk1MlowgZUxCzAJBgNVBAYTAkdSMUQwQgYDVQQK\nEztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25zIENl\ncnQuIEF1dGhvcml0eTFAMD4GA1UEAxM3SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJl\nc2VhcmNoIEluc3RpdHV0aW9ucyBSb290Q0EgMjAxMTCCASIwDQYJKoZIhvcNAQEB\nBQADggEPADCCAQoCggEBAKlTAOMupvaO+mDYLZU++CwqVE7NuYRhlFhPjz2L5EPz\ndYmNUeTDN9KKiE15HrcS3UN4SoqS5tdI1Q+kOilENbgH9mgdVc04UfCMJDGFr4PJ\nfel3r+0ae50X+bOdOFAPplp5kYCvN66m0zH7tSYJnTxa71HFK9+WXesyHgLacEns\nbgzImjeN9/E2YEsmLIKe0HjzDQ9jpFEw4fkrJxIH2Oq9GGKYsFk3fb7u8yBRQlqD\n75O6aRXxYp2fmTmCobd0LovUxQt7L/DICto9eQqakxylKHJzkUOap9FNhYS5qXSP\nFEDH3N6sQWRstBmbAmNtJGSPRLIl6s5ddAxjMlyNh+UCAwEAAaOBiTCBhjAPBgNV\nHRMBAf8EBTADAQH/MAsGA1UdDwQEAwIBBjAdBgNVHQ4EFgQUppFC/RNhSiOeCKQp\n5dgTBCPuQSUwRwYDVR0eBEAwPqA8MAWCAy5ncjAFggMuZXUwBoIELmVkdTAGggQu\nb3JnMAWBAy5ncjAFgQMuZXUwBoEELmVkdTAGgQQub3JnMA0GCSqGSIb3DQEBBQUA\nA4IBAQAf73lB4XtuP7KMhjdCSk4cNx6NZrokgclPEg8hwAOXhiVtXdMiKahsog2p\n6z0GW5k6x8zDmjR/qw7IThzh+uTczQ2+vyT+bOdrwg3IBp5OjWEopmr95fZi6hg8\nTqBTnbI6nOulnJEWtk2C4AwFSKls9cz4y51JtPACpf1wA+2KIaWuE4ZJwzNzvoc7\ndIsXRSZMFpGD/md9zU1jZ/rzAxKWeAaNsWftjj++n08C9bMJL/NMh98qy5V8Acys\nNnq/onN694/BtZqhFLKPM58N7yLcZnuEvUUXBj08yrl3NI/K6s8/MT7jiOOASSXI\nl7WdmplNsDz4SgCbZN2fOUvRJ9e4\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIH0zCCBbugAwIBAgIIXsO3pkN/pOAwDQYJKoZIhvcNAQEFBQAwQjESMBAGA1UE\nAwwJQUNDVlJBSVoxMRAwDgYDVQQLDAdQS0lBQ0NWMQ0wCwYDVQQKDARBQ0NWMQsw\nCQYDVQQGEwJFUzAeFw0xMTA1MDUwOTM3MzdaFw0zMDEyMzEwOTM3MzdaMEIxEjAQ\nBgNVBAMMCUFDQ1ZSQUlaMTEQMA4GA1UECwwHUEtJQUNDVjENMAsGA1UECgwEQUND\nVjELMAkGA1UEBhMCRVMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCb\nqau/YUqXry+XZpp0X9DZlv3P4uRm7x8fRzPCRKPfmt4ftVTdFXxpNRFvu8gMjmoY\nHtiP2Ra8EEg2XPBjs5BaXCQ316PWywlxufEBcoSwfdtNgM3802/J+Nq2DoLSRYWo\nG2ioPej0RGy9ocLLA76MPhMAhN9KSMDjIgro6TenGEyxCQ0jVn8ETdkXhBilyNpA\nlHPrzg5XPAOBOp0KoVdDaaxXbXmQeOW1tDvYvEyNKKGno6e6Ak4l0Squ7a4DIrhr\nIA8wKFSVf+DuzgpmndFALW4ir50awQUZ0m/A8p/4e7MCQvtQqR0tkw8jq8bBD5L/\n0KIV9VMJcRz/RROE5iZe+OCIHAr8Fraocwa48GOEAqDGWuzndN9wrqODJerWx5eH\nk6fGioozl2A3ED6XPm4pFdahD9GILBKfb6qkxkLrQaLjlUPTAYVtjrs78yM2x/47\n4KElB0iryYl0/wiPgL/AlmXz7uxLaL2diMMxs0Dx6M/2OLuc5NF/1OVYm3z61PMO\nm3WR5LpSLhl+0fXNWhn8ugb2+1KoS5kE3fj5tItQo05iifCHJPqDQsGH+tUtKSpa\ncXpkatcnYGMN285J9Y0fkIkyF/hzQ7jSWpOGYdbhdQrqeWZ2iE9x6wQl1gpaepPl\nuUsXQA+xtrn13k/c4LOsOxFwYIRKQ26ZIMApcQrAZQIDAQABo4ICyzCCAscwfQYI\nKwYBBQUHAQEEcTBvMEwGCCsGAQUFBzAChkBodHRwOi8vd3d3LmFjY3YuZXMvZmls\nZWFkbWluL0FyY2hpdm9zL2NlcnRpZmljYWRvcy9yYWl6YWNjdjEuY3J0MB8GCCsG\nAQUFBzABhhNodHRwOi8vb2NzcC5hY2N2LmVzMB0GA1UdDgQWBBTSh7Tj3zcnk1X2\nVuqB5TbMjB4/vTAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNKHtOPfNyeT\nVfZW6oHlNsyMHj+9MIIBcwYDVR0gBIIBajCCAWYwggFiBgRVHSAAMIIBWDCCASIG\nCCsGAQUFBwICMIIBFB6CARAAQQB1AHQAbwByAGkAZABhAGQAIABkAGUAIABDAGUA\ncgB0AGkAZgBpAGMAYQBjAGkA8wBuACAAUgBhAO0AegAgAGQAZQAgAGwAYQAgAEEA\nQwBDAFYAIAAoAEEAZwBlAG4AYwBpAGEAIABkAGUAIABUAGUAYwBuAG8AbABvAGcA\n7QBhACAAeQAgAEMAZQByAHQAaQBmAGkAYwBhAGMAaQDzAG4AIABFAGwAZQBjAHQA\ncgDzAG4AaQBjAGEALAAgAEMASQBGACAAUQA0ADYAMAAxADEANQA2AEUAKQAuACAA\nQwBQAFMAIABlAG4AIABoAHQAdABwADoALwAvAHcAdwB3AC4AYQBjAGMAdgAuAGUA\nczAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5hY2N2LmVzL2xlZ2lzbGFjaW9uX2Mu\naHRtMFUGA1UdHwROMEwwSqBIoEaGRGh0dHA6Ly93d3cuYWNjdi5lcy9maWxlYWRt\naW4vQXJjaGl2b3MvY2VydGlmaWNhZG9zL3JhaXphY2N2MV9kZXIuY3JsMA4GA1Ud\nDwEB/wQEAwIBBjAXBgNVHREEEDAOgQxhY2N2QGFjY3YuZXMwDQYJKoZIhvcNAQEF\nBQADggIBAJcxAp/n/UNnSEQU5CmH7UwoZtCPNdpNYbdKl02125DgBS4OxnnQ8pdp\nD70ER9m+27Up2pvZrqmZ1dM8MJP1jaGo/AaNRPTKFpV8M9xii6g3+CfYCS0b78gU\nJyCpZET/LtZ1qmxNYEAZSUNUY9rizLpm5U9EelvZaoErQNV/+QEnWCzI7UiRfD+m\nAM/EKXMRNt6GGT6d7hmKG9Ww7Y49nCrADdg9ZuM8Db3VlFzi4qc1GwQA9j9ajepD\nvV+JHanBsMyZ4k0ACtrJJ1vnE5Bc5PUzolVt3OAJTS+xJlsndQAJxGJ3KQhfnlms\ntn6tn1QwIgPBHnFk/vk4CpYY3QIUrCPLBhwepH2NDd4nQeit2hW3sCPdK6jT2iWH\n7ehVRE2I9DZ+hJp4rPcOVkkO1jMl1oRQQmwgEh0q1b688nCBpHBgvgW1m54ERL5h\nI6zppSSMEYCUWqKiuUnSwdzRp+0xESyeGabu4VXhwOrPDYTkF7eifKXeVSUG7szA\nh1xA2syVP1XgNce4hL60Xc16gwFy7ofmXx2utYXGJt/mwZrpHgJHnyqobalbz+xF\nd3+YJ5oyXSrjhO7FmGYvliAd3djDJ9ew+f7Zfc3Qn48LFFhRny+Lwzgt3uiP1o2H\npPVWQxaZLPSkVrQ0uGE3ycJYgBugl6H8WY3pEfbRD0tVNEYqi4Y7\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEd\nMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3Mg\nQ2xhc3MgMyBSb290IENBMB4XDTEwMTAyNjA4Mjg1OFoXDTQwMTAyNjA4Mjg1OFow\nTjELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBhc3MgQVMtOTgzMTYzMzI3MSAw\nHgYDVQQDDBdCdXlwYXNzIENsYXNzIDMgUm9vdCBDQTCCAiIwDQYJKoZIhvcNAQEB\nBQADggIPADCCAgoCggIBAKXaCpUWUOOV8l6ddjEGMnqb8RB2uACatVI2zSRHsJ8Y\nZLya9vrVediQYkwiL944PdbgqOkcLNt4EemOaFEVcsfzM4fkoF0LXOBXByow9c3E\nN3coTRiR5r/VUv1xLXA+58bEiuPwKAv0dpihi4dVsjoT/Lc+JzeOIuOoTyrvYLs9\ntznDDgFHmV0ST9tD+leh7fmdvhFHJlsTmKtdFoqwNxxXnUX/iJY2v7vKB3tvh2PX\n0DJq1l1sDPGzbjniazEuOQAnFN44wOwZZoYS6J1yFhNkUsepNxz9gjDthBgd9K5c\n/3ATAOux9TN6S9ZV+AWNS2mw9bMoNlwUxFFzTWsL8TQH2xc519woe2v1n/MuwU8X\nKhDzzMro6/1rqy6any2CbgTUUgGTLT2G/H783+9CHaZr77kgxve9oKeV/afmiSTY\nzIw0bOIjL9kSGiG5VZFvC5F5GQytQIgLcOJ60g7YaEi7ghM5EFjp2CoHxhLbWNvS\nO1UQRwUVZ2J+GGOmRj8JDlQyXr8NYnon74Do29lLBlo3WiXQCBJ31G8JUJc9yB3D\n34xFMFbG02SrZvPAXpacw8Tvw3xrizp5f7NJzz3iiZ+gMEuFuZyUJHmPfWupRWgP\nK9Dx2hzLabjKSWJtyNBjYt1gD1iqj6G8BaVmos8bdrKEZLFMOVLAMLrwjEsCsLa3\nAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFEe4zf/lb+74suwv\nTg75JbCOPGvDMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAACAj\nQTUEkMJAYmDv4jVM1z+s4jSQuKFvdvoWFqRINyzpkMLyPPgKn9iB5btb2iUspKdV\ncSQy9sgL8rxq+JOssgfCX5/bzMiKqr5qb+FJEMwx14C7u8jYog5kV+qi9cKpMRXS\nIGrs/CIBKM+GuIAeqcwRpTzyFrNHnfzSgCHEy9BHcEGhyoMZCCxt8l13nIoUE9Q2\nHJLw5QY33KbmkJs4j1xrG0aGQ0JfPgEHU1RdZX33inOhmlRaHylDFCfChQ+1iHsa\nO5S3HWCntZznKWlXWpuTekMwGwPXYshApqr8ZORK15FTAaggiG6cX0S5y2CBNOxv\n033aSF/rtJC8LakcC6wc1aJoIIAE1vyxjy+7SjENSoYc6+I2KSb12tjE8nVhz36u\ndmNKekBlk4f4HoCMhuWG1o8O/FMsYOgWYRqiPkN7zTlgVGr18okmAWiDSKIz6MkE\nkbIRNBE+6tBDGR8Dk5AM/1E9V/RBbuHLoL7ryWPNbczk+DaqaJ3tvV2XcEQNtg41\n3OEMXbugUZTLfhbrES+jkkXITHHZvMmZUldGL1DPvTVp9D0VzgalLA8+9oG6lLvD\nu79leNKGef9JOxqDDPDeeOzI8k1MGt6CKfjBWtrt7uYnXuhF0J0cUahoq0Tj0Itq\n4/g7u9xN12TyUb7mqqta6THuBrxzvxNiCp/HuZc=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIID7zCCAtegAwIBAgIBADANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMCVVMx\nEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoT\nHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xOzA5BgNVBAMTMlN0YXJmaWVs\nZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5\nMDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgZgxCzAJBgNVBAYTAlVTMRAwDgYD\nVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxTdGFy\nZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTswOQYDVQQDEzJTdGFyZmllbGQgU2Vy\ndmljZXMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBANUMOsQq+U7i9b4Zl1+OiFOxHz/Lz58gE20p\nOsgPfTz3a3Y4Y9k2YKibXlwAgLIvWX/2h/klQ4bnaRtSmpDhcePYLQ1Ob/bISdm2\n8xpWriu2dBTrz/sm4xq6HZYuajtYlIlHVv8loJNwU4PahHQUw2eeBGg6345AWh1K\nTs9DkTvnVtYAcMtS7nt9rjrnvDH5RfbCYM8TWQIrgMw0R9+53pBlbQLPLJGmpufe\nhRhJfGZOozptqbXuNC66DQO4M99H67FrjSXZm86B0UVGMpZwh94CDklDhbZsc7tk\n6mFBrMnUVN+HL8cisibMn1lUaJ/8viovxFUcdUBgF4UCVTmLfwUCAwEAAaNCMEAw\nDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFJxfAN+q\nAdcwKziIorhtSpzyEZGDMA0GCSqGSIb3DQEBCwUAA4IBAQBLNqaEd2ndOxmfZyMI\nbw5hyf2E3F/YNoHN2BtBLZ9g3ccaaNnRbobhiCPPE95Dz+I0swSdHynVv/heyNXB\nve6SbzJ08pGCL72CQnqtKrcgfU28elUSwhXqvfdqlS5sdJ/PHLTyxQGjhdByPq1z\nqwubdQxtRbeOlKyWN7Wg0I8VRw7j6IPdj/3vQQF3zCepYoUz8jcI73HPdwbeyBkd\niEDPfUYd/x7H4c7/I9vG+o1VTqkC50cRRj70/b17KSa7qWFiNyi2LSr2EIZkyXCn\n0q23KXB56jzaYyWf/Wi3MOxw+3WKt21gZ7IeyLnp2KhvAotnDU0mV3HaIPzBSlCN\nsSi6\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEIDCCAwigAwIBAgIJAISCLF8cYtBAMA0GCSqGSIb3DQEBCwUAMIGcMQswCQYD\nVQQGEwJQQTEPMA0GA1UECAwGUGFuYW1hMRQwEgYDVQQHDAtQYW5hbWEgQ2l0eTEk\nMCIGA1UECgwbVHJ1c3RDb3IgU3lzdGVtcyBTLiBkZSBSLkwuMScwJQYDVQQLDB5U\ncnVzdENvciBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxFzAVBgNVBAMMDlRydXN0Q29y\nIEVDQS0xMB4XDTE2MDIwNDEyMzIzM1oXDTI5MTIzMTE3MjgwN1owgZwxCzAJBgNV\nBAYTAlBBMQ8wDQYDVQQIDAZQYW5hbWExFDASBgNVBAcMC1BhbmFtYSBDaXR5MSQw\nIgYDVQQKDBtUcnVzdENvciBTeXN0ZW1zIFMuIGRlIFIuTC4xJzAlBgNVBAsMHlRy\ndXN0Q29yIENlcnRpZmljYXRlIEF1dGhvcml0eTEXMBUGA1UEAwwOVHJ1c3RDb3Ig\nRUNBLTEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDPj+ARtZ+odnbb\n3w9U73NjKYKtR8aja+3+XzP4Q1HpGjORMRegdMTUpwHmspI+ap3tDvl0mEDTPwOA\nBoJA6LHip1GnHYMma6ve+heRK9jGrB6xnhkB1Zem6g23xFUfJ3zSCNV2HykVh0A5\n3ThFEXXQmqc04L/NyFIduUd+Dbi7xgz2c1cWWn5DkR9VOsZtRASqnKmcp0yJF4Ou\nowReUoCLHhIlERnXDH19MURB6tuvsBzvgdAsxZohmz3tQjtQJvLsznFhBmIhVE5/\nwZ0+fyCMgMsq2JdiyIMzkX2woloPV+g7zPIlstR8L+xNxqE6FXrntl019fZISjZF\nZtS6mFjBAgMBAAGjYzBhMB0GA1UdDgQWBBREnkj1zG1I1KBLf/5ZJC+Dl5mahjAf\nBgNVHSMEGDAWgBREnkj1zG1I1KBLf/5ZJC+Dl5mahjAPBgNVHRMBAf8EBTADAQH/\nMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAQEABT41XBVwm8nHc2Fv\ncivUwo/yQ10CzsSUuZQRg2dd4mdsdXa/uwyqNsatR5Nj3B5+1t4u/ukZMjgDfxT2\nAHMsWbEhBuH7rBiVDKP/mZb3Kyeb1STMHd3BOuCYRLDE5D53sXOpZCz2HAF8P11F\nhcCF5yWPldwX8zyfGm6wyuMdKulMY/okYWLW2n62HGz1Ah3UKt1VkOsqEUc8Ll50\nsoIipX1TH0XsJ5F95yIW6MBoNtjG8U+ARDL54dHRHareqKucBK+tIA5kmE2la8BI\nWJZpTdwHjFGTot+fDz2LYLSCjaoITmJF4PkL0uDgPFveXHEnJcLmA4GLEFPjx1Wi\ntJ/X5g==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDTDCCAjSgAwIBAgIId3cGJyapsXwwDQYJKoZIhvcNAQELBQAwRDELMAkGA1UE\nBhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVz\ndCBDb21tZXJjaWFsMB4XDTEwMDEyOTE0MDYwNloXDTMwMTIzMTE0MDYwNlowRDEL\nMAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZp\ncm1UcnVzdCBDb21tZXJjaWFsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEA9htPZwcroRX1BiLLHwGy43NFBkRJLLtJJRTWzsO3qyxPxkEylFf6EqdbDuKP\nHx6GGaeqtS25Xw2Kwq+FNXkyLbscYjfysVtKPcrNcV/pQr6U6Mje+SJIZMblq8Yr\nba0F8PrVC8+a5fBQpIs7R6UjW3p6+DM/uO+Zl+MgwdYoic+U+7lF7eNAFxHUdPAL\nMeIrJmqbTFeurCA+ukV6BfO9m2kVrn1OIGPENXY6BwLJN/3HR+7o8XYdcxXyl6S1\nyHp52UKqK39c/s4mT6NmgTWvRLpUHhwwMmWd5jyTXlBOeuM61G7MGvv50jeuJCqr\nVwMiKA1JdX+3KNp1v47j3A55MQIDAQABo0IwQDAdBgNVHQ4EFgQUnZPGU4teyq8/\nnx4P5ZmVvCT2lI8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwDQYJ\nKoZIhvcNAQELBQADggEBAFis9AQOzcAN/wr91LoWXym9e2iZWEnStB03TX8nfUYG\nXUPGhi4+c7ImfU+TqbbEKpqrIZcUsd6M06uJFdhrJNTxFq7YpFzUf1GO7RgBsZNj\nvbz4YYCanrHOQnDiqX0GJX0nof5v7LMeJNrjS1UaADs1tDvZ110w/YETifLCBivt\nZ8SOyUOyXGsViQK8YvxO8rUzqrJv0wqiUOP2O+guRMLbZjipM1ZI8W0bM40NjD9g\nN53Tym1+NH4Nn3J2ixufcv1SNUFFApYvHLKac0khsUlHRUe072o0EclNmsxZt9YC\nnlpOZbWUrhvfKbAW8b8Angc6F2S1BLUjIZkKlTuXfO8=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICCzCCAZGgAwIBAgISEdK7ujNu1LzmJGjFDYQdmOhDMAoGCCqGSM49BAMDMEYx\nCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMRwwGgYDVQQD\nExNHbG9iYWxTaWduIFJvb3QgRTQ2MB4XDTE5MDMyMDAwMDAwMFoXDTQ2MDMyMDAw\nMDAwMFowRjELMAkGA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2Ex\nHDAaBgNVBAMTE0dsb2JhbFNpZ24gUm9vdCBFNDYwdjAQBgcqhkjOPQIBBgUrgQQA\nIgNiAAScDrHPt+ieUnd1NPqlRqetMhkytAepJ8qUuwzSChDH2omwlwxwEwkBjtjq\nR+q+soArzfwoDdusvKSGN+1wCAB16pMLey5SnCNoIwZD7JIvU4Tb+0cUB+hflGdd\nyXqBPCCjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\nDgQWBBQxCpCPtsad0kRLgLWi5h+xEk8blTAKBggqhkjOPQQDAwNoADBlAjEA31SQ\n7Zvvi5QCkxeCmb6zniz2C5GMn0oUsfZkvLtoURMMA/cVi4RguYv/Uo7njLwcAjA8\n+RHUjE7AwWHCFUyqqx0LMV87HOIAl0Qx5v5zli/altP+CAezNIm8BZ/3Hobui3A=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIID9jCCAt6gAwIBAgIQJDJ18h0v0gkz97RqytDzmDANBgkqhkiG9w0BAQsFADCB\nlDELMAkGA1UEBhMCVVMxHTAbBgNVBAoTFFN5bWFudGVjIENvcnBvcmF0aW9uMR8w\nHQYDVQQLExZTeW1hbnRlYyBUcnVzdCBOZXR3b3JrMUUwQwYDVQQDEzxTeW1hbnRl\nYyBDbGFzcyAxIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5\nIC0gRzYwHhcNMTExMDE4MDAwMDAwWhcNMzcxMjAxMjM1OTU5WjCBlDELMAkGA1UE\nBhMCVVMxHTAbBgNVBAoTFFN5bWFudGVjIENvcnBvcmF0aW9uMR8wHQYDVQQLExZT\neW1hbnRlYyBUcnVzdCBOZXR3b3JrMUUwQwYDVQQDEzxTeW1hbnRlYyBDbGFzcyAx\nIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzYwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDHOddJZKmZgiJM6kXZBxbje/SD\n6Jlz+muxNuCad6BAwoGNAcfMjL2Pffd543pMA03Z+/2HOCgs3ZqLVAjbZ/sbjP4o\nki++t7JIp4Gh2F6Iw8w5QEFa0dzl2hCfL9oBTf0uRnz5LicKaTfukaMbasxEvxvH\nw9QRslBglwm9LiL1QYRmn81ApqkAgMEflZKf3vNI79sdd2H8f9/ulqRy0LY+/3gn\nr8uSFWkI22MQ4uaXrG7crPaizh5HmbmJtxLmodTNWRFnw2+F2EJOKL5ZVVkElauP\nN4C/DfD8HzpkMViBeNfiNfYgPym4jxZuPkjctUwH4fIa6n4KedaovetdhitNAgMB\nAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBQzQejIORIVk0jyljIuWvXalF9TYDANBgkqhkiG9w0BAQsFAAOCAQEAFeNzV7EX\ntl9JaUSm9l56Z6zS3nVJq/4lVcc6yUQVEG6/MWvL2QeTfxyFYwDjMhLgzMv7OWyP\n4lPiPEAz2aSMR+atWPuJr+PehilWNCxFuBL6RIluLRQlKCQBZdbqUqwFblYSCT3Q\ndPTXvQbKqDqNVkL6jXI+dPEDct+HG14OelWWLDi3mIXNTTNEyZSPWjEwN0ujOhKz\n5zbRIWhLLTjmU64cJVYIVgNnhJ3Gw84kYsdMNs+wBkS39V8C3dlU6S+QTnrIToNA\nDJqXPDe/v+z28LSFdyjBC8hnghAXOKK3Buqbvzr46SMHv3TgmDgVVXjucgBcGaP0\n0jPg/73RVDkpDw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFpDCCA4ygAwIBAgIQOcqTHO9D88aOk8f0ZIk4fjANBgkqhkiG9w0BAQsFADBs\nMQswCQYDVQQGEwJHUjE3MDUGA1UECgwuSGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJl\nc2VhcmNoIEluc3RpdHV0aW9ucyBDQTEkMCIGA1UEAwwbSEFSSUNBIFRMUyBSU0Eg\nUm9vdCBDQSAyMDIxMB4XDTIxMDIxOTEwNTUzOFoXDTQ1MDIxMzEwNTUzN1owbDEL\nMAkGA1UEBhMCR1IxNzA1BgNVBAoMLkhlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNl\nYXJjaCBJbnN0aXR1dGlvbnMgQ0ExJDAiBgNVBAMMG0hBUklDQSBUTFMgUlNBIFJv\nb3QgQ0EgMjAyMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAIvC569l\nmwVnlskNJLnQDmT8zuIkGCyEf3dRywQRNrhe7Wlxp57kJQmXZ8FHws+RFjZiPTgE\n4VGC/6zStGndLuwRo0Xua2s7TL+MjaQenRG56Tj5eg4MmOIjHdFOY9TnuEFE+2uv\na9of08WRiFukiZLRgeaMOVig1mlDqa2YUlhu2wr7a89o+uOkXjpFc5gH6l8Cct4M\npbOfrqkdtx2z/IpZ525yZa31MJQjB/OCFks1mJxTuy/K5FrZx40d/JiZ+yykgmvw\nKh+OC19xXFyuQnspiYHLA6OZyoieC0AJQTPb5lh6/a6ZcMBaD9YThnEvdmn8kN3b\nLW7R8pv1GmuebxWMevBLKKAiOIAkbDakO/IwkfN4E8/BPzWr8R0RI7VDIp4BkrcY\nAuUR0YLbFQDMYTfBKnya4dC6s1BG7oKsnTH4+yPiAwBIcKMJJnkVU2DzOFytOOqB\nAGMUuTNe3QvboEUHGjMJ+E20pwKmafTCWQWIZYVWrkvL4N48fS0ayOn7H6NhStYq\nE613TBoYm5EPWNgGVMWX+Ko/IIqmhaZ39qb8HOLubpQzKoNQhArlT4b4UEV4AIHr\nW2jjJo3Me1xR9BQsQL4aYB16cmEdH2MtiKrOokWQCPxrvrNQKlr9qEgYRtaQQJKQ\nCoReaDH46+0N0x3GfZkYVVYnZS6NRcUk7M7jAgMBAAGjQjBAMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFApII6ZgpJIKM+qTW8VX6iVNvRLuMA4GA1UdDwEB/wQE\nAwIBhjANBgkqhkiG9w0BAQsFAAOCAgEAPpBIqm5iFSVmewzVjIuJndftTgfvnNAU\nX15QvWiWkKQUEapobQk1OUAJ2vQJLDSle1mESSmXdMgHHkdt8s4cUCbjnj1AUz/3\nf5Z2EMVGpdAgS1D0NTsY9FVqQRtHBmg8uwkIYtlfVUKqrFOFrJVWNlar5AWMxaja\nH6NpvVMPxP/cyuN+8kyIhkdGGvMA9YCRotxDQpSbIPDRzbLrLFPCU3hKTwSUQZqP\nJzLB5UkZv/HywouoCjkxKLR9YjYsTewfM7Z+d21+UPCfDtcRj88YxeMn/ibvBZ3P\nzzfF0HvaO7AWhAw6k9a+F9sPPg4ZeAnHqQJyIkv3N3a6dcSFA1pj1bF1BcK5vZSt\njBWZp5N99sXzqnTPBIWUmAD04vnKJGW/4GKvyMX6ssmeVkjaef2WdhW+o45WxLM0\n/L5H9MG0qPzVMIho7suuyWPEdr6sOBjhXlzPrjoiUevRi7PzKzMHVIf6tLITe7pT\nBGIBnfHAT+7hOtSLIBD6Alfm78ELt5BGnBkpjNxvoEppaZS3JGWg/6w/zgH7IS79\naPib8qXPMThcFarmlwDB31qlpzmq6YR/PFGoOtmUW4y/Twhx5duoXNTSpv4Ao8YW\nxw/ogM4cKGR0GQjTQuPOAF1/sdwTsOEFy9EgqoZ0njnnkf3/W9b3raYvAwtt41dU\n63ZTGI0RmLo=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFzzCCA7egAwIBAgIUCBZfikyl7ADJk0DfxMauI7gcWqQwDQYJKoZIhvcNAQEL\nBQAwbzELMAkGA1UEBhMCSEsxEjAQBgNVBAgTCUhvbmcgS29uZzESMBAGA1UEBxMJ\nSG9uZyBLb25nMRYwFAYDVQQKEw1Ib25na29uZyBQb3N0MSAwHgYDVQQDExdIb25n\na29uZyBQb3N0IFJvb3QgQ0EgMzAeFw0xNzA2MDMwMjI5NDZaFw00MjA2MDMwMjI5\nNDZaMG8xCzAJBgNVBAYTAkhLMRIwEAYDVQQIEwlIb25nIEtvbmcxEjAQBgNVBAcT\nCUhvbmcgS29uZzEWMBQGA1UEChMNSG9uZ2tvbmcgUG9zdDEgMB4GA1UEAxMXSG9u\nZ2tvbmcgUG9zdCBSb290IENBIDMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK\nAoICAQCziNfqzg8gTr7m1gNt7ln8wlffKWihgw4+aMdoWJwcYEuJQwy51BWy7sFO\ndem1p+/l6TWZ5Mwc50tfjTMwIDNT2aa71T4Tjukfh0mtUC1Qyhi+AViiE3CWu4mI\nVoBc+L0sPOFMV4i707mV78vH9toxdCim5lSJ9UExyuUmGs2C4HDaOym71QP1mbpV\n9WTRYA6ziUm4ii8F0oRFKHyPaFASePwLtVPLwpgchKOesL4jpNrcyCse2m5FHomY\n2vkALgbpDDtw1VAliJnLzXNg99X/NWfFobxeq81KuEXryGgeDQ0URhLj0mRiikKY\nvLTGCAj4/ahMZJx2Ab0vqWwzD9g/KLg8aQFChn5pwckGyuV6RmXpwtZQQS4/t+Tt\nbNe/JgERohYpSms0BpDsE9K2+2p20jzt8NYt3eEV7KObLyzJPivkaTv/ciWxNoZb\nx39ri1UbSsUgYT2uy1DhCDq+sI9jQVMwCFk8mB13umOResoQUGC/8Ne8lYePl8X+\nl2oBlKN8W4UdKjk60FSh0Tlxnf0h+bV78OLgAo9uliQlLKAeLKjEiafv7ZkGL7YK\nTE/bosw3Gq9HhS2KX8Q0NEwA/RiTZxPRN+ZItIsGxVd7GYYKecsAyVKvQv83j+Gj\nHno9UKtjBucVtT+2RTeUN7F+8kjDf8V1/peNRY8apxpyKBpADwIDAQABo2MwYTAP\nBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBQXnc0e\ni9Y5K3DTXNSguB+wAPzFYTAdBgNVHQ4EFgQUF53NHovWOStw01zUoLgfsAD8xWEw\nDQYJKoZIhvcNAQELBQADggIBAFbVe27mIgHSQpsY1Q7XZiNc4/6gx5LS6ZStS6LG\n7BJ8dNVI0lkUmcDrudHr9EgwW62nV3OZqdPlt9EuWSRY3GguLmLYauRwCy0gUCCk\nMpXRAJi70/33MvJJrsZ64Ee+bs7Lo3I6LWldy8joRTnU+kLBEUx3XZL7av9YROXr\ngZ6voJmtvqkBZss4HTzfQx/0TW60uhdG/H39h4F5ag0zD/ov+BS5gLNdTaqX4fnk\nGMX41TiMJjz98iji7lpJiCzfeT2OnpA8vUFKOt1b9pq0zj8lMH8yfaIDlNDceqFS\n3m6TjRgm/VWsvY+b0s+v54Ysyx8Jb6NvqYTUc79NoXQbTiNg8swOqn+knEwlqLJm\nOzj/2ZQw9nKEvmhVEA/GcywWaZMH/rFF7buiVWqw2rVKAiUnhde3t4ZEFolsgCs+\nl6mc1X5VTMbeRRAc6uk7nwNT7u56AQIWeNTowr5GdogTPyK7SBIdUgC0An4hGh6c\nJfTzPV4e0hz5sy229zdcxsshTrD3mUcYhcErulWuBurQB7Lcq9CClnXO0lD+mefP\nL5/ndtFhKvshuzHQqp9HpLIiyhY6UFfEW0NnxWViA0kB60PZ2Pierc+xYw5F9KBa\nLJstxabArahH9CdMOA0uG0k7UvToiIMrVCjU8jVStDKDYmlkDJGcn5fqdBb9HxEG\nmpv0\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFRzCCAy+gAwIBAgIRAI4P+UuQcWhlM1T01EQ5t+AwDQYJKoZIhvcNAQELBQAw\nPTELMAkGA1UEBhMCVVMxEjAQBgNVBAoTCUNlcnRhaW5seTEaMBgGA1UEAxMRQ2Vy\ndGFpbmx5IFJvb3QgUjEwHhcNMjEwNDAxMDAwMDAwWhcNNDYwNDAxMDAwMDAwWjA9\nMQswCQYDVQQGEwJVUzESMBAGA1UEChMJQ2VydGFpbmx5MRowGAYDVQQDExFDZXJ0\nYWlubHkgUm9vdCBSMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANA2\n1B/q3avk0bbm+yLA3RMNansiExyXPGhjZjKcA7WNpIGD2ngwEc/csiu+kr+O5MQT\nvqRoTNoCaBZ0vrLdBORrKt03H2As2/X3oXyVtwxwhi7xOu9S98zTm/mLvg7fMbed\naFySpvXl8wo0tf97ouSHocavFwDvA5HtqRxOcT3Si2yJ9HiG5mpJoM610rCrm/b0\n1C7jcvk2xusVtyWMOvwlDbMicyF0yEqWYZL1LwsYpfSt4u5BvQF5+paMjRcCMLT5\nr3gajLQ2EBAHBXDQ9DGQilHFhiZ5shGIXsXwClTNSaa/ApzSRKft43jvRl5tcdF5\ncBxGX1HpyTfcX35pe0HfNEXgO4T0oYoKNp43zGJS4YkNKPl6I7ENPT2a/Z2B7yyQ\nwHtETrtJ4A5KVpK8y7XdeReJkd5hiXSSqOMyhb5OhaRLWcsrxXiOcVTQAjeZjOVJ\n6uBUcqQRBi8LjMFbvrWhsFNunLhgkR9Za/kt9JQKl7XsxXYDVBtlUrpMklZRNaBA\n2CnbrlJ2Oy0wQJuK0EJWtLeIAaSHO1OWzaMWj/Nmqhexx2DgwUMFDO6bW2BvBlyH\nWyf5QBGenDPBt+U1VwV/J84XIIwc/PH72jEpSe31C4SnT8H2TsIonPru4K8H+zMR\neiFPCyEQtkA6qyI6BJyLm4SGcprSp6XEtHWRqSsjAgMBAAGjQjBAMA4GA1UdDwEB\n/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTgqj8ljZ9EXME66C6u\nd0yEPmcM9DANBgkqhkiG9w0BAQsFAAOCAgEAuVevuBLaV4OPaAszHQNTVfSVcOQr\nPbA56/qJYv331hgELyE03fFo8NWWWt7CgKPBjcZq91l3rhVkz1t5BXdm6ozTaw3d\n8VkswTOlMIAVRQdFGjEitpIAq5lNOo93r6kiyi9jyhXWx8bwPWz8HA2YEGGeEaIi\n1wrykXprOQ4vMMM2SZ/g6Q8CRFA3lFV96p/2O7qUpUzpvD5RtOjKkjZUbVwlKNrd\nrRT90+7iIgXr0PK3aBLXWopBGsaSpVo7Y0VPv+E6dyIvXL9G+VoDhRNCX8reU9di\ntaY1BMJH/5n9hN9czulegChB8n3nHpDYT3Y+gjwN/KUD+nsa2UUeYNrEjvn8K8l7\nlcUq/6qJ34IxD3L/DCfXCh5WAFAeDJDBlrXYFIW7pw0WwfgHJBu6haEaBQmAupVj\nyTrsJZ9/nbqkRxWbRHDxakvWOF5D8xh+UG7pWijmZeZ3Gzr9Hb4DJqPb1OG7fpYn\nKx3upPvaJVQTA945xsMfTZDsjxtK0hzthZU4UHlG1sGQUDGpXJpuHfUzVounmdLy\nyCwzk5Iwx06MZTMQZBf9JBeW0Y3COmor6xOLRPIh80oat3df1+2IpHLlOR+Vnb5n\nwXARPbv0+Em34yaXOp/SX3z7wJl8OSngex2/DaeP0ik0biQVy96QXr8axGbqwua6\nOV+KmalBWQewLK8=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIUeFhfLq0sGUvjNwc1NBMotZbUZZMwDQYJKoZIhvcNAQEL\nBQAwSDELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAc\nBgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMSBHMzAeFw0xMjAxMTIxNzI3NDRaFw00\nMjAxMTIxNzI3NDRaMEgxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBM\naW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDEgRzMwggIiMA0GCSqG\nSIb3DQEBAQUAA4ICDwAwggIKAoICAQCgvlAQjunybEC0BJyFuTHK3C3kEakEPBtV\nwedYMB0ktMPvhd6MLOHBPd+C5k+tR4ds7FtJwUrVu4/sh6x/gpqG7D0DmVIB0jWe\nrNrwU8lmPNSsAgHaJNM7qAJGr6Qc4/hzWHa39g6QDbXwz8z6+cZM5cOGMAqNF341\n68Xfuw6cwI2H44g4hWf6Pser4BOcBRiYz5P1sZK0/CPTz9XEJ0ngnjybCKOLXSoh\n4Pw5qlPafX7PGglTvF0FBM+hSo+LdoINofjSxxR3W5A2B4GbPgb6Ul5jxaYA/qXp\nUhtStZI5cgMJYr2wYBZupt0lwgNm3fME0UDiTouG9G/lg6AnhF4EwfWQvTA9xO+o\nabw4m6SkltFi2mnAAZauy8RRNOoMqv8hjlmPSlzkYZqn0ukqeI1RPToV7qJZjqlc\n3sX5kCLliEVx3ZGZbHqfPT2YfF72vhZooF6uCyP8Wg+qInYtyaEQHeTTRCOQiJ/G\nKubX9ZqzWB4vMIkIG1SitZgj7Ah3HJVdYdHLiZxfokqRmu8hqkkWCKi9YSgxyXSt\nhfbZxbGL0eUQMk1fiyA6PEkfM4VZDdvLCXVDaXP7a3F98N/ETH3Goy7IlXnLc6KO\nTk0k+17kBL5yG6YnLUlamXrXXAkgt3+UuU/xDRxeiEIbEbfnkduebPRq34wGmAOt\nzCjvpUfzUwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB\nBjAdBgNVHQ4EFgQUo5fW816iEOGrRZ88F2Q87gFwnMwwDQYJKoZIhvcNAQELBQAD\nggIBABj6W3X8PnrHX3fHyt/PX8MSxEBd1DKquGrX1RUVRpgjpeaQWxiZTOOtQqOC\nMTaIzen7xASWSIsBx40Bz1szBpZGZnQdT+3Btrm0DWHMY37XLneMlhwqI2hrhVd2\ncDMT/uFPpiN3GPoajOi9ZcnPP/TJF9zrx7zABC4tRi9pZsMbj/7sPtPKlL92CiUN\nqXsCHKnQO18LwIE6PWThv6ctTr1NxNgpxiIY0MWscgKCP6o6ojoilzHdCGPDdRS5\nYCgtW2jgFqlmgiNR9etT2DGbe+m3nUvriBbP+V04ikkwj+3x6xn0dxoxGE1nVGwv\nb2X52z3sIexe9PSLymBlVNFxZPT5pqOBMzYzcfCkeF9OrYMh3jRJjehZrJ3ydlo2\n8hP0r+AJx2EqbPfgna67hkooby7utHnNkDPDs3b69fBsnQGQ+p6Q9pxyz0fawx/k\nNSBT8lTR32GDpgLiJTjehTItXnOQUl1CxM49S+H5GYQd1aJQzEH7QRTDvdbJWqNj\nZgKAvQU6O0ec7AAmTPWIUb+oI38YB7AL7YsmoWTTYUrrXJ/es69nA7Mf3W1daWhp\nq1467HxpvMc7hU6eFbm0FU/DlXpY18ls6Wy58yljXrQs8C097Vpl4KlbQMJImYFt\nnh8GKjwStIsPm6Ik8KaN1nrgS7ZklmOVhMJKzRwuJIczYOXD\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICITCCAaegAwIBAgIQdlP+qicdlUZd1vGe5biQCjAKBggqhkjOPQQDAzBSMQsw\nCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEoMCYGA1UEAxMf\nR2xvYmFsU2lnbiBTZWN1cmUgTWFpbCBSb290IEU0NTAeFw0yMDAzMTgwMDAwMDBa\nFw00NTAzMTgwMDAwMDBaMFIxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxT\naWduIG52LXNhMSgwJgYDVQQDEx9HbG9iYWxTaWduIFNlY3VyZSBNYWlsIFJvb3Qg\nRTQ1MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE+XmLgUc3iZY/RUlQfxomC5Myfi7A\nwKcImsNuj5s+CyLsN1O3b4qwvCc3S22pRjvZH/+loUS7LXO/nkEHXFObUQg6Wrtv\nOMcWkXjCShNpHYLfWi8AiJaiLhx0+Z1+ZjeKo0IwQDAOBgNVHQ8BAf8EBAMCAYYw\nDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU3xNei1/CQAL9VreUTLYe1aaxFJYw\nCgYIKoZIzj0EAwMDaAAwZQIwE7C+13EgPuSrnM42En1fTB8qtWlFM1/TLVqy5IjH\n3go2QjJ5naZruuH5RCp7isMSAjEAoGYcToedh8ntmUwbCu4tYMM3xx3NtXKw2cbv\nvPL/P/BS3QjnqmR5w+RpV5EvpMt8\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIID5jCCAs6gAwIBAgIQV8szb8JcFuZHFhfjkDFo4DANBgkqhkiG9w0BAQUFADBi\nMQswCQYDVQQGEwJVUzEhMB8GA1UEChMYTmV0d29yayBTb2x1dGlvbnMgTC5MLkMu\nMTAwLgYDVQQDEydOZXR3b3JrIFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBBdXRob3Jp\ndHkwHhcNMDYxMjAxMDAwMDAwWhcNMjkxMjMxMjM1OTU5WjBiMQswCQYDVQQGEwJV\nUzEhMB8GA1UEChMYTmV0d29yayBTb2x1dGlvbnMgTC5MLkMuMTAwLgYDVQQDEydO\nZXR3b3JrIFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkvH6SMG3G2I4rC7xGzuAnlt7e+foS0zwz\nc7MEL7xxjOWftiJgPl9dzgn/ggwbmlFQGiaJ3dVhXRncEg8tCqJDXRfQNJIg6nPP\nOCwGJgl6cvf6UDL4wpPTaaIjzkGxzOTVHzbRijr4jGPiFFlp7Q3Tf2vouAPlT2rl\nmGNpSAW+Lv8ztumXWWn4Zxmuk2GWRBXTcrA/vGp97Eh/jcOrqnErU2lBUzS1sLnF\nBgrEsEX1QV1uiUV7PTsmjHTC5dLRfbIR1PtYMiKagMnc/Qzpf14Dl847ABSHJ3A4\nqY5usyd2mFHgBeMhqxrVhSI8KbWaFsWAqPS7azCPL0YCorEMIuDTAgMBAAGjgZcw\ngZQwHQYDVR0OBBYEFCEwyfsA106Y2oeqKtCnLrFAMadMMA4GA1UdDwEB/wQEAwIB\nBjAPBgNVHRMBAf8EBTADAQH/MFIGA1UdHwRLMEkwR6BFoEOGQWh0dHA6Ly9jcmwu\nbmV0c29sc3NsLmNvbS9OZXR3b3JrU29sdXRpb25zQ2VydGlmaWNhdGVBdXRob3Jp\ndHkuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQC7rkvnt1frf6ott3NHhWrB5KUd5Oc8\n6fRZZXe1eltajSU24HqXLjjAV2CDmAaDn7l2em5Q4LqILPxFzBiwmZVRDuwduIj/\nh1AcgsLj4DKAv6ALR8jDMe+ZZzKATxcheQxpXN5eNK4CtSbqUN9/GGUsyfJj4akH\n/nxxH2szJGoeBfcFaMBqEssuXmHLrijTfsK0ZpEmXzwuJF/LWA/rKOyvEZbz3Htv\nwKeI8lN3s2Berq4o2jUsbzRF0ybh3uxbTydrFny9RAQYgrOJeRcQcT16ohZO9QHN\npGxlaKFJdlxDydi8NmdspZS11My5vWo1ViHe2MPr+8ukYEywVaCge1ey\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIID+TCCAuGgAwIBAgIQW1fXqEywr9nTb0ugMbTW4jANBgkqhkiG9w0BAQUFADB5\nMQswCQYDVQQGEwJVUzENMAsGA1UEChMEVklTQTEvMC0GA1UECxMmVmlzYSBJbnRl\ncm5hdGlvbmFsIFNlcnZpY2UgQXNzb2NpYXRpb24xKjAoBgNVBAMTIVZpc2EgSW5m\nb3JtYXRpb24gRGVsaXZlcnkgUm9vdCBDQTAeFw0wNTA2MjcxNzQyNDJaFw0yNTA2\nMjkxNzQyNDJaMHkxCzAJBgNVBAYTAlVTMQ0wCwYDVQQKEwRWSVNBMS8wLQYDVQQL\nEyZWaXNhIEludGVybmF0aW9uYWwgU2VydmljZSBBc3NvY2lhdGlvbjEqMCgGA1UE\nAxMhVmlzYSBJbmZvcm1hdGlvbiBEZWxpdmVyeSBSb290IENBMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyREA4R/QkkfpLx0cYjga/EhIPZpchH0MZsRZ\nFfP6C2ITtf/Wc+MtgD4yTK0yoiXvni3d+aCtEgK3GDvkdgYrgF76ROJFZwUQjQ9l\nx42gRT05DbXvWFoy7dTglCZ9z/Tt2Cnktv9oxKgmkeHY/CyfpCBg1S8xth2JlGMR\n0ug/GMO5zANuegZOv438p5Lt5So+du2Gl+RMFQqEPwqN5uJSqAe0VtmB4gWdQ8on\nBj2ZAM2R73QW7UW0Igt2vA4JaSiNtaAG/Y/58VXWHGgbq7rDtNK1R30X0kJV0rGA\nib3RSwB3LpG7bOjbIucV5mQgJoVjoA1e05w6g1x/KmNTmOGRVwIDAQABo30wezAP\nBgNVHRMBAf8EBTADAQH/MDkGA1UdIAQyMDAwLgYFZ4EDAgEwJTAVBggrBgEFBQcC\nARYJMS4yLjMuNC41MAwGCCsGAQUFBwICMAAwDgYDVR0PAQH/BAQDAgEGMB0GA1Ud\nDgQWBBRPitp2/2d3I5qmgH1924h1hfeBejANBgkqhkiG9w0BAQUFAAOCAQEACUW1\nQdUHdDJydgDPmYt+telnG/Su+DPaf1cregzlN43bJaJosMP7NwjoJY/H2He4XLWb\n5rXEkl+xH1UyUwF7mtaUoxbGxEvt8hPZSTB4da2mzXgwKvXuHyzF5Qjy1hOB0/pS\nWaF9ARpVKJJ7TOJQdGKBsF2Ty4fSCLqZLgfxbqwMsd9sysXI3rDXjIhekqvbgeLz\nPqZr+pfgFhwCCLSMQWl5Ll3u7Qk9wR094DZ6jj6+JCVCRUS3HyabH4OlM0Vc2K+j\nINsF/64Or7GNtRf9HYEJvrPxHINxl3JVwhYj4ASeaO4KwhVbwtw94Tc/XrGcexDo\nc5lC3rAi4/UZqweYCw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEuTCCA6GgAwIBAgIQQBrEZCGzEyEDDrvkEhrFHTANBgkqhkiG9w0BAQsFADCB\nvTELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL\nExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwOCBWZXJp\nU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MTgwNgYDVQQDEy9W\nZXJpU2lnbiBVbml2ZXJzYWwgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAe\nFw0wODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIG9MQswCQYDVQQGEwJVUzEX\nMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0\nIE5ldHdvcmsxOjA4BgNVBAsTMShjKSAyMDA4IFZlcmlTaWduLCBJbmMuIC0gRm9y\nIGF1dGhvcml6ZWQgdXNlIG9ubHkxODA2BgNVBAMTL1ZlcmlTaWduIFVuaXZlcnNh\nbCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEAx2E3XrEBNNti1xWb/1hajCMj1mCOkdeQmIN65lgZOIzF\n9uVkhbSicfvtvbnazU0AtMgtc6XHaXGVHzk8skQHnOgO+k1KxCHfKWGPMiJhgsWH\nH26MfF8WIFFE0XBPV+rjHOPMee5Y2A7Cs0WTwCznmhcrewA3ekEzeOEz4vMQGn+H\nLL729fdC4uW/h2KJXwBL38Xd5HVEMkE6HnFuacsLdUYI0crSK5XQz/u5QGtkjFdN\n/BMReYTtXlT2NJ8IAfMQJQYXStrxHXpma5hgZqTZ79IugvHw7wnqRMkVauIDbjPT\nrJ9VAMf2CGqUuV/c4DPxhGD5WycRtPwW8rtWaoAljQIDAQABo4GyMIGvMA8GA1Ud\nEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMG0GCCsGAQUFBwEMBGEwX6FdoFsw\nWTBXMFUWCWltYWdlL2dpZjAhMB8wBwYFKw4DAhoEFI/l0xqGrI2Oa8PPgGrUSBgs\nexkuMCUWI2h0dHA6Ly9sb2dvLnZlcmlzaWduLmNvbS92c2xvZ28uZ2lmMB0GA1Ud\nDgQWBBS2d/ppSEefUxLVwuoHMnYH0ZcHGTANBgkqhkiG9w0BAQsFAAOCAQEASvj4\nsAPmLGd75JR3Y8xuTPl9Dg3cyLk1uXBPY/ok+myDjEedO2Pzmvl2MpWRsXe8rJq+\nseQxIcaBlVZaDrHC1LGmWazxY8u4TB1ZkErvkBYoH1quEPuBUDgMbMzxPcP1Y+Oz\n4yHJJDnp/RVmRvQbEdBNc6N9Rvk97ahfYtTxP/jgdFcrGJ2BtMQo2pSXpXDrrB2+\nBxHw1dvd5Yzw1TKwg+ZX4o+/vqGqvz0dtdQ46tewXDpPaj+PwGZsY6rp2aQW9IHR\nlRQOfc2VNNnSj3BzgXucfr2YYdhFh5iQxeuGMMY1v/D/w1WIg0vvBZIGcfK4mJO3\n7M2CYfE45k+XmCpajQ==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFazCCA1OgAwIBAgIRAIIQz7DSQONZRGPgu2OCiwAwDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTEwNDM4\nWhcNMzUwNjA0MTEwNDM4WjBPMQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJu\nZXQgU2VjdXJpdHkgUmVzZWFyY2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBY\nMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK3oJHP0FDfzm54rVygc\nh77ct984kIxuPOZXoHj3dcKi/vVqbvYATyjb3miGbESTtrFj/RQSa78f0uoxmyF+\n0TM8ukj13Xnfs7j/EvEhmkvBioZxaUpmZmyPfjxwv60pIgbz5MDmgK7iS4+3mX6U\nA5/TR5d8mUgjU+g4rk8Kb4Mu0UlXjIB0ttov0DiNewNwIRt18jA8+o+u3dpjq+sW\nT8KOEUt+zwvo/7V3LvSye0rgTBIlDHCNAymg4VMk7BPZ7hm/ELNKjD+Jo2FR3qyH\nB5T0Y3HsLuJvW5iB4YlcNHlsdu87kGJ55tukmi8mxdAQ4Q7e2RCOFvu396j3x+UC\nB5iPNgiV5+I3lg02dZ77DnKxHZu8A/lJBdiB3QW0KtZB6awBdpUKD9jf1b0SHzUv\nKBds0pjBqAlkd25HN7rOrFleaJ1/ctaJxQZBKT5ZPt0m9STJEadao0xAH0ahmbWn\nOlFuhjuefXKnEgV4We0+UXgVCwOPjdAvBbI+e0ocS3MFEvzG6uBQE3xDk3SzynTn\njh8BCNAw1FtxNrQHusEwMFxIt4I7mKZ9YIqioymCzLq9gwQbooMDQaHWBfEbwrbw\nqHyGO0aoSCqI3Haadr8faqU9GY/rOPNk3sgrDQoo//fb4hVC1CLQJ13hef4Y53CI\nrU7m2Ys6xt0nUW7/vGT1M0NPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNV\nHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR5tFnme7bl5AFzgAiIyBpY9umbbjANBgkq\nhkiG9w0BAQsFAAOCAgEAVR9YqbyyqFDQDLHYGmkgJykIrGF1XIpu+ILlaS/V9lZL\nubhzEFnTIZd+50xx+7LSYK05qAvqFyFWhfFQDlnrzuBZ6brJFe+GnY+EgPbk6ZGQ\n3BebYhtF8GaV0nxvwuo77x/Py9auJ/GpsMiu/X1+mvoiBOv/2X/qkSsisRcOj/KK\nNFtY2PwByVS5uCbMiogziUwthDyC3+6WVwW6LLv3xLfHTjuCvjHIInNzktHCgKQ5\nORAzI4JMPJ+GslWYHb4phowim57iaztXOoJwTdwJx4nLCgdNbOhdjsnvzqvHu7Ur\nTkXWStAmzOVyyghqpZXjFaH3pO3JLF+l+/+sKAIuvtd7u+Nxe5AW0wdeRlN8NwdC\njNPElpzVmbUq4JUagEiuTDkHzsxHpFKVK7q4+63SM1N95R1NbdWhscdCb+ZAJzVc\noyi3B43njTOQ5yOf+1CceWxG1bQVs5ZufpsMljq4Ui0/1lvh+wjChP4kqKOJ2qxq\n4RgqsahDYVvTH9w7jXbyLeiNdd8XM2w9U/t7y0Ff/9yi0GE44Za4rF2LN9d11TPA\nmRGunUHBcnWEvgJBQl9nJEiU0Zsnvgc/ubhPgXRR4Xq37Z0j4r7g1SgEEzwxA57d\nemyPxgcYxn/eR44/KJ4EBs+lVDR3veyJm+kXQ99b21/+jh5Xos1AnX5iItreGCc=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEMDCCAxigAwIBAgIQUJRs7Bjq1ZxN1ZfvdY+grTANBgkqhkiG9w0BAQUFADCB\ngjELMAkGA1UEBhMCVVMxHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEk\nMCIGA1UEChMbWFJhbXAgU2VjdXJpdHkgU2VydmljZXMgSW5jMS0wKwYDVQQDEyRY\nUmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDQxMTAxMTcx\nNDA0WhcNMzUwMTAxMDUzNzE5WjCBgjELMAkGA1UEBhMCVVMxHjAcBgNVBAsTFXd3\ndy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMbWFJhbXAgU2VjdXJpdHkgU2Vy\ndmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBB\ndXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYJB69FbS6\n38eMpSe2OAtp87ZOqCwuIR1cRN8hXX4jdP5efrRKt6atH67gBhbim1vZZ3RrXYCP\nKZ2GG9mcDZhtdhAoWORlsH9KmHmf4MMxfoArtYzAQDsRhtDLooY2YKTVMIJt2W7Q\nDxIEM5dfT2Fa8OT5kavnHTu86M/0ay00fOJIYRyO82FEzG+gSqmUsE3a56k0enI4\nqEHMPJQRfevIpoy3hsvKMzvZPTeL+3o+hiznc9cKV6xkmxnr9A8ECIqsAxcZZPRa\nJSKNNCyy9mgdEm3Tih4U2sSPpuIjhdV6Db1q4Ons7Be7QhtnqiXtRYMh/MHJfNVi\nPvryxS3T/dRlAgMBAAGjgZ8wgZwwEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0P\nBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFMZPoj0GY4QJnM5i5ASs\njVy16bYbMDYGA1UdHwQvMC0wK6ApoCeGJWh0dHA6Ly9jcmwueHJhbXBzZWN1cml0\neS5jb20vWEdDQS5jcmwwEAYJKwYBBAGCNxUBBAMCAQEwDQYJKoZIhvcNAQEFBQAD\nggEBAJEVOQMBG2f7Shz5CmBbodpNl2L5JFMn14JkTpAuw0kbK5rc/Kh4ZzXxHfAR\nvbdI4xD2Dd8/0sm2qlWkSLoC295ZLhVbO50WfUfXN+pfTXYSNrsf16GBBEYgoyxt\nqZ4Bfj8pzgCT3/3JknOJiWSe5yvkHJEs0rnOfc5vMZnT5r7SHpDwCRR5XCOrTdLa\nIR9NmXmd4c8nnxCbHIgNsIpkQTG4DmyQJKSbXHGPurt+HBvbaoAPIbzp26a3QPSy\ni6mx5O+aGtA9aZnuqCij4Tyz8LIRnM98QObd50N9otg6tamN8jSZxNQQ4Qb9CYQQ\nO+7ETPTsJ3xCwnR8gooJybQDJbw=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIGLzCCBBegAwIBAgIIJaHfyjPLWQIwDQYJKoZIhvcNAQELBQAwgaQxCzAJBgNV\nBAYTAlBBMQ8wDQYDVQQIDAZQYW5hbWExFDASBgNVBAcMC1BhbmFtYSBDaXR5MSQw\nIgYDVQQKDBtUcnVzdENvciBTeXN0ZW1zIFMuIGRlIFIuTC4xJzAlBgNVBAsMHlRy\ndXN0Q29yIENlcnRpZmljYXRlIEF1dGhvcml0eTEfMB0GA1UEAwwWVHJ1c3RDb3Ig\nUm9vdENlcnQgQ0EtMjAeFw0xNjAyMDQxMjMyMjNaFw0zNDEyMzExNzI2MzlaMIGk\nMQswCQYDVQQGEwJQQTEPMA0GA1UECAwGUGFuYW1hMRQwEgYDVQQHDAtQYW5hbWEg\nQ2l0eTEkMCIGA1UECgwbVHJ1c3RDb3IgU3lzdGVtcyBTLiBkZSBSLkwuMScwJQYD\nVQQLDB5UcnVzdENvciBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxHzAdBgNVBAMMFlRy\ndXN0Q29yIFJvb3RDZXJ0IENBLTIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK\nAoICAQCnIG7CKqJiJJWQdsg4foDSq8GbZQWU9MEKENUCrO2fk8eHyLAnK0IMPQo+\nQVqedd2NyuCb7GgypGmSaIwLgQ5WoD4a3SwlFIIvl9NkRvRUqdw6VC0xK5mC8tkq\n1+9xALgxpL56JAfDQiDyitSSBBtlVkxs1Pu2YVpHI7TYabS3OtB0PAx1oYxOdqHp\n2yqlO/rOsP9+aij9JxzIsekp8VduZLTQwRVtDr4uDkbIXvRR/u8OYzo7cbrPb1nK\nDOObXUm4TOJXsZiKQlecdu/vvdFoqNL0Cbt3Nb4lggjEFixEIFapRBF37120Hape\naz6LMvYHL1cEksr1/p3C6eizjkxLAjHZ5DxIgif3GIJ2SDpxsROhOdUuxTTCHWKF\n3wP+TfSvPd9cW436cOGlfifHhi5qjxLGhF5DUVCcGZt45vz27Ud+ez1m7xMTiF88\noWP7+ayHNZ/zgp6kPwqcMWmLmaSISo5uZk3vFsQPeSghYA2FFn3XVDjxklb9tTNM\ng9zXEJ9L/cb4Qr26fHMC4P99zVvh1Kxhe1fVSntb1IVYJ12/+CtgrKAmrhQhJ8Z3\nmjOAPF5GP/fDsaOGM8boXg25NSyqRsGFAnWAoOsk+xWq5Gd/bnc/9ASKL3x74xdh\n8N0JqSDIvgmk0H5Ew7IwSjiqqewYmgeCK9u4nBit2uBGF6zPXQIDAQABo2MwYTAd\nBgNVHQ4EFgQU2f4hQG6UnrybPZx9mCAZ5YwwYrIwHwYDVR0jBBgwFoAU2f4hQG6U\nnrybPZx9mCAZ5YwwYrIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYw\nDQYJKoZIhvcNAQELBQADggIBAJ5Fngw7tu/hOsh80QA9z+LqBrWyOrsGS2h60COX\ndKcs8AjYeVrXWoSK2BKaG9l9XE1wxaX5q+WjiYndAfrs3fnpkpfbsEZC89NiqpX+\nMWcUaViQCqoL7jcjx1BRtPV+nuN79+TMQjItSQzL/0kMmx40/W5ulop5A7Zv2wnL\n/V9lFDfhOPXzYRZY5LVtDQsEGz9QLX+zx3oaFoBg+Iof6Rsqxvm6ARppv9JYx1RX\nCI/hOWB3S6xZhBqI8d3LT3jX5+EzLfzuQfogsL7L9ziUwOHQhQ+77Sxzq+3+knYa\nZH9bDTMJBzN7Bj8RpFxwPIXAz+OQqIN3+tvmxYxoZxBnpVIt8MSZj3+/0WvitUfW\n2dCFmU2Umw9Lje4AWkcdEQOsQRivh7dvDDqPys/cA8GiCcjl/YBeyGBCARsaU1q7\nN6a3vLqE6R5sGtRk2tRD/pOLS/IseRYQ1JMLiI+h2IYURpFHmygk71dSTlxCnKr3\nSewn6EAes6aJInKc9Q0ztFijMDvd1GpUk74aTfOTlPf8hAs/hCBcNANExdqtvArB\nAs8e5ZTZ845b2EzwnexhF7sUMlQMAimTHpKG9n/v55IFDlndmQguLvqcAFLTxWYp\n5KeXRKQOKIETNcX2b2TmQcTVL8w0RSXPQQCWPUouwpaYT05KnJe32x+SMsj/D1Fu\n1uwJ\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICZTCCAeugAwIBAgIQeI8nXIESUiClBNAt3bpz9DAKBggqhkjOPQQDAzB0MQsw\nCQYDVQQGEwJQTDEhMB8GA1UEChMYQXNzZWNvIERhdGEgU3lzdGVtcyBTLkEuMScw\nJQYDVQQLEx5DZXJ0dW0gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxGTAXBgNVBAMT\nEENlcnR1bSBFQy0zODQgQ0EwHhcNMTgwMzI2MDcyNDU0WhcNNDMwMzI2MDcyNDU0\nWjB0MQswCQYDVQQGEwJQTDEhMB8GA1UEChMYQXNzZWNvIERhdGEgU3lzdGVtcyBT\nLkEuMScwJQYDVQQLEx5DZXJ0dW0gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxGTAX\nBgNVBAMTEENlcnR1bSBFQy0zODQgQ0EwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAATE\nKI6rGFtqvm5kN2PkzeyrOvfMobgOgknXhimfoZTy42B4mIF4Bk3y7JoOV2CDn7Tm\nFy8as10CW4kjPMIRBSqniBMY81CE1700LCeJVf/OTOffph8oxPBUw7l8t1Ot68Kj\nQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI0GZnQkdjrzife81r1HfS+8\nEF9LMA4GA1UdDwEB/wQEAwIBBjAKBggqhkjOPQQDAwNoADBlAjADVS2m5hjEfO/J\nUG7BJw+ch69u1RsIGL2SKcHvlJF40jocVYli5RsJHrpka/F2tNQCMQC0QoSZ/6vn\nnvuRlydd3LBbMHHOXjgaatkl5+r3YZJW+OraNsKHZZYuciUvf9/DE8k=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEQzCCAyugAwIBAgIDCYP0MA0GCSqGSIb3DQEBCwUAMFAxCzAJBgNVBAYTAkRF\nMRUwEwYDVQQKDAxELVRydXN0IEdtYkgxKjAoBgNVBAMMIUQtVFJVU1QgUm9vdCBD\nbGFzcyAzIENBIDIgRVYgMjAwOTAeFw0wOTExMDUwODUwNDZaFw0yOTExMDUwODUw\nNDZaMFAxCzAJBgNVBAYTAkRFMRUwEwYDVQQKDAxELVRydXN0IEdtYkgxKjAoBgNV\nBAMMIUQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgRVYgMjAwOTCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAJnxhDRwui+3MKCOvXwEz75ivJn9gpfSegpn\nljgJ9hBOlSJzmY3aFS3nBfwZcyK3jpgAvDw9rKFs+9Z5JUut8Mxk2og+KbgPCdM0\n3TP1YtHhzRnp7hhPTFiu4h7WDFsVWtg6uMQYZB7jM7K1iXdODL/ZlGsTl28So/6Z\nqQTMFexgaDbtCHu39b+T7WYxg4zGcTSHThfqr4uRjRxWQa4iN1438h3Z0S0NL2lR\np75mpoo6Kr3HGrHhFPC+Oh25z1uxav60sUYgovseO3Dvk5h9jHOW8sXvhXCtKSb8\nHgQ+HKDYD8tSg2J87otTlZCpV6LqYQXY+U3EJ/pure3511H3a6UCAwEAAaOCASQw\nggEgMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNOUikxiEyoZLsyvcop9Ntea\nHNxnMA4GA1UdDwEB/wQEAwIBBjCB3QYDVR0fBIHVMIHSMIGHoIGEoIGBhn9sZGFw\nOi8vZGlyZWN0b3J5LmQtdHJ1c3QubmV0L0NOPUQtVFJVU1QlMjBSb290JTIwQ2xh\nc3MlMjAzJTIwQ0ElMjAyJTIwRVYlMjAyMDA5LE89RC1UcnVzdCUyMEdtYkgsQz1E\nRT9jZXJ0aWZpY2F0ZXJldm9jYXRpb25saXN0MEagRKBChkBodHRwOi8vd3d3LmQt\ndHJ1c3QubmV0L2NybC9kLXRydXN0X3Jvb3RfY2xhc3NfM19jYV8yX2V2XzIwMDku\nY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQA07XtaPKSUiO8aEXUHL7P+PPoeUSbrh/Yp\n3uDx1MYkCenBz1UbtDDZzhr+BlGmFaQt77JLvyAoJUnRpjZ3NOhk31KxEcdzes05\nnsKtjHEh8lprr988TlWvsoRlFIm5d8sqMb7Po23Pb0iUMkZv53GMoKaEGTcH8gNF\nCSuGdXzfX2lXANtu2KZyIktQ1HWYVt+3GP9DQ1CuekR78HlR10M9p9OB0/DJT7na\nxpeG0ILD5EJt/rDiZE4OJudANCa1CInXCGNjOCd1HjPqbqjdn5lPdE2BiYBL3ZqX\nKVwvvoFBuYz/6n1gBp7N1z3TLqMVvKjmJuVvw9y4AyHqnxbxLFS1\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIID9jCCAt6gAwIBAgIQZIKe/DcedF38l/+XyLH/QTANBgkqhkiG9w0BAQsFADCB\nlDELMAkGA1UEBhMCVVMxHTAbBgNVBAoTFFN5bWFudGVjIENvcnBvcmF0aW9uMR8w\nHQYDVQQLExZTeW1hbnRlYyBUcnVzdCBOZXR3b3JrMUUwQwYDVQQDEzxTeW1hbnRl\nYyBDbGFzcyAyIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5\nIC0gRzYwHhcNMTExMDE4MDAwMDAwWhcNMzcxMjAxMjM1OTU5WjCBlDELMAkGA1UE\nBhMCVVMxHTAbBgNVBAoTFFN5bWFudGVjIENvcnBvcmF0aW9uMR8wHQYDVQQLExZT\neW1hbnRlYyBUcnVzdCBOZXR3b3JrMUUwQwYDVQQDEzxTeW1hbnRlYyBDbGFzcyAy\nIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzYwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDNzOkFyGOFyz9AYxe9GPo15gRn\nV2WYKaRPyVyPDzTS+NqoE2KquB5QZ3iwFkygOakVeq7t0qLA8JA3KRgmXOgNPLZs\nST/B4NzZS7YUGQum05bh1gnjGSYc+R9lS/kaQxwAg9bQqkmi1NvmYji6UBRDbfkx\n+FYW2TgCkc/rbN27OU6Z4TBnRfHU8I3D3/7yOAchfQBeVkSz5GC9kSucq1sEcg+y\nKNlyqwUgQiWpWwNqIBDMMfAr2jUs0Pual07wgksr2F82owstr2MNHSV/oW5cYqGN\nKD6h/Bwg+AEvulWaEbAZ0shQeWsOagXXqgQ2sqPy4V93p3ec5R7c6d9qwWVdAgMB\nAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBSHjCCVyJhK0daABkqQNETfHE2/sDANBgkqhkiG9w0BAQsFAAOCAQEAgY6ypWaW\ntyGltu9vI1pf24HFQqV4wWn99DzX+VxrcHIa/FqXTQCAiIiCisNxDY7FiZss7Y0L\n0nJU9X3UXENX6fOupQIR9nYrgVfdfdp0MP1UR/bgFm6mtApI5ud1Bw8pGTnOefS2\nbMVfmdUfS/rfbSw8DVSAcPCIC4DPxmiiuB1w2XaM/O6lyc+tHc+ZJVdaYkXLFmu9\nSc2lo4xpeSWuuExsi0BmSxY/zwIa3eFsawdhanYVKZl/G92IgMG/tY9zxaaWI4Sm\nKIYkM2oBLldzJbZev4/mHWGoQClnHYebHX+bn5nNMdZUvmK7OaxoEkiRIKXLsd3+\nb/xa5IJVWa8xqQ==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDtTCCAp2gAwIBAgIQdrEgUnTwhYdGs/gjGvbCwDANBgkqhkiG9w0BAQsFADBt\nMQswCQYDVQQGEwJDSDEQMA4GA1UEChMHV0lTZUtleTEiMCAGA1UECxMZT0lTVEUg\nRm91bmRhdGlvbiBFbmRvcnNlZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBHbG9i\nYWwgUm9vdCBHQiBDQTAeFw0xNDEyMDExNTAwMzJaFw0zOTEyMDExNTEwMzFaMG0x\nCzAJBgNVBAYTAkNIMRAwDgYDVQQKEwdXSVNlS2V5MSIwIAYDVQQLExlPSVNURSBG\nb3VuZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9PSVNURSBXSVNlS2V5IEdsb2Jh\nbCBSb290IEdCIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2Be3\nHEokKtaXscriHvt9OO+Y9bI5mE4nuBFde9IllIiCFSZqGzG7qFshISvYD06fWvGx\nWuR51jIjK+FTzJlFXHtPrby/h0oLS5daqPZI7H17Dc0hBt+eFf1Biki3IPShehtX\n1F1Q/7pn2COZH8g/497/b1t3sWtuuMlk9+HKQUYOKXHQuSP8yYFfTvdv37+ErXNk\nu7dCjmn21HYdfp2nuFeKUWdy19SouJVUQHMD9ur06/4oQnc/nSMbsrY9gBQHTC5P\n99UKFg29ZkM3fiNDecNAhvVMKdqOmq0NpQSHiB6F4+lT1ZvIiwNjeOvgGUpuuy9r\nM2RYk61pv48b74JIxwIDAQABo1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUw\nAwEB/zAdBgNVHQ4EFgQUNQ/INmNe4qPs+TtmFc5RUuORmj0wEAYJKwYBBAGCNxUB\nBAMCAQAwDQYJKoZIhvcNAQELBQADggEBAEBM+4eymYGQfp3FsLAmzYh7KzKNbrgh\ncViXfa43FK8+5/ea4n32cZiZBKpDdHij40lhPnOMTZTg+XHEthYOU3gf1qKHLwI5\ngSk8rxWYITD+KJAAjNHhy/peyP34EEY7onhCkRd0VQreUGdNZtGn//3ZwLWoo4rO\nZvUPQ82nK1d7Y0Zqqi5S2PTt4W2tKZB4SLrhI6qjiey1q5bAtEuiHZeeevJuQHHf\naPFlTc58Bd9TZaml8LGXBHAVRgOY1NK/VLSgWH1Sb9pWJmLU2NuJMW8c8CLC02Ic\nNc1MaRVUGpCY3useX8p3x8uOPUNpnJpY0CQ73xtAln41rYHHTnG6iBM=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIGATCCA+mgAwIBAgIRAI9hcRW6eVgXjH0ROqzW264wDQYJKoZIhvcNAQELBQAw\nRTEfMB0GA1UEAxMWQ29tU2lnbiBHbG9iYWwgUm9vdCBDQTEVMBMGA1UEChMMQ29t\nU2lnbiBMdGQuMQswCQYDVQQGEwJJTDAeFw0xMTA3MTgxMDI0NTRaFw0zNjA3MTYx\nMDI0NTVaMEUxHzAdBgNVBAMTFkNvbVNpZ24gR2xvYmFsIFJvb3QgQ0ExFTATBgNV\nBAoTDENvbVNpZ24gTHRkLjELMAkGA1UEBhMCSUwwggIiMA0GCSqGSIb3DQEBAQUA\nA4ICDwAwggIKAoICAQCyKClzKh3rm6n1nvigmV/VU1D4hSwYW2ro3VqpzpPo0Ph3\n3LguqjXd5juDwN4mpxTpD99d7Xu5X6KGTlMVtfN+bTbA4t3x7DU0Zqn0BE5XuOgs\n3GLH41Vmr5wox1bShVpM+IsjcN4E/hMnDtt/Bkb5s33xCG+ohz5dlq0gA9qfr/g4\nO9lkHZXTCeYrmVzd/il4x79CqNvGkdL3um+OKYl8rg1dPtD8UsytMaDgBAopKR+W\nigc16QJzCbvcinlETlrzP/Ny76BWPnAQgaYBULax/Q5thVU+N3sEOKp6uviTdD+X\nO6i96gARU4H0xxPFI75PK/YdHrHjfjQevXl4J37FJfPMSHAbgPBhHC+qn/014DOx\n46fEGXcdw2BFeIIIwbj2GH70VyJWmuk/xLMCHHpJ/nIF8w25BQtkPpkwESL6esaU\nb1CyB4Vgjyf16/0nRiCAKAyC/DY/Yh+rDWtXK8c6QkXD2XamrVJo43DVNFqGZzbf\n5bsUXqiVDOz71AxqqK+p4ek9374xPNMJ2rB5MLPAPycwI0bUuLHhLy6nAIFHLhut\nTNI+6Y/soYpi5JSaEjcY7pxI8WIkUAzr2r+6UoT0vAdyOt7nt1y8844a7szo/aKf\nwoziHl2O1w6ZXUC30K+ptXVaOiW79pBDcbLZ9ZdbONhS7Ea3iH4HJNwktrBJLQID\nAQABo4HrMIHoMA8GA1UdEwEB/wQFMAMBAf8wgYQGA1UdHwR9MHswPKA6oDiGNmh0\ndHA6Ly9mZWRpci5jb21zaWduLmNvLmlsL2NybC9jb21zaWduZ2xvYmFscm9vdGNh\nLmNybDA7oDmgN4Y1aHR0cDovL2NybDEuY29tc2lnbi5jby5pbC9jcmwvY29tc2ln\nbmdsb2JhbHJvb3RjYS5jcmwwDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBQCRZPY\nDUhirGm6rgZbPvuqJpFQsTAfBgNVHSMEGDAWgBQCRZPYDUhirGm6rgZbPvuqJpFQ\nsTANBgkqhkiG9w0BAQsFAAOCAgEAk1V5V9701xsfy4mfX+tP9Ln5e9h3N+QMwUfj\nkr+k3e8iXOqADjTpUHeBkEee5tJq09ZLp/43F5tZ2eHdYq2ZEX7iWHCnOQet6Yw9\nSU1TahsrGDA6JJD9sdPFnNZooGsU1520e0zNB0dNWwxrWAmu4RsBxvEpWCJbvzQL\ndOfyX85RWwli81OiVMBc5XvJ1mxsIIqli45oRynKtsWP7E+b0ISJ1n+XFLdQo/Nm\nWA/5sDfT0F5YPzWdZymudMbXitimxC+n4oQE4mbQ4Zm718Iwg3pP9gMMcSc7Qc1J\nkJHPH9O7gVubkKHuSYj9T3Ym6c6egL1pb4pz/uT7cT26Fiopc/jdqbe2EAfoJZkv\nhlp/zdzOoXTWjiKNA5zmgWnZn943FuE9KMRyKtyi/ezJXCh8ypnqLIKxeFfZl69C\nBwJsPXUTuqj8Fic0s3aZmmr7C4jXycP+Q8V+akMEIoHAxcd960b4wVWKqOcI/kZS\nQ0cYqWOY1LNjznRt9lweWEfwDBL3FhrHOmD4++1N3FkkM4W+Q1b2WOL24clDMj+i\n2n9Iw0lc1llHMSMvA5D0vpsXZpOgcCVahfXczQKi9wQ3oZyonJeWx4/rXdMtagAB\nVBYGFuMEUEQtybI+eIbnp5peO2WAAblQI4eTy/jMVowe5tfMEXovV3sz9ULgmGb3\nDscLP1I=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF8TCCA9mgAwIBAgIQALC3WhZIX7/hy/WL1xnmfTANBgkqhkiG9w0BAQsFADA4\nMQswCQYDVQQGEwJFUzEUMBIGA1UECgwLSVpFTlBFIFMuQS4xEzARBgNVBAMMCkl6\nZW5wZS5jb20wHhcNMDcxMjEzMTMwODI4WhcNMzcxMjEzMDgyNzI1WjA4MQswCQYD\nVQQGEwJFUzEUMBIGA1UECgwLSVpFTlBFIFMuQS4xEzARBgNVBAMMCkl6ZW5wZS5j\nb20wggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDJ03rKDx6sp4boFmVq\nscIbRTJxldn+EFvMr+eleQGPicPK8lVx93e+d5TzcqQsRNiekpsUOqHnJJAKClaO\nxdgmlOHZSOEtPtoKct2jmRXagaKH9HtuJneJWK3W6wyyQXpzbm3benhB6QiIEn6H\nLmYRY2xU+zydcsC8Lv/Ct90NduM61/e0aL6i9eOBbsFGb12N4E3GVFWJGjMxCrFX\nuaOKmMPsOzTFlUFpfnXCPCDFYbpRR6AgkJOhkEvzTnyFRVSa0QUmQbC1TR0zvsQD\nyCV8wXDbO/QJLVQnSKwv4cSsPsjLkkxTOTcj7NMB+eAJRE1NZMDhDVqHIrytG6P+\nJrUV86f8hBnp7KGItERphIPzidF0BqnMC9bC3ieFUCbKF7jJeodWLBoBHmy+E60Q\nrLUk9TiRodZL2vG70t5HtfG8gfZZa88ZU+mNFctKy6lvROUbQc/hhqfK0GqfvEyN\nBjNaooXlkDWgYlwWTvDjovoDGrQscbNYLN57C9saD+veIR8GdwYDsMnvmfzAuU8L\nhij+0rnq49qlw0dpEuDb8PYZi+17cNcC1u2HGCgsBCRMd+RIihrGO5rUD8r6ddIB\nQFqNeb+Lz0vPqhbBleStTIo+F5HUsWLlguWABKQDfo2/2n+iD5dPDNMN+9fR5XJ+\nHMh3/1uaD7euBUbl8agW7EekFwIDAQABo4H2MIHzMIGwBgNVHREEgagwgaWBD2lu\nZm9AaXplbnBlLmNvbaSBkTCBjjFHMEUGA1UECgw+SVpFTlBFIFMuQS4gLSBDSUYg\nQTAxMzM3MjYwLVJNZXJjLlZpdG9yaWEtR2FzdGVpeiBUMTA1NSBGNjIgUzgxQzBB\nBgNVBAkMOkF2ZGEgZGVsIE1lZGl0ZXJyYW5lbyBFdG9yYmlkZWEgMTQgLSAwMTAx\nMCBWaXRvcmlhLUdhc3RlaXowDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\nAQYwHQYDVR0OBBYEFB0cZQ6o8iV7tJHP5LGx5r1VdGwFMA0GCSqGSIb3DQEBCwUA\nA4ICAQB4pgwWSp9MiDrAyw6lFn2fuUhfGI8NYjb2zRlrrKvV9pF9rnHzP7MOeIWb\nlaQnIUdCSnxIOvVFfLMMjlF4rJUT3sb9fbgakEyrkgPH7UIBzg/YsfqikuFgba56\nawmqxinuaElnMIAkejEWOVt+8Rwu3WwJrfIxwYJOubv5vr8qhT/AQKM6WfxZSzwo\nJNu0FXWuDYi6LnPAvViH5ULy617uHjAimcs30cQhbIHsvm0m5hzkQiCeR7Csg1lw\nLDXWrzY0tM07+DKo7+N4ifuNRSzanLh+QBxh5z6ikixL8s36mLYp//Pye6kfLqCT\nVyvehQP5aTfLnnhqBbTFMXiJ7HqnheG5ezzevh55hM6fcA5ZwjUukCox2eRFekGk\nLhObNA5me0mrZJfQRsN5nXJQY6aYWwa9SG3YOYNw6DXwBdGqvOPbyALqfP2C2sJb\nUjWumDqtujWTI6cfSN01RpiyEGjkpTHCClguGYEQyVB1/OpaFs4R1+7vUIgtYf8/\nQnMFlEPVjjxOAToZpR9GTnfQXeWBIiGH/pR9hNiTrdZoQ0iy2+tzJOeRf1SktoA+\nnaM8THLCV8Sg1Mw4J87VBp6iSNnpn86CcDaTmjvfliHjWbcM2pE38P1ZWrOZyGls\nQyYBNWNgVYkDOnXYukrZVP/u3oDYLdE41V4tC5h9Pmzb/CaIxw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEHTCCAwWgAwIBAgIQToEtioJl4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCB\ngTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\nA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxJzAlBgNV\nBAMTHkNPTU9ETyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjEyMDEwMDAw\nMDBaFw0yOTEyMzEyMzU5NTlaMIGBMQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3Jl\nYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01P\nRE8gQ0EgTGltaXRlZDEnMCUGA1UEAxMeQ09NT0RPIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0ECLi3LjkRv3\nUcEbVASY06m/weaKXTuH+7uIzg3jLz8GlvCiKVCZrts7oVewdFFxze1CkU1B/qnI\n2GqGd0S7WWaXUF601CxwRM/aN5VCaTwwxHGzUvAhTaHYujl8HJ6jJJ3ygxaYqhZ8\nQ5sVW7euNJH+1GImGEaaP+vB+fGQV+useg2L23IwambV4EajcNxo2f8ESIl33rXp\n+2dtQem8Ob0y2WIC8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA1KGzqSX+\nDT+nHbrTUcELpNqsOO9VUCQFZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5O\nnKVIrLsm9wIDAQABo4GOMIGLMB0GA1UdDgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW\n/zAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zBJBgNVHR8EQjBAMD6g\nPKA6hjhodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9DZXJ0aWZpY2F0aW9u\nQXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOCAQEAPpiem/Yb6dc5t3iuHXIY\nSdOH5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CPOGEIqB6BCsAv\nIC9Bi5HcSEW88cbeunZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/\nRxdMosIGlgnW2/4/PEZB31jiVg88O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4\nzJVSk/BwJVmcIGfE7vmLV2H0knZ9P4SNVbfo5azV8fUZVqZa+5Acr5Pr5RzUZ5dd\nBA6+C4OmF4O5MBKgxTMVBbkN+8cFduPYSo38NBejxiEovjBFMR7HeL5YYTisO+IB\nZQ==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEMDCCAxigAwIBAgIJANqb7HHzA7AZMA0GCSqGSIb3DQEBCwUAMIGkMQswCQYD\nVQQGEwJQQTEPMA0GA1UECAwGUGFuYW1hMRQwEgYDVQQHDAtQYW5hbWEgQ2l0eTEk\nMCIGA1UECgwbVHJ1c3RDb3IgU3lzdGVtcyBTLiBkZSBSLkwuMScwJQYDVQQLDB5U\ncnVzdENvciBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxHzAdBgNVBAMMFlRydXN0Q29y\nIFJvb3RDZXJ0IENBLTEwHhcNMTYwMjA0MTIzMjE2WhcNMjkxMjMxMTcyMzE2WjCB\npDELMAkGA1UEBhMCUEExDzANBgNVBAgMBlBhbmFtYTEUMBIGA1UEBwwLUGFuYW1h\nIENpdHkxJDAiBgNVBAoMG1RydXN0Q29yIFN5c3RlbXMgUy4gZGUgUi5MLjEnMCUG\nA1UECwweVHJ1c3RDb3IgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MR8wHQYDVQQDDBZU\ncnVzdENvciBSb290Q2VydCBDQS0xMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAv463leLCJhJrMxnHQFgKq1mqjQCj/IDHUHuO1CAmujIS2CNUSSUQIpid\nRtLByZ5OGy4sDjjzGiVoHKZaBeYei0i/mJZ0PmnK6bV4pQa81QBeCQryJ3pS/C3V\nseq0iWEk8xoT26nPUu0MJLq5nux+AHT6k61sKZKuUbS701e/s/OojZz0JEsq1pme\n9J7+wH5COucLlVPat2gOkEz7cD+PSiyU8ybdY2mplNgQTsVHCJCZGxdNuWxu72CV\nEY4hgLW9oHPY0LJ3xEXqWib7ZnZ2+AYfYW0PVcWDtxBWcgYHpfOxGgMFZA6dWorW\nhnAbJN7+KIor0Gqw/Hqi3LJ5DotlDwIDAQABo2MwYTAdBgNVHQ4EFgQU7mtJPHo/\nDeOxCbeKyKsZn3MzUOcwHwYDVR0jBBgwFoAU7mtJPHo/DeOxCbeKyKsZn3MzUOcw\nDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\nggEBACUY1JGPE+6PHh0RU9otRCkZoB5rMZ5NDp6tPVxBb5UrJKF5mDo4Nvu7Zp5I\n/5CQ7z3UuJu0h3U/IJvOcs+hVcFNZKIZBqEHMwwLKeXx6quj7LUKdJDHfXLy11yf\nke+Ri7fc7Waiz45mO7yfOgLgJ90WmMCV1Aqk5IGadZQ1nJBfiDcGrVmVCrDRZ9MZ\nyonnMlo2HD6CqFqTvsbQZJG2z9m2GM/bftJlo6bEjhcxwft+dtvTheNYsnd6djts\nL1Ac59v2Z3kf9YKVmgenFK+P3CghZwnS1k1aHBkcjndcw5QkPTJrS37UeJSDvjdN\nzl/HHk484IkzlQsPpTLWPFp5LBk=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEGTCCAwECEGFwy0mMX5hFKeewptlQW3owDQYJKoZIhvcNAQEFBQAwgcoxCzAJ\nBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVy\naVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24s\nIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNp\nZ24gQ2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgcoxCzAJBgNV\nBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNp\nZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIElu\nYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24g\nQ2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAt\nIEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArwoNwtUs22e5LeWU\nJ92lvuCwTY+zYVY81nzD9M0+hsuiiOLh2KRpxbXiv8GmR1BeRjmL1Za6tW8UvxDO\nJxOeBUebMXoT2B/Z0wI3i60sR/COgQanDTAM6/c8DyAd3HJG7qUCyFvDyVZpTMUY\nwZF7C9UTAJu878NIPkZgIIUq1ZC2zYugzDLdt/1AVbJQHFauzI13TccgTacxdu9o\nkoqQHgiBVrKtaaNS0MscxCM9H5n+TOgWY47GCI72MfbS+uV23bUckqNJzc0BzWjN\nqWm6o+sdDZykIKbBoMXRRkwXbdKsZj+WjOCE1Db/IlnF+RFgqF8EffIa9iVCYQ/E\nSrg+iQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQA0JhU8wI1NQ0kdvekhktdmnLfe\nxbjQ5F1fdiLAJvmEOjr5jLX77GDx6M4EsMjdpwOPMPOY36TmpDHf0xwLRtxyID+u\n7gU8pDM/CzmscHhzS5kr3zDCVLCoO1Wh/hYozUK9dG6A2ydEp85EXdQbkJgNHkKU\nsQAsBNB0owIFImNjzYO1+8FtYmtpdf1dcEG59b98377BMnMiIYtYgXsVkXq642RI\nsH/7NiXaldDxJBQX3RiAa0YjOVT1jmIJBB2UkKab5iXiQkWquJCtvgiPqQtCGJTP\ncjnhsUPgKM+351psE2tJs//jGHyJizNdrDPXp/naOlXJWBD5qu9ats9LS98q\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICHjCCAaSgAwIBAgIRYFlJ4CYuu1X5CneKcflK2GwwCgYIKoZIzj0EAwMwUDEk\nMCIGA1UECxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI1MRMwEQYDVQQKEwpH\nbG9iYWxTaWduMRMwEQYDVQQDEwpHbG9iYWxTaWduMB4XDTEyMTExMzAwMDAwMFoX\nDTM4MDExOTAzMTQwN1owUDEkMCIGA1UECxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBD\nQSAtIFI1MRMwEQYDVQQKEwpHbG9iYWxTaWduMRMwEQYDVQQDEwpHbG9iYWxTaWdu\nMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAER0UOlvt9Xb/pOdEh+J8LttV7HpI6SFkc\n8GIxLcB6KP4ap1yztsyX50XUWPrRd21DosCHZTQKH3rd6zwzocWdTaRvQZU4f8ke\nhOvRnkmSh5SHDDqFSmafnVmTTZdhBoZKo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYD\nVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUPeYpSJvqB8ohREom3m7e0oPQn1kwCgYI\nKoZIzj0EAwMDaAAwZQIxAOVpEslu28YxuglB4Zf4+/2a4n0Sye18ZNPLBSWLVtmg\n515dTguDnFt2KaAJJiFqYgIwcdK1j1zqO+F4CYWodZI7yFz9SO8NdCKoCOJuxUnO\nxwy8p2Fp8fc74SrL+SvzZpA3\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFgzCCA2ugAwIBAgIPXZONMGc2yAYdGsdUhGkHMA0GCSqGSIb3DQEBCwUAMDsx\nCzAJBgNVBAYTAkVTMREwDwYDVQQKDAhGTk1ULVJDTTEZMBcGA1UECwwQQUMgUkFJ\nWiBGTk1ULVJDTTAeFw0wODEwMjkxNTU5NTZaFw0zMDAxMDEwMDAwMDBaMDsxCzAJ\nBgNVBAYTAkVTMREwDwYDVQQKDAhGTk1ULVJDTTEZMBcGA1UECwwQQUMgUkFJWiBG\nTk1ULVJDTTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALpxgHpMhm5/\nyBNtwMZ9HACXjywMI7sQmkCpGreHiPibVmr75nuOi5KOpyVdWRHbNi63URcfqQgf\nBBckWKo3Shjf5TnUV/3XwSyRAZHiItQDwFj8d0fsjz50Q7qsNI1NOHZnjrDIbzAz\nWHFctPVrbtQBULgTfmxKo0nRIBnuvMApGGWn3v7v3QqQIecaZ5JCEJhfTzC8PhxF\ntBDXaEAUwED653cXeuYLj2VbPNmaUtu1vZ5Gzz3rkQUCwJaydkxNEJY7kvqcfw+Z\n374jNUUeAlz+taibmSXaXvMiwzn15Cou08YfxGyqxRxqAQVKL9LFwag0Jl1mpdIC\nIfkYtwb1TplvqKtMUejPUBjFd8g5CSxJkjKZqLsXF3mwWsXmo8RZZUc1g16p6DUL\nmbvkzSDGm0oGObVo/CK67lWMK07q87Hj/LaZmtVC+nFNCM+HHmpxffnTtOmlcYF7\nwk5HlqX2doWjKI/pgG6BU6VtX7hI+cL5NqYuSf+4lsKMB7ObiFj86xsc3i1w4peS\nMKGJ47xVqCfWS+2QrYv6YyVZLag13cqXM7zlzced0ezvXg5KkAYmY6252TUtB7p2\nZSysV4999AeU14ECll2jB0nVetBX+RvnU0Z1qrB5QstocQjpYL05ac70r8NWQMet\nUqIJ5G+GR4of6ygnXYMgrwTJbFaai0b1AgMBAAGjgYMwgYAwDwYDVR0TAQH/BAUw\nAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFPd9xf3E6Jobd2Sn9R2gzL+H\nYJptMD4GA1UdIAQ3MDUwMwYEVR0gADArMCkGCCsGAQUFBwIBFh1odHRwOi8vd3d3\nLmNlcnQuZm5tdC5lcy9kcGNzLzANBgkqhkiG9w0BAQsFAAOCAgEAB5BK3/MjTvDD\nnFFlm5wioooMhfNzKWtN/gHiqQxjAb8EZ6WdmF/9ARP67Jpi6Yb+tmLSbkyU+8B1\nRXxlDPiyN8+sD8+Nb/kZ94/sHvJwnvDKuO+3/3Y3dlv2bojzr2IyIpMNOmqOFGYM\nLVN0V2Ue1bLdI4E7pWYjJ2cJj+F3qkPNZVEI7VFY/uY5+ctHhKQV8Xa7pO6kO8Rf\n77IzlhEYt8llvhjho6Tc+hj507wTmzl6NLrTQfv6MooqtyuGC2mDOL7Nii4LcK2N\nJpLuHvUBKwrZ1pebbuCoGRw6IYsMHkCtA+fdZn71uSANA+iW+YJF1DngoABd15jm\nfZ5nc8OaKveri6E6FO80vFIOiZiaBECEHX5FaZNXzuvO+FB8TxxuBEOb+dY7Ixjp\n6o7RTUaN8Tvkasq6+yO3m/qZASlaWFot4/nUbQ4mrcFuNLwy+AwF+mWj2zs3gyLp\n1txyM/1d8iC9djwj2ij3+RvrWWTV3F9yfiD8zYm1kGdNYno/Tq0dwzn+evQoFt9B\n9kiABdcPUXmsEKvU7ANm5mqwujGSQkBqvjrTcuFqN1W8rB2Vt2lh8kORdOag0wok\nRqEIr9baRRmW1FMdW4R58MD3R++Lj8UGrp1MYp3/RgT408m2ECVAdf4WqslKYIYv\nuu8wd+RU4riEmViAqhOLUTpPSPaLtrM=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIB4TCCAYegAwIBAgIRKjikHJYKBN5CsiilC+g0mAIwCgYIKoZIzj0EAwIwUDEk\nMCIGA1UECxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI0MRMwEQYDVQQKEwpH\nbG9iYWxTaWduMRMwEQYDVQQDEwpHbG9iYWxTaWduMB4XDTEyMTExMzAwMDAwMFoX\nDTM4MDExOTAzMTQwN1owUDEkMCIGA1UECxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBD\nQSAtIFI0MRMwEQYDVQQKEwpHbG9iYWxTaWduMRMwEQYDVQQDEwpHbG9iYWxTaWdu\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEuMZ5049sJQ6fLjkZHAOkrprlOQcJ\nFspjsbmG+IpXwVfOQvpzofdlQv8ewQCybnMO/8ch5RikqtlxP6jUuc6MHaNCMEAw\nDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFSwe61F\nuOJAf/sKbvu+M8k8o4TVMAoGCCqGSM49BAMCA0gAMEUCIQDckqGgE6bPA7DmxCGX\nkPoUVy0D7O48027KqGx2vKLeuwIgJ6iFJzWbVsaj8kfSt24bAgAXqmemFZHe+pTs\newv4n4Q=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFkDCCA3igAwIBAgIQBZsbV56OITLiOQe9p3d1XDANBgkqhkiG9w0BAQwFADBi\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSEwHwYDVQQDExhEaWdpQ2VydCBUcnVzdGVkIFJvb3Qg\nRzQwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1MTIwMDAwWjBiMQswCQYDVQQGEwJV\nUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu\nY29tMSEwHwYDVQQDExhEaWdpQ2VydCBUcnVzdGVkIFJvb3QgRzQwggIiMA0GCSqG\nSIb3DQEBAQUAA4ICDwAwggIKAoICAQC/5pBzaN675F1KPDAiMGkz7MKnJS7JIT3y\nithZwuEppz1Yq3aaza57G4QNxDAf8xukOBbrVsaXbR2rsnnyyhHS5F/WBTxSD1If\nxp4VpX6+n6lXFllVcq9ok3DCsrp1mWpzMpTREEQQLt+C8weE5nQ7bXHiLQwb7iDV\nySAdYyktzuxeTsiT+CFhmzTrBcZe7FsavOvJz82sNEBfsXpm7nfISKhmV1efVFiO\nDCu3T6cw2Vbuyntd463JT17lNecxy9qTXtyOj4DatpGYQJB5w3jHtrHEtWoYOAMQ\njdjUN6QuBX2I9YI+EJFwq1WCQTLX2wRzKm6RAXwhTNS8rhsDdV14Ztk6MUSaM0C/\nCNdaSaTC5qmgZ92kJ7yhTzm1EVgX9yRcRo9k98FpiHaYdj1ZXUJ2h4mXaXpI8OCi\nEhtmmnTK3kse5w5jrubU75KSOp493ADkRSWJtppEGSt+wJS00mFt6zPZxd9LBADM\nfRyVw4/3IbKyEbe7f/LVjHAsQWCqsWMYRJUadmJ+9oCw++hkpjPRiQfhvbfmQ6QY\nuKZ3AeEPlAwhHbJUKSWJbOUOUlFHdL4mrLZBdd56rF+NP8m800ERElvlEFDrMcXK\nchYiCd98THU/Y+whX8QgUWtvsauGi0/C1kVfnSD8oR7FwI+isX4KJpn15GkvmB0t\n9dmpsh3lGwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB\nhjAdBgNVHQ4EFgQU7NfjgtJxXWRM3y5nP+e6mK4cD08wDQYJKoZIhvcNAQEMBQAD\nggIBALth2X2pbL4XxJEbw6GiAI3jZGgPVs93rnD5/ZpKmbnJeFwMDF/k5hQpVgs2\nSV1EY+CtnJYYZhsjDT156W1r1lT40jzBQ0CuHVD1UvyQO7uYmWlrx8GnqGikJ9yd\n+SeuMIW59mdNOj6PWTkiU0TryF0Dyu1Qen1iIQqAyHNm0aAFYF/opbSnr6j3bTWc\nfFqK1qI4mfN4i/RN0iAL3gTujJtHgXINwBQy7zBZLq7gcfJW5GqXb5JQbZaNaHqa\nsjYUegbyJLkJEVDXCLG4iXqEI2FCKeWjzaIgQdfRnGTZ6iahixTXTBmyUEFxPT9N\ncCOGDErcgdLMMpSEDQgJlxxPwO5rIHQw0uA5NBCFIRUBCOhVMt5xSdkoF1BN5r5N\n0XWs0Mr7QbhDparTwwVETyw2m+L64kW4I1NsBm9nVX9GtUw/bihaeSbSpKhil9Ie\n4u1Ki7wb/UdKDd9nZn6yW0HQO+T0O/QEY+nvwlQAUaCKKsnOeMzV6ocEGLPOr0mI\nr/OSmbaz5mEP0oUA51Aa5BuVnRmhuZyxm7EAHu/QD09CbMkKvO5D+jpxpchNJqU1\n/YldvIViHTLSoCtU7ZpXwdv6EM8Zt4tKG48BtieVU+i2iW1bvGjUI+iLUaJW+fCm\ngKDWHrO8Dw9TdSmq6hN35N6MgSGtBxBHEa2HPQfRdbzP82Z+\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEvTCCA6WgAwIBAgIBADANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJFVTEn\nMCUGA1UEChMeQUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQL\nExpodHRwOi8vd3d3LmNoYW1iZXJzaWduLm9yZzEiMCAGA1UEAxMZQ2hhbWJlcnMg\nb2YgQ29tbWVyY2UgUm9vdDAeFw0wMzA5MzAxNjEzNDNaFw0zNzA5MzAxNjEzNDRa\nMH8xCzAJBgNVBAYTAkVVMScwJQYDVQQKEx5BQyBDYW1lcmZpcm1hIFNBIENJRiBB\nODI3NDMyODcxIzAhBgNVBAsTGmh0dHA6Ly93d3cuY2hhbWJlcnNpZ24ub3JnMSIw\nIAYDVQQDExlDaGFtYmVycyBvZiBDb21tZXJjZSBSb290MIIBIDANBgkqhkiG9w0B\nAQEFAAOCAQ0AMIIBCAKCAQEAtzZV5aVdGDDg2olUkfzIx1L4L1DZ77F1c2VHfRtb\nunXF/KGIJPov7coISjlUxFF6tdpg6jg8gbLL8bvZkSM/SAFwdakFKq0fcfPJVD0d\nBmpAPrMMhe5cG3nCYsS4No41XQEMIwRHNaqbYE6gZj3LJgqcQKH0XZi/caulAGgq\n7YN6D6IUtdQis4CwPAxaUWktWBiP7Zme8a7ileb2R6jWDA+wWFjbw2Y3npuRVDM3\n0pQcakjJyfKl2qUMI/cjDpwyVV5xnIQFUZot/eZOKjRa3spAN2cMVCFVd9oKDMyX\nroDclDZK9D7ONhMeU+SsTjoF7Nuucpw4i9A5O4kKPnf+dQIBA6OCAUQwggFAMBIG\nA1UdEwEB/wQIMAYBAf8CAQwwPAYDVR0fBDUwMzAxoC+gLYYraHR0cDovL2NybC5j\naGFtYmVyc2lnbi5vcmcvY2hhbWJlcnNyb290LmNybDAdBgNVHQ4EFgQU45T1sU3p\n26EpW1eLTXYGduHRooowDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIA\nBzAnBgNVHREEIDAegRxjaGFtYmVyc3Jvb3RAY2hhbWJlcnNpZ24ub3JnMCcGA1Ud\nEgQgMB6BHGNoYW1iZXJzcm9vdEBjaGFtYmVyc2lnbi5vcmcwWAYDVR0gBFEwTzBN\nBgsrBgEEAYGHLgoDATA+MDwGCCsGAQUFBwIBFjBodHRwOi8vY3BzLmNoYW1iZXJz\naWduLm9yZy9jcHMvY2hhbWJlcnNyb290Lmh0bWwwDQYJKoZIhvcNAQEFBQADggEB\nAAxBl8IahsAifJ/7kPMa0QOx7xP5IV8EnNrJpY0nbJaHkb5BkAFyk+cefV/2icZd\np0AJPaxJRUXcLo0waLIJuvvDL8y6C98/d3tGfToSJI6WjzwFCm/SlCgdbQzALogi\n1djPHRPH8EjX1wWnz8dHnjs8NMiAT9QUu/wNUPf6s+xCX6ndbcj0dc97wXImsQEc\nXCz9ek60AcUFV7nnPKoF2YjpB0ZBzu9Bga5Y34OirsrXdx/nADydb47kMgkdTXg0\neDQ8lJsm7U9xxhl6vSAiSFr+S30Dt+dYvsYyTnQeaN2oaFuzPu5ifdmA6Ap1erfu\ntGWaIZDgqtCYvDi1czyL+Nw=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDezCCAmOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBfMQswCQYDVQQGEwJUVzES\nMBAGA1UECgwJVEFJV0FOLUNBMRAwDgYDVQQLDAdSb290IENBMSowKAYDVQQDDCFU\nV0NBIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDgwODI4MDcyNDMz\nWhcNMzAxMjMxMTU1OTU5WjBfMQswCQYDVQQGEwJUVzESMBAGA1UECgwJVEFJV0FO\nLUNBMRAwDgYDVQQLDAdSb290IENBMSowKAYDVQQDDCFUV0NBIFJvb3QgQ2VydGlm\naWNhdGlvbiBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQCwfnK4pAOU5qfeCTiRShFAh6d8WWQUe7UREN3+v9XAu1bihSX0NXIP+FPQQeFE\nAcK0HMMxQhZHhTMidrIKbw/lJVBPhYa+v5guEGcevhEFhgWQxFnQfHgQsIBct+HH\nK3XLfJ+utdGdIzdjp9xCoi2SBBtQwXu4PhvJVgSLL1KbralW6cH/ralYhzC2gfeX\nRfwZVzsrb+RH9JlF/h3x+JejiB03HFyP4HYlmlD4oFT/RJB2I9IyxsOrBr/8+7/z\nrX2SYgJbKdM1o5OaQ2RgXbL6Mv87BK9NQGr5x+PvI/1ry+UPizgN7gr8/g+YnzAx\n3WxSZfmLgb4i4RxYA7qRG4kHAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNV\nHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqOFsmjd6LWvJPelSDGRjjCDWmujANBgkq\nhkiG9w0BAQUFAAOCAQEAPNV3PdrfibqHDAhUaiBQkr6wQT25JmSDCi/oQMCXKCeC\nMErJk/9q56YAf4lCmtYR5VPOL8zy2gXE/uJQxDqGfczafhAJO5I1KlOy/usrBdls\nXebQ79NqZp4VKIV66IIArB6nCWlWQtNoURi+VJq/REG6Sb4gumlc7rh3zc5sH62D\nlhh9DrUUOYTxKOkto557HnpyWoOzeW/vtPzQCqVYT0bf+215WfKEIlKuD8z7fDvn\naspHYcN6+NOSBB+4IIThNlQWx0DeO4pz3N/GCUzf7Nr/1FNCocnyYh0igzyXxfkZ\nYiesZSLX0zzG5Y6yU8xJzrww/nsOM5D77dIUkR8Hrw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEDzCCAvegAwIBAgIBADANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJVUzEl\nMCMGA1UEChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMp\nU3RhcmZpZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDQw\nNjI5MTczOTE2WhcNMzQwNjI5MTczOTE2WjBoMQswCQYDVQQGEwJVUzElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMpU3RhcmZp\nZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEgMA0GCSqGSIb3\nDQEBAQUAA4IBDQAwggEIAoIBAQC3Msj+6XGmBIWtDBFk385N78gDGIc/oav7PKaf\n8MOh2tTYbitTkPskpD6E8J7oX+zlJ0T1KKY/e97gKvDIr1MvnsoFAZMej2YcOadN\n+lq2cwQlZut3f+dZxkqZJRRU6ybH838Z1TBwj6+wRir/resp7defqgSHo9T5iaU0\nX9tDkYI22WY8sbi5gv2cOj4QyDvvBmVmepsZGD3/cVE8MC5fvj13c7JdBmzDI1aa\nK4UmkhynArPkPw2vCHmCuDY96pzTNbO8acr1zJ3o/WSNF4Azbl5KXZnJHoe0nRrA\n1W4TNSNe35tfPe/W93bC6j67eA0cQmdrBNj41tpvi/JEoAGrAgEDo4HFMIHCMB0G\nA1UdDgQWBBS/X7fRzt0fhvRbVazc1xDCDqmI5zCBkgYDVR0jBIGKMIGHgBS/X7fR\nzt0fhvRbVazc1xDCDqmI56FspGowaDELMAkGA1UEBhMCVVMxJTAjBgNVBAoTHFN0\nYXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xMjAwBgNVBAsTKVN0YXJmaWVsZCBD\nbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8w\nDQYJKoZIhvcNAQEFBQADggEBAAWdP4id0ckaVaGsafPzWdqbAYcaT1epoXkJKtv3\nL7IezMdeatiDh6GX70k1PncGQVhiv45YuApnP+yz3SFmH8lU+nLMPUxA2IGvd56D\neruix/U0F47ZEUD0/CwqTRV/p2JdLiXTAAsgGh1o+Re49L2L7ShZ3U0WixeDyLJl\nxy16paq8U4Zt3VekyvggQQto8PT7dL5WXXp59fkdheMtlb71cZBDzI0fmgAKhynp\nVSJYACPq4xJDKVtHCN2MQWplBqjlIapBtJUhlbl90TSrE9atvNziPTnNvT51cKEY\nWQPJIrSPnNVeKtelttQKbfi3QBFGmh95DmK/D5fs4C8fF5Q=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIE5zCCA8+gAwIBAgIBADANBgkqhkiG9w0BAQUFADCBjTELMAkGA1UEBhMCQ0Ex\nEDAOBgNVBAgTB09udGFyaW8xEDAOBgNVBAcTB1Rvcm9udG8xHTAbBgNVBAoTFEVj\naG93b3J4IENvcnBvcmF0aW9uMR8wHQYDVQQLExZDZXJ0aWZpY2F0aW9uIFNlcnZp\nY2VzMRowGAYDVQQDExFFY2hvd29yeCBSb290IENBMjAeFw0wNTEwMDYxMDQ5MTNa\nFw0zMDEwMDcxMDQ5MTNaMIGNMQswCQYDVQQGEwJDQTEQMA4GA1UECBMHT250YXJp\nbzEQMA4GA1UEBxMHVG9yb250bzEdMBsGA1UEChMURWNob3dvcnggQ29ycG9yYXRp\nb24xHzAdBgNVBAsTFkNlcnRpZmljYXRpb24gU2VydmljZXMxGjAYBgNVBAMTEUVj\naG93b3J4IFJvb3QgQ0EyMIIBIDANBgkqhkiG9w0BAQEFAAOCAQ0AMIIBCAKCAQEA\nutU/5BkV15UBf+s+JQruKQxr77s3rjp/RpOtmhHILIiO5gsEWP8MMrfrVEiidjI6\nQh6ans0KAWc2Dw0/j4qKAQzOSyAZgjcdypNTBZ7muv212DA2Pu41rXqwMrlBrVi/\nKTghfdLlNRu6JrC5y8HarrnRFSKF1Thbzz921kLDRoCi+FVs5eVuK5LvIfkhNAqA\nbyrTgO3T9zfZgk8upmEkANPDL1+8y7dGPB/d6lk0I5mv8PESKX02TlvwgRSIiTHR\nk8++iOPLBWlGp7ZfqTEXkPUZhgrQQvxcrwCUo6mk8TqgxCDP5FgPoHFiPLef5szP\nZLBJDWp7GLyE1PmkQI6WiwIBA6OCAVAwggFMMA8GA1UdEwEB/wQFMAMBAf8wCwYD\nVR0PBAQDAgEGMB0GA1UdDgQWBBQ74YEboKs/OyGC1eISrq5QqxSlEzCBugYDVR0j\nBIGyMIGvgBQ74YEboKs/OyGC1eISrq5QqxSlE6GBk6SBkDCBjTELMAkGA1UEBhMC\nQ0ExEDAOBgNVBAgTB09udGFyaW8xEDAOBgNVBAcTB1Rvcm9udG8xHTAbBgNVBAoT\nFEVjaG93b3J4IENvcnBvcmF0aW9uMR8wHQYDVQQLExZDZXJ0aWZpY2F0aW9uIFNl\ncnZpY2VzMRowGAYDVQQDExFFY2hvd29yeCBSb290IENBMoIBADBQBgNVHSAESTBH\nMEUGCysGAQQB+REKAQMBMDYwNAYIKwYBBQUHAgEWKGh0dHA6Ly93d3cuZWNob3dv\ncnguY29tL2NhL3Jvb3QyL2Nwcy5wZGYwDQYJKoZIhvcNAQEFBQADggEBAG+nrPi/\n0RpfEzrj02C6JGPUar4nbjIhcY6N7DWNeqBoUulBSIH/PYGNHYx7/lnJefiixPGE\n7TQ5xPgElxb9bK8zoAApO7U33OubqZ7M7DlHnFeCoOoIAZnG1kuwKwD5CXKB2a74\nHzcqNnFW0IsBFCYqrVh/rQgJOzDA8POGbH0DeD0xjwBBooAolkKT+7ZItJF1Pb56\nQpDL9G+16F7GkmnKlAIYT3QTS3yFGYChnJcd+6txUPhKi9sSOOmAIaKHnkH9Scz+\nA2cSi4A3wUYXVatuVNHpRb2lygfH3SuCX9MU8Ure3zBlSU1LALtMqI4JmcQmQpIq\nzIzvO2jHyu9PQqo=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFqjCCA5KgAwIBAgIQVVL4HtsbJCyeu5YYzQIoPjANBgkqhkiG9w0BAQsFADBv\nMQswCQYDVQQGEwJHUjE3MDUGA1UECgwuSGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJl\nc2VhcmNoIEluc3RpdHV0aW9ucyBDQTEnMCUGA1UEAwweSEFSSUNBIENsaWVudCBS\nU0EgUm9vdCBDQSAyMDIxMB4XDTIxMDIxOTEwNTg0NloXDTQ1MDIxMzEwNTg0NVow\nbzELMAkGA1UEBhMCR1IxNzA1BgNVBAoMLkhlbGxlbmljIEFjYWRlbWljIGFuZCBS\nZXNlYXJjaCBJbnN0aXR1dGlvbnMgQ0ExJzAlBgNVBAMMHkhBUklDQSBDbGllbnQg\nUlNBIFJvb3QgQ0EgMjAyMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB\nAIHbV0KQLHQ19Pi4dBlNqwlad0WBc2KwNZ/40LczAIcTtparDlQSMAe8m7dI19EZ\ng66O2KnxqQCEsIxenugMj1Rpv/bUCE8mcP4YQWMaszKLQPgHq1cx8MYWdmeatN0v\n8tFrxdCShJFxbg8uY+kfU6TdUhPMCYMpgQzFU3VEsQ5nUxjQwx+IS5+UJLQpvLvo\nTv1v0hUdSdyNcPIRGiBRVRG6iG/E91B51qox4oQ9XjLIdypQceULL+m26u+rCjM5\nDv2PpWdDgo6YaQkJG0DNOGdH6snsl3ES3iT1cjzR90NMJveQsonpRUtVPTEFekHi\nlbpDwBfFtoU9GY1kcPNbrM2f0yl1h0uVZ2qm+NHdvJCGiUMpqTdb9V2wJlpTQnaQ\nK8+eVmwrVM9cmmXfW4tIYDh8+8ULz3YEYwIzKn31g2fn+sZD/SsP1CYvd6QywSTq\nZJ2/szhxMUTyR7iiZkGh+5t7vMdGanW/WqKM6GpEwbiWtcAyCC17dDVzssrG/q8R\nchj258jCz6Uq6nvWWeh8oLJqQAlpDqWW29EAufGIbjbwiLKd8VLyw3y/MIk8Cmn5\nIqRl4ZvgdMaxhZeWLK6Uj1CmORIfvkfygXjTdTaefVogl+JSrpmfxnybZvP+2M/u\nvZcGHS2F3D42U5Z7ILroyOGtlmI+EXyzAISep0xxq0o3AgMBAAGjQjBAMA8GA1Ud\nEwEB/wQFMAMBAf8wHQYDVR0OBBYEFKDWBz1eJPd7oEQuJFINGaorBJGnMA4GA1Ud\nDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAgEADUf5CWYxUux57sKo8mg+7ZZF\nyzqmmGM/6itNTgPQHILhy9Pl1qtbZyi8nf4MmQqAVafOGyNhDbBX8P7gyr7mkNuD\nLL6DjvR5tv7QDUKnWB9p6oH1BaX+RmjrbHjJ4Orn5t4xxdLVLIJjKJ1dqBp+iObn\nK/Es1dAFntwtvTdm1ASip62/OsKoO63/jZ0z4LmahKGHH3b0gnTXDvkwSD5biD6q\nXGvWLwzojnPCGJGDObZmWtAfYCddTeP2Og1mUJx4e6vzExCuDy+r6GSzGCCdRjVk\nJXPqmxBcWDWJsUZIp/Ss1B2eW8yppRoTTyRQqtkbbbFA+53dWHTEwm8UcuzbNZ+4\nVHVFw6bIGig1Oq5l8qmYzq9byTiMMTt/zNyW/eJb1tBZ9Ha6C8tPgxDHQNAdYOkq\n5UhYdwxFab4ZcQQk4uMkH0rIwT6Z9ZaYOEgloRWwG9fihBhb9nE1mmh7QMwYXAwk\nndSV9ZmqRuqurL/0FBkk6Izs4/W8BmiKKgwFXwqXdafcfsD913oY3zDROEsfsJhw\nv8x8c/BuxDGlpJcdrL/ObCFKvicjZ/MGVoEKkY624QMFMyzaNAhNTlAjrR+lxdR6\n/uoJ7KcoYItGfLXqm91P+edrFcaIz0Pb5SfcBFZub0YV8VYt6FwMc8MjgTggy8kM\nac8sqzuEYDMZUv1pFDM=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDuDCCAqCgAwIBAgIQDPCOXAgWpa1Cf/DrJxhZ0DANBgkqhkiG9w0BAQUFADBI\nMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24x\nFzAVBgNVBAMTDlNlY3VyZVRydXN0IENBMB4XDTA2MTEwNzE5MzExOFoXDTI5MTIz\nMTE5NDA1NVowSDELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF1NlY3VyZVRydXN0IENv\ncnBvcmF0aW9uMRcwFQYDVQQDEw5TZWN1cmVUcnVzdCBDQTCCASIwDQYJKoZIhvcN\nAQEBBQADggEPADCCAQoCggEBAKukgeWVzfX2FI7CT8rU4niVWJxB4Q2ZQCQXOZEz\nZum+4YOvYlyJ0fwkW2Gz4BERQRwdbvC4u/jep4G6pkjGnx29vo6pQT64lO0pGtSO\n0gMdA+9tDWccV9cGrcrI9f4Or2YlSASWC12juhbDCE/RRvgUXPLIXgGZbf2IzIao\nwW8xQmxSPmjL8xk037uHGFaAJsTQ3MBv396gwpEWoGQRS0S8Hvbn+mPeZqx2pHGj\n7DaUaHp3pLHnDi+BeuK1cobvomuL8A/b01k/unK8RCSc43Oz969XL0Imnal0ugBS\n8kvNU3xHCzaFDmapCJcWNFfBZveA4+1wVMeT4C4oFVmHursCAwEAAaOBnTCBmjAT\nBgkrBgEEAYI3FAIEBh4EAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB\n/zAdBgNVHQ4EFgQUQjK2FvoE/f5dS3rD/fdMQB1aQ68wNAYDVR0fBC0wKzApoCeg\nJYYjaHR0cDovL2NybC5zZWN1cmV0cnVzdC5jb20vU1RDQS5jcmwwEAYJKwYBBAGC\nNxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggEBADDtT0rhWDpSclu1pqNlGKa7UTt3\n6Z3q059c4EVlew3KW+JwULKUBRSuSceNQQcSc5R+DCMh/bwQf2AQWnL1mA6s7Ll/\n3XpvXdMc9P+IBWlCqQVxyLesJugutIxq/3HcuLHfmbx8IVQr5Fiiu1cprp6poxkm\nD5kuCLDv/WnPmRoJjeOnnyvJNjR7JLN4TJUXpAYmHrZkUjZfYGfZnMUFdAvnZyPS\nCPyI6a6Lf+Ew9Dd+/cYy2i2eRDAwbO4H3tI0/NL/QPZL9GZGBlSm8jIKYyYwa5vR\n3ItHuuG51WLQoqD0ZwV4KWMabwTW+MZMo5qxN7SN5ShLHZ4swrhovO0C7jE=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDcTCCAlmgAwIBAgIVAOYJ/nrqAGiM4CS07SAbH+9StETRMA0GCSqGSIb3DQEB\nBQUAMFAxCzAJBgNVBAYTAlBMMSgwJgYDVQQKDB9LcmFqb3dhIEl6YmEgUm96bGlj\nemVuaW93YSBTLkEuMRcwFQYDVQQDDA5TWkFGSVIgUk9PVCBDQTAeFw0xMTEyMDYx\nMTEwNTdaFw0zMTEyMDYxMTEwNTdaMFAxCzAJBgNVBAYTAlBMMSgwJgYDVQQKDB9L\ncmFqb3dhIEl6YmEgUm96bGljemVuaW93YSBTLkEuMRcwFQYDVQQDDA5TWkFGSVIg\nUk9PVCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKxHL49ZMTml\n6g3wpYwrvQKkvc0Kc6oJ5sxfgmp1qZfluwbv88BdocHSiXlY8NzrVYzuWBp7J/9K\nULMAoWoTIzOQ6C9TNm4YbA9A1jdX1wYNL5Akylf8W5L/I4BXhT9KnlI6x+a7BVAm\nnr/Ttl+utT/Asms2fRfEsF2vZPMxH4UFqOAhFjxTkmJWf2Cu4nvRQJHcttB+cEAo\nag/hERt/+tzo4URz6x6r19toYmxx4FjjBkUhWQw1X21re//Hof2+0YgiwYT84zLb\neqDqCOMOXxvH480yGDkh/QoazWX3U75HQExT/iJlwnu7I1V6HXztKIwCBjsxffbH\n3jOshCJtywcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\nAQYwHQYDVR0OBBYEFFOSo33/gnbwM9TrkmdHYTMbaDsqMA0GCSqGSIb3DQEBBQUA\nA4IBAQA5UFWd5EL/pBviIMm1zD2JLUCpp0mJG7JkwznIOzawhGmFFaxGoxAhQBEg\nhaP+E0KR66oAwVC6xe32QUVSHfWqWndzbODzLB8yj7WAR0cDM45ZngSBPBuFE3Wu\nGLJX9g100ETfIX+4YBR/4NR/uvTnpnd9ete7Whl0ZfY94yuu4xQqB5QFv+P7IXXV\nlTOjkjuGXEcyQAjQzbFaT9vIABSbeCXWBbjvOXukJy6WgAiclzGNSYprre8Ryydd\nfmjW9HIGwsIO03EldivvqEYL1Hv1w/Pur+6FUEOaL68PEIUovfgwIB2BAw+vZDuw\ncH0mX548PojGyg434cDjkSXa3mHF\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEPjCCAyagAwIBAgIESlOMKDANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMC\nVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50\ncnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3Qs\nIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVz\ndCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMDkwNzA3MTcy\nNTU0WhcNMzAxMjA3MTc1NTU0WjCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVu\ndHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwt\ndGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0\naG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmlj\nYXRpb24gQXV0aG9yaXR5IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQC6hLZy254Ma+KZ6TABp3bqMriVQRrJ2mFOWHLP/vaCeb9zYQYKpSfYs1/T\nRU4cctZOMvJyig/3gxnQaoCAAEUesMfnmr8SVycco2gvCoe9amsOXmXzHHfV1IWN\ncCG0szLni6LVhjkCsbjSR87kyUnEO6fe+1R9V77w6G7CebI6C1XiUJgWMhNcL3hW\nwcKUs/Ja5CeanyTXxuzQmyWC48zCxEXFjJd6BmsqEZ+pCm5IO2/b1BEZQvePB7/1\nU1+cPvQXLOZprE4yTGJ36rfo5bs0vBmLrpxR57d+tVOxMyLlbc9wPBr64ptntoP0\njaWvYkxN4FisZDQSA/i2jZRjJKRxAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqciZ60B7vfec7aVHUbI2fkBJmqzAN\nBgkqhkiG9w0BAQsFAAOCAQEAeZ8dlsa2eT8ijYfThwMEYGprmi5ZiXMRrEPR9RP/\njTkrwPK9T3CMqS/qF8QLVJ7UG5aYMzyorWKiAHarWWluBh1+xLlEjZivEtRh2woZ\nRkfz6/djwUAFQKXSt/S1mja/qYh2iARVBCuch38aNzx+LaUa2NSJXsq9rD1s2G2v\n1fN2D807iDginWyTmsQ9v4IbZT+mD12q/OWyFcq1rca8PdCE6OoGcrBNOTJ4vz4R\nnAuknZoh8/CbCzB428Hch0P+vGOaysXCHMnHjf87ElgI5rY97HosTvuDls4MPGmH\nVHOkc8KT/1EQrBVUAdj8BbGJoX90g5pJ19xOe4pIb4tF9g==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDdzCCAl+gAwIBAgIEAgAAuTANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJJ\nRTESMBAGA1UEChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYD\nVQQDExlCYWx0aW1vcmUgQ3liZXJUcnVzdCBSb290MB4XDTAwMDUxMjE4NDYwMFoX\nDTI1MDUxMjIzNTkwMFowWjELMAkGA1UEBhMCSUUxEjAQBgNVBAoTCUJhbHRpbW9y\nZTETMBEGA1UECxMKQ3liZXJUcnVzdDEiMCAGA1UEAxMZQmFsdGltb3JlIEN5YmVy\nVHJ1c3QgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKMEuyKr\nmD1X6CZymrV51Cni4eiVgLGw41uOKymaZN+hXe2wCQVt2yguzmKiYv60iNoS6zjr\nIZ3AQSsBUnuId9Mcj8e6uYi1agnnc+gRQKfRzMpijS3ljwumUNKoUMMo6vWrJYeK\nmpYcqWe4PwzV9/lSEy/CG9VwcPCPwBLKBsua4dnKM3p31vjsufFoREJIE9LAwqSu\nXmD+tqYF/LTdB1kC1FkYmGP1pWPgkAx9XbIGevOF6uvUA65ehD5f/xXtabz5OTZy\ndc93Uk3zyZAsuT3lySNTPx8kmCFcB5kpvcY67Oduhjprl3RjM71oGDHweI12v/ye\njl0qhqdNkNwnGjkCAwEAAaNFMEMwHQYDVR0OBBYEFOWdWTCCR1jMrPoIVDaGezq1\nBE3wMBIGA1UdEwEB/wQIMAYBAf8CAQMwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3\nDQEBBQUAA4IBAQCFDF2O5G9RaEIFoN27TyclhAO992T9Ldcw46QQF+vaKSm2eT92\n9hkTI7gQCvlYpNRhcL0EYWoSihfVCr3FvDB81ukMJY2GQE/szKN+OMY3EU/t3Wgx\njkzSswF07r51XgdIGn9w/xZchMB5hbgF/X++ZRGjD8ACtPhSNzkE1akxehi/oCr0\nEpn3o0WC4zxe9Z2etciefC7IpJ5OCBRLbf1wbWsaY71k5h+3zvDyny67G7fyUIhz\nksLi4xaNmjICq44Y3ekQEe5+NauQrz4wlHrQMz2nZQ/1/I6eYs9HRCwBXbsdtTLS\nR9I4LtD+gdwyah617jzV/OeBHRnDJELqYzmp\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICWjCCAeGgAwIBAgIQMWjZ2OFiVx7SGUSI5hB98DAKBggqhkjOPQQDAzBvMQsw\nCQYDVQQGEwJHUjE3MDUGA1UECgwuSGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2Vh\ncmNoIEluc3RpdHV0aW9ucyBDQTEnMCUGA1UEAwweSEFSSUNBIENsaWVudCBFQ0Mg\nUm9vdCBDQSAyMDIxMB4XDTIxMDIxOTExMDMzNFoXDTQ1MDIxMzExMDMzM1owbzEL\nMAkGA1UEBhMCR1IxNzA1BgNVBAoMLkhlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNl\nYXJjaCBJbnN0aXR1dGlvbnMgQ0ExJzAlBgNVBAMMHkhBUklDQSBDbGllbnQgRUND\nIFJvb3QgQ0EgMjAyMTB2MBAGByqGSM49AgEGBSuBBAAiA2IABAcYrZWWlNBcD4L3\nKkD6AsnJPTamowRqwW2VAYhgElRsXKIrbhM6iJUMHCaGNkqJGbcY3jvoqFAfyt9b\nv0mAFdvjMOEdWscqigEH/m0sNO8oKJe8wflXhpWLNc+eWtFolaNCMEAwDwYDVR0T\nAQH/BAUwAwEB/zAdBgNVHQ4EFgQUUgjSvjKBJf31GpfsTl8au1PNkK0wDgYDVR0P\nAQH/BAQDAgGGMAoGCCqGSM49BAMDA2cAMGQCMEwxRUZPqOa+w3eyGhhLLYh7WOar\nlGtEA7AX/9+Cc0RRLP2THQZ7FNKJ7EAM7yEBLgIwL8kuWmwsHdmV4J6wuVxSfPb4\nOMou8dQd8qJJopX4wVheT/5zCu8xsKsjWBOMi947\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFaTCCA1GgAwIBAgIJAJK4iNuwisFjMA0GCSqGSIb3DQEBCwUAMFIxCzAJBgNV\nBAYTAlNLMRMwEQYDVQQHEwpCcmF0aXNsYXZhMRMwEQYDVQQKEwpEaXNpZyBhLnMu\nMRkwFwYDVQQDExBDQSBEaXNpZyBSb290IFIyMB4XDTEyMDcxOTA5MTUzMFoXDTQy\nMDcxOTA5MTUzMFowUjELMAkGA1UEBhMCU0sxEzARBgNVBAcTCkJyYXRpc2xhdmEx\nEzARBgNVBAoTCkRpc2lnIGEucy4xGTAXBgNVBAMTEENBIERpc2lnIFJvb3QgUjIw\nggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCio8QACdaFXS1tFPbCw3Oe\nNcJxVX6B+6tGUODBfEl45qt5WDza/3wcn9iXAng+a0EE6UG9vgMsRfYvZNSrXaNH\nPWSb6WiaxswbP7q+sos0Ai6YVRn8jG+qX9pMzk0DIaPY0jSTVpbLTAwAFjxfGs3I\nx2ymrdMxp7zo5eFm1tL7A7RBZckQrg4FY8aAamkw/dLukO8NJ9+flXP04SXabBbe\nQTg06ov80egEFGEtQX6sx3dOy1FU+16SGBsEWmjGycT6txOgmLcRK7fWV8x8nhfR\nyyX+hk4kLlYMeE2eARKmK6cBZW58Yh2EhN/qwGu1pSqVg8NTEQxzHQuyRpDRQjrO\nQG6Vrf/GlK1ul4SOfW+eioANSW1z4nuSHsPzwfPrLgVv2RvPN3YEyLRa5Beny912\nH9AZdugsBbPWnDTYltxhh5EF5EQIM8HauQhl1K6yNg3ruji6DOWbnuuNZt2Zz9aJ\nQfYEkoopKW1rOhzndX0CcQ7zwOe9yxndnWCywmZgtrEE7snmhrmaZkCo5xHtgUUD\ni/ZnWejBBhG93c+AAk9lQHhcR1DIm+YfgXvkRKhbhZri3lrVx/k6RGZL5DJUfORs\nnLMOPReisjQS1n6yqEm70XooQL6iFh/f5DcfEXP7kAplQ6INfPgGAVUzfbANuPT1\nrqVCV3w2EYx7XsQDnYx5nQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1Ud\nDwEB/wQEAwIBBjAdBgNVHQ4EFgQUtZn4r7CU9eMg1gqtzk5WpC5uQu0wDQYJKoZI\nhvcNAQELBQADggIBACYGXnDnZTPIgm7ZnBc6G3pmsgH2eDtpXi/q/075KMOYKmFM\ntCQSin1tERT3nLXK5ryeJ45MGcipvXrA1zYObYVybqjGom32+nNjf7xueQgcnYqf\nGopTpti72TVVsRHFqQOzVju5hJMiXn7B9hJSi+osZ7z+Nkz1uM/Rs0mSO9MpDpkb\nlvdhuDvEK7Z4bLQjb/D907JedR+Zlais9trhxTF7+9FGs9K8Z7RiVLoJ92Owk6Ka\n+elSLotgEqv89WBW7xBci8QaQtyDW2QOy7W81k/BfDxujRNt+3vrMNDcTa/F1bal\nTFtxyegxvug4BkihGuLq0t4SOVga/4AOgnXmt8kHbA7v/zjxmHHEt38OFdAlab0i\nnSvtBfZGR6ztwPDUO+Ls7pZbkBNOHlY667DvlruWIxG68kOGdGSVyCh13x01utI3\ngzhTODY7z2zp+WsO0PsE6E9312UBeIYMej4hYvF/Y3EMyZ9E26gnonW+boE+18Dr\nG5gPcFw0sorMwIUY6256s/daoQe/qUKS82Ail+QUoQebTnbAjn39pCXHR+3/H3Os\nzMOl6W8KjptlwlCFtaOgUxLMVYdh84GuEEZhvUQhuMI9dM9+JDX6HAcOmz0iyu8x\nL4ysEr3vQCj8KWefshNPZiTEUxnpHikV7+ZtsH8tZ/3zbBt1RqPlShfppNcL\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkG\nA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv\nb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAw\nMDBaFw0yODAxMjgxMjAwMDBaMFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i\nYWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYDVQQDExJHbG9iYWxT\naWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDaDuaZ\njc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavp\nxy0Sy6scTHAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCOXkNz8kHp\n1Wrjsok6Vjk4bwY8iGlbKk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdG\nsnUOhugZitVtbNV4FpWi6cgKOOvyJBNPc1STE4U6G7weNLWLBYy5d4ux2x8gkasJ\nU26Qzns3dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrXgzT/LCrBbBlDSgeF59N8\n9iFo7+ryUp9/k5DPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0B\nAQUFAAOCAQEA1nPnfE920I2/7LqivjTFKDK1fPxsnCwrvQmeU79rXqoRSLblCKOz\nyj1hTdNGCbM+w6DjY1Ub8rrvrTnhQ7k4o+YviiY776BQVvnGCv04zcQLcFGUl5gE\n38NflNUVyRRBnMRddWQVDf9VMOyGj/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymP\nAbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhHhm4qxFYxldBniYUr+WymXUad\nDKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveCX4XSQRjbgbME\nHMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIURFc0JFuBiZs18s64KztbpybwdSgwDQYJKoZIhvcNAQEL\nBQAwSDELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAc\nBgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMiBHMzAeFw0xMjAxMTIxODU5MzJaFw00\nMjAxMTIxODU5MzJaMEgxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBM\naW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDIgRzMwggIiMA0GCSqG\nSIb3DQEBAQUAA4ICDwAwggIKAoICAQChriWyARjcV4g/Ruv5r+LrI3HimtFhZiFf\nqq8nUeVuGxbULX1QsFN3vXg6YOJkApt8hpvWGo6t/x8Vf9WVHhLL5hSEBMHfNrMW\nn4rjyduYNM7YMxcoRvynyfDStNVNCXJJ+fKH46nafaF9a7I6JaltUkSs+L5u+9ym\nc5GQYaYDFCDy54ejiK2toIz/pgslUiXnFgHVy7g1gQyjO/Dh4fxaXc6AcW34Sas+\nO7q414AB+6XrW7PFXmAqMaCvN+ggOp+oMiwMzAkd056OXbxMmO7FGmh77FOm6RQ1\no9/NgJ8MSPsc9PG/Srj61YxxSscfrf5BmrODXfKEVu+lV0POKa2Mq1W/xPtbAd0j\nIaFYAI7D0GoT7RPjEiuA3GfmlbLNHiJuKvhB1PLKFAeNilUSxmn1uIZoL1NesNKq\nIcGY5jDjZ1XHm26sGahVpkUG0CM62+tlXSoREfA7T8pt9DTEceT/AFr2XK4jYIVz\n8eQQsSWu1ZK7E8EM4DnatDlXtas1qnIhO4M15zHfeiFuuDIIfR0ykRVKYnLP43eh\nvNURG3YBZwjgQQvD6xVu+KQZ2aKrr+InUlYrAoosFCT5v0ICvybIxo/gbjh9Uy3l\n7ZizlWNof/k19N+IxWA1ksB8aRxhlRbQ694Lrz4EEEVlWFA4r0jyWbYW8jwNkALG\ncC4BrTwV1wIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB\nBjAdBgNVHQ4EFgQU7edvdlq/YOxJW8ald7tyFnGbxD0wDQYJKoZIhvcNAQELBQAD\nggIBAJHfgD9DCX5xwvfrs4iP4VGyvD11+ShdyLyZm3tdquXK4Qr36LLTn91nMX66\nAarHakE7kNQIXLJgapDwyM4DYvmL7ftuKtwGTTwpD4kWilhMSA/ohGHqPHKmd+RC\nroijQ1h5fq7KpVMNqT1wvSAZYaRsOPxDMuHBR//47PERIjKWnML2W2mWeyAMQ0Ga\nW/ZZGYjeVYg3UQt4XAoeo0L9x52ID8DyeAIkVJOviYeIyUqAHerQbj5hLja7NQ4n\nlv1mNDthcnPxFlxHBlRJAHpYErAK74X9sbgzdWqTHBLmYF5vHX/JHyPLhGGfHoJE\n+V+tYlUkmlKY7VHnoX6XOuYvHxHaU4AshZ6rNRDbIl9qxV6XU/IyAgkwo1jwDQHV\ncsaxfGl7w/U2Rcxhbl5MlMVerugOXou/983g7aEOGzPuVBj+D77vfoRrQ+NwmNtd\ndbINWQeFFSM51vHfqSYP1kjHs6Yi9TM3WpVHn3u6GBVv/9YUZINJ0gpnIdsPNWNg\nKCLjsZWDzYWm3S8P52dSbrsvhXz1SnPnxT7AvSESBT/8twNJAlvIJebiVDj1eYeM\nHVOyToV7BjjHLPj4sHKNJeV3UvQDHEimUF+IIDBu8oJDqz2XhOdT+yHBTw8imoa4\nWSr2Rz0ZiC3oheGe7IUIarFsNMkd7EgrO3jtZsSOeWmD3n+M\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIIGDCCBgCgAwIBAgIGAT8vMXfmMA0GCSqGSIb3DQEBCwUAMIIBCjELMAkGA1UE\nBhMCRVMxEjAQBgNVBAgMCUJhcmNlbG9uYTFYMFYGA1UEBwxPQmFyY2Vsb25hIChz\nZWUgY3VycmVudCBhZGRyZXNzIGF0IGh0dHA6Ly93d3cuYW5mLmVzL2VzL2FkZHJl\nc3MtZGlyZWNjaW9uLmh0bWwgKTEnMCUGA1UECgweQU5GIEF1dG9yaWRhZCBkZSBD\nZXJ0aWZpY2FjaW9uMRcwFQYDVQQLDA5BTkYgQ2xhc2UgMSBDQTEaMBgGCSqGSIb3\nDQEJARYLaW5mb0BhbmYuZXMxEjAQBgNVBAUTCUc2MzI4NzUxMDEbMBkGA1UEAwwS\nQU5GIEdsb2JhbCBSb290IENBMB4XDTEzMDYxMDE3NDUzOFoXDTMzMDYwNTE3NDUz\nOFowggEKMQswCQYDVQQGEwJFUzESMBAGA1UECAwJQmFyY2Vsb25hMVgwVgYDVQQH\nDE9CYXJjZWxvbmEgKHNlZSBjdXJyZW50IGFkZHJlc3MgYXQgaHR0cDovL3d3dy5h\nbmYuZXMvZXMvYWRkcmVzcy1kaXJlY2Npb24uaHRtbCApMScwJQYDVQQKDB5BTkYg\nQXV0b3JpZGFkIGRlIENlcnRpZmljYWNpb24xFzAVBgNVBAsMDkFORiBDbGFzZSAx\nIENBMRowGAYJKoZIhvcNAQkBFgtpbmZvQGFuZi5lczESMBAGA1UEBRMJRzYzMjg3\nNTEwMRswGQYDVQQDDBJBTkYgR2xvYmFsIFJvb3QgQ0EwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQDHPi9xy4wynbcUbWjorVUgQKeUAVh937J7P37XmsfH\nZLOBZKIIlhhCtRwnDlg7x+BUvtJOTkIbEGMujDygUQ2s3HDYr5I41hTyM2Pl0cq2\nEuSGEbPIHb3dEX8NAguFexM0jqNjrreN3hM2/+TOkAxSdDJP2aMurlySC5zwl47K\nZLHtcVrkZnkDa0o5iN24hJT4vBDT4t2q9khQ+qb1D8KgCOb02r1PxWXu3vfd6Ha2\nmkdB97iGuEh5gO2n4yOmFS5goFlVA2UdPbbhJsb8oKVKDd+YdCKGQDCkQyG4AjmC\nYiNm3UPG/qtftTH5cWri67DlLtm6fyUFOMmO6NSh0RtR745pL8GyWJUanyq/Q4bF\nHQB21E+WtTsCaqjGaoFcrBunMypmCd+jUZXl27TYENRFbrwNdAh7m2UztcIyb+Sg\nVJFyfvVsBQNvnp7GPimVxXZNc4VpxEXObRuPWQN1oZN/90PcZVqTia/SHzEyTryL\nckhiLG3jZiaFZ7pTZ5I9wti9Pn+4kOHvE3Y/4nEnUo4mTxPX9pOlinF+VCiybtV2\nu1KSlc+YaIM7VmuyndDZCJRXm3v0/qTE7t5A5fArZl9lvibigMbWB8fpD+c1GpGH\nEo8NRY0lkaM+DkIqQoaziIsz3IKJrfdKaq9bQMSlIfameKBZ8fNYTBZrH9KZAIhz\nYwIDAQABo4IBfjCCAXowHQYDVR0OBBYEFIf6nt9SdnXsSUogb1twlo+d77sXMB8G\nA1UdIwQYMBaAFIf6nt9SdnXsSUogb1twlo+d77sXMA8GA1UdEwEB/wQFMAMBAf8w\nDgYDVR0PAQH/BAQDAgEGMIIBFQYDVR0RBIIBDDCCAQiCEWh0dHA6Ly93d3cuYW5m\nLmVzgQtpbmZvQGFuZi5lc6SB5TCB4jE0MDIGA1UECQwrR3JhbiBWaWEgZGUgbGVz\nIENvcnRzIENhdGFsYW5lcy4gOTk2LiAwODAxODESMBAGA1UEBwwJQmFyY2Vsb25h\nMScwJQYDVQQKDB5BTkYgQXV0b3JpZGFkIGRlIENlcnRpZmljYWNpb24xEjAQBgNV\nBAUTCUc2MzI4NzUxMDFZMFcGA1UECwxQSW5zY3JpdGEgZW4gZWwgTWluaXN0ZXJp\nbyBkZWwgSW50ZXJpb3IgZGUgRXNwYcOxYSBjb24gZWwgbnVtZXJvIG5hY2lvbmFs\nIDE3MS40NDMwDQYJKoZIhvcNAQELBQADggIBAIgR9tFTZ9BCYg+HViMxOfF0MHN2\nPe/eC128ARdS+GH8A4thtbqiH/SOYbWofO/0zssHhNKa5iQEj45lCAb8BANpWJMD\nnWkPr6jq2+50a6d0MMgSS2l1rvjSF+3nIrEuicshHXSTi3q/vBLKr7uGKMVFaM68\nXAropIwk6ndlA0JseARSPsbetv7ALESMIZAxlHV1TcctYHd0bB3c/Jz+PLszJQqs\nCg/kBPo2D111OXZkIY8W/fJuG9veR783khAK2gUnC0zLLCNsYzEbdGt8zUmBsAsM\ncGxqGm6B6vDXd65OxWqw13xdq/24+5R8Ng1PF9tvfjZkUFBF30CxjWur7P90WiKI\nG7IGfr6BE1NgXlhEQQu4F+HizB1ypEPzGWltecXQ4yOzO+H0WfFTjLTYX6VSveyW\nDQV18ixF8M4tHP/SwNE+yyv2b2JJ3/3RpxjtFlLk+opJ574x0gD/dMJuWTH0JqVY\n3PbRfE1jIxFpk164Qz/Xp7H7w7f6xh+tQCkBs3PUYmnGIZcPwq44Q6JHlCNsKx4K\nhxfggTvRCk4w79cUID45c2qDsRCqTPoOo/cbOpcfVhbH9LdMORpmuLwNogRZEUSE\nfWpqR9q+0kcQf4zGSWIURIyDrogdpDgoHDxktqgMgc+qA4ZE2WQl1D8hmev53A46\nlUSrWUiWfDXtK3ux\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDtzCCAp+gAwIBAgIQDOfg5RfYRv6P5WD8G/AwOTANBgkqhkiG9w0BAQUFADBl\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJv\nb3QgQ0EwHhcNMDYxMTEwMDAwMDAwWhcNMzExMTEwMDAwMDAwWjBlMQswCQYDVQQG\nEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNl\ncnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgQ0EwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtDhXO5EOAXLGH87dg+XESpa7c\nJpSIqvTO9SA5KFhgDPiA2qkVlTJhPLWxKISKityfCgyDF3qPkKyK53lTXDGEKvYP\nmDI2dsze3Tyoou9q+yHyUmHfnyDXH+Kx2f4YZNISW1/5WBg1vEfNoTb5a3/UsDg+\nwRvDjDPZ2C8Y/igPs6eD1sNuRMBhNZYW/lmci3Zt1/GiSw0r/wty2p5g0I6QNcZ4\nVYcgoc/lbQrISXwxmDNsIumH0DJaoroTghHtORedmTpyoeb6pNnVFzF1roV9Iq4/\nAUaG9ih5yLHa5FcXxH4cDrC0kqZWs72yl+2qp/C3xag/lRbQ/6GW6whfGHdPAgMB\nAAGjYzBhMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBRF66Kv9JLLgjEtUYunpyGd823IDzAfBgNVHSMEGDAWgBRF66Kv9JLLgjEtUYun\npyGd823IDzANBgkqhkiG9w0BAQUFAAOCAQEAog683+Lt8ONyc3pklL/3cmbYMuRC\ndWKuh+vy1dneVrOfzM4UKLkNl2BcEkxY5NM9g0lFWJc1aRqoR+pWxnmrEthngYTf\nfwk8lOa4JiwgvT2zKIn3X/8i4peEH+ll74fg38FnSbNd67IJKusm7Xi+fT8r87cm\nNW1fiQG2SVufAQWbqz0lwcy2f8Lxb4bG+mRo64EtlOtCt/qMHt1i8b5QZ7dsvfPx\nH2sMNgcWfzd8qVttevESRmCD1ycEvkvOl77DZypoEd+A5wwzZr8TDRRu838fYxAe\n+o0bJW1sj6W3YQGx0qMmoRBxna3iw/nDmVG3KwcIzi7mULKn+gpFL6Lw8g==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICRjCCAc2gAwIBAgIQC6Fa+h3foLVJRK/NJKBs7DAKBggqhkjOPQQDAzBlMQsw\nCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cu\nZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3Qg\nRzMwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1MTIwMDAwWjBlMQswCQYDVQQGEwJV\nUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu\nY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzMwdjAQBgcq\nhkjOPQIBBgUrgQQAIgNiAAQZ57ysRGXtzbg/WPuNsVepRC0FFfLvC/8QdJ+1YlJf\nZn4f5dwbRXkLzMZTCp2NXQLZqVneAlr2lSoOjThKiknGvMYDOAdfVdp+CW7if17Q\nRSAPWXYQ1qAk8C3eNvJsKTmjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBTL0L2p4ZgFUaFNN6KDec6NHSrkhDAKBggqhkjOPQQD\nAwNnADBkAjAlpIFFAmsSS3V0T8gj43DydXLefInwz5FyYZ5eEJJZVrmDxxDnOOlY\nJjZ91eQ0hjkCMHw2U/Aw5WJjOpnitqM7mzT6HtoQknFekROn3aRukswy1vUhZscv\n6pZjamVFkpUBtA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF2jCCA8KgAwIBAgIMBfcOhtpJ80Y1LrqyMA0GCSqGSIb3DQEBCwUAMIGIMQsw\nCQYDVQQGEwJVUzERMA8GA1UECAwISWxsaW5vaXMxEDAOBgNVBAcMB0NoaWNhZ28x\nITAfBgNVBAoMGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5jLjExMC8GA1UEAwwoVHJ1\nc3R3YXZlIEdsb2JhbCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0xNzA4MjMx\nOTM0MTJaFw00MjA4MjMxOTM0MTJaMIGIMQswCQYDVQQGEwJVUzERMA8GA1UECAwI\nSWxsaW5vaXMxEDAOBgNVBAcMB0NoaWNhZ28xITAfBgNVBAoMGFRydXN0d2F2ZSBI\nb2xkaW5ncywgSW5jLjExMC8GA1UEAwwoVHJ1c3R3YXZlIEdsb2JhbCBDZXJ0aWZp\nY2F0aW9uIEF1dGhvcml0eTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB\nALldUShLPDeS0YLOvR29zd24q88KPuFd5dyqCblXAj7mY2Hf8g+CY66j96xz0Xzn\nswuvCAAJWX/NKSqIk4cXGIDtiLK0thAfLdZfVaITXdHG6wZWiYj+rDKd/VzDBcdu\n7oaJuogDnXIhhpCujwOl3J+IKMujkkkP7NAP4m1ET4BqstTnoApTAbqOl5F2brz8\n1Ws25kCI1nsvXwXoLG0R8+eyvpJETNKXpP7ScoFDB5zpET71ixpZfR9oWN0EACyW\n80OzfpgZdNmcc9kYvkHHNHnZ9GLCQ7mzJ7Aiy/k9UscwR7PJPrhq4ufogXBeQotP\nJqX+OsIgbrv4Fo7NDKm0G2x2EOFYeUY+VM6AqFcJNykbmROPDMjWLBz7BegIlT1l\nRtzuzWniTY+HKE40Cz7PFNm73bZQmq131BnW2hqIyE4bJ3XYsgjxroMwuREOzYfw\nhI0Vcnyh78zyiGG69Gm7DIwLdVcEuE4qFC49DxweMqZiNu5m4iK4BUBjECLzMx10\ncoos9TkpoNPnG4CELcU9402x/RpvumUHO1jsQkUm+9jaJXLE9gCxInm943xZYkqc\nBW89zubWR2OZxiRvchLIrH+QtAuRcOi35hYQcRfO3gZPSEF9NUqjifLJS3tBEW1n\ntwiYTOURGa5CgNz7kAXU+FDKvuStx8KU1xad5hePrzb7AgMBAAGjQjBAMA8GA1Ud\nEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJngGWcNYtt2s9o9uFvo/ULSMQ6HMA4GA1Ud\nDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAmHNw4rDT7TnsTGDZqRKGFx6W\n0OhUKDtkLSGm+J1WE2pIPU/HPinbbViDVD2HfSMF1OQc3Og4ZYbFdada2zUFvXfe\nuyk3QAUHw5RSn8pk3fEbK9xGChACMf1KaA0HZJDmHvUqoai7PF35owgLEQzxPy0Q\nlG/+4jSHg9bP5Rs1bdID4bANqKCqRieCNqcVtgimQlRXtpla4gt5kNdXElE1GYhB\naCXUNxeEFfsBctyV3lImIJgm4nb1J2/6ADtKYdkNy1GTKv0WBpanI5ojSP5RvbbE\nsLFUzt5sQa0WZ37b/TjNuThOssFgy50X31ieemKyJo90lZvkWx3SD92YHJtZuSPT\nMaCm/zjdzyBP6VhWOmfD0faZmZ26NraAL4hHT4a/RDqA5Dccprrql5gR0IRiR2Qe\nqu5AvzSxnI9O4fKSTx+O856X3vOmeWqJcU9LJxdI/uz0UA9PSX3MReO9ekDFQdxh\nVicGaeVyQYHTtgGJoC86cnn+OjC/QezHYj6RS8fZMXZC+fc8Y+wmjHMMfRod6qh8\nh6jCJ3zhM0EPz8/8AKAigJ5Kp28AsEFFtyLKaEjFQqKu3R3y4G5OBVixwJAWKqQ9\nEEC+j2Jjg6mcgn0tAumDMHzLJ8n9HmYAsC7TIS+OMxZsmO0QqAfWzJPP29FpHOTK\nyeC2nOnOcXHebD8WpHk=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFiDCCA3CgAwIBAgIIfQmX/vBH6nowDQYJKoZIhvcNAQELBQAwYjELMAkGA1UE\nBhMCQ04xMjAwBgNVBAoMKUdVQU5HIERPTkcgQ0VSVElGSUNBVEUgQVVUSE9SSVRZ\nIENPLixMVEQuMR8wHQYDVQQDDBZHRENBIFRydXN0QVVUSCBSNSBST09UMB4XDTE0\nMTEyNjA1MTMxNVoXDTQwMTIzMTE1NTk1OVowYjELMAkGA1UEBhMCQ04xMjAwBgNV\nBAoMKUdVQU5HIERPTkcgQ0VSVElGSUNBVEUgQVVUSE9SSVRZIENPLixMVEQuMR8w\nHQYDVQQDDBZHRENBIFRydXN0QVVUSCBSNSBST09UMIICIjANBgkqhkiG9w0BAQEF\nAAOCAg8AMIICCgKCAgEA2aMW8Mh0dHeb7zMNOwZ+Vfy1YI92hhJCfVZmPoiC7XJj\nDp6L3TQsAlFRwxn9WVSEyfFrs0yw6ehGXTjGoqcuEVe6ghWinI9tsJlKCvLriXBj\nTnnEt1u9ol2x8kECK62pOqPseQrsXzrj/e+APK00mxqriCZ7VqKChh/rNYmDf1+u\nKU49tm7srsHwJ5uu4/Ts765/94Y9cnrrpftZTqfrlYwiOXnhLQiPzLyRuEH3FMEj\nqcOtmkVEs7LXLM3GKeJQEK5cy4KOFxg2fZfmiJqwTTQJ9Cy5WmYqsBebnh52nUpm\nMUHfP/vFBu8btn4aRjb3ZGM74zkYI+dndRTVdVeSN72+ahsmUPI2JgaQxXABZG12\nZuGR224HwGGALrIuL4xwp9E7PLOR5G62xDtw8mySlwnNR30YwPO7ng/Wi64HtloP\nzgsMR6flPri9fcebNaBhlzpBdRfMK5Z3KpIhHtmVdiBnaM8Nvd/WHwlqmuLMc3Gk\nL30SgLdTMEZeS1SZD2fJpcjyIMGC7J0R38IC+xo70e0gmu9lZJIQDSri3nDxGGeC\njGHeuLzRL5z7D9Ar7Rt2ueQ5Vfj4oR24qoAATILnsn8JuLwwoC8N9VKejveSswoA\nHQBUlwbgsQfZxw9cZX08bVlX5O2ljelAU58VS6Bx9hoh49pwBiFYFIeFd3mqgnkC\nAwEAAaNCMEAwHQYDVR0OBBYEFOLJQJ9NzuiaoXzPDj9lxSmIahlRMA8GA1UdEwEB\n/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQDRSVfg\np8xoWLoBDysZzY2wYUWsEe1jUGn4H3++Fo/9nesLqjJHdtJnJO29fDMylyrHBYZm\nDRd9FBUb1Ov9H5r2XpdptxolpAqzkT9fNqyL7FeoPueBihhXOYV0GkLH6VsTX4/5\nCOmSdI31R9KrO9b7eGZONn356ZLpBN79SWP8bfsUcZNnL0dKt7n/HipzcEYwv1ry\nL3ml4Y0M2fmyYzeMN2WFcGpcWwlyua1jPLHd+PwyvzeG5LuOmCd+uh8W4XAR8gPf\nJWIyJyYYMoSf/wA6E7qaTfRPuBRwIrHKK5DOKcFw9C+df/KQHtZa37dG/OaG+svg\nIHZ6uqbL9XzeYqWxi+7egmaKTjowHz+Ay60nugxe19CxVsp3cbK1daFQqUBDF8Io\n2c9Si1vIY9RCPqAzekYu9wogRlR+ak8x8YF+QnQ4ZXMn7sZ8uI7XpTrXmKGcjBBV\n09tL7ECQ8s1uV9JiDnxXk7Gnbc2dg7sq5+W2O3FYrf3RRbxake5TFW/TRQl1brqQ\nXR4EzzffHqhmsYzmIGrv/EhOdJhCrylvLmrH+33RZjEizIYAfmaDDEL0vTSSwxrq\nT8p+ck0LcIymSLumoRT2+1hEmRSuqguTaaApJUqlyyvdimYHFngVV3Eb7PVHhPOe\nMTd61X8kreS8/f3MboPoDKi3QWwH3b08hpcv0g==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUx\nKzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAd\nBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNl\nYyBHbG9iYWxSb290IENsYXNzIDIwHhcNMDgxMDAxMTA0MDE0WhcNMzMxMDAxMjM1\nOTU5WjCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnBy\naXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50\nZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDIwggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqX9obX+hzkeXaXPSi5kfl82hVYAUd\nAqSzm1nzHoqvNK38DcLZSBnuaY/JIPwhqgcZ7bBcrGXHX+0CfHt8LRvWurmAwhiC\nFoT6ZrAIxlQjgeTNuUk/9k9uN0goOA/FvudocP05l03Sx5iRUKrERLMjfTlH6VJi\n1hKTXrcxlkIF+3anHqP1wvzpesVsqXFP6st4vGCvx9702cu+fjOlbpSD8DT6Iavq\njnKgP6TeMFvvhk1qlVtDRKgQFRzlAVfFmPHmBiiRqiDFt1MmUUOyCxGVWOHAD3bZ\nwI18gfNycJ5v/hqO2V81xrJvNHy+SE/iWjnX2J14np+GPgNeGYtEotXHAgMBAAGj\nQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS/\nWSA2AHmgoCJrjNXyYdK4LMuCSjANBgkqhkiG9w0BAQsFAAOCAQEAMQOiYQsfdOhy\nNsZt+U2e+iKo4YFWz827n+qrkRk4r6p8FU3ztqONpfSO9kSpp+ghla0+AGIWiPAC\nuvxhI+YzmzB6azZie60EI4RYZeLbK4rnJVM3YlNfvNoBYimipidx5joifsFvHZVw\nIEoHNN/q/xWA5brXethbdXwFeilHfkCoMRN3zUA7tFFHei4R40cR3p1m0IvVVGb6\ng1XqfMIpiRvpb7PO4gWEyS8+eIVibslfwXhjdFjASBgMmTnrpMwatXlajRWc2BQN\n9noHV8cigwUtPJslJj0Ys6lDfMjIq2SPDqO/nBudMNva0Bkuqjzx+zOAduTNrRlP\nBSeOE6Fuwg==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUx\nKzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAd\nBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNl\nYyBHbG9iYWxSb290IENsYXNzIDMwHhcNMDgxMDAxMTAyOTU2WhcNMzMxMDAxMjM1\nOTU5WjCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnBy\naXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50\nZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDMwggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9dZPwYiJvJK7genasfb3ZJNW4t/zN\n8ELg63iIVl6bmlQdTQyK9tPPcPRStdiTBONGhnFBSivwKixVA9ZIw+A5OO3yXDw/\nRLyTPWGrTs0NvvAgJ1gORH8EGoel15YUNpDQSXuhdfsaa3Ox+M6pCSzyU9XDFES4\nhqX2iys52qMzVNn6chr3IhUciJFrf2blw2qAsCTz34ZFiP0Zf3WHHx+xGwpzJFu5\nZeAsVMhg02YXP+HMVDNzkQI6pn97djmiH5a2OK61yJN0HZ65tOVgnS9W0eDrXltM\nEnAMbEQgqxHY9Bn20pxSN+f6tsIxO0rUFJmtxxr1XV/6B7h8DR/Wgx6zAgMBAAGj\nQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS1\nA/d2O2GCahKqGFPrAyGUv/7OyjANBgkqhkiG9w0BAQsFAAOCAQEAVj3vlNW92nOy\nWL6ukK2YJ5f+AbGwUgC4TeQbIXQbfsDuXmkqJa9c1h3a0nnJ85cp4IaH3gRZD/FZ\n1GSFS5mvJQQeyUapl96Cshtwn5z2r3Ex3XsFpSzTucpH9sry9uetuUg/vBa3wW30\n6gmv7PO15wWeph6KU1HWk4HMdJP2udqmJQV0eVp+QD6CSyYRMG7hP0HHRwA11fXT\n91Q+gT3aSWqas+8QPebrb9HIIkfLzM8BMZLZGOMivgkeGj5asuRrDFR6fUNOuIml\ne9eiPZaGzPImNC1qkp2aGtAw4l1OBLBfiyB+d8E9lYLRRpo7PHi4b6HQDWSieB4p\nTpPDpFQUWw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDhDCCAwqgAwIBAgIQL4D+I4wOIg9IZxIokYesszAKBggqhkjOPQQDAzCByjEL\nMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW\nZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2ln\nbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp\nU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9y\naXR5IC0gRzQwHhcNMDcxMTA1MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCByjELMAkG\nA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJp\nU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwg\nSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2ln\nbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5\nIC0gRzQwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASnVnp8Utpkmw4tXNherJI9/gHm\nGUo9FANL+mAnINmDiWn6VMaaGF5VKmTeBvaNSjutEDxlPZCIBIngMGGzrl0Bp3ve\nfLK+ymVhAIau2o970ImtTR1ZmkGxvEeA3J5iw/mjgbIwga8wDwYDVR0TAQH/BAUw\nAwEB/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJ\naW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYj\naHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFLMW\nkf3upm7ktS5Jj4d4gYDs5bG1MAoGCCqGSM49BAMDA2gAMGUCMGYhDBgmYFo4e1ZC\n4Kf8NoRRkSAsdk1DPcQdhCPQrNZ8NQbOzWm9kA3bbEhCHQ6qQgIxAJw9SDkjOVga\nFRJZap7v1VmyHVIsmXHNxynfGyphe3HR3vPA5Q06Sqotp9iGKt0uEA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDljCCAn6gAwIBAgIQC5McOtY5Z+pnI7/Dr5r0SzANBgkqhkiG9w0BAQsFADBl\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJv\nb3QgRzIwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1MTIwMDAwWjBlMQswCQYDVQQG\nEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNl\ncnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDZ5ygvUj82ckmIkzTz+GoeMVSA\nn61UQbVH35ao1K+ALbkKz3X9iaV9JPrjIgwrvJUXCzO/GU1BBpAAvQxNEP4Htecc\nbiJVMWWXvdMX0h5i89vqbFCMP4QMls+3ywPgym2hFEwbid3tALBSfK+RbLE4E9Hp\nEgjAALAcKxHad3A2m67OeYfcgnDmCXRwVWmvo2ifv922ebPynXApVfSr/5Vh88lA\nbx3RvpO704gqu52/clpWcTs/1PPRCv4o76Pu2ZmvA9OPYLfykqGxvYmJHzDNw6Yu\nYjOuFgJ3RFrngQo8p0Quebg/BLxcoIfhG69Rjs3sLPr4/m3wOnyqi+RnlTGNAgMB\nAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQW\nBBTOw0q5mVXyuNtgv6l+vVa1lzan1jANBgkqhkiG9w0BAQsFAAOCAQEAyqVVjOPI\nQW5pJ6d1Ee88hjZv0p3GeDgdaZaikmkuOGybfQTUiaWxMTeKySHMq2zNixya1r9I\n0jJmwYrA8y8678Dj1JGG0VDjA9tzd29KOVPt3ibHtX2vK0LRdWLjSisCx1BL4Gni\nlmwORGYQRI+tBev4eaymG+g3NJ1TyWGqolKvSnAWhsI6yLETcDbYz+70CjTVW0z9\nB5yiutkBclzzTcHdDrEcDcRjvq30FPuJ7KJBDkzMyFdA0G4Dqs0MjomZmWzwPDCv\nON9vvKO+KSAnq3T/EyJ43pdSVR6DtVQgA+6uwE9W3jfMw3+qBCe703e4YtsXfJwo\nIhNzbM8m9Yop5w==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDdzCCAl+gAwIBAgIBADANBgkqhkiG9w0BAQsFADBdMQswCQYDVQQGEwJKUDEl\nMCMGA1UEChMcU0VDT00gVHJ1c3QgU3lzdGVtcyBDTy4sTFRELjEnMCUGA1UECxMe\nU2VjdXJpdHkgQ29tbXVuaWNhdGlvbiBSb290Q0EyMB4XDTA5MDUyOTA1MDAzOVoX\nDTI5MDUyOTA1MDAzOVowXTELMAkGA1UEBhMCSlAxJTAjBgNVBAoTHFNFQ09NIFRy\ndXN0IFN5c3RlbXMgQ08uLExURC4xJzAlBgNVBAsTHlNlY3VyaXR5IENvbW11bmlj\nYXRpb24gUm9vdENBMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANAV\nOVKxUrO6xVmCxF1SrjpDZYBLx/KWvNs2l9amZIyoXvDjChz335c9S672XewhtUGr\nzbl+dp+++T42NKA7wfYxEUV0kz1XgMX5iZnK5atq1LXaQZAQwdbWQonCv/Q4EpVM\nVAX3NuRFg3sUZdbcDE3R3n4MqzvEFb46VqZab3ZpUql6ucjrappdUtAtCms1FgkQ\nhNBqyjoGADdH5H5XTz+L62e4iKrFvlNVspHEfbmwhRkGeC7bYRr6hfVKkaHnFtWO\nojnflLhwHyg/i/xAXmODPIMqGplrz95Zajv8bxbXH/1KEOtOghY6rCcMU/Gt1SSw\nawNQwS08Ft1ENCcadfsCAwEAAaNCMEAwHQYDVR0OBBYEFAqFqXdlBZh8QIH4D5cs\nOPEK7DzPMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3\nDQEBCwUAA4IBAQBMOqNErLlFsceTfsgLCkLfZOoc7llsCLqJX2rKSpWeeo8HxdpF\ncoJxDjrSzG+ntKEju/Ykn8sX/oymzsLS28yN/HH8AynBbF0zX2S2ZTuJbxh2ePXc\nokgfGT+Ok+vx+hfuzU7jBBJV1uXk3fs+BXziHV7Gp7yXT2g69ekuCkO2r1dcYmh8\nt/2jioSgrGK+KwmHNPBqAbubKVY8/gA3zyNs8U6qtnRGEmyR7jTV7JqR50S+kDFy\n1UkC9gLl9B/rfNmWVan/7Ir5mUf/NVoCqgTLiluHcSmRvaS0eg29mvVXIwAHIRc/\nSjnRBUkLp7Y3gaVdjKozXoEofKd9J+sAro03\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEGjCCAwICEQCLW3VWhFSFCwDPrzhIzrGkMA0GCSqGSIb3DQEBBQUAMIHKMQsw\nCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl\ncmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu\nLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT\naWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\ndHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD\nVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT\naWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ\nbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu\nIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg\nLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN2E1Lm0+afY8wR4\nnN493GwTFtl63SRRZsDHJlkNrAYIwpTRMx/wgzUfbhvI3qpuFU5UJ+/EbRrsC+MO\n8ESlV8dAWB6jRx9x7GD2bZTIGDnt/kIYVt/kTEkQeE4BdjVjEjbdZrwBBDajVWjV\nojYJrKshJlQGrT/KFOCsyq0GHZXi+J3x4GD/wn91K0zM2v6HmSHquv4+VNfSWXjb\nPG7PoBMAGrgnoeS+Z5bKoMWznN3JdZ7rMJpfo83ZrngZPyPpXNspva1VyBtUjGP2\n6KbqxzcSXKMpHgLZ2x87tNcPVkeBFQRKr4Mn0cVYiMHd9qqnoxjaaKptEVHhv2Vr\nn5Z20T0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAq2aN17O6x5q25lXQBfGfMY1a\nqtmqRiYPce2lrVNWYgFHKkTp/j90CxObufRNG7LRX7K20ohcs5/Ny9Sn2WCVhDr4\nwTcdYcrnsMXlkdpUpqwxga6X3s0IrLjAl4B/bnKk52kTlWUfxJM8/XmPBNQ+T+r3\nns7NZ3xPZQL/kYVUc8f/NveGLezQXk//EZ9yBta4GvFMDSZl4kSAHsef493oCtrs\npSCAaWihT37ha88HQfqDjrw43bAuEbFrskLMmrz5SCJ5ShkPshw+IHTZasO+8ih4\nE1Z5T21Q6huwtVexN2ZYI/PcD98Kh8TvhgXVOBRgmaNL3gaWcSzy27YfpO8/7g==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIGHDCCBASgAwIBAgIES45gAzANBgkqhkiG9w0BAQsFADBFMQswCQYDVQQGEwJE\nSzESMBAGA1UEChMJVFJVU1QyNDA4MSIwIAYDVQQDExlUUlVTVDI0MDggT0NFUyBQ\ncmltYXJ5IENBMB4XDTEwMDMwMzEyNDEzNFoXDTM3MTIwMzEzMTEzNFowRTELMAkG\nA1UEBhMCREsxEjAQBgNVBAoTCVRSVVNUMjQwODEiMCAGA1UEAxMZVFJVU1QyNDA4\nIE9DRVMgUHJpbWFyeSBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB\nAJlJodr3U1Fa+v8HnyACHV81/wLevLS0KUk58VIABl6Wfs3LLNoj5soVAZv4LBi5\ngs7E8CZ9w0F2CopW8vzM8i5HLKE4eedPdnaFqHiBZ0q5aaaQArW+qKJx1rT/AaXt\nalMB63/yvJcYlXS2lpexk5H/zDBUXeEQyvfmK+slAySWT6wKxIPDwVapauFY9QaG\n+VBhCa5jBstWS7A5gQfEvYqn6csZ3jW472kW6OFNz6ftBcTwufomGJBMkonf4ZLr\n6t0AdRi9jflBPz3MNNRGxyjIuAmFqGocYFA/OODBRjvSHB2DygqQ8k+9tlpvzMRr\nkU7jq3RKL+83G1dJ3/LTjCLz4ryEMIC/OJ/gNZfE0qXddpPtzflIPtUFVffXdbFV\n1t6XZFhJ+wBHQCpJobq/BjqLWUA86upsDbfwnePtmIPRCemeXkY0qabC+2Qmd2Fe\nxyZphwTyMnbqy6FG1tB65dYf3mOqStmLa3RcHn9+2dwNfUkh0tjO2FXD7drWcU0O\nI9DW8oAypiPhm/QCjMU6j6t+0pzqJ/S0tdAo+BeiXK5hwk6aR+sRb608QfBbRAs3\nU/q8jSPByenggac2BtTN6cl+AA1Mfcgl8iXWNFVGegzd/VS9vINClJCe3FNVoUnR\nYCKkj+x0fqxvBLopOkJkmuZw/yhgMxljUi2qYYGn90OzAgMBAAGjggESMIIBDjAP\nBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjARBgNVHSAECjAIMAYGBFUd\nIAAwgZcGA1UdHwSBjzCBjDAsoCqgKIYmaHR0cDovL2NybC5vY2VzLnRydXN0MjQw\nOC5jb20vb2Nlcy5jcmwwXKBaoFikVjBUMQswCQYDVQQGEwJESzESMBAGA1UEChMJ\nVFJVU1QyNDA4MSIwIAYDVQQDExlUUlVTVDI0MDggT0NFUyBQcmltYXJ5IENBMQ0w\nCwYDVQQDEwRDUkwxMB8GA1UdIwQYMBaAFPZt+LFIs0FDAduGROUYBbdezAY3MB0G\nA1UdDgQWBBT2bfixSLNBQwHbhkTlGAW3XswGNzANBgkqhkiG9w0BAQsFAAOCAgEA\nVPAQGrT7dIjD3/sIbQW86f9CBPu0c7JKN6oUoRUtKqgJ2KCdcB5ANhCoyznHpu3m\n/dUfVUI5hc31CaPgZyY37hch1q4/c9INcELGZVE/FWfehkH+acpdNr7j8UoRZlkN\n15b/0UUBfGeiiJG/ugo4llfoPrp8bUmXEGggK3wyqIPcJatPtHwlb6ympfC2b/Ld\nv/0IdIOzIOm+A89Q0utx+1cOBq72OHy8gpGb6MfncVFMoL2fjP652Ypgtr8qN9Ka\n/XOazktiIf+2Pzp7hLi92hRc9QMYexrV/nnFSQoWdU8TqULFUoZ3zTEC3F/g2yj+\nFhbrgXHGo5/A4O74X+lpbY2XV47aSuw+DzcPt/EhMj2of7SA55WSgbjPMbmNX0rb\noenSIte2HRFW5Tr2W+qqkc/StixgkKdyzGLoFx/xeTWdJkZKwyjqge2wJqws2upY\nEiThhC497+/mTiSuXd69eVUwKyqYp9SD2rTtNmF6TCghRM/dNsJOl+osxDVGcwvt\nWIVFF/Onlu5fu1NHXdqNEfzldKDUvCfii3L2iATTZyHwU9CALE+2eIA+PIaLgnM1\n1oCfUnYBkQurTrihvzz9PryCVkLxiqRmBVvUz+D4N5G/wvvKDS6t6cPCS+hqM482\ncbBsn0R9fFLO4El62S9eH1tqOzO20OAOK65yJIsOpSE=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChML\nRW50cnVzdC5uZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBp\nbmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5\nIEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNVBAMTKkVudHJ1c3QubmV0IENlcnRp\nZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEyMjQxNzUwNTFaFw0yOTA3\nMjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3d3d3\nLmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxp\nYWIuKTElMCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEG\nA1UEAxMqRW50cnVzdC5uZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgp\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArU1LqRKGsuqjIAcVFmQq\nK0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOLGp18EzoOH1u3Hs/lJBQe\nsYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSrhRSGlVuX\nMlBvPci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVT\nXTzWnLLPKQP5L6RQstRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/\nHoZdenoVve8AjhUiVBcAkCaTvA5JaJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH\n4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwDQYJKoZIhvcNAQEFBQADggEBADub\nj1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rmcnPyT/4xmf3IDExo\nU8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesYT6Yf\nzX1XEC+bBAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5b\nu/8j72gZyxKTJ1wDLW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+\nbYQLCIt+jerXmCHG8+c8eS9enNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/Er\nfF6adulZkMV8gzURZVE=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDWjCCAkKgAwIBAgIBADANBgkqhkiG9w0BAQUFADBQMQswCQYDVQQGEwJKUDEY\nMBYGA1UEChMPU0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21t\ndW5pY2F0aW9uIFJvb3RDQTEwHhcNMDMwOTMwMDQyMDQ5WhcNMjMwOTMwMDQyMDQ5\nWjBQMQswCQYDVQQGEwJKUDEYMBYGA1UEChMPU0VDT00gVHJ1c3QubmV0MScwJQYD\nVQQLEx5TZWN1cml0eSBDb21tdW5pY2F0aW9uIFJvb3RDQTEwggEiMA0GCSqGSIb3\nDQEBAQUAA4IBDwAwggEKAoIBAQCzs/5/022x7xZ8V6UMbXaKL0u/ZPtM7orw8yl8\n9f/uKuDp6bpbZCKamm8sOiZpUQWZJtzVHGpxxpp9Hp3dfGzGjGdnSj74cbAZJ6kJ\nDKaVv0uMDPpVmDvY6CKhS3E4eayXkmmziX7qIWgGmBSWh9JhNrxtJ1aeV+7AwFb9\nMs+k2Y7CI9eNqPPYJayX5HA49LY6tJ07lyZDo6G8SVlyTCMwhwFY9k6+HGhWZq/N\nQV3Is00qVUarH9oe4kA92819uZKAnDfdDJZkndwi92SL32HeFZRSFaB9UslLqCHJ\nxrHty8OVYNEP8Ktw+N/LTX7s1vqr2b1/VPKl6Xn62dZ2JChzAgMBAAGjPzA9MB0G\nA1UdDgQWBBSgc0mZaNyFW2XjmygvV5+9M7wHSDALBgNVHQ8EBAMCAQYwDwYDVR0T\nAQH/BAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAaECpqLvkT115swW1F7NgE+vG\nkl3g0dNq/vu+m22/xwVtWSDEHPC32oRYAmP6SBbvT6UL90qY8j+eG61Ha2POCEfr\nUj94nK9NrvjVT8+amCoQQTlSxN3Zmw7vkwGusi7KaEIkQmywszo+zenaSMQVy+n5\nBw+SUEmK3TGXX8npN6o7WWWXlDLJs58+OmJYxUmtYg5xpTKqL8aJdkNAExNnPaJU\nJRDL8Try2frbSVa7pv6nQTXD4IhhyYjH3zYQIphZ6rBK+1YWc26sTfcioU+tHXot\nRSflMMFe8toTyyVCUZVHA4xsIcx0Qu1T/zOLjw9XARYvz6buyXAiFL39vmwLAw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDTDCCAjSgAwIBAgIIfE8EORzUmS0wDQYJKoZIhvcNAQEFBQAwRDELMAkGA1UE\nBhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVz\ndCBOZXR3b3JraW5nMB4XDTEwMDEyOTE0MDgyNFoXDTMwMTIzMTE0MDgyNFowRDEL\nMAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZp\ncm1UcnVzdCBOZXR3b3JraW5nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAtITMMxcua5Rsa2FSoOujz3mUTOWUgJnLVWREZY9nZOIG41w3SfYvm4SEHi3y\nYJ0wTsyEheIszx6e/jarM3c1RNg1lho9Nuh6DtjVR6FqaYvZ/Ls6rnla1fTWcbua\nkCNrmreIdIcMHl+5ni36q1Mr3Lt2PpNMCAiMHqIjHNRqrSK6mQEubWXLviRmVSRL\nQESxG9fhwoXA3hA/Pe24/PHxI1Pcv2WXb9n5QHGNfb2V1M6+oF4nI979ptAmDgAp\n6zxG8D1gvz9Q0twmQVGeFDdCBKNwV6gbh+0t+nvujArjqWaJGctB+d1ENmHP4ndG\nyH329JKBNv3bNPFyfvMMFr20FQIDAQABo0IwQDAdBgNVHQ4EFgQUBx/S55zawm6i\nQLSwelAQUHTEyL0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwDQYJ\nKoZIhvcNAQEFBQADggEBAIlXshZ6qML91tmbmzTCnLQyFE2npN/svqe++EPbkTfO\ntDIuUFUaNU52Q3Eg75N3ThVwLofDwR1t3Mu1J9QsVtFSUzpE0nPIxBsFZVpikpzu\nQY0x2+c06lkh1QF612S4ZDnNye2v7UsDSKegmQGA3GWjNq5lWUhPgkvIZfFXHeVZ\nLgo/bNjR9eUJtGxUAArgFU2HdW23WJZa3W3SAKD0m0i+wzekujbgfIeFlxoVot4u\nolu9rxj5kFDNcFn4J2dHy8egBzp90SxdbBk6ZrV9/ZFvgrG+CJPbFEfxojfHRZ48\nx3evZKiT3/Zpg4Jg8klCNO1aAFSFHBY2kgxc+qatv9s=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIGFDCCA/ygAwIBAgIIU+w77vuySF8wDQYJKoZIhvcNAQEFBQAwUTELMAkGA1UE\nBhMCRVMxQjBABgNVBAMMOUF1dG9yaWRhZCBkZSBDZXJ0aWZpY2FjaW9uIEZpcm1h\ncHJvZmVzaW9uYWwgQ0lGIEE2MjYzNDA2ODAeFw0wOTA1MjAwODM4MTVaFw0zMDEy\nMzEwODM4MTVaMFExCzAJBgNVBAYTAkVTMUIwQAYDVQQDDDlBdXRvcmlkYWQgZGUg\nQ2VydGlmaWNhY2lvbiBGaXJtYXByb2Zlc2lvbmFsIENJRiBBNjI2MzQwNjgwggIi\nMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKlmuO6vj78aI14H9M2uDDUtd9\nthDIAl6zQyrET2qyyhxdKJp4ERppWVevtSBC5IsP5t9bpgOSL/UR5GLXMnE42QQM\ncas9UX4PB99jBVzpv5RvwSmCwLTaUbDBPLutN0pcyvFLNg4kq7/DhHf9qFD0sefG\nL9ItWY16Ck6WaVICqjaY7Pz6FIMMNx/Jkjd/14Et5cS54D40/mf0PmbR0/RAz15i\nNA9wBj4gGFrO93IbJWyTdBSTo3OxDqqHECNZXyAFGUftaI6SEspd/NYrspI8IM/h\nX68gvqB2f3bl7BqGYTM+53u0P6APjqK5am+5hyZvQWyIplD9amML9ZMWGxmPsu2b\nm8mQ9QEM3xk9Dz44I8kvjwzRAv4bVdZO0I08r0+k8/6vKtMFnXkIoctXMbScyJCy\nZ/QYFpM6/EfY0XiWMR+6KwxfXZmtY4laJCB22N/9q06mIqqdXuYnin1oKaPnirja\nEbsXLZmdEyRG98Xi2J+Of8ePdG1asuhy9azuJBCtLxTa/y2aRnFHvkLfuwHb9H/T\nKI8xWVvTyQKmtFLKbpf7Q8UIJm+K9Lv9nyiqDdVF8xM6HdjAeI9BZzwelGSuewvF\n6NkBiDkal4ZkQdU7hwxu+g/GvUgUvzlN1J5Bto+WHWOWk9mVBngxaJ43BjuAiUVh\nOSPHG0SjFeUc+JIwuwIDAQABo4HvMIHsMBIGA1UdEwEB/wQIMAYBAf8CAQEwDgYD\nVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBRlzeurNR4APn7VdMActHNHDhpkLzCBpgYD\nVR0gBIGeMIGbMIGYBgRVHSAAMIGPMC8GCCsGAQUFBwIBFiNodHRwOi8vd3d3LmZp\ncm1hcHJvZmVzaW9uYWwuY29tL2NwczBcBggrBgEFBQcCAjBQHk4AUABhAHMAZQBv\nACAAZABlACAAbABhACAAQgBvAG4AYQBuAG8AdgBhACAANAA3ACAAQgBhAHIAYwBl\nAGwAbwBuAGEAIAAwADgAMAAxADcwDQYJKoZIhvcNAQEFBQADggIBABd9oPm03cXF\n661LJLWhAqvdpYhKsg9VSytXjDvlMd3+xDLx51tkljYyGOylMnfX40S2wBEqgLk9\nam58m9Ot/MPWo+ZkKXzR4Tgegiv/J2Wv+xYVxC5xhOW1//qkR71kMrv2JYSiJ0L1\nILDCExARzRAVukKQKtJE4ZYm6zFIEv0q2skGz3QeqUvVhyj5eTSSPi5E6PaPT481\nPyWzOdxjKpBrIF/EUhJOlywqrJ2X3kjyo2bbwtKDlaZmp54lD+kLM5FlClrD2VQS\n3a/DTg4fJl4N3LON7NWBcN7STyQF82xO9UxJZo3R/9ILJUFI/lGExkKvgATP0H5k\nSeTy36LssUzAKh3ntLFlosS88Zj0qnAHY7S42jtM+kAiMFsRpvAFDsYCA0irhpuF\n3dvd6qJ2gHN99ZwExEWN57kci57q13XRcrHedUTnQn3iV2t93Jm8PYMo6oCTjcVM\nZcFwgbg4/EMxsvYDNEeyrPsiBsse3RdHHF9mudMaotoRsaS8I8nkvof/uZS2+F0g\nStRf571oe2XyFR7SOqkt6dhrJKyXWERHrVkY8SFlcN7ONGCoQPHzPKTDKCOM/icz\nQ0CgFzzr6juwcqajuUpLXhZI9LK8yIySxZ2frHI2vDSANGupi5LAuBft7HZT9SQB\njLMi6Et8Vcad+qMUu2WFbm5PEn4KPJ2V\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEIDCCAwigAwIBAgIQNE7VVyDV7exJ9C/ON9srbTANBgkqhkiG9w0BAQUFADCB\nqTELMAkGA1UEBhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMf\nQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjE4MDYGA1UECxMvKGMpIDIw\nMDYgdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNV\nBAMTFnRoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EwHhcNMDYxMTE3MDAwMDAwWhcNMzYw\nNzE2MjM1OTU5WjCBqTELMAkGA1UEBhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5j\nLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjE4MDYG\nA1UECxMvKGMpIDIwMDYgdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNl\nIG9ubHkxHzAdBgNVBAMTFnRoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCsoPD7gFnUnMekz52hWXMJEEUMDSxuaPFs\nW0hoSVk3/AszGcJ3f8wQLZU0HObrTQmnHNK4yZc2AreJ1CRfBsDMRJSUjQJib+ta\n3RGNKJpchJAQeg29dGYvajig4tVUROsdB58Hum/u6f1OCyn1PoSgAfGcq/gcfomk\n6KHYcWUNo1F77rzSImANuVud37r8UVsLr5iy6S7pBOhih94ryNdOwUxkHt3Ph1i6\nSk/KaAcdHJ1KxtUvkcx8cXIcxcBn6zL9yZJclNqFwJu/U30rCfSMnZEfl2pSy94J\nNqR32HuHUETVPm4pafs5SSYeCaWAe0At6+gnhcn+Yf1+5nyXHdWdAgMBAAGjQjBA\nMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBR7W0XP\nr87Lev0xkhpqtvNG61dIUDANBgkqhkiG9w0BAQUFAAOCAQEAeRHAS7ORtvzw6WfU\nDW5FvlXok9LOAz/t2iWwHVfLHjp2oEzsUHboZHIMpKnxuIvW1oeEuzLlQRHAd9mz\nYJ3rG9XRbkREqaYB7FViHXe4XI5ISXycO1cRrK1zN44veFyQaEfZYGDm/Ac9IiAX\nxPcW6cTYcvnIc3zfFi8VqT79aie2oetaupgf1eNNZAqdE8hhuvU5HIe6uL17In/2\n/qxAeeWsEG89jxt5dovEN7MhGITlNgDrYyCZuen+MwS7QcjBAvlEYyCegc5C09Y/\nLHbTY5xZ3Y+m4Q6gLkH3LpVHz7z9M/P2C2F+fpErgUfCJzDupxBdN49cOSvkBPB7\njVaMaA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIBtjCCAVugAwIBAgITBmyf1XSXNmY/Owua2eiedgPySjAKBggqhkjOPQQDAjA5\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24g\nUm9vdCBDQSAzMB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTELMAkG\nA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3Qg\nQ0EgMzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCmXp8ZBf8ANm+gBG1bG8lKl\nui2yEujSLtf6ycXYqm0fc4E7O5hrOXwzpcVOho6AF2hiRVd9RFgdszflZwjrZt6j\nQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBSr\nttvXBp43rDCGB5Fwx5zEGbF4wDAKBggqhkjOPQQDAgNJADBGAiEA4IWSoxe3jfkr\nBqWTrBqYaGFy+uGh0PsceGCmQ5nFuMQCIQCcAu/xlJyzlvnrxir4tiz+OpAUFteM\nYyRIHN8wfdVoOw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFQTCCAymgAwIBAgITBmyf0pY1hp8KD+WGePhbJruKNzANBgkqhkiG9w0BAQwF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAyMB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK2Wny2cSkxK\ngXlRmeyKy2tgURO8TW0G/LAIjd0ZEGrHJgw12MBvIITplLGbhQPDW9tK6Mj4kHbZ\nW0/jTOgGNk3Mmqw9DJArktQGGWCsN0R5hYGCrVo34A3MnaZMUnbqQ523BNFQ9lXg\n1dKmSYXpN+nKfq5clU1Imj+uIFptiJXZNLhSGkOQsL9sBbm2eLfq0OQ6PBJTYv9K\n8nu+NQWpEjTj82R0Yiw9AElaKP4yRLuH3WUnAnE72kr3H9rN9yFVkE8P7K6C4Z9r\n2UXTu/Bfh+08LDmG2j/e7HJV63mjrdvdfLC6HM783k81ds8P+HgfajZRRidhW+me\nz/CiVX18JYpvL7TFz4QuK/0NURBs+18bvBt+xa47mAExkv8LV/SasrlX6avvDXbR\n8O70zoan4G7ptGmh32n2M8ZpLpcTnqWHsFcQgTfJU7O7f/aS0ZzQGPSSbtqDT6Zj\nmUyl+17vIWR6IF9sZIUVyzfpYgwLKhbcAS4y2j5L9Z469hdAlO+ekQiG+r5jqFoz\n7Mt0Q5X5bGlSNscpb/xVA1wf+5+9R+vnSUeVC06JIglJ4PVhHvG/LopyboBZ/1c6\n+XUyo05f7O0oYtlNc/LMgRdg7c3r3NunysV+Ar3yVAhU/bQtCSwXVEqY0VThUWcI\n0u1ufm8/0i2BWSlmy5A5lREedCf+3euvAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMB\nAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBSwDPBMMPQFWAJI/TPlUq9LhONm\nUjANBgkqhkiG9w0BAQwFAAOCAgEAqqiAjw54o+Ci1M3m9Zh6O+oAA7CXDpO8Wqj2\nLIxyh6mx/H9z/WNxeKWHWc8w4Q0QshNabYL1auaAn6AFC2jkR2vHat+2/XcycuUY\n+gn0oJMsXdKMdYV2ZZAMA3m3MSNjrXiDCYZohMr/+c8mmpJ5581LxedhpxfL86kS\nk5Nrp+gvU5LEYFiwzAJRGFuFjWJZY7attN6a+yb3ACfAXVU3dJnJUH/jWS5E4ywl\n7uxMMne0nxrpS10gxdr9HIcWxkPo1LsmmkVwXqkLN1PiRnsn/eBG8om3zEK2yygm\nbtmlyTrIQRNg91CMFa6ybRoVGld45pIq2WWQgj9sAq+uEjonljYE1x2igGOpm/Hl\nurR8FLBOybEfdF849lHqm/osohHUqS0nGkWxr7JOcQ3AWEbWaQbLU8uz/mtBzUF+\nfUwPfHJ5elnNXkoOrJupmHN5fLT0zLm4BwyydFy4x2+IoZCn9Kr5v2c69BoVYh63\nn749sSmvZ6ES8lgQGVMDMBu4Gon2nL2XA46jCfMdiyHxtN/kHNGfZQIG6lzWE7OE\n76KlXIx3KadowGuuQNKotOrN8I1LOJwZmhsoVLiJkO/KdYE+HvJkJMcYr07/R54H\n9jVlpNMKVv/1F2Rs76giJUmTtt8AF9pYfl3uxRuw0dFfIRDH+fO6AgonB8Xx1sfT\n4PsJYGw=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIB/jCCAYWgAwIBAgIIdJclisc/elQwCgYIKoZIzj0EAwMwRTELMAkGA1UEBhMC\nVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MSAwHgYDVQQDDBdBZmZpcm1UcnVzdCBQ\ncmVtaXVtIEVDQzAeFw0xMDAxMjkxNDIwMjRaFw00MDEyMzExNDIwMjRaMEUxCzAJ\nBgNVBAYTAlVTMRQwEgYDVQQKDAtBZmZpcm1UcnVzdDEgMB4GA1UEAwwXQWZmaXJt\nVHJ1c3QgUHJlbWl1bSBFQ0MwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQNMF4bFZ0D\n0KF5Nbc6PJJ6yhUczWLznCZcBz3lVPqj1swS6vQUX+iOGasvLkjmrBhDeKzQN8O9\nss0s5kfiGuZjuD0uL3jET9v0D6RoTFVya5UdThhClXjMNzyR4ptlKymjQjBAMB0G\nA1UdDgQWBBSaryl6wBE1NSZRMADDav5A1a7WPDAPBgNVHRMBAf8EBTADAQH/MA4G\nA1UdDwEB/wQEAwIBBjAKBggqhkjOPQQDAwNnADBkAjAXCfOHiFBar8jAQr9HX/Vs\naobgxCd05DhT1wV/GzTjxi+zygk8N53X57hG8f2h4nECMEJZh0PUUd+60wkyWs6I\nflc9nF9Ca/UHLbXwgpP5WW+uZPpY5Yse42O+tYHNbwKMeQ==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF4DCCA8igAwIBAgIRAPL6ZOJ0Y9ON/RAdBB92ylgwDQYJKoZIhvcNAQELBQAw\nZzELMAkGA1UEBhMCY2gxETAPBgNVBAoTCFN3aXNzY29tMSUwIwYDVQQLExxEaWdp\ndGFsIENlcnRpZmljYXRlIFNlcnZpY2VzMR4wHAYDVQQDExVTd2lzc2NvbSBSb290\nIEVWIENBIDIwHhcNMTEwNjI0MDk0NTA4WhcNMzEwNjI1MDg0NTA4WjBnMQswCQYD\nVQQGEwJjaDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsTHERpZ2l0YWwgQ2Vy\ndGlmaWNhdGUgU2VydmljZXMxHjAcBgNVBAMTFVN3aXNzY29tIFJvb3QgRVYgQ0Eg\nMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMT3HS9X6lds93BdY7Bx\nUglgRCgzo3pOCvrY6myLURYaVa5UJsTMRQdBTxB5f3HSek4/OE6zAMaVylvNwSqD\n1ycfMQ4jFrclyxy0uYAyXhqdk/HoPGAsp15XGVhRXrwsVgu42O+LgrQ8uMIkqBPH\noCE2G3pXKSinLr9xJZDzRINpUKTk4RtiGZQJo/PDvO/0vezbE53PnUgJUmfANykR\nHvvSEaeFGHR55E+FFOtSN+KxRdjMDUN/rhPSays/p8LiqG12W0OfvrSdsyaGOx9/\n5fLoZigWJdBLlzin5M8J0TbDC77aO0RYjb7xnglrPvMyxyuHxuxenPaHZa0zKcQv\nidm5y8kDnftslFGXEBuGCxobP/YCfnvUxVFkKJ3106yDgYjTdLRZncHrYTNaRdHL\nOdAGalNgHa/2+2m8atwBz735j9m9W8E6X47aD0upm50qKGsaCnw8qyIL5XctcfaC\nNYGu+HuB5ur+rPQam3Rc6I8k9l2dRsQs0h4rIWqDJ2dVSqTjyDKXZpBy2uPUZC5f\n46Fq9mDU5zXNysRojddxyNMkM3OxbPlq4SjbX8Y96L5V5jcb7STZDxmPX2MYWFCB\nUWVv8p9+agTnNCRxunZLWB4ZvRVgRaoMEkABnRDixzgHcgplwLa7JSnaFp6LNYth\n7eVxV4O1PHGf40+/fh6Bn0GXAgMBAAGjgYYwgYMwDgYDVR0PAQH/BAQDAgGGMB0G\nA1UdIQQWMBQwEgYHYIV0AVMCAgYHYIV0AVMCAjASBgNVHRMBAf8ECDAGAQH/AgED\nMB0GA1UdDgQWBBRF2aWBbj2ITY1x0kbBbkUe88SAnTAfBgNVHSMEGDAWgBRF2aWB\nbj2ITY1x0kbBbkUe88SAnTANBgkqhkiG9w0BAQsFAAOCAgEAlDpzBp9SSzBc1P6x\nXCX5145v9Ydkn+0UjrgEjihLj6p7jjm02Vj2e6E1CqGdivdj5eu9OYLU43otb98T\nPLr+flaYC/NUn81ETm484T4VvwYmneTwkLbUwp4wLh/vx3rEUMfqe9pQy3omywC0\nWqu1kx+AiYQElY2NfwmTv9SoqORjbdlk5LgpWgi/UOGED1V7XwgiG/W9mR4U9s70\nWBCCswo9GcG/W6uqmdjyMb3lOGbcWAXH7WMaLgqXfIeTK7KK4/HsGOV1timH59yL\nGn602MnTihdsfSlEvoqq9X46Lmgxk7lq2prg2+kupYTNHAq4Sgj5nPFhJpiTt3tm\n7JFe3VE/23MPrQRYCd0EApUKPtN236YQHoA96M2kZNEzx5LH4k5E4wnJTsJdhw4S\nnr8PyQUQ3nqjsTzyP6WqJ3mtMX0f/fwZacXduT98zca0wjAefm6S139hdlqP65VN\nvBFuIXxZN5nQBrz5Bm0yFqXZaajh3DyAHmBR3NdUIR7KYndP+tiPsys6DXhyyWhB\nWkdKwqPrGtcKqzwyVcgKEZzfdNbwQBUdyLmPtTbFr/giuMod89a2GQ+fYWVq6nTI\nfI/DT11lgh/ZDYnadXL77/FHZxOzyNEZiCcmmpl5fx7kLD977vHeTYuWl8PVP3wb\nI+2ksx0WckNLIOFZfsLorSa/ovc=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFujCCBKKgAwIBAgIBATANBgkqhkiG9w0BAQUFADCBhjELMAkGA1UEBhMCVVMx\nHTAbBgNVBAoTFEFwcGxlIENvbXB1dGVyLCBJbmMuMS0wKwYDVQQLEyRBcHBsZSBD\nb21wdXRlciBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxKTAnBgNVBAMTIEFwcGxlIFJv\nb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XDTA1MDIxMDAwMTgxNFoXDTI1MDIx\nMDAwMTgxNFowgYYxCzAJBgNVBAYTAlVTMR0wGwYDVQQKExRBcHBsZSBDb21wdXRl\nciwgSW5jLjEtMCsGA1UECxMkQXBwbGUgQ29tcHV0ZXIgQ2VydGlmaWNhdGUgQXV0\naG9yaXR5MSkwJwYDVQQDEyBBcHBsZSBSb290IENlcnRpZmljYXRlIEF1dGhvcml0\neTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOSRqQkfkdseR1DrBe1e\neYQt6zaiV0xV7IsZid75S2z1B6siMALoGD74UAnTf0GomPnRymacJGsR0KO75Bsq\nwx+VnnoMpEeLW9QWNzPLxA9NzhRp0ckZcvVdDtV/X5vyJQO6VY9NXQ3xZDUjFUsV\nWR2zlPf2nJ7PULrBWFBnjwi0IPfLrCwgb3C2PwEwjLdDzw+dPfMrSSgayP7OtbkO\n2V4c1ss9tTqt9A8OAJILsSEWLnTVPA3bYharo3GSR1NVwa8vQbP4++NwzeajTEV+\nH0xrUJZBicR0YgsQg0GHM4qBsTBY7FoEMoxos48d3mVz/2deZbxJ2HafMxRloXeU\nyS0CAwEAAaOCAi8wggIrMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/\nMB0GA1UdDgQWBBQr0GlHlHYJ/vRrjS5ApvdHTX8IXjAfBgNVHSMEGDAWgBQr0GlH\nlHYJ/vRrjS5ApvdHTX8IXjCCASkGA1UdIASCASAwggEcMIIBGAYJKoZIhvdjZAUB\nMIIBCTBBBggrBgEFBQcCARY1aHR0cHM6Ly93d3cuYXBwbGUuY29tL2NlcnRpZmlj\nYXRlYXV0aG9yaXR5L3Rlcm1zLmh0bWwwgcMGCCsGAQUFBwICMIG2GoGzUmVsaWFu\nY2Ugb24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2Nl\ncHRhbmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5k\nIGNvbmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRp\nZmljYXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wRAYDVR0fBD0wOzA5oDegNYYz\naHR0cHM6Ly93d3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5L3Jvb3Qu\nY3JsMFUGCCsGAQUFBwEBBEkwRzBFBggrBgEFBQcwAoY5aHR0cHM6Ly93d3cuYXBw\nbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5L2Nhc2lnbmVycy5odG1sMA0GCSqG\nSIb3DQEBBQUAA4IBAQCd2i0oWC99dgS5BNM+zrdmY06PL9T+S61yvaM5xlJNBZhS\n9YlRASR5vhoy9+VEi0tEBzmC1lrKtCBe2a4VXR2MHTK/ODFiSF3H4ZCx+CRA+F9Y\nm1FdV53B5f88zHIhbsTp6aF31ywXJsM/65roCwO66bNKcuszCVut5mIxauivL9Wv\nHld2j383LS4CXN1jyfJxuCZA3xWNdUQ/eb3mHZnhQyw+rW++uaT+DjUZUWOxw961\nkj5ReAFziqQjyqSI8R5cH0EWLX6VCqrpiUGYGxrdyyC/R14MJsVVNU3GMIuZZxTH\nCR+6R8faAQmHJEKVvRNgGQrv6n8Obs3BREM6StXj\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFujCCA6KgAwIBAgIJALtAHEP1Xk+wMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNV\nBAYTAkNIMRUwEwYDVQQKEwxTd2lzc1NpZ24gQUcxHzAdBgNVBAMTFlN3aXNzU2ln\nbiBHb2xkIENBIC0gRzIwHhcNMDYxMDI1MDgzMDM1WhcNMzYxMDI1MDgzMDM1WjBF\nMQswCQYDVQQGEwJDSDEVMBMGA1UEChMMU3dpc3NTaWduIEFHMR8wHQYDVQQDExZT\nd2lzc1NpZ24gR29sZCBDQSAtIEcyMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\nCgKCAgEAr+TufoskDhJuqVAtFkQ7kpJcyrhdhJJCEyq8ZVeCQD5XJM1QiyUqt2/8\n76LQwB8CJEoTlo8jE+YoWACjR8cGp4QjK7u9lit/VcyLwVcfDmJlD909Vopz2q5+\nbbqBHH5CjCA12UNNhPqE21Is8w4ndwtrvxEvcnifLtg+5hg3Wipy+dpikJKVyh+c\n6bM8K8vzARO/Ws/BtQpgvd21mWRTuKCWs2/iJneRjOBiEAKfNA+k1ZIzUd6+jbqE\nemA8atufK+ze3gE/bk3lUIbLtK/tREDFylqM2tIrfKjuvqblCqoOpd8FUrdVxyJd\nMmqXl2MT28nbeTZ7hTpKxVKJ+STnnXepgv9VHKVxaSvRAiTysybUa9oEVeXBCsdt\nMDeQKuSeFDNeFhdVxVu1yzSJkvGdJo+hB9TGsnhQ2wwMC3wLjEHXuendjIj3o02y\nMszYF9rNt85mndT9Xv+9lz4pded+p2JYryU0pUHHPbwNUMoDAw8IWh+Vc3hiv69y\nFGkOpeUDDniOJihC8AcLYiAQZzlG+qkDzAQ4embvIIO1jEpWjpEA/I5cgt6IoMPi\naG59je883WX0XaxR7ySArqpWl2/5rX3aYT+YdzylkbYcjCbaZaIJbcHiVOO5ykxM\ngI93e2CaHt+28kgeDrpOVG2Y4OGiGqJ3UM/EY5LsRxmd6+ZrzsECAwEAAaOBrDCB\nqTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUWyV7\nlqRlUX64OfPAeGZe6Drn8O4wHwYDVR0jBBgwFoAUWyV7lqRlUX64OfPAeGZe6Drn\n8O4wRgYDVR0gBD8wPTA7BglghXQBWQECAQEwLjAsBggrBgEFBQcCARYgaHR0cDov\nL3JlcG9zaXRvcnkuc3dpc3NzaWduLmNvbS8wDQYJKoZIhvcNAQEFBQADggIBACe6\n45R88a7A3hfm5djV9VSwg/S7zV4Fe0+fdWavPOhWfvxyeDgD2StiGwC5+OlgzczO\nUYrHUDFu4Up+GC9pWbY9ZIEr44OE5iKHjn3g7gKZYbge9LgriBIWhMIxkziWMaa5\nO1M/wySTVltpkuzFwbs4AOPsF6m43Md8AYOfMke6UiI0HTJ6CVanfCU2qT1L2sCC\nbwq7EsiHSycR+R4tx5M/nttfJmtS2S6K8RTGRI0Vqbe/vd6mGu6uLftIdxf+u+yv\nGPUqUfA5hJeVbG4bwyvEdGB5JbAKJ9/fXtI5z0V9QkvfsywexcZdylU6oJxpmo/a\n77KwPJ+HbBIrZXAVUjEaJM9vMSNQH4xPjyPDdEFjHFWoFN0+4FFQz/EbMFYOkrCC\nhdiDyyJkvC24JdVUorgG6q2SpCSgwYa1ShNqR88uC1aVVMvOmttqtKay20EIhid3\n92qgQmwLOM7XdVAyksLfKzAiSNDVQTglXaTpXZ/GlHXQRf0wl0OPkKsKx4ZzYEpp\nLd6leNcG2mqeSz53OiATIgHQv2ieY2BrNU0LbbqhPcCT4H8js1WtciVORvnSFu+w\nZMEBnunKoGqYDs/YYPIvSbjkQuE4NRb0yG5P94FW6LqjviOvrv1vA+ACOzB2+htt\nQc8Bsem4yWb02ybzOqR08kkkW8mw0FfB+j564ZfJ\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEADCCAuigAwIBAgIBADANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEh\nMB8GA1UEChMYVGhlIEdvIERhZGR5IEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBE\nYWRkeSBDbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA0MDYyOTE3\nMDYyMFoXDTM0MDYyOTE3MDYyMFowYzELMAkGA1UEBhMCVVMxITAfBgNVBAoTGFRo\nZSBHbyBEYWRkeSBHcm91cCwgSW5jLjExMC8GA1UECxMoR28gRGFkZHkgQ2xhc3Mg\nMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASAwDQYJKoZIhvcNAQEBBQADggEN\nADCCAQgCggEBAN6d1+pXGEmhW+vXX0iG6r7d/+TvZxz0ZWizV3GgXne77ZtJ6XCA\nPVYYYwhv2vLM0D9/AlQiVBDYsoHUwHU9S3/Hd8M+eKsaA7Ugay9qK7HFiH7Eux6w\nwdhFJ2+qN1j3hybX2C32qRe3H3I2TqYXP2WYktsqbl2i/ojgC95/5Y0V4evLOtXi\nEqITLdiOr18SPaAIBQi2XKVlOARFmR6jYGB0xUGlcmIbYsUfb18aQr4CUWWoriMY\navx4A6lNf4DD+qta/KFApMoZFv6yyO9ecw3ud72a9nmYvLEHZ6IVDd2gWMZEewo+\nYihfukEHU1jPEX44dMX4/7VpkI+EdOqXG68CAQOjgcAwgb0wHQYDVR0OBBYEFNLE\nsNKR1EwRcbNhyz2h/t2oatTjMIGNBgNVHSMEgYUwgYKAFNLEsNKR1EwRcbNhyz2h\n/t2oatTjoWekZTBjMQswCQYDVQQGEwJVUzEhMB8GA1UEChMYVGhlIEdvIERhZGR5\nIEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBEYWRkeSBDbGFzcyAyIENlcnRpZmlj\nYXRpb24gQXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQAD\nggEBADJL87LKPpH8EsahB4yOd6AzBhRckB4Y9wimPQoZ+YeAEW5p5JYXMP80kWNy\nOO7MHAGjHZQopDH2esRU1/blMVgDoszOYtuURXO1v0XJJLXVggKtI3lpjbi2Tc7P\nTMozI+gciKqdi0FuFskg5YmezTvacPd+mSYgFFQlq25zheabIZ0KbIIOqPjCDPoQ\nHmyW74cNxA9hi63ugyuV+I6ShHI56yDqg+2DzZduCLzrTia2cyvk0/ZM/iZx4mER\ndEr/VxqHD3VILs9RaRegAhJhldXRQLIQTO7ErBBDpqWeCtWVYpoNz4iCxTIM5Cuf\nReYNnyicsbkqWletNw+vHX/bvZ8=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICjTCCAhSgAwIBAgIIdebfy8FoW6gwCgYIKoZIzj0EAwIwfDELMAkGA1UEBhMC\nVVMxDjAMBgNVBAgMBVRleGFzMRAwDgYDVQQHDAdIb3VzdG9uMRgwFgYDVQQKDA9T\nU0wgQ29ycG9yYXRpb24xMTAvBgNVBAMMKFNTTC5jb20gUm9vdCBDZXJ0aWZpY2F0\naW9uIEF1dGhvcml0eSBFQ0MwHhcNMTYwMjEyMTgxNDAzWhcNNDEwMjEyMTgxNDAz\nWjB8MQswCQYDVQQGEwJVUzEOMAwGA1UECAwFVGV4YXMxEDAOBgNVBAcMB0hvdXN0\nb24xGDAWBgNVBAoMD1NTTCBDb3Jwb3JhdGlvbjExMC8GA1UEAwwoU1NMLmNvbSBS\nb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IEVDQzB2MBAGByqGSM49AgEGBSuB\nBAAiA2IABEVuqVDEpiM2nl8ojRfLliJkP9x6jh3MCLOicSS6jkm5BBtHllirLZXI\n7Z4INcgn64mMU1jrYor+8FsPazFSY0E7ic3s7LaNGdM0B9y7xgZ/wkWV7Mt/qCPg\nCemB+vNH06NjMGEwHQYDVR0OBBYEFILRhXMw5zUE044CkvvlpNHEIejNMA8GA1Ud\nEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUgtGFczDnNQTTjgKS++Wk0cQh6M0wDgYD\nVR0PAQH/BAQDAgGGMAoGCCqGSM49BAMCA2cAMGQCMG/n61kRpGDPYbCWe+0F+S8T\nkdzt5fxQaxFGRrMcIQBiu77D5+jNB5n5DQtdcj7EqgIwH7y6C+IwJPt8bYBVCpk+\ngA0z5Wajs6O7pdWLjwkspl1+4vAHCGht0nxpbl/f5Wpl\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFjTCCA3WgAwIBAgIEGErM1jANBgkqhkiG9w0BAQsFADBWMQswCQYDVQQGEwJD\nTjEwMC4GA1UECgwnQ2hpbmEgRmluYW5jaWFsIENlcnRpZmljYXRpb24gQXV0aG9y\naXR5MRUwEwYDVQQDDAxDRkNBIEVWIFJPT1QwHhcNMTIwODA4MDMwNzAxWhcNMjkx\nMjMxMDMwNzAxWjBWMQswCQYDVQQGEwJDTjEwMC4GA1UECgwnQ2hpbmEgRmluYW5j\naWFsIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRUwEwYDVQQDDAxDRkNBIEVWIFJP\nT1QwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDXXWvNED8fBVnVBU03\nsQ7smCuOFR36k0sXgiFxEFLXUWRwFsJVaU2OFW2fvwwbwuCjZ9YMrM8irq93VCpL\nTIpTUnrD7i7es3ElweldPe6hL6P3KjzJIx1qqx2hp/Hz7KDVRM8Vz3IvHWOX6Jn5\n/ZOkVIBMUtRSqy5J35DNuF++P96hyk0g1CXohClTt7GIH//62pCfCqktQT+x8Rgp\n7hZZLDRJGqgG16iI0gNyejLi6mhNbiyWZXvKWfry4t3uMCz7zEasxGPrb382KzRz\nEpR/38wmnvFyXVBlWY9ps4deMm/DGIq1lY+wejfeWkU7xzbh72fROdOXW3NiGUgt\nhxwG+3SYIElz8AXSG7Ggo7cbcNOIabla1jj0Ytwli3i/+Oh+uFzJlU9fpy25IGvP\na931DfSCt/SyZi4QKPaXWnuWFo8BGS1sbn85WAZkgwGDg8NNkt0yxoekN+kWzqot\naK8KgWU6cMGbrU1tVMoqLUuFG7OA5nBFDWteNfB/O7ic5ARwiRIlk9oKmSJgamNg\nTnYGmE69g60dWIolhdLHZR4tjsbftsbhf4oEIRUpdPA+nJCdDC7xij5aqgwJHsfV\nPKPtl8MeNPo4+QgO48BdK4PRVmrJtqhUUy54Mmc9gn900PvhtgVguXDbjgv5E1hv\ncWAQUhC5wUEJ73IfZzF4/5YFjQIDAQABo2MwYTAfBgNVHSMEGDAWgBTj/i39KNAL\ntbq2osS/BqoFjJP7LzAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAd\nBgNVHQ4EFgQU4/4t/SjQC7W6tqLEvwaqBYyT+y8wDQYJKoZIhvcNAQELBQADggIB\nACXGumvrh8vegjmWPfBEp2uEcwPenStPuiB/vHiyz5ewG5zz13ku9Ui20vsXiObT\nej/tUxPQ4i9qecsAIyjmHjdXNYmEwnZPNDatZ8POQQaIxffu2Bq41gt/UP+TqhdL\njOztUmCypAbqTuv0axn96/Ua4CUqmtzHQTb3yHQFhDmVOdYLO6Qn+gjYXB74BGBS\nESgoA//vU2YApUo0FmZ8/Qmkrp5nGm9BC2sGE5uPhnEFtC+NiWYzKXZUmhH4J/qy\nP5Hgzg0b8zAarb8iXRvTvyUFTeGSGn+ZnzxEk8rUQElsgIfXBDrDMlI1Dlb4pd19\nxIsNER9Tyx6yF7Zod1rg1MvIB671Oi6ON7fQAUtDKXeMOZePglr4UeWJoBjnaH9d\nCi77o0cOPaYjesYBx4/IXr9tgFa+iiS6M+qf4TIRnvHST4D2G0CvOJ4RUHlzEhLN\n5mydLIhyPDCBBpEi6lmt2hkuIsKNuYyH4Ga8cyNfIWRjgEj1oDwYPZTISEEdQLpe\n/v5WOaHIz16eGWRGENoXkbcFgKyLmZJ956LYBws2J+dIeWCKw9cTXPhyQN9Ky8+Z\nAAoACxGV2lZFA4gKn2fQ1XmxqI1AbQ3CekD6819kR5LLU7m7Wc5P/dAVUwHY3+vZ\n5nbv0CO7O6l5s9UCKc2Jo5YPSjXnTkLAdc0Hz+Ys63su\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFRzCCAy+gAwIBAgIJEQA0tk7GNi02MA0GCSqGSIb3DQEBCwUAMEExCzAJBgNV\nBAYTAlJPMRQwEgYDVQQKEwtDRVJUU0lHTiBTQTEcMBoGA1UECxMTY2VydFNJR04g\nUk9PVCBDQSBHMjAeFw0xNzAyMDYwOTI3MzVaFw00MjAyMDYwOTI3MzVaMEExCzAJ\nBgNVBAYTAlJPMRQwEgYDVQQKEwtDRVJUU0lHTiBTQTEcMBoGA1UECxMTY2VydFNJ\nR04gUk9PVCBDQSBHMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMDF\ndRmRfUR0dIf+DjuW3NgBFszuY5HnC2/OOwppGnzC46+CjobXXo9X69MhWf05N0Iw\nvlDqtg+piNguLWkh59E3GE59kdUWX2tbAMI5Qw02hVK5U2UPHULlj88F0+7cDBrZ\nuIt4ImfkabBoxTzkbFpG583H+u/E7Eu9aqSs/cwoUe+StCmrqzWaTOTECMYmzPhp\nn+Sc8CnTXPnGFiWeI8MgwT0PPzhAsP6CRDiqWhqKa2NYOLQV07YRaXseVO6MGiKs\ncpc/I1mbySKEwQdPzH/iV8oScLumZfNpdWO9lfsbl83kqK/20U6o2YpxJM02PbyW\nxPFsqa7lzw1uKA2wDrXKUXt4FMMgL3/7FFXhEZn91QqhngLjYl/rNUssuHLoPj1P\nrCy7Lobio3aP5ZMqz6WryFyNSwb/EkaseMsUBzXgqd+L6a8VTxaJW732jcZZroiF\nDsGJ6x9nxUWO/203Nit4ZoORUSs9/1F3dmKh7Gc+PoGD4FapUB8fepmrY7+EF3fx\nDTvf95xhszWYijqy7DwaNz9+j5LP2RIUZNoQAhVB/0/E6xyjyfqZ90bp4RjZsbgy\nLcsUDFDYg2WD7rlcz8sFWkz6GZdr1l0T08JcVLwyc6B49fFtHsufpaafItzRUZ6C\neWRgKRM+o/1Pcmqr4tTluCRVLERLiohEnMqE0yo7AgMBAAGjQjBAMA8GA1UdEwEB\n/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBSCIS1mxteg4BXrzkwJ\nd8RgnlRuAzANBgkqhkiG9w0BAQsFAAOCAgEAYN4auOfyYILVAzOBywaK8SJJ6ejq\nkX/GM15oGQOGO0MBzwdw5AgeZYWR5hEit/UCI46uuR59H35s5r0l1ZUa8gWmr4UC\nb6741jH/JclKyMeKqdmfS0mbEVeZkkMR3rYzpMzXjWR91M08KCy0mpbqTfXERMQl\nqiCA2ClV9+BB/AYm/7k29UMUA2Z44RGx2iBfRgB4ACGlHgAoYXhvqAEBj500mv/0\nOJD7uNGzcgbJceaBxXntC6Z58hMLnPddDnskk7RI24Zf3lCGeOdA5jGokHZwYa+c\nNywRtYK3qq4kNFtyDGkNzVmf9nGvnAvRCjj5BiKDUyUM/FHE5r7iOZULJK2v0ZXk\nltd0ZGtxTgI8qoXzIKNDOXZbbFD+mpwUHmUUihW9o4JFWklWatKcsWMy5WHgUyIO\npwpJ6st+H6jiYoD2EEVSmAYY3qXNL3+q1Ok+CHLsIwMCPKaq2LxndD0UF/tUSxfj\n03k9bWtJySgOLnRQvwzZRjoQhsmnP+mg7H/rpXdYaXHmgwo38oZJar55CJD2AhZk\nPuXaTH4MNMn5X7azKFGnpyuqSfqNZSlO42sTp5SjLVFteAxEy9/eCG/Oo2Sr05WE\n1LlSVHJ7liXMvGnjSG4N0MedJ5qq+BOS3R7fY581qRY27Iy4g/Q9iY/NtBde17MX\nQRBdJ3NghVdJIgc=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICaTCCAe+gAwIBAgIQISpWDK7aDKtARb8roi066jAKBggqhkjOPQQDAzBtMQsw\nCQYDVQQGEwJDSDEQMA4GA1UEChMHV0lTZUtleTEiMCAGA1UECxMZT0lTVEUgRm91\nbmRhdGlvbiBFbmRvcnNlZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBHbG9iYWwg\nUm9vdCBHQyBDQTAeFw0xNzA1MDkwOTQ4MzRaFw00MjA1MDkwOTU4MzNaMG0xCzAJ\nBgNVBAYTAkNIMRAwDgYDVQQKEwdXSVNlS2V5MSIwIAYDVQQLExlPSVNURSBGb3Vu\nZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9PSVNURSBXSVNlS2V5IEdsb2JhbCBS\nb290IEdDIENBMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAETOlQwMYPchi82PG6s4ni\neUqjFqdrVCTbUf/q9Akkwwsin8tqJ4KBDdLArzHkdIJuyiXZjHWd8dvQmqJLIX4W\np2OQ0jnUsYd4XxiWD1AbNTcPasbc2RNNpI6QN+a9WzGRo1QwUjAOBgNVHQ8BAf8E\nBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUSIcUrOPDnpBgOtfKie7T\nrYy0UGYwEAYJKwYBBAGCNxUBBAMCAQAwCgYIKoZIzj0EAwMDaAAwZQIwJsdpW9zV\n57LnyAyMjMPdeYwbY9XJUpROTYJKcx6ygISpJcBMWm1JKWB4E+J+SOtkAjEA2zQg\nMgj/mkkCtojeFK9dbJlxjRo/i9fgojaGHAeCOnZT/cKi7e97sIBPWA9LUzm9\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDQTCCAimgAwIBAgITBmyfz5m/jAo54vB4ikPmljZbyjANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTE1MDUyNjAwMDAwMFoXDTM4MDExNzAwMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\nAYYwHQYDVR0OBBYEFIQYzIU07LwMlJQuCFmcx7IQTgoIMA0GCSqGSIb3DQEBCwUA\nA4IBAQCY8jdaQZChGsV2USggNiMOruYou6r4lK5IpDB/G/wkjUu0yKGX9rbxenDI\nU5PMCCjjmCXPI6T53iHTfIUJrU6adTrCC2qJeHZERxhlbI1Bjjt/msv0tadQ1wUs\nN+gDS63pYaACbvXy8MWy7Vu33PqUXHeeE6V/Uq2V8viTO96LXFvKWlJbYK8U90vv\no/ufQJVtMVT8QtPHRh8jrdkPSHCa2XV4cdFyQzR1bldZwgJcJmApzyMZFo6IQ6XU\n5MsI+yMRQ+hDKXJioaldXgjUkK642M4UwtBV8ob2xJNDd2ZhwLnoQdeXeGADbkpy\nrqXRfboQnoZsG4q5WTP468SQvvG5\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDfDCCAmSgAwIBAgIQGKy1av1pthU6Y2yv2vrEoTANBgkqhkiG9w0BAQUFADBY\nMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjExMC8GA1UEAxMo\nR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjEx\nMjcwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMFgxCzAJBgNVBAYTAlVTMRYwFAYDVQQK\nEw1HZW9UcnVzdCBJbmMuMTEwLwYDVQQDEyhHZW9UcnVzdCBQcmltYXJ5IENlcnRp\nZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAvrgVe//UfH1nrYNke8hCUy3f9oQIIGHWAVlqnEQRr+92/ZV+zmEwu3qDXwK9\nAWbK7hWNb6EwnL2hhZ6UOvNWiAAxz9juapYC2e0DjPt1befquFUWBRaa9OBesYjA\nZIVcFU2Ix7e64HXprQU9nceJSOC7KMgD4TCTZF5SwFlwIjVXiIrxlQqD17wxcwE0\n7e9GceBrAqg1cmuXm2bgyxx5X9gaBGgeRwLmnWDiNpcB3841kt++Z8dtd1k7j53W\nkBWUvEI0EME5+bEnPn7WinXFsq+W06Lem+SYvn3h6YGttm/81w7a4DSwDRp35+MI\nmO9Y+pyEtzavwt+s0vQQBnBxNQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4G\nA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQULNVQQZcVi/CPNmFbSvtr2ZnJM5IwDQYJ\nKoZIhvcNAQEFBQADggEBAFpwfyzdtzRP9YZRqSa+S7iq8XEN3GHHoOo0Hnp3DwQ1\n6CePbJC/kRYkRj5KTs4rFtULUh38H2eiAkUxT87z+gOneZ1TatnaYzr4gNfTmeGl\n4b7UVXGYNTq+k+qurUKykG/g/CFNNWMziUnWm07Kx+dOCQD32sfvmWKZd7aVIl6K\noKv0uHiYyjgZmclynnjNS6yvGaBzEi38wkG6gZHaFloxt/m0cYASSJlyc1pZU8Fj\nUjPtp8nSOQJw+uCxQmYpqptR7TBUIhRf2asdweSU8Pj1K/fqynhG1riR/aYNKxoU\nAT6A8EKglQdebc3MS6RFjasS6LPeWuWgfOgPIh1a6Vk=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEd\nMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3Mg\nQ2xhc3MgMiBSb290IENBMB4XDTEwMTAyNjA4MzgwM1oXDTQwMTAyNjA4MzgwM1ow\nTjELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBhc3MgQVMtOTgzMTYzMzI3MSAw\nHgYDVQQDDBdCdXlwYXNzIENsYXNzIDIgUm9vdCBDQTCCAiIwDQYJKoZIhvcNAQEB\nBQADggIPADCCAgoCggIBANfHXvfBB9R3+0Mh9PT1aeTuMgHbo4Yf5FkNuud1g1Lr\n6hxhFUi7HQfKjK6w3Jad6sNgkoaCKHOcVgb/S2TwDCo3SbXlzwx87vFKu3MwZfPV\nL4O2fuPn9Z6rYPnT8Z2SdIrkHJasW4DptfQxh6NR/Md+oW+OU3fUl8FVM5I+GC91\n1K2GScuVr1QGbNgGE41b/+EmGVnAJLqBcXmQRFBoJJRfuLMR8SlBYaNByyM21cHx\nMlAQTn/0hpPshNOOvEu/XAFOBz3cFIqUCqTqc/sLUegTBxj6DvEr0VQVfTzh97QZ\nQmdiXnfgolXsttlpF9U6r0TtSsWe5HonfOV116rLJeffawrbD02TTqigzXsu8lkB\narcNuAeBfos4GzjmCleZPe4h6KP1DBbdi+w0jpwqHAAVF41og9JwnxgIzRFo1clr\nUs3ERo/ctfPYV3Me6ZQ5BL/T3jjetFPsaRyifsSP5BtwrfKi+fv3FmRmaZ9JUaLi\nFRhnBkp/1Wy1TbMz4GHrXb7pmA8y1x1LPC5aAVKRCfLf6o3YBkBjqhHk/sM3nhRS\nP/TizPJhk9H9Z2vXUq6/aKtAQ6BXNVN48FP4YUIHZMbXb5tMOA1jrGKvNouicwoN\n9SG9dKpN6nIDSdvHXx1iY8f93ZHsM+71bbRuMGjeyNYmsHVee7QHIJihdjK4TWxP\nAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFMmAd+BikoL1Rpzz\nuvdMw964o605MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAU18h\n9bqwOlI5LJKwbADJ784g7wbylp7ppHR/ehb8t/W2+xUbP6umwHJdELFx7rxP462s\nA20ucS6vxOOto70MEae0/0qyexAQH6dXQbLArvQsWdZHEIjzIVEpMMpghq9Gqx3t\nOluwlN5E40EIosHsHdb9T7bWR9AUC8rmyrV7d35BH16Dx7aMOZawP5aBQW9gkOLo\n+fsicdl9sz1Gv7SEr5AcD48Saq/v7h56rgJKihcrdv6sVIkkLE8/trKnToyokZf7\nKcZ7XC25y2a2t6hbElGFtQl+Ynhw/qlqYLYdDnkM/crqJIByw5c/8nerQyIKx+u2\nDISCLIBrQYoIwOula9+ZEsuK1V6ADJHgJgg2SMX6OBE1/yWDLfJ6v9r9jv6ly0Us\nH8SIU653DtmadsWOLB2jutXsMq7Aqqz30XpN69QH4kj3Io6wpJ9qzo6ysmD0oyLQ\nI+uUWnpp3Q+/QFesa1lQ2aOZ4W7+jQF5JyMV3pKdewlNWudLSDBaGOYKbeaP4NK7\n5t98biGCwWg5TbSYWGZizEqQXsP6JwSxeRV0mcy+rSDeJmAc61ZRpqPq5KM/p/9h\n3PFaTWwyI0PurKju7koSCTxdccK+efrCh2gdC/1cacwG0Jp9VJkqyTkaGa9LKkPz\nY11aWOIv4x3kqdbQCtCev9eBCfHJxyYNrJgWVqA=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICGzCCAaGgAwIBAgIQQdKd0XLq7qeAwSxs6S+HUjAKBggqhkjOPQQDAzBPMQsw\nCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFyY2gg\nR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMjAeFw0yMDA5MDQwMDAwMDBaFw00\nMDA5MTcxNjAwMDBaME8xCzAJBgNVBAYTAlVTMSkwJwYDVQQKEyBJbnRlcm5ldCBT\nZWN1cml0eSBSZXNlYXJjaCBHcm91cDEVMBMGA1UEAxMMSVNSRyBSb290IFgyMHYw\nEAYHKoZIzj0CAQYFK4EEACIDYgAEzZvVn4CDCuwJSvMWSj5cz3es3mcFDR0HttwW\n+1qLFNvicWDEukWVEYmO6gbf9yoWHKS5xcUy4APgHoIYOIvXRdgKam7mAHf7AlF9\nItgKbppbd9/w+kHsOdx1ymgHDB/qo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0T\nAQH/BAUwAwEB/zAdBgNVHQ4EFgQUfEKWrt5LSDv6kviejM9ti6lyN5UwCgYIKoZI\nzj0EAwMDaAAwZQIwe3lORlCEwkSHRhtFcP9Ymd70/aTSVaYgLXTWNLxBo1BfASdW\ntL4ndQavEi51mI38AjEAi/V3bNTIZargCyzuFJ0nN6T5U6VR5CmD1/iQMVtCnwr1\n/q4AaOeMSQ+2b1tbFfLn\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDlDCCAnygAwIBAgIKMfXkYgxsWO3W2DANBgkqhkiG9w0BAQsFADBnMQswCQYD\nVQQGEwJJTjETMBEGA1UECxMKZW1TaWduIFBLSTElMCMGA1UEChMcZU11ZGhyYSBU\nZWNobm9sb2dpZXMgTGltaXRlZDEcMBoGA1UEAxMTZW1TaWduIFJvb3QgQ0EgLSBH\nMTAeFw0xODAyMTgxODMwMDBaFw00MzAyMTgxODMwMDBaMGcxCzAJBgNVBAYTAklO\nMRMwEQYDVQQLEwplbVNpZ24gUEtJMSUwIwYDVQQKExxlTXVkaHJhIFRlY2hub2xv\nZ2llcyBMaW1pdGVkMRwwGgYDVQQDExNlbVNpZ24gUm9vdCBDQSAtIEcxMIIBIjAN\nBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAk0u76WaK7p1b1TST0Bsew+eeuGQz\nf2N4aLTNLnF115sgxk0pvLZoYIr3IZpWNVrzdr3YzZr/k1ZLpVkGoZM0Kd0WNHVO\n8oG0x5ZOrRkVUkr+PHB1cM2vK6sVmjM8qrOLqs1D/fXqcP/tzxE7lM5OMhbTI0Aq\nd7OvPAEsbO2ZLIvZTmmYsvePQbAyeGHWDV/D+qJAkh1cF+ZwPjXnorfCYuKrpDhM\ntTk1b+oDafo6VGiFbdbyL0NVHpENDtjVaqSW0RM8LHhQ6DqS0hdW5TUaQBw+jSzt\nOd9C4INBdN+jzcKGYEho42kLVACL5HZpIQ15TjQIXhTCzLG3rdd8cIrHhQIDAQAB\no0IwQDAdBgNVHQ4EFgQU++8Nhp6w492pufEhF38+/PB3KxowDgYDVR0PAQH/BAQD\nAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAFn/8oz1h31x\nPaOfG1vR2vjTnGs2vZupYeveFix0PZ7mddrXuqe8QhfnPZHr5X3dPpzxz5KsbEjM\nwiI/aTvFthUvozXGaCocV685743QNcMYDHsAVhzNixl03r4PEuDQqqE/AjSxcM6d\nGNYIAwlG7mDgfrbESQRRfXBgvKqy/3lyeqYdPV8q+Mri/Tm3R7nrft8EI6/6nAYH\n6ftjk4BAtcZsCjEozgyfz7MjNYBBjWzEN3uBL4ChQEKF6dk4jeihU80Bv2noWgby\nRQuQ+q7hv53yrlc8pa6yVvSLZUDp/TGBLPQ5Cdjua6e0ph0VpZj3AYHYhX3zUVxx\niN66zB+Afko=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICrjCCAjWgAwIBAgIQPLL0SAoA4v7rJDteYD7DazAKBggqhkjOPQQDAzCBmDEL\nMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChj\nKSAyMDA3IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2\nMDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neSAtIEcyMB4XDTA3MTEwNTAwMDAwMFoXDTM4MDExODIzNTk1OVowgZgxCzAJBgNV\nBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykgMjAw\nNyBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNV\nBAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH\nMjB2MBAGByqGSM49AgEGBSuBBAAiA2IABBWx6P0DFUPlrOuHNxFi79KDNlJ9RVcL\nSo17VDs6bl8VAsBQps8lL33KSLjHUGMcKiEIfJo22Av+0SbFWDEwKCXzXV2juLal\ntJLtbCyf691DiaI8S0iRHVDsJt/WYC69IaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAO\nBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBVfNVdRVfslsq0DafwBo/q+EVXVMAoG\nCCqGSM49BAMDA2cAMGQCMGSWWaboCd6LuvpaiIjwH5HTRqjySkwCY/tsXzjbLkGT\nqQ7mndwxHLKgpxgceeHHNgIwOlavmnRs9vuD4DPTCF+hnMJbn0bWtsuRBmOiBucz\nrD6ogRLQy7rQkgu2npaqBA+K\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFQTCCAymgAwIBAgICDL4wDQYJKoZIhvcNAQELBQAwUTELMAkGA1UEBhMCVFcx\nEjAQBgNVBAoTCVRBSVdBTi1DQTEQMA4GA1UECxMHUm9vdCBDQTEcMBoGA1UEAxMT\nVFdDQSBHbG9iYWwgUm9vdCBDQTAeFw0xMjA2MjcwNjI4MzNaFw0zMDEyMzExNTU5\nNTlaMFExCzAJBgNVBAYTAlRXMRIwEAYDVQQKEwlUQUlXQU4tQ0ExEDAOBgNVBAsT\nB1Jvb3QgQ0ExHDAaBgNVBAMTE1RXQ0EgR2xvYmFsIFJvb3QgQ0EwggIiMA0GCSqG\nSIb3DQEBAQUAA4ICDwAwggIKAoICAQCwBdvI64zEbooh745NnHEKH1Jw7W2CnJfF\n10xORUnLQEK1EjRsGcJ0pDFfhQKX7EMzClPSnIyOt7h52yvVavKOZsTuKwEHktSz\n0ALfUPZVr2YOy+BHYC8rMjk1Ujoog/h7FsYYuGLWRyWRzvAZEk2tY/XTP3VfKfCh\nMBwqoJimFb3u/Rk28OKRQ4/6ytYQJ0lM793B8YVwm8rqqFpD/G2Gb3PpN0Wp8DbH\nzIh1HrtsBv+baz4X7GGqcXzGHaL3SekVtTzWoWH1EfcFbx39Eb7QMAfCKbAJTibc\n46KokWofwpFFiFzlmLhxpRUZyXx1EcxwdE8tmx2RRP1WKKD+u4ZqyPpcC1jcxkt2\nyKsi2XMPpfRaAok/T54igu6idFMqPVMnaR1sjjIsZAAmY2E2TqNGtz99sy2sbZCi\nlaLOz9qC5wc0GZbpuCGqKX6mOL6OKUohZnkfs8O1CWfe1tQHRvMq2uYiN2DLgbYP\noA/pyJV/v1WRBXrPPRXAb94JlAGD1zQbzECl8LibZ9WYkTunhHiVJqRaCPgrdLQA\nBDzfuBSO6N+pjWxnkjMdwLfS7JLIvgm/LCkFbwJrnu+8vyq8W8BQj0FwcYeyTbcE\nqYSjMq+u7msXi7Kx/mzhkIyIqJdIzshNy/MGz19qCkKxHh53L46g5pIOBvwFItIm\n4TFRfTLcDwIDAQABoyMwITAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB\n/zANBgkqhkiG9w0BAQsFAAOCAgEAXzSBdu+WHdXltdkCY4QWwa6gcFGn90xHNcgL\n1yg9iXHZqjNB6hQbbCEAwGxCGX6faVsgQt+i0trEfJdLjbDorMjupWkEmQqSpqsn\nLhpNgb+E1HAerUf+/UqdM+DyucRFCCEK2mlpc3INvjT+lIutwx4116KD7+U4x6WF\nH6vPNOw/KP4M8VeGTslV9xzU2KV9Bnpv1d8Q34FOIWWxtuEXeZVFBs5fzNxGiWNo\nRI2T9GRwoD2dKAXDOXC4Ynsg/eTb6QihuJ49CcdP+yz4k3ZB3lLg4VfSnQO8d57+\nnile98FRYB/e2guyLXW3Q0iT5/Z5xoRdgFlglPx4mI88k1HtQJAH32RjJMtOcQWh\n15QaiDLxInQirqWm2BJpTGCjAu4r7NRjkgtevi92a6O2JryPA9gK8kxkRr05YuWW\n6zRjESjMlfGt7+/cgFhI6Uu46mWs6fyAtbXIRfmswZ/ZuepiiI7E8UuDEq3mi4TW\nnsLrgxifarsbJGAzcMzs9zLzXNl5fe+epP7JI8Mk7hWSsT2RTyaGvWZzJBPqpK5j\nwa19hAM8EHiGG3njxPPyBJUgriOCxLM6AGK/5jYk4Ve6xx6QddVfP5VhK8E7zeWz\naGHQRiapIVJpLesux+t3zqY6tQMzT3bR51xUAV3LePTJDL/PEo4XLSNolOer/qmy\nKwbQBM0=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDvDCCAqSgAwIBAgIQB1YipOjUiolN9BPI8PjqpTANBgkqhkiG9w0BAQUFADBK\nMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24x\nGTAXBgNVBAMTEFNlY3VyZSBHbG9iYWwgQ0EwHhcNMDYxMTA3MTk0MjI4WhcNMjkx\nMjMxMTk1MjA2WjBKMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3Qg\nQ29ycG9yYXRpb24xGTAXBgNVBAMTEFNlY3VyZSBHbG9iYWwgQ0EwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvNS7YrGxVaQZx5RNoJLNP2MwhR/jxYDiJ\niQPpvepeRlMJ3Fz1Wuj3RSoC6zFh1ykzTM7HfAo3fg+6MpjhHZevj8fcyTiW89sa\n/FHtaMbQbqR8JNGuQsiWUGMu4P51/pinX0kuleM5M2SOHqRfkNJnPLLZ/kG5VacJ\njnIFHovdRIWCQtBJwB1g8NEXLJXr9qXBkqPFwqcIYA1gBBCWeZ4WNOaptvolRTnI\nHmX5k/Wq8VLcmZg9pYYaDDUz+kulBAYVHDGA76oYa8J719rO+TMg1fW9ajMtgQT7\nsFzUnKPiXB3jqUJ1XnvUd+85VLrJChgbEplJL4hL/VBi0XPnj3pDAgMBAAGjgZ0w\ngZowEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFK9EBMJBfkiD2045AuzshHrmzsmkMDQGA1UdHwQtMCsw\nKaAnoCWGI2h0dHA6Ly9jcmwuc2VjdXJldHJ1c3QuY29tL1NHQ0EuY3JsMBAGCSsG\nAQQBgjcVAQQDAgEAMA0GCSqGSIb3DQEBBQUAA4IBAQBjGghAfaReUw132HquHw0L\nURYD7xh8yOOvaliTFGCRsoTciE6+OYo68+aCiV0BN7OrJKQVDpI1WkpEXk5X+nXO\nH0jOZvQ8QCaSmGwb7iRGDBezUqXbpZGRzzfTb+cnCDpOGR86p1hcF895P4vkp9Mm\nI50mD1hp/Ed+stCNi5O/KU9DaXR2Z0vPB4zmAve14bRDtUstFJ/53CYNv6ZHdAbY\niNE6KTCEztI5gGIbqMdXSbxqVVFnFUq+NQfk1XWYN3kwFNspnWzFacxHVaIw98xc\nf8LDmBxrThaA63p4ZUWiABqvDA1VZDRIuJK58bRQKfJPIx/abKwfROHdI3hRW8cW\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIB8jCCAXigAwIBAgITBmyf18G7EEwpQ+Vxe3ssyBrBDjAKBggqhkjOPQQDAzA5\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24g\nUm9vdCBDQSA0MB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTELMAkG\nA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3Qg\nQ0EgNDB2MBAGByqGSM49AgEGBSuBBAAiA2IABNKrijdPo1MN/sGKe0uoe0ZLY7Bi\n9i0b2whxIdIA6GO9mif78DluXeo9pcmBqqNbIJhFXRbb/egQbeOc4OO9X4Ri83Bk\nM6DLJC9wuoihKqB1+IGuYgbEgds5bimwHvouXKNCMEAwDwYDVR0TAQH/BAUwAwEB\n/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0OBBYEFNPsxzplbszh2naaVvuc84ZtV+WB\nMAoGCCqGSM49BAMDA2gAMGUCMDqLIfG9fhGt0O9Yli/W651+kI0rz2ZVwyzjKKlw\nCkcO8DdZEv8tmZQoTipPNU0zWgIxAOp1AE47xDqUEpHJWEadIRNyp4iciuRMStuW\n1KyLa2tJElMzrdfkviT8tQp21KW8EA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF0jCCA7qgAwIBAgIQIdbQSk8lD8kyN/yqXhKN6TANBgkqhkiG9w0BAQ0FADCB\ngDELMAkGA1UEBhMCUEwxIjAgBgNVBAoTGVVuaXpldG8gVGVjaG5vbG9naWVzIFMu\nQS4xJzAlBgNVBAsTHkNlcnR1bSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEkMCIG\nA1UEAxMbQ2VydHVtIFRydXN0ZWQgTmV0d29yayBDQSAyMCIYDzIwMTExMDA2MDgz\nOTU2WhgPMjA0NjEwMDYwODM5NTZaMIGAMQswCQYDVQQGEwJQTDEiMCAGA1UEChMZ\nVW5pemV0byBUZWNobm9sb2dpZXMgUy5BLjEnMCUGA1UECxMeQ2VydHVtIENlcnRp\nZmljYXRpb24gQXV0aG9yaXR5MSQwIgYDVQQDExtDZXJ0dW0gVHJ1c3RlZCBOZXR3\nb3JrIENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC9+Xj45tWA\nDGSdhhuWZGc/IjoedQF97/tcZ4zJzFxrqZHmuULlIEub2pt7uZld2ZuAS9eEQCsn\n0+i6MLs+CRqnSZXvK0AkwpfHp+6bJe+oCgCXhVqqndwpyeI1B+twTUrWwbNWuKFB\nOJvR+zF/j+Bf4bE/D44WSWDXBo0Y+aomEKsq09DRZ40bRr5HMNUuctHFY9rnY3lE\nfktjJImGLjQ/KUxSiyqnwOKRKIm5wFv5HdnnJ63/mgKXwcZQkpsCLL2puTRZCr+E\nSv/f/rOf69me4Jgj7KZrdxYq28ytOxykh9xGc14ZYmhFV+SQgkK7QtbwYeDBoz1m\no130GO6IyY0XRSmZMnUCMe4pJshrAua1YkV/NxVaI2iJ1D7eTiew8EAMvE0Xy02i\nsx7QBlrd9pPPV3WZ9fqGGmd4s7+W/jTcvedSVuWz5XV710GRBdxdaeOVDUO5/IOW\nOZV7bIBaTxNyxtd9KXpEulKkKtVBRgkg/iKgtlswjbyJDNXXcPiHUv3a76xRLgez\nTv7QCdpw75j6VuZt27VXS9zlLCUVyJ4ueE742pyehizKV/Ma5ciSixqClnrDvFAS\nadgOWkaLOusm+iPJtrCBvkIApPjW/jAux9JG9uWOdf3yzLnQh1vMBhBgu4M1t15n\n3kfsmUjxpKEV/q2MYo45VU85FrmxY53/twIDAQABo0IwQDAPBgNVHRMBAf8EBTAD\nAQH/MB0GA1UdDgQWBBS2oVQ5AsOgP46KvPrU+Bym0ToO/TAOBgNVHQ8BAf8EBAMC\nAQYwDQYJKoZIhvcNAQENBQADggIBAHGlDs7k6b8/ONWJWsQCYftMxRQXLYtPU2sQ\nF/xlhMcQSZDe28cmk4gmb3DWAl45oPePq5a1pRNcgRRtDoGCERuKTsZPpd1iHkTf\nCVn0W3cLN+mLIMb4Ck4uWBzrM9DPhmDJ2vuAL55MYIR4PSFk1vtBHxgP58l1cb29\nXN40hz5BsA72udY/CROWFC/emh1auVbONTqwX3BNXuMp8SMoclm2q8KMZiYcdywm\ndjWLKKdpoPk79SPdhRB0yZADVpHnr7pH1BKXESLjokmUbOe3lEu6LaTaM4tMpkT/\nWjzGHWTYtTHkpjx6qFcL2+1hGsvxznN3Y6SHb0xRONbkX8eftoEq5IVIeVheO/jb\nAoJnwTnbw3RLPTYe+SmTiGhbqEQZIfCn6IENLOiTNrQ3ssqwGyZ6miUfmpqAnksq\nP/ujmv5zMnHCnsZy4YpoJ/HkD7TETKVhk/iXEAcqMCWpuchxuO9ozC1+9eB+D4Ko\nb7a6bINDd82Kkhehnlt4Fj1F4jNy3eFmypnTycUm/Q1oBEauttmbjL4ZvrHG8hnj\nXALKLNhvSgfZyTXaQHXyxKcZb55CEJh15pWLYLztxRLXis7VmFxWlgPF7ncGNf/P\n5O4/E2Hu29othfDNrp2yGAlFw5Khchf8R7agCyzxxN5DaAhqXzvwdmP7zAYspsbi\nDrW5viSP\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIID/jCCAuagAwIBAgIQFaxulBmyeUtB9iepwxgPHzANBgkqhkiG9w0BAQsFADCB\nmDELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsT\nMChjKSAyMDA4IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s\neTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhv\ncml0eSAtIEczMB4XDTA4MDQwMjAwMDAwMFoXDTM3MTIwMTIzNTk1OVowgZgxCzAJ\nBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykg\nMjAwOCBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0\nBgNVBAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg\nLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANziXmJYHTNXOTIz\n+uvLh4yn1ErdBojqZI4xmKU4kB6Yzy5jK/BGvESyiaHAKAxJcCGVn2TAppMSAmUm\nhsalifD614SgcK9PGpc/BkTVyetyEH3kMSj7HGHmKAdEc5IiaacDiGydY8hS2pgn\n5whMcD60yRLBxWeDXTPzAxHsatBT4tG6NmCUgLthY2xbF37fQJQeqw3CIShwiP/W\nJmxsYAQlTlV+fe+/lEjetx3dcI0FX4ilm/LC7urRQEFtYjgdVgbFA0dRIBn8exAL\nDmKudlW/X3e+PkkBUz2YJQN2JFodtNuJ6nnltrM7P7pMKEF/BqxqjsHQ9gUdfeZC\nhuOl1UcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw\nHQYDVR0OBBYEFMR5yo6hTgMdHNxr2zFblD4/MH8tMA0GCSqGSIb3DQEBCwUAA4IB\nAQAtxRPPVoB7eni9n64smefv2t+UXglpp+duaIy9cr5HqQ6XErhK8WTTOd8lNNTB\nzU6B8A8ExCSzNJbGpqow32hhc9f5joWJ7w5elShKKiePEI4ufIbEAp7aDHdlDkQN\nkv39sxY2+hENHYwOB4lqKVb3cvTdFZx3NWZXqxNT2I7BQMXXExZacse3aQHEerGD\nAWh9jUGhlBjBJVz88P6DAod8DQ3PLghcSkANPuyBYeYk28rgDi0Hsj5W3I31QYUH\nSJsMC8tJP33st/3LjWeJGqvtux6jAAgIFyqCXDFdRootD4abdNlF+9RAsXqqaC2G\nspki4cErx5z481+oghLrGREt\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF2TCCA8GgAwIBAgIQHp4o6Ejy5e/DfEoeWhhntjANBgkqhkiG9w0BAQsFADBk\nMQswCQYDVQQGEwJjaDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsTHERpZ2l0\nYWwgQ2VydGlmaWNhdGUgU2VydmljZXMxGzAZBgNVBAMTElN3aXNzY29tIFJvb3Qg\nQ0EgMjAeFw0xMTA2MjQwODM4MTRaFw0zMTA2MjUwNzM4MTRaMGQxCzAJBgNVBAYT\nAmNoMREwDwYDVQQKEwhTd2lzc2NvbTElMCMGA1UECxMcRGlnaXRhbCBDZXJ0aWZp\nY2F0ZSBTZXJ2aWNlczEbMBkGA1UEAxMSU3dpc3Njb20gUm9vdCBDQSAyMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAlUJOhJ1R5tMJ6HJaI2nbeHCOFvEr\njw0DzpPMLgAIe6szjPTpQOYXTKueuEcUMncy3SgM3hhLX3af+Dk7/E6J2HzFZ++r\n0rk0X2s682Q2zsKwzxNoysjL67XiPS4h3+os1OD5cJZM/2pYmLcX5BtS5X4HAB1f\n2uY+lQS3aYg5oUFgJWFLlTloYhyxCwWJwDaCFCE/rtuh/bxvHGCGtlOUSbkrRsVP\nACu/obvLP+DHVxxX6NZp+MEkUp2IVd3Chy50I9AU/SpHWrumnf2U5NGKpV+GY3aF\ny6//SSj8gO1MedK75MDvAe5QQQg1I3ArqRa0jG6F6bYRzzHdUyYb3y1aSgJA/MTA\ntukxGggo5WDDH8SQjhBiYEQN7Aq+VRhxLKX0srwVYv8c474d2h5Xszx+zYIdkeNL\n6yxSNLCK/RJOlrDrcH+eOfdmQrGrrFLadkBXeyq96G4DsguAhYidDMfCd7Camlf0\nuPoTXGiTOmekl9AbmbeGMktg2M7v0Ax/lZ9vh0+Hio5fCHyqW/xavqGRn1V9TrAL\nacywlKinh/LTSlDcX3KwFnUey7QYYpqwpzmqm59m2I2mbJYV4+by+PGDYmy7Velh\nk6M99bFXi08jsJvllGov34zflVEpYKELKeRcVVi3qPyZ7iVNTA6z00yPhOgpD/0Q\nVAKFyPnlw4vP5w8CAwEAAaOBhjCBgzAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0hBBYw\nFDASBgdghXQBUwIBBgdghXQBUwIBMBIGA1UdEwEB/wQIMAYBAf8CAQcwHQYDVR0O\nBBYEFE0mICKJS9PVpAqhb97iEoHF8TwuMB8GA1UdIwQYMBaAFE0mICKJS9PVpAqh\nb97iEoHF8TwuMA0GCSqGSIb3DQEBCwUAA4ICAQAyCrKkG8t9voJXiblqf/P0wS4R\nfbgZPnm3qKhyN2abGu2sEzsOv2LwnN+ee6FTSA5BesogpxcbtnjsQJHzQq0Qw1zv\n/2BZf82Fo4s9SBwlAjxnffUy6S8w5X2lejjQ82YqZh6NM4OKb3xuqFp1mrjX2lhI\nREeoTPpMSQpKwhI3qEAMw8jh0FcNlzKVxzqfl9NX+Ave5XLzo9v/tdhZsnPdTSpx\nsrpJ9csc1fV5yJmz/MFMdOO0vSk3FQQoHt5FRnDsr7p4DooqzgB53MBfGWcsa0vv\naGgLQ+OswWIJ76bdZWGgr4RVSJFSHMYlkSrQwSIjYVmvRRGFHQEkNI/Ps/8XciAT\nwoCqISxxOQ7Qj1zB09GOInJGTB2Wrk9xseEFKZZZ9LuedT3PDTcNYtsmjGOpI99n\nBjx8Oto0QuFmtEYE3saWmA9LSHokMnWRn6z3aOkquVVlzl1h0ydw2Df+n7mvoC5W\nt6NlUe07qxS/TFED6F+KBZvuim6c779o+sjaC+NCydAXFJy3SuCvkychVSa1ZC+N\n8f+mQAWFBVzKBxlcCxMoTFh/wqXvRdpg065lYZ1Tg3TCrvJcwhbtkj6EPnNgiLx2\n9CzP0H1907he0ZESEOnN3col49XtmS++dYFLJPlFRpTJKSFTnCZFqhMX5OfNeOI5\nwSsSnqaeG8XmDtkx2Q==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFRjCCAy6gAwIBAgIIbYwURrGmCu4wDQYJKoZIhvcNAQEMBQAwQTELMAkGA1UE\nBhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MRwwGgYDVQQDDBNBZmZpcm1UcnVz\ndCBQcmVtaXVtMB4XDTEwMDEyOTE0MTAzNloXDTQwMTIzMTE0MTAzNlowQTELMAkG\nA1UEBhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MRwwGgYDVQQDDBNBZmZpcm1U\ncnVzdCBQcmVtaXVtMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxBLf\nqV/+Qd3d9Z+K4/as4Tx4mrzY8H96oDMq3I0gW64tb+eT2TZwamjPjlGjhVtnBKAQ\nJG9dKILBl1fYSCkTtuG+kU3fhQxTGJoeJKJPj/CihQvL9Cl/0qRY7iZNyaqoe5rZ\n+jjeRFcV5fiMyNlI4g0WJx0eyIOFJbe6qlVBzAMiSy2RjYvmia9mx+n/K+k8rNrS\ns8PhaJyJ+HoAVt70VZVs+7pk3WKL3wt3MutizCaam7uqYoNMtAZ6MMgpv+0GTZe5\nHMQxK9VfvFMSF5yZVylmd2EhMQcuJUmdGPLu8ytxjLW6OQdJd/zvLpKQBY0tL3d7\n70O/Nbua2Plzpyzy0FfuKE4mX4+QaAkvuPjcBukumj5Rp9EixAqnOEhss/n/fauG\nV+O61oV4d7pD6kh/9ti+I20ev9E2bFhc8e6kGVQa9QPSdubhjL08s9NIS+LI+H+S\nqHZGnEJlPqQewQcDWkYtuJfzt9WyVSHvutxMAJf7FJUnM7/oQ0dG0giZFmA7mn7S\n5u046uwBHjxIVkkJx0w3AJ6IDsBz4W9m6XJHMD4Q5QsDyZpCAGzFlH5hxIrff4Ia\nC1nEWTJ3s7xgaVY5/bQGeyzWZDbZvUjthB9+pSKPKrhC9IK31FOQeE4tGv2Bb0TX\nOwF0lkLgAOIua+rF7nKsu7/+6qqo+Nz2snmKtmcCAwEAAaNCMEAwHQYDVR0OBBYE\nFJ3AZ6YMItkm9UWrpmVSESfYRaxjMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgEGMA0GCSqGSIb3DQEBDAUAA4ICAQCzV00QYk465KzquByvMiPIs0laUZx2\nKI15qldGF9X1Uva3ROgIRL8YhNILgM3FEv0AVQVhh0HctSSePMTYyPtwni94loMg\nNt58D2kTiKV1NpgIpsbfrM7jWNa3Pt668+s0QNiigfV4Py/VpfzZotReBA4Xrf5B\n8OWycvpEgjNC6C1Y91aMYj+6QrCcDFx+LmUmXFNPALJ4fqENmS2NuB2OosSw/WDQ\nMKSOyARiqcTtNd56l+0OOF6SL5Nwpamcb6d9Ex1+xghIsV5n61EIJenmJWtSKZGc\n0jlzCFfemQa0W50QBuHCAKi4HEoCChTQwUHK+4w1IX2COPKpVJEZNZOUbWo6xbLQ\nu4mGk+ibyQ86p3q4ofB4Rvr8Ny/lioTz3/4E2aFooC8k4gmVBtWVyuEklut89pMF\nu+1z6S3RdTnX5yTb2E5fQ4+e0BQ5v1VwSJlXMbSc7kqYA5YwH2AG7hsj/oFgIxpH\nYoWlzBk0gG+zrBrjn/B7SK3VAdlntqlyk+otZrWyuOQ9PLLvTIzq6we/qzWaVYa8\nGKa1qF60g2xraUDTn9zxw2lrueFtCfTxqlB2Cnp9ehehVZZCmTEJ3WARjQUwfuaO\nRtGdFNrHF+QFlozEJLUbzxQHskD4o55BhrwE0GuWyCqANP2/7waj3VjFhT0+j/6e\nKeC2uAloGRwYQw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFvTCCA6WgAwIBAgIITxvUL1S7L0swDQYJKoZIhvcNAQEFBQAwRzELMAkGA1UE\nBhMCQ0gxFTATBgNVBAoTDFN3aXNzU2lnbiBBRzEhMB8GA1UEAxMYU3dpc3NTaWdu\nIFNpbHZlciBDQSAtIEcyMB4XDTA2MTAyNTA4MzI0NloXDTM2MTAyNTA4MzI0Nlow\nRzELMAkGA1UEBhMCQ0gxFTATBgNVBAoTDFN3aXNzU2lnbiBBRzEhMB8GA1UEAxMY\nU3dpc3NTaWduIFNpbHZlciBDQSAtIEcyMIICIjANBgkqhkiG9w0BAQEFAAOCAg8A\nMIICCgKCAgEAxPGHf9N4Mfc4yfjDmUO8x/e8N+dOcbpLj6VzHVxumK4DV644N0Mv\nFz0fyM5oEMF4rhkDKxD6LHmD9ui5aLlV8gREpzn5/ASLHvGiTSf5YXu6t+WiE7br\nYT7QbNHm+/pe7R20nqA1W6GSy/BJkv6FCgU+5tkL4k+73JU3/JHpMjUi0R86TieF\nnbAVlDLaYQ1HTWBCrpJH6INaUFjpiou5XaHc3ZlKHzZnu0jkg7Y360g6rw9njxcH\n6ATK72oxh9TAtvmUcXtnZLi2kUpCe2UuMGoM9ZDulebyzYLs2aFK7PayS+VFheZt\neJMELpyCbTapxDFkH4aDCyr0NQp4yVXPQbBH6TCfmb5hqAaEuSh6XzjZG6k4sIN/\nc8HDO0gqgg8hm7jMqDXDhBuDsz6+pJVpATqJAHgE2cn0mRmrVn5bi4Y5FZGkECwJ\nMoBgs5PAKrYYC51+jUnyEEp/+dVGLxmSo5mnJqy7jDzmDrxHB9xzUfFwZC8I+bRH\nHTBsROopN4WSaGa8gzj+ezku01DwH/teYLappvonQfGbGHLy9YR0SslnxFSuSGTf\njNFusB3hB48IHpmccelM2KX3RxIfdNFRnobzwqIjQAtz20um53MGjMGg6cFZrEb6\n5i/4z3GcRm25xBWNOHkDRUjvxF3XCO6HOSKGsg0PWEP3calILv3q1h8CAwEAAaOB\nrDCBqTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU\nF6DNweRBtjpbO8tFnb0cwpj6hlgwHwYDVR0jBBgwFoAUF6DNweRBtjpbO8tFnb0c\nwpj6hlgwRgYDVR0gBD8wPTA7BglghXQBWQEDAQEwLjAsBggrBgEFBQcCARYgaHR0\ncDovL3JlcG9zaXRvcnkuc3dpc3NzaWduLmNvbS8wDQYJKoZIhvcNAQEFBQADggIB\nAHPGgeAn0i0P4JUw4ppBf1AsX19iYamGamkYDHRJ1l2E6kFSGG9YrVBWIGrGvShp\nWJHckRE1qTodvBqlYJ7YH39FkWnZfrt4csEGDyrOj4VwYaygzQu4OSlWhDJOhrs9\nxCrZ1x9y7v5RoSJBsXECYxqCsGKrXlcSH9/L3XWgwF15kIwb4FDm3jH+mHtwX6WQ\n2K34ArZv02DdQEsixT2tOnqfGhpHkXkzuoLcMmkDlm4fS/Bx/uNncqCxv1yL5PqZ\nIseEuRuNI5c/7SXgz2W79WEE790eslpBIlqhn10s6FvJbakMDHiqYMZWjwFaDGi8\naRl5xB9+lwW/xekkUV7U1UtT7dkjWjYDZaPBA61BMPNGG4WQr2W11bHkFlt4dR2X\nem1ZqSqPe97Dh4kQmUlzeMg9vVE1dCrV8X5pGyq7O70luJpaPXJhkGaH7gzWTdQR\ndAtq/gsD/KNVV4n+SsuuWxcFyPKNIzFTONItaj+CuY0IavdeQXRuwxF+B6wpYJE/\nOMpXEA29MC/HpeZBoNquBYeaoKRlbEwJDIm6uNO5wJOKMPqN5ZprFQFOZ6raYlY+\nhAhm0sQ2fac+EPyI4NSA5QC9qvNOBqN6avlicuMJT+ubDgEj8Z+7fNzcbBGXJbLy\ntGMU0gYqZ4yD9c7qB9iaah7s5Aq7KkzrCWA5zspi2C5u\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEFTCCAv2gAwIBAgIGSUEs5AAQMA0GCSqGSIb3DQEBCwUAMIGnMQswCQYDVQQG\nEwJIVTERMA8GA1UEBwwIQnVkYXBlc3QxFTATBgNVBAoMDE5ldExvY2sgS2Z0LjE3\nMDUGA1UECwwuVGFuw7pzw610dsOhbnlraWFkw7NrIChDZXJ0aWZpY2F0aW9uIFNl\ncnZpY2VzKTE1MDMGA1UEAwwsTmV0TG9jayBBcmFueSAoQ2xhc3MgR29sZCkgRsWR\ndGFuw7pzw610dsOhbnkwHhcNMDgxMjExMTUwODIxWhcNMjgxMjA2MTUwODIxWjCB\npzELMAkGA1UEBhMCSFUxETAPBgNVBAcMCEJ1ZGFwZXN0MRUwEwYDVQQKDAxOZXRM\nb2NrIEtmdC4xNzA1BgNVBAsMLlRhbsO6c8OtdHbDoW55a2lhZMOzayAoQ2VydGlm\naWNhdGlvbiBTZXJ2aWNlcykxNTAzBgNVBAMMLE5ldExvY2sgQXJhbnkgKENsYXNz\nIEdvbGQpIEbFkXRhbsO6c8OtdHbDoW55MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\nMIIBCgKCAQEAxCRec75LbRTDofTjl5Bu0jBFHjzuZ9lk4BqKf8owyoPjIMHj9DrT\nlF8afFttvzBPhCf2nx9JvMaZCpDyD/V/Q4Q3Y1GLeqVw/HpYzY6b7cNGbIRwXdrz\nAZAj/E4wqX7hJ2Pn7WQ8oLjJM2P+FpD/sLj916jAwJRDC7bVWaaeVtAkH3B5r9s5\nVA1lddkVQZQBr17s9o3x/61k/iCa11zr/qYfCGSji3ZVrR47KGAuhyXoqq8fxmRG\nILdwfzzeSNuWU7c5d+Qa4scWhHaXWy+7GRWF+GmF9ZmnqfI0p6m2pgP8b4Y9VHx2\nBJtr+UBdADTHLpl1neWIA6pN+APSQnbAGwIDAKiLo0UwQzASBgNVHRMBAf8ECDAG\nAQH/AgEEMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUzPpnk/C2uNClwB7zU/2M\nU9+D15YwDQYJKoZIhvcNAQELBQADggEBAKt/7hwWqZw8UQCgwBEIBaeZ5m8BiFRh\nbvG5GK1Krf6BQCOUL/t1fC8oS2IkgYIL9WHxHG64YTjrgfpioTtaYtOUZcTh5m2C\n+C8lcLIhJsFyUR+MLMOEkMNaj7rP9KdlpeuY0fsFskZ1FSNqb4VjMIDw1Z4fKRzC\nbLBQWV2QWzuoDTDPv31/zvGdg73JRm4gpvlhUbohL3u+pRVjodSVh/GeufOJ8z2F\nuLjbvrW5KfnaNwUASZQDhETnv0Mxz3WLJdH0pmT1kvarBes96aULNmLazAZfNou2\nXjG4Kvte9nHfRCaexOYNkbQudZWAUWpLMKawYqGT8ZvYzsRjdT9ZR7E=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICTjCCAdOgAwIBAgIKPPYHqWhwDtqLhDAKBggqhkjOPQQDAzBrMQswCQYDVQQG\nEwJJTjETMBEGA1UECxMKZW1TaWduIFBLSTElMCMGA1UEChMcZU11ZGhyYSBUZWNo\nbm9sb2dpZXMgTGltaXRlZDEgMB4GA1UEAxMXZW1TaWduIEVDQyBSb290IENBIC0g\nRzMwHhcNMTgwMjE4MTgzMDAwWhcNNDMwMjE4MTgzMDAwWjBrMQswCQYDVQQGEwJJ\nTjETMBEGA1UECxMKZW1TaWduIFBLSTElMCMGA1UEChMcZU11ZGhyYSBUZWNobm9s\nb2dpZXMgTGltaXRlZDEgMB4GA1UEAxMXZW1TaWduIEVDQyBSb290IENBIC0gRzMw\ndjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQjpQy4LRL1KPOxst3iAhKAnjlfSU2fySU0\nWXTsuwYc58Byr+iuL+FBVIcUqEqy6HyC5ltqtdyzdc6LBtCGI79G1Y4PPwT01xyS\nfvalY8L1X44uT6EYGQIrMgqCZH0Wk9GjQjBAMB0GA1UdDgQWBBR8XQKEE9TMipuB\nzhccLikenEhjQjAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAKBggq\nhkjOPQQDAwNpADBmAjEAvvNhzwIQHWSVB7gYboiFBS+DCBeQyh+KTOgNG3qxrdWB\nCUfvO6wIBHxcmbHtRwfSAjEAnbpV/KlK6O3t5nYBQnvI+GDZjVGLVTv7jHvrZQnD\n+JbNR6iC8hZVdyR+EhCVBCyj\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFajCCA1KgAwIBAgIQLd2szmKXlKFD6LDNdmpeYDANBgkqhkiG9w0BAQsFADBP\nMQswCQYDVQQGEwJUVzEjMCEGA1UECgwaQ2h1bmdod2EgVGVsZWNvbSBDby4sIEx0\nZC4xGzAZBgNVBAMMEkhpUEtJIFJvb3QgQ0EgLSBHMTAeFw0xOTAyMjIwOTQ2MDRa\nFw0zNzEyMzExNTU5NTlaME8xCzAJBgNVBAYTAlRXMSMwIQYDVQQKDBpDaHVuZ2h3\nYSBUZWxlY29tIENvLiwgTHRkLjEbMBkGA1UEAwwSSGlQS0kgUm9vdCBDQSAtIEcx\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA9B5/UnMyDHPkvRN0o9Qw\nqNCuS9i233VHZvR85zkEHmpwINJaR3JnVfSl6J3VHiGh8Ge6zCFovkRTv4354twv\nVcg3Px+kwJyz5HdcoEb+d/oaoDjq7Zpy3iu9lFc6uux55199QmQ5eiY29yTw1S+6\nlZgRZq2XNdZ1AYDgr/SEYYwNHl98h5ZeQa/rh+r4XfEuiAU+TCK72h8q3VJGZDnz\nQs7ZngyzsHeXZJzA9KMuH5UHsBffMNsAGJZMoYFL3QRtU6M9/Aes1MU3guvklQgZ\nKILSQjqj2FPseYlgSGDIcpJQ3AOPgz+yQlda22rpEZfdhSi8MEyr48KxRURHH+CK\nFgeW0iEPU8DtqX7UTuybCeyvQqww1r/REEXgphaypcXTT3OUM3ECoWqj1jOXTyFj\nHluP2cFeRXF3D4FdXyGarYPM+l7WjSNfGz1BryB1ZlpK9p/7qxj3ccC2HTHsOyDr\ny+K49a6SsvfhhEvyovKTmiKe0xRvNlS9H15ZFblzqMF8b3ti6RZsR1pl8w4Rm0bZ\n/W3c1pzAtH2lsN0/Vm+h+fbkEkj9Bn8SV7apI09bA8PgcSojt/ewsTu8mL3WmKgM\na/aOEmem8rJY5AIJEzypuxC00jBF8ez3ABHfZfjcK0NVvxaXxA/VLGGEqnKG/uY6\nfsI/fe78LxQ+5oXdUG+3Se0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQU8ncX+l6o/vY9cdVouslGDDjYr7AwDgYDVR0PAQH/BAQDAgGGMA0GCSqG\nSIb3DQEBCwUAA4ICAQBQUfB13HAE4/+qddRxosuej6ip0691x1TPOhwEmSKsxBHi\n7zNKpiMdDg1H2DfHb680f0+BazVP6XKlMeJ45/dOlBhbQH3PayFUhuaVevvGyuqc\nSE5XCV0vrPSltJczWNWseanMX/mF+lLFjfiRFOs6DRfQUsJ748JzjkZ4Bjgs6Fza\nZsT0pPBWGTMpWmWSBUdGSquEwx4noR8RkpkndZMPvDY7l1ePJlsMu5wP1G4wB9Tc\nXzZoZjmDlicmisjEOf6aIW/Vcobpf2Lll07QJNBAsNB1CI69aO4I1258EHBGG3zg\niLKecoaZAeO/n0kZtCW+VmWuF2PlHt/o/0elv+EmBYTksMCv5wiZqAxeJoBF1Pho\nL5aPruJKHJwWDBNvOIf2u8g0X5IDUXlwpt/L9ZlNec1OvFefQ05rLisY+GpzjLrF\nNe85akEez3GoorKGB1s6yeHvP2UEgEcyRHCVTjFnanRbEEV16rCf0OY1/k6fi8wr\nkkVbbiVghUbN0aqwdmaTd5a+g744tiROJgvM7XpWGuDpWsZkrUx6AEhEL7lAuxM+\nvhV4nYWBSipX3tUZQ9rbyltHhoMLP7YNdnhzeSJesYAfz77RP1YQmCuVh6EfnWQU\nYDksswBVLuT1sw5XxJFBAJw/6KXf6vb/yPCtbVKoF6ubYfwSUTXkJf2vqmqGOQ==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEuzCCA6OgAwIBAgIBAjANBgkqhkiG9w0BAQUFADBiMQswCQYDVQQGEwJVUzET\nMBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlv\nbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJvb3QgQ0EwHhcNMDYwNDI1MjE0\nMDM2WhcNMzUwMjA5MjE0MDM2WjBiMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBw\nbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkx\nFjAUBgNVBAMTDUFwcGxlIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDkkakJH5HbHkdQ6wXtXnmELes2oldMVeyLGYne+Uts9QerIjAC6Bg+\n+FAJ039BqJj50cpmnCRrEdCju+QbKsMflZ56DKRHi1vUFjczy8QPTc4UadHJGXL1\nXQ7Vf1+b8iUDulWPTV0N8WQ1IxVLFVkds5T39pyez1C6wVhQZ48ItCD3y6wsIG9w\ntj8BMIy3Q88PnT3zK0koGsj+zrW5DtleHNbLPbU6rfQPDgCSC7EhFi501TwN22IW\nq6NxkkdTVcGvL0Gz+PvjcM3mo0xFfh9Ma1CWQYnEdGILEINBhzOKgbEwWOxaBDKM\naLOPHd5lc/9nXmW8Sdh2nzMUZaF3lMktAgMBAAGjggF6MIIBdjAOBgNVHQ8BAf8E\nBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUK9BpR5R2Cf70a40uQKb3\nR01/CF4wHwYDVR0jBBgwFoAUK9BpR5R2Cf70a40uQKb3R01/CF4wggERBgNVHSAE\nggEIMIIBBDCCAQAGCSqGSIb3Y2QFATCB8jAqBggrBgEFBQcCARYeaHR0cHM6Ly93\nd3cuYXBwbGUuY29tL2FwcGxlY2EvMIHDBggrBgEFBQcCAjCBthqBs1JlbGlhbmNl\nIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0\nYW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBj\nb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZp\nY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMA0GCSqGSIb3DQEBBQUAA4IBAQBc\nNplMLXi37Yyb3PN3m/J20ncwT8EfhYOFG5k9RzfyqZtAjizUsZAS2L70c5vu0mQP\ny3lPNNiiPvl4/2vIB+x9OYOLUyDTOMSxv5pPCmv/K/xZpwUJfBdAVhEedNO3iyM7\nR6PVbyTi69G3cN8PReEnyvFteO3ntRcXqNx+IjXKJdXZD9Zr1KIkIxH3oayPc4Fg\nxhtbCS+SsvhESPBgOJ4V9T0mZyCKM2r3DYLP3uujL/lTaltkwGMzd/c6ByxW69oP\nIQ7aunMZT7XZNn/Bh1XZp5m5MkL72NVxnn6hUrcbvZNCJBIqxw8dtk2cXmPIS4AX\nUKqK1drk/NAJBzewdXUh\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIHTzCCBTegAwIBAgIJAKPaQn6ksa7aMA0GCSqGSIb3DQEBBQUAMIGuMQswCQYD\nVQQGEwJFVTFDMEEGA1UEBxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0\nIHd3dy5jYW1lcmZpcm1hLmNvbS9hZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3\nMRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMuQS4xKTAnBgNVBAMTIENoYW1iZXJz\nIG9mIENvbW1lcmNlIFJvb3QgLSAyMDA4MB4XDTA4MDgwMTEyMjk1MFoXDTM4MDcz\nMTEyMjk1MFowga4xCzAJBgNVBAYTAkVVMUMwQQYDVQQHEzpNYWRyaWQgKHNlZSBj\ndXJyZW50IGFkZHJlc3MgYXQgd3d3LmNhbWVyZmlybWEuY29tL2FkZHJlc3MpMRIw\nEAYDVQQFEwlBODI3NDMyODcxGzAZBgNVBAoTEkFDIENhbWVyZmlybWEgUy5BLjEp\nMCcGA1UEAxMgQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdCAtIDIwMDgwggIiMA0G\nCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCvAMtwNyuAWko6bHiUfaN/Gh/2NdW9\n28sNRHI+JrKQUrpjOyhYb6WzbZSm891kDFX29ufyIiKAXuFixrYp4YFs8r/lfTJq\nVKAyGVn+H4vXPWCGhSRv4xGzdz4gljUha7MI2XAuZPeEklPWDrCQiorjh40G072Q\nDuKZoRuGDtqaCrsLYVAGUvGef3bsyw/QHg3PmTA9HMRFEFis1tPo1+XqxQEHd9ZR\n5gN/ikilTWh1uem8nk4ZcfUyS5xtYBkL+8ydddy/Js2Pk3g5eXNeJQ7KXOt3EgfL\nZEFHcpOrUMPrCXZkNNI5t3YRCQ12RcSprj1qr7V9ZS+UWBDsXHyvfuK2GNnQm05a\nSd+pZgvMPMZ4fKecHePOjlO+Bd5gD2vlGts/4+EhySnB8esHnFIbAURRPHsl18Tl\nUlRdJQfKFiC4reRB7noI/plvg6aRArBsNlVq5331lubKgdaX8ZSD6e2wsWsSaR6s\n+12pxZjptFtYer49okQ6Y1nUCyXeG0+95QGezdIp1Z8XGQpvvwyQ0wlf2eOKNcx5\nWk0ZN5K3xMGtr/R5JJqyAQuxr1yW84Ay+1w9mPGgP0revq+ULtlVmhduYJ1jbLhj\nya6BXBg14JC7vjxPNyK5fuvPnnchpj04gftI2jE9K+OJ9dC1vX7gUMQSibMjmhAx\nhduub+84Mxh2EQIDAQABo4IBbDCCAWgwEgYDVR0TAQH/BAgwBgEB/wIBDDAdBgNV\nHQ4EFgQU+SSsD7K1+HnA+mCIG8TZTQKeFxkwgeMGA1UdIwSB2zCB2IAU+SSsD7K1\n+HnA+mCIG8TZTQKeFxmhgbSkgbEwga4xCzAJBgNVBAYTAkVVMUMwQQYDVQQHEzpN\nYWRyaWQgKHNlZSBjdXJyZW50IGFkZHJlc3MgYXQgd3d3LmNhbWVyZmlybWEuY29t\nL2FkZHJlc3MpMRIwEAYDVQQFEwlBODI3NDMyODcxGzAZBgNVBAoTEkFDIENhbWVy\nZmlybWEgUy5BLjEpMCcGA1UEAxMgQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdCAt\nIDIwMDiCCQCj2kJ+pLGu2jAOBgNVHQ8BAf8EBAMCAQYwPQYDVR0gBDYwNDAyBgRV\nHSAAMCowKAYIKwYBBQUHAgEWHGh0dHA6Ly9wb2xpY3kuY2FtZXJmaXJtYS5jb20w\nDQYJKoZIhvcNAQEFBQADggIBAJASryI1wqM58C7e6bXpeHxIvj99RZJe6dqxGfwW\nPJ+0W2aeaufDuV2I6A+tzyMP3iU6XsxPpcG1Lawk0lgH3qLPaYRgM+gQDROpI9CF\n5Y57pp49chNyM/WqfcZjHwj0/gF/JM8rLFQJ3uIrbZLGOU8W6jx+ekbURWpGqOt1\nglanq6B8aBMz9p0w8G8nOSQjKpD9kCk18pPfNKXG9/jvjA9iSnyu0/VU+I22mlaH\nFoI6M6taIgj3grrqLuBHmrS1RaMFO9ncLkVAO+rcf+g769HsJtg1pDDFOqxXnrN2\npSB7+R5KBWIBpih1YJeSDW4+TTdDDZIVnBgizVGZoCkaPF+KMjNbMMeJL0eYD6MD\nxvbxrN8y8NmBGuScvfaAFPDRLLmF9dijscilIeUcE5fuDr3fKanvNFNb0+RqE4QG\ntjICxFKuItLcsiFCGtpA8CnJ7AoMXOLQusxI0zcKzBIKinmwPQN/aUv0NCB9szTq\njktk9T79syNnFQ0EuPAtwQlRPLJsFfClI9eDdOTlLsn+mCdCxqvGnrDQWzilm1De\nfhiYtUU79nm06PcaewaD+9CL2rvHvRirCG88gGtAPxkZumWK5r7VXNM21+9AUiRg\nOGcEMeyP84LG3rlV8zsxkVrctQgVrXYlCg17LofiDKYGvCYQbTed7N14jHyAxfDZ\nd0jQ\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFwDCCA6igAwIBAgIQHr9ZULjJgDdMBvfrVU+17TANBgkqhkiG9w0BAQ0FADB6\nMQswCQYDVQQGEwJQTDEhMB8GA1UEChMYQXNzZWNvIERhdGEgU3lzdGVtcyBTLkEu\nMScwJQYDVQQLEx5DZXJ0dW0gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHzAdBgNV\nBAMTFkNlcnR1bSBUcnVzdGVkIFJvb3QgQ0EwHhcNMTgwMzE2MTIxMDEzWhcNNDMw\nMzE2MTIxMDEzWjB6MQswCQYDVQQGEwJQTDEhMB8GA1UEChMYQXNzZWNvIERhdGEg\nU3lzdGVtcyBTLkEuMScwJQYDVQQLEx5DZXJ0dW0gQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkxHzAdBgNVBAMTFkNlcnR1bSBUcnVzdGVkIFJvb3QgQ0EwggIiMA0GCSqG\nSIb3DQEBAQUAA4ICDwAwggIKAoICAQDRLY67tzbqbTeRn06TpwXkKQMlzhyC93yZ\nn0EGze2jusDbCSzBfN8pfktlL5On1AFrAygYo9idBcEq2EXxkd7fO9CAAozPOA/q\np1x4EaTByIVcJdPTsuclzxFUl6s1wB52HO8AU5853BSlLCIls3Jy/I2z5T4IHhQq\nNwuIPMqw9MjCoa68wb4pZ1Xi/K1ZXP69VyywkI3C7Te2fJmItdUDmj0VDT06qKhF\n8JVOJVkdzZhpu9PMMsmN74H+rX2Ju7pgE8pllWeg8xn2A1bUatMn4qGtg/BKEiJ3\nHAVz4hlxQsDsdUaakFjgao4rpUYwBI4Zshfjvqm6f1bxJAPXsiEodg42MEx51UGa\nmqi4NboMOvJEGyCI98Ul1z3G4z5D3Yf+xOr1Uz5MZf87Sst4WmsXXw3Hw09Omiqi\n7VdNIuJGmj8PkTQkfVXjjJU30xrwCSss0smNtA0Aq2cpKNgB9RkEth2+dv5yXMSF\nytKAQd8FqKPVhJBPC/PgP5sZ0jeJP/J7UhyM9uH3PAeXjA6iWYEMspA90+NZRu0P\nqafegGtaqge2Gcu8V/OXIXoMsSt0Puvap2ctTMSYnjYJdmZm/Bo/6khUHL4wvYBQ\nv3y1zgD2DGHZ5yQD4OMBgQ692IU0iL2yNqh7XAjlRICMb/gv1SHKHRzQ+8S1h9E6\nTsd2tTVItQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSM+xx1\nvALTn04uSNn5YFSqxLNP+jAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQENBQAD\nggIBAEii1QALLtA/vBzVtVRJHlpr9OTy4EA34MwUe7nJ+jW1dReTagVphZzNTxl4\nWxmB82M+w85bj/UvXgF2Ez8sALnNllI5SW0ETsXpD4YN4fqzX4IS8TrOZgYkNCvo\nzMrnadyHncI013nR03e4qllY/p0m+jiGPp2Kh2RX5Rc64vmNueMzeMGQ2Ljdt4NR\n5MTMI9UGfOZR0800McD2RrsLrfw9EAUqO0qRJe6M1ISHgCq8CYyqOhNf6DR5UMEQ\nGfnTKB7U0VEwKbOukGfWHwpjscWpxkIxYxeU72nLL/qMFH3EQxiJ2fAyQOaA4kZf\n5ePBAFmo+eggvIksDkc0C+pXwlM2/KfUrzHN/gLldfq5Jwn58/U7yn2fqSLLiMmq\n0Uc9NneoWWRrJ8/vJ8HjJLWG965+Mk2weWjROeiQWMODvA8s1pfrzgzhIMfatz7D\nP78v3DSk+yshzWePS/Tj6tQ/50+6uaWTRRxmHyH6ZF5v4HaUMst19W7l9o/HuKTM\nqJZ9ZPskWkoDbGs4xugDQ5r3V7mzKWmTOPQD8rv7gmsHINFSH5pkAnuYZttcTVoP\n0ISVoDwUQwbKytu4QTbaakRnh6+v40URFWkIsr4WOZckbxJF0WddCajJFdr60qZf\nE2Efv4WstK2tBZQIgx51F9NxO5NQI1mg7TyRVJ12AMXDuDjb\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICiTCCAg+gAwIBAgIQH0evqmIAcFBUTAGem2OZKjAKBggqhkjOPQQDAzCBhTEL\nMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE\nBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMT\nIkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDgwMzA2MDAw\nMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdy\nZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09N\nT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlv\nbiBBdXRob3JpdHkwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQDR3svdcmCFYX7deSR\nFtSrYpn1PlILBs5BAH+X4QokPB0BBO490o0JlwzgdeT6+3eKKvUDYEs2ixYjFq0J\ncfRK9ChQtP6IHG4/bC8vCVlbpVsLM5niwz2J+Wos77LTBumjQjBAMB0GA1UdDgQW\nBBR1cacZSBm8nZ3qQUfflMRId5nTeTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAKBggqhkjOPQQDAwNoADBlAjEA7wNbeqy3eApyt4jf/7VGFAkK+qDm\nfQjGGoe9GKhzvSbKYAydzpmfz1wPMOG+FDHqAjAU9JM8SaczepBGR7NjfRObTrdv\nGDeAU/7dIOA1mjbRxwG55tzd8/8dLDoWV9mSOdY=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFcDCCA1igAwIBAgIQdlP+qExQq5+NMrUdA49X3DANBgkqhkiG9w0BAQwFADBS\nMQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEoMCYGA1UE\nAxMfR2xvYmFsU2lnbiBTZWN1cmUgTWFpbCBSb290IFI0NTAeFw0yMDAzMTgwMDAw\nMDBaFw00NTAzMTgwMDAwMDBaMFIxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i\nYWxTaWduIG52LXNhMSgwJgYDVQQDEx9HbG9iYWxTaWduIFNlY3VyZSBNYWlsIFJv\nb3QgUjQ1MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3HnMbQb5bbvg\nVgRsf+B1zC0FSehL3FTsW3eVcr9/Yp2FqYokUF9T5dt0b6QpWxMqCa2axS/C93Y7\noUVGqkPmJP4rsG8ycBlGWnkmL/w9fV9ky1fMYWGo2ZVu45Wgbn9HEhjW7wPJ+4r6\nmr2CFalVd0sRT1nga8Nx8wzYVNWBaD4TuRUuh4o8RCc2YiRu+CwFcjBhvUKRI8Sd\nJafZVJoUozGtgHkMp2NsmKOsV0czH2WW4dDSNdr5cfehpiW1QV3fPmDY0fafpfK4\nzBOqj/mybuGDLZPdPoUa3eixXCYBy0mF/PzS1H+FYoZ0+cvsNSKiDDCPO6t561by\n+kLz7fkfRYlAKa3qknTqUv1WtCvaou11wm6rzlKQS/be8EmPmkjUiBltRebMjLnd\nZGBgAkD4uc+8WOs9hbnGCtOcB2aPxxg5I0bhPB6jL1Bhkgs9K2zxo0c4V5GrDY/G\nnU0E0iZSXOWl/SotFioBaeepfeE2t7Eqxdmxjb25i87Mi6E+C0jNUJU0xNgIWdhr\nJvS+9dQiFwBXya6bBDAznwv731aiyW5Udtqxl2InWQ8RiiIbZJY/qPG3JEqNPFN8\nbYN2PbImSHP1RBYBLQkqjhaWUNBzBl27IkiCTApGWj+A/1zy8pqsLAjg1urwEjiB\nT6YQ7UarzBacC89kppkChURnRq39TecCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgGG\nMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFKCTFShu7o8IsjXGnmJ5dKexDit7\nMA0GCSqGSIb3DQEBDAUAA4ICAQBFCvjRXKxigdAE17b/V1GJCwzL3iRlN/urnu1m\n9OoMGWmJuBmxMFa02fb3vsaul8tF9hGMOjBkTMGfWcBGQggGR2QXeOCVBwbWjKKs\nqdk/03tWT/zEhyjftisWI8CfH1vj1kReIk8jBIw1FrV5B4ZcL5fi9ghkptzbqIrj\npHt3DdEpkyggtFOjS05f3sH2dSP8Hzx4T3AxeC+iNVRxBKzIxG3D9pGx/s3uRG6B\n9kDFPioBv6tMsQM/DRHkD9Ik4yKIm59fRz1RSeAJN34XITF2t2dxSChLJdcQ6J9h\nWRbFPjJOHwzOo8wP5McRByIvOAjdW5frQmxZmpruetCd38XbCUMuCqoZPWvoajB6\nV+a/s2o5qY/j8U9laLa9nyiPoRZaCVA6Mi4dL0QRQqYA5jGY/y2hD+akYFbPedey\nTtew+m4MVyPHzh+lsUxtGUmeDn9wj3E/WCifdd1h4Dq3Obbul9Q1UfuLSWDIPGau\nl+6NJllXu3jwelAwCbBgqp9O3Mk+HjrcYpMzsDpUdG8sMUXRaxEyamh29j32ahNe\nJJjn6h2az3iCB2D3TRDTgZpFjZ6vm9yAx0OylWikww7oCkcVv1Qz3AHn1aYec9h6\nsr8vreNVMJ7fDkG84BH1oQyoIuHjAKNOcHyS4wTRekKKdZBZ45vRTKJkvXN5m2/y\ns8H2PA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEYzCCA0ugAwIBAgIBATANBgkqhkiG9w0BAQsFADCB0jELMAkGA1UEBhMCVFIx\nGDAWBgNVBAcTD0dlYnplIC0gS29jYWVsaTFCMEAGA1UEChM5VHVya2l5ZSBCaWxp\nbXNlbCB2ZSBUZWtub2xvamlrIEFyYXN0aXJtYSBLdXJ1bXUgLSBUVUJJVEFLMS0w\nKwYDVQQLEyRLYW11IFNlcnRpZmlrYXN5b24gTWVya2V6aSAtIEthbXUgU00xNjA0\nBgNVBAMTLVRVQklUQUsgS2FtdSBTTSBTU0wgS29rIFNlcnRpZmlrYXNpIC0gU3Vy\ndW0gMTAeFw0xMzExMjUwODI1NTVaFw00MzEwMjUwODI1NTVaMIHSMQswCQYDVQQG\nEwJUUjEYMBYGA1UEBxMPR2ViemUgLSBLb2NhZWxpMUIwQAYDVQQKEzlUdXJraXll\nIEJpbGltc2VsIHZlIFRla25vbG9qaWsgQXJhc3Rpcm1hIEt1cnVtdSAtIFRVQklU\nQUsxLTArBgNVBAsTJEthbXUgU2VydGlmaWthc3lvbiBNZXJrZXppIC0gS2FtdSBT\nTTE2MDQGA1UEAxMtVFVCSVRBSyBLYW11IFNNIFNTTCBLb2sgU2VydGlmaWthc2kg\nLSBTdXJ1bSAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr3UwM6q7\na9OZLBI3hNmNe5eA027n/5tQlT6QlVZC1xl8JoSNkvoBHToP4mQ4t4y86Ij5iySr\nLqP1N+RAjhgleYN1Hzv/bKjFxlb4tO2KRKOrbEz8HdDc72i9z+SqzvBV96I01INr\nN3wcwv61A+xXzry0tcXtAA9TNypN9E8Mg/uGz8v+jE69h/mniyFXnHrfA2eJLJ2X\nYacQuFWQfw4tJzh03+f92k4S400VIgLI4OD8D62K18lUUMw7D8oWgITQUVbDjlZ/\niSIzL+aFCr2lqBs23tPcLG07xxO9WSMs5uWk99gL7eqQQESolbuT1dCANLZGeA4f\nAJNG4e7p+exPFwIDAQABo0IwQDAdBgNVHQ4EFgQUZT/HiobGPN08VFw1+DrtUgxH\nV8gwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEL\nBQADggEBACo/4fEyjq7hmFxLXs9rHmoJ0iKpEsdeV31zVmSAhHqT5Am5EM2fKifh\nAHe+SMg1qIGf5LgsyX8OsNJLN13qudULXjS99HMpw+0mFZx+CFOKWI3QSyjfwbPf\nIPP54+M638yclNhOT8NrF7f3cuitZjO1JVOr4PhMqZ398g26rrnZqsZr+ZO7rqu4\nlzwDGrpDxpa5RXI4s6ehlj2Re37AIVNMh+3yC1SVUZPVIqUNivGTDj5UDrDYyU7c\n8jEyVupk+eq1nRZmQnLzf9OxMUP8pI4X8W0jq5Rm+K37DwhuJi1/FwcJsoz7UMCf\nlo3Ptv0AnVoUmr8CRPXBwp8iXqIPoeM=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICYDCCAgegAwIBAgIMDWpfCD8oXD5Rld9dMAoGCCqGSM49BAMCMIGRMQswCQYD\nVQQGEwJVUzERMA8GA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAf\nBgNVBAoTGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3\nYXZlIEdsb2JhbCBFQ0MgUDI1NiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0x\nNzA4MjMxOTM1MTBaFw00MjA4MjMxOTM1MTBaMIGRMQswCQYDVQQGEwJVUzERMA8G\nA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAfBgNVBAoTGFRydXN0\nd2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3YXZlIEdsb2JhbCBF\nQ0MgUDI1NiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTBZMBMGByqGSM49AgEGCCqG\nSM49AwEHA0IABH77bOYj43MyCMpg5lOcunSNGLB4kFKA3TjASh3RqMyTpJcGOMoN\nFWLGjgEqZZ2q3zSRLoHB5DOSMcT9CTqmP62jQzBBMA8GA1UdEwEB/wQFMAMBAf8w\nDwYDVR0PAQH/BAUDAwcGADAdBgNVHQ4EFgQUo0EGrJBt0UrrdaVKEJmzsaGLSvcw\nCgYIKoZIzj0EAwIDRwAwRAIgB+ZU2g6gWrKuEZ+Hxbb/ad4lvvigtwjzRM4q3wgh\nDDcCIC0mA6AFvWvR9lz4ZcyGbbOcNEhjhAnFjXca4syc4XR7\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIC+TCCAoCgAwIBAgINAKaLeSkAAAAAUNCR+TAKBggqhkjOPQQDAzCBvzELMAkG\nA1UEBhMCVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3\nd3cuZW50cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDEyIEVu\ndHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEzMDEGA1UEAxMq\nRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRUMxMB4XDTEy\nMTIxODE1MjUzNloXDTM3MTIxODE1NTUzNlowgb8xCzAJBgNVBAYTAlVTMRYwFAYD\nVQQKEw1FbnRydXN0LCBJbmMuMSgwJgYDVQQLEx9TZWUgd3d3LmVudHJ1c3QubmV0\nL2xlZ2FsLXRlcm1zMTkwNwYDVQQLEzAoYykgMjAxMiBFbnRydXN0LCBJbmMuIC0g\nZm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxMzAxBgNVBAMTKkVudHJ1c3QgUm9vdCBD\nZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEVDMTB2MBAGByqGSM49AgEGBSuBBAAi\nA2IABIQTydC6bUF74mzQ61VfZgIaJPRbiWlH47jCffHyAsWfoPZb1YsGGYZPUxBt\nByQnoaD41UcZYUx9ypMn6nQM72+WCf5j7HBdNq1nd67JnXxVRDqiY1Ef9eNi1KlH\nBz7MIKNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0O\nBBYEFLdj5xrdjekIplWDpOBqUEFlEUJJMAoGCCqGSM49BAMDA2cAMGQCMGF52OVC\nR98crlOZF7ZvHH3hvxGU0QOIdeSNiaSKd0bebWHvAvX7td/M/k7//qnmpwIwW5nX\nhTcGtXsI/esni0qU+eH6p44mCOh8kmhtc9hvJqwhAriZtyZBWyVgrtBIGu4G\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEkTCCA3mgAwIBAgIERWtQVDANBgkqhkiG9w0BAQUFADCBsDELMAkGA1UEBhMC\nVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0\nLm5ldC9DUFMgaXMgaW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMW\nKGMpIDIwMDYgRW50cnVzdCwgSW5jLjEtMCsGA1UEAxMkRW50cnVzdCBSb290IENl\ncnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA2MTEyNzIwMjM0MloXDTI2MTEyNzIw\nNTM0MlowgbAxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMTkw\nNwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BTIGlzIGluY29ycG9yYXRlZCBieSBy\nZWZlcmVuY2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3QsIEluYy4xLTArBgNV\nBAMTJEVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJ\nKoZIhvcNAQEBBQADggEPADCCAQoCggEBALaVtkNC+sZtKm9I35RMOVcF7sN5EUFo\nNu3s/poBj6E4KPz3EEZmLk0eGrEaTsbRwJWIsMn/MYszA9u3g3s+IIRe7bJWKKf4\n4LlAcTfFy0cOlypowCKVYhXbR9n10Cv/gkvJrT7eTNuQgFA/CYqEAOwwCj0Yzfv9\nKlmaI5UXLEWeH25DeW0MXJj+SKfFI0dcXv1u5x609mhF0YaDW6KKjbHjKYD+JXGI\nrb68j6xSlkuqUY3kEzEZ6E5Nn9uss2rVvDlUccp6en+Q3X0dgNmBu1kmwhH+5pPi\n94DkZfs0Nw4pgHBNrziGLp5/V6+eF67rHMsoIV+2HNjnogQi+dPa2MsCAwEAAaOB\nsDCBrTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zArBgNVHRAEJDAi\ngA8yMDA2MTEyNzIwMjM0MlqBDzIwMjYxMTI3MjA1MzQyWjAfBgNVHSMEGDAWgBRo\nkORnpKZTgMeGZqTx90tD+4S9bTAdBgNVHQ4EFgQUaJDkZ6SmU4DHhmak8fdLQ/uE\nvW0wHQYJKoZIhvZ9B0EABBAwDhsIVjcuMTo0LjADAgSQMA0GCSqGSIb3DQEBBQUA\nA4IBAQCT1DCw1wMgKtD5Y+iRDAUgqV8ZyntyTtSx29CW+1RaGSwMCPeyvIWonX9t\nO1KzKtvn1ISMY/YPyyYBkVBs9F8U4pN0wBOeMDpQ47RgxRzwIkSNcUesyBrJ6Zua\nAGAT/3B+XxFNSRuzFVJ7yVTav52Vr2ua2J7p8eRDjeIRRDq/r72DQnNSi6q7pynP\n9WQcCk3RvKqsnyrQ/39/2n3qse0wJcGE2jTSW3iDVuycNsMm4hH2Z0kdkquM++v/\neu6FSqdQgPCnXEqULl8FmTxSQeDNtGPPAUO6nIPcj2A781q0tHuu2guQOHXvgR1m\n0vdXcDazv/wor3ElhVsT/h5/WrQ8\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDdzCCAl+gAwIBAgIIXDPLYixfszIwDQYJKoZIhvcNAQELBQAwPDEeMBwGA1UE\nAwwVQXRvcyBUcnVzdGVkUm9vdCAyMDExMQ0wCwYDVQQKDARBdG9zMQswCQYDVQQG\nEwJERTAeFw0xMTA3MDcxNDU4MzBaFw0zMDEyMzEyMzU5NTlaMDwxHjAcBgNVBAMM\nFUF0b3MgVHJ1c3RlZFJvb3QgMjAxMTENMAsGA1UECgwEQXRvczELMAkGA1UEBhMC\nREUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCVhTuXbyo7LjvPpvMp\nNb7PGKw+qtn4TaA+Gke5vJrf8v7MPkfoepbCJI419KkM/IL9bcFyYie96mvr54rM\nVD6QUM+A1JX76LWC1BTFtqlVJVfbsVD2sGBkWXppzwO3bw2+yj5vdHLqqjAqc2K+\nSZFhyBH+DgMq92og3AIVDV4VavzjgsG1xZ1kCWyjWZgHJ8cblithdHFsQ/H3NYkQ\n4J7sVaE3IqKHBAUsR320HLliKWYoyrfhk/WklAOZuXCFteZI6o1Q/NnezG8HDt0L\ncp2AMBYHlT8oDv3FdU9T1nSatCQujgKRz3bFmx5VdJx4IbHwLfELn8LVlhgf8FQi\neowHAgMBAAGjfTB7MB0GA1UdDgQWBBSnpQaxLKYJYO7Rl+lwrrw7GWzbITAPBgNV\nHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFKelBrEspglg7tGX6XCuvDsZbNshMBgG\nA1UdIAQRMA8wDQYLKwYBBAGwLQMEAQEwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3\nDQEBCwUAA4IBAQAmdzTblEiGKkGdLD4GkGDEjKwLVLgfuXvTBznk+j57sj1O7Z8j\nvZfza1zv7v1Apt+hk6EKhqzvINB5Ab149xnYJDE0BAGmuhWawyfc2E8PzBhj/5kP\nDpFrdRbhIfzYJsdHt6bPWHJxfrrhTZVHO8mvbaG0weyJ9rQPOLXiZNwlz6bb65pc\nmaHFCN795trV1lpFDMS3wrUU77QR/w4VtfX128a961qn8FYiqTxlVMYVqL2Gns2D\nlmh6cYGJ4Qvh6hEbaAjMaZ7snkGeRDImeuKHCnE96+RapNLbxc3G3mB/ufNPRJLv\nKrcYPqcZ2Qt9sTdBQrC6YB3y/gkRsPCHe6ed\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEMzCCAxugAwIBAgIDCYPzMA0GCSqGSIb3DQEBCwUAME0xCzAJBgNVBAYTAkRF\nMRUwEwYDVQQKDAxELVRydXN0IEdtYkgxJzAlBgNVBAMMHkQtVFJVU1QgUm9vdCBD\nbGFzcyAzIENBIDIgMjAwOTAeFw0wOTExMDUwODM1NThaFw0yOTExMDUwODM1NTha\nME0xCzAJBgNVBAYTAkRFMRUwEwYDVQQKDAxELVRydXN0IEdtYkgxJzAlBgNVBAMM\nHkQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgMjAwOTCCASIwDQYJKoZIhvcNAQEB\nBQADggEPADCCAQoCggEBANOySs96R+91myP6Oi/WUEWJNTrGa9v+2wBoqOADER03\nUAifTUpolDWzU9GUY6cgVq/eUXjsKj3zSEhQPgrfRlWLJ23DEE0NkVJD2IfgXU42\ntSHKXzlABF9bfsyjxiupQB7ZNoTWSPOSHjRGICTBpFGOShrvUD9pXRl/RcPHAY9R\nySPocq60vFYJfxLLHLGvKZAKyVXMD9O0Gu1HNVpK7ZxzBCHQqr0ME7UAyiZsxGsM\nlFqVlNpQmvH/pStmMaTJOKDfHR+4CS7zp+hnUquVH+BGPtikw8paxTGA6Eian5Rp\n/hnd2HN8gcqW3o7tszIFZYQ05ub9VxC1X3a/L7AQDcUCAwEAAaOCARowggEWMA8G\nA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFP3aFMSfMN4hvR5COfyrYyNJ4PGEMA4G\nA1UdDwEB/wQEAwIBBjCB0wYDVR0fBIHLMIHIMIGAoH6gfIZ6bGRhcDovL2RpcmVj\ndG9yeS5kLXRydXN0Lm5ldC9DTj1ELVRSVVNUJTIwUm9vdCUyMENsYXNzJTIwMyUy\nMENBJTIwMiUyMDIwMDksTz1ELVRydXN0JTIwR21iSCxDPURFP2NlcnRpZmljYXRl\ncmV2b2NhdGlvbmxpc3QwQ6BBoD+GPWh0dHA6Ly93d3cuZC10cnVzdC5uZXQvY3Js\nL2QtdHJ1c3Rfcm9vdF9jbGFzc18zX2NhXzJfMjAwOS5jcmwwDQYJKoZIhvcNAQEL\nBQADggEBAH+X2zDI36ScfSF6gHDOFBJpiBSVYEQBrLLpME+bUMJm2H6NMLVwMeni\nacfzcNsgFYbQDfC+rAF1hM5+n02/t2A7nPPKHeJeaNijnZflQGDSNiH+0LS4F9p0\no3/U37CYAqxva2ssJSRyoWXuJVrl5jLn8t+rSfrzkGkj2wTZ51xY/GXUl77M/C4K\nzCUqNQT4YJEVdT1B/yMfGchs64JTBKbkTCJNjYy6zltz7GRUUG3RnFX7acM2w4y8\nPIWmawomDeCTmGCufsYkl4phX5GOZpIJhzbNi5stPvZR1FDUWSi9g/LMKHtThm3Y\nJohw1+qRzT65ysCQblrGXnRl11z+o+I=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBs\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5j\nZSBFViBSb290IENBMB4XDTA2MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowbDEL\nMAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3\nLmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNlcnQgSGlnaCBBc3N1cmFuY2Ug\nRVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMbM5XPm\n+9S75S0tMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlBWTrT3JTW\nPNt0OKRKzE0lgvdKpVMSOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEM\nxChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFB\nIk5lYYeBQVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQNAQTXKFx01p8VdteZOE3\nhzBWBOURtCmAEvF5OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUeh10aUAsg\nEsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaA\nFLE+w2kD+L9HAdSYJhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3Nec\nnzyIZgYIVyHbIUf4KmeqvxgydkAQV8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6z\neM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFpmyPInngiK3BD41VHMWEZ71jF\nhS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkKmNEVX58Svnw2\nYzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCe\nvEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep\n+OkuE6N36B9K\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDuzCCAqOgAwIBAgIDBETAMA0GCSqGSIb3DQEBBQUAMH4xCzAJBgNVBAYTAlBM\nMSIwIAYDVQQKExlVbml6ZXRvIFRlY2hub2xvZ2llcyBTLkEuMScwJQYDVQQLEx5D\nZXJ0dW0gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxIjAgBgNVBAMTGUNlcnR1bSBU\ncnVzdGVkIE5ldHdvcmsgQ0EwHhcNMDgxMDIyMTIwNzM3WhcNMjkxMjMxMTIwNzM3\nWjB+MQswCQYDVQQGEwJQTDEiMCAGA1UEChMZVW5pemV0byBUZWNobm9sb2dpZXMg\nUy5BLjEnMCUGA1UECxMeQ2VydHVtIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSIw\nIAYDVQQDExlDZXJ0dW0gVHJ1c3RlZCBOZXR3b3JrIENBMIIBIjANBgkqhkiG9w0B\nAQEFAAOCAQ8AMIIBCgKCAQEA4/t9o3K6wvDJFIf1awFO4W5AB7ptJ11/91sts1rH\nUV+rpDKmYYe2bg+G0jACl/jXaVehGDldamR5xgFZrDwxSjh80gTSSyjoIF87B6LM\nTXPb865Px1bVWqeWifrzq2jUI4ZZJ88JJ7ysbnKDHDBy3+Ci6dLhdHUZvSqeexVU\nBBvXQzmtVSjF4hq79MDkrjhJM8x2hZ85RdKknvISjFH4fOQtf/WsX+sWn7Et0brM\nkUJ3TCXJkDhv2/DM+44el1k+1WBO5gUo7Ul5E0u6SNsv+XLTOcr+H9g0cvW0QM8x\nAcPs3hEtF10fuFDRXhmnad4HMyjKUJX5p1TLVIZQRan5SQIDAQABo0IwQDAPBgNV\nHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQIds3LB/8k9sXN7buQvOKEN0Z19zAOBgNV\nHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEFBQADggEBAKaorSLOAT2mo/9i0Eidi15y\nsHhE49wcrwn9I0j6vSrEuVUEtRCjjSfeC4Jj0O7eDDd5QVsisrCaQVymcODU0HfL\nI9MA4GxWL+FpDQ3Zqr8hgVDZBqWo/5U30Kr+4rP1mS1FhIrlQgnXdAIv94nYmem8\nJ9RHjboNRhx3zxSkHLmkMcScKHQDNP8zGSal6Q10tz6XxnboJ5ajZt3hrvJBW8qY\nVoNzcOSGGtIxQbovvi0TWnZvTuhOgQ4/WwMioBK+ZlgRSssDxLQqKi2WF+A5VLxI\n03YnnZotBqbJ7DnSq9ufmgsnAjUpsUCV5/nonFWIGUbWtzT1fs45mtk48VH3Tyw=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEGjCCAwKgAwIBAgIDAYagMA0GCSqGSIb3DQEBBQUAMIGjMQswCQYDVQQGEwJG\nSTEQMA4GA1UECBMHRmlubGFuZDEhMB8GA1UEChMYVmFlc3RvcmVraXN0ZXJpa2Vz\na3VzIENBMSkwJwYDVQQLEyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBTZXJ2aWNl\nczEZMBcGA1UECxMQVmFybWVubmVwYWx2ZWx1dDEZMBcGA1UEAxMQVlJLIEdvdi4g\nUm9vdCBDQTAeFw0wMjEyMTgxMzUzMDBaFw0yMzEyMTgxMzUxMDhaMIGjMQswCQYD\nVQQGEwJGSTEQMA4GA1UECBMHRmlubGFuZDEhMB8GA1UEChMYVmFlc3RvcmVraXN0\nZXJpa2Vza3VzIENBMSkwJwYDVQQLEyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBT\nZXJ2aWNlczEZMBcGA1UECxMQVmFybWVubmVwYWx2ZWx1dDEZMBcGA1UEAxMQVlJL\nIEdvdi4gUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALCF\nFdrIAzfQo0Y3bBseljDCWoUSZyPyu5/nioFgJ/gTqTy894aqqvTzJSm0/nWuHoGG\nigWyHWWyOOi0zCia+xc28ZPVec7Bg4shT8MNrUHfeJ1I4x9CRPw8bSEga60ihCRC\njxdNwlAfZM0tOSJWiP2yY51U2kJpwMhP1xjiPshphJQ9LIDGfM6911Mf64i5psu7\nhVfvV3ZdDIvTXhJBnyHAOfQmbQj6OLOhd7HuFtjQaNq0mKWgZUZKa41+qk1guPjI\nDfxxPu45h4G02fhukO4/DmHXHSto5i7hQkQmeCxY8n0Wf2HASSQqiYe2XS8pGfim\n545SnkFLWg6quMJmQlMCAwEAAaNVMFMwDwYDVR0TAQH/BAUwAwEB/zARBglghkgB\nhvhCAQEEBAMCAAcwDgYDVR0PAQH/BAQDAgHGMB0GA1UdDgQWBBTb6eGb0tEkC/yr\n46Bn6q6cS3f0sDANBgkqhkiG9w0BAQUFAAOCAQEArX1ID1QRnljurw2bEi8hpM2b\nuoRH5sklVSPj3xhYKizbXvfNVPVRJHtiZ+GxH0mvNNDrsczZog1Sf0JLiGCXzyVy\nt08pLWKfT6HAVVdWDsRol5EfnGTCKTIB6dTI2riBmCguGMcs/OubUpbf9MiQGS0j\n8/G7cdqehSO9Gu8u5Hp5t8OdhkktY7ktdM9lDzJmid87Ie4pbzlj2RXBbvbfgD5Q\neBmK3QOjFKU3p7UsfLYRh+cF8ry23tT/l4EohP7+bEaFEEGfTXWMB9SZZ291im/k\nUJL2mdUQuMSpe/cXjUu/15WfCdxEDx4yw8DP03kN5Mc7h/CQNIghYkmSBAQfvA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICCjCCAZGgAwIBAgIQbkepyIuUtui7OyrYorLBmTAKBggqhkjOPQQDAzBHMQsw\nCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEU\nMBIGA1UEAxMLR1RTIFJvb3QgUjQwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAw\nMDAwWjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZp\nY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjQwdjAQBgcqhkjOPQIBBgUrgQQA\nIgNiAATzdHOnaItgrkO4NcWBMHtLSZ37wWHO5t5GvWvVYRg1rkDdc/eJkTBa6zzu\nhXyiQHY7qca4R9gq55KRanPpsXI5nymfopjTX15YhmUPoYRlBtHci8nHc8iMai/l\nxKvRHYqjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\nDgQWBBSATNbrdP9JNqPV2Py1PsVq8JQdjDAKBggqhkjOPQQDAwNnADBkAjBqUFJ0\nCMRw3J5QdCHojXohw0+WbhXRIjVhLfoIN+4Zba3bssx9BzT1YBkstTTZbyACMANx\nsbqjYAuG7ZoIapVon+Kz4ZNkfF6Tpt95LY2F45TPI11xzPKwTdb+mciUqXWi4w==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFWjCCA0KgAwIBAgISEdK7udcjGJ5AXwqdLdDfJWfRMA0GCSqGSIb3DQEBDAUA\nMEYxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMRwwGgYD\nVQQDExNHbG9iYWxTaWduIFJvb3QgUjQ2MB4XDTE5MDMyMDAwMDAwMFoXDTQ2MDMy\nMDAwMDAwMFowRjELMAkGA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYt\nc2ExHDAaBgNVBAMTE0dsb2JhbFNpZ24gUm9vdCBSNDYwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQCsrHQy6LNl5brtQyYdpokNRbopiLKkHWPd08EsCVeJ\nOaFV6Wc0dwxu5FUdUiXSE2te4R2pt32JMl8Nnp8semNgQB+msLZ4j5lUlghYruQG\nvGIFAha/r6gjA7aUD7xubMLL1aa7DOn2wQL7Id5m3RerdELv8HQvJfTqa1VbkNud\n316HCkD7rRlr+/fKYIje2sGP1q7Vf9Q8g+7XFkyDRTNrJ9CG0Bwta/OrffGFqfUo\n0q3v84RLHIf8E6M6cqJaESvWJ3En7YEtbWaBkoe0G1h6zD8K+kZPTXhc+CtI4wSE\ny132tGqzZfxCnlEmIyDLPRT5ge1lFgBPGmSXZgjPjHvjK8Cd+RTyG/FWaha/LIWF\nzXg4mutCagI0GIMXTpRW+LaCtfOW3T3zvn8gdz57GSNrLNRyc0NXfeD412lPFzYE\n+cCQYDdF3uYM2HSNrpyibXRdQr4G9dlkbgIQrImwTDsHTUB+JMWKmIJ5jqSngiCN\nI/onccnfxkF0oE32kRbcRoxfKWMxWXEM2G/CtjJ9++ZdU6Z+Ffy7dXxd7Pj2Fxzs\nx2sZy/N78CsHpdlseVR2bJ0cpm4O6XkMqCNqo98bMDGfsVR7/mrLZqrcZdCinkqa\nByFrgY/bxFn63iLABJzjqls2k+g9vXqhnQt2sQvHnf3PmKgGwvgqo6GDoLclcqUC\n4wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUA1yrc4GHqMywptWU4jaWSf8FmSwwDQYJKoZIhvcNAQEMBQADggIBAHx4\n7PYCLLtbfpIrXTncvtgdokIzTfnvpCo7RGkerNlFo048p9gkUbJUHJNOxO97k4Vg\nJuoJSOD1u8fpaNK7ajFxzHmuEajwmf3lH7wvqMxX63bEIaZHU1VNaL8FpO7XJqti\n2kM3S+LGteWygxk6x9PbTZ4IevPuzz5i+6zoYMzRx6Fcg0XERczzF2sUyQQCPtIk\npnnpHs6i58FZFZ8d4kuaPp92CC1r2LpXFNqD6v6MVenQTqnMdzGxRBF6XLE+0xRF\nFRhiJBPSy03OXIPBNvIQtQ6IbbjhVp+J3pZmOUdkLG5NrmJ7v2B0GbhWrJKsFjLt\nrWhV/pi60zTe9Mlhww6G9kuEYO4Ne7UyWHmRVSyBQ7N0H3qqJZ4d16GLuc1CLgSk\nZoNNiTW2bKg2SnkheCLQQrzRQDGQob4Ez8pn7fXwgNNgyYMqIgXQBztSvwyeqiv5\nu+YfjyW6hY0XHgL+XVAEV8/+LbzvXMAaq7afJMbfc2hIkCwU9D9SGuTSyxTDYWnP\n4vkYxboznxSjBF25cfe1lNj2M8FawTSLfJvdkzrnE6JwYZ+vj+vYxXX4M2bUdGc6\nN3ec592kD3ZDZopD8p/7DEJ4Y9HiD2971KE9dJeFt0g5QdYg/NA6s/rob8SKunE3\nvouXsXgxT7PntgMTzlSdriVZzH81Xwj3QEUxeCp6\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIHSTCCBTGgAwIBAgIJAMnN0+nVfSPOMA0GCSqGSIb3DQEBBQUAMIGsMQswCQYD\nVQQGEwJFVTFDMEEGA1UEBxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0\nIHd3dy5jYW1lcmZpcm1hLmNvbS9hZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3\nMRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMuQS4xJzAlBgNVBAMTHkdsb2JhbCBD\naGFtYmVyc2lnbiBSb290IC0gMjAwODAeFw0wODA4MDExMjMxNDBaFw0zODA3MzEx\nMjMxNDBaMIGsMQswCQYDVQQGEwJFVTFDMEEGA1UEBxM6TWFkcmlkIChzZWUgY3Vy\ncmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNvbS9hZGRyZXNzKTESMBAG\nA1UEBRMJQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMuQS4xJzAl\nBgNVBAMTHkdsb2JhbCBDaGFtYmVyc2lnbiBSb290IC0gMjAwODCCAiIwDQYJKoZI\nhvcNAQEBBQADggIPADCCAgoCggIBAMDfVtPkOpt2RbQT2//BthmLN0EYlVJH6xed\nKYiONWwGMi5HYvNJBL99RDaxccy9Wglz1dmFRP+RVyXfXjaOcNFccUMd2drvXNL7\nG706tcuto8xEpw2uIRU/uXpbknXYpBI4iRmKt4DS4jJvVpyR1ogQC7N0ZJJ0YPP2\nzxhPYLIj0Mc7zmFLmY/CDNBAspjcDahOo7kKrmCgrUVSY7pmvWjg+b4aqIG7HkF4\nddPB/gBVsIdU6CeQNR1MM62X/JcumIS/LMmjv9GYERTtY/jKmIhYF5ntRQOXfjyG\nHoiMvvKRhI9lNNgATH23MRdaKXoKGCQwoze1eqkBfSbW+Q6OWfH9GzO1KTsXO0G2\nId3UwD2ln58fQ1DJu7xsepeY7s2MH/ucUa6LcL0nn3HAa6x9kGbo1106DbDVwo3V\nyJ2dwW3Q0L9R5OP4wzg2rtandeavhENdk5IMagfeOx2YItaswTXbo6Al/3K1dh3e\nbeksZixShNBFks4c5eUzHdwHU1SjqoI7mjcv3N2gZOnm3b2u/GSFHTynyQbehP9r\n6GsaPMWis0L7iwk+XwhSx2LE1AVxv8Rk5Pihg+g+EpuoHtQ2TS9x9o0o9oOpE9Jh\nwZG7SMA0j0GMS0zbaRL/UJScIINZc+18ofLx/d33SdNDWKBWY8o9PeU1VlnpDsog\nzCtLkykPAgMBAAGjggFqMIIBZjASBgNVHRMBAf8ECDAGAQH/AgEMMB0GA1UdDgQW\nBBS5CcqcHtvTbDprru1U8VuTBjUuXjCB4QYDVR0jBIHZMIHWgBS5CcqcHtvTbDpr\nru1U8VuTBjUuXqGBsqSBrzCBrDELMAkGA1UEBhMCRVUxQzBBBgNVBAcTOk1hZHJp\nZCAoc2VlIGN1cnJlbnQgYWRkcmVzcyBhdCB3d3cuY2FtZXJmaXJtYS5jb20vYWRk\ncmVzcykxEjAQBgNVBAUTCUE4Mjc0MzI4NzEbMBkGA1UEChMSQUMgQ2FtZXJmaXJt\nYSBTLkEuMScwJQYDVQQDEx5HbG9iYWwgQ2hhbWJlcnNpZ24gUm9vdCAtIDIwMDiC\nCQDJzdPp1X0jzjAOBgNVHQ8BAf8EBAMCAQYwPQYDVR0gBDYwNDAyBgRVHSAAMCow\nKAYIKwYBBQUHAgEWHGh0dHA6Ly9wb2xpY3kuY2FtZXJmaXJtYS5jb20wDQYJKoZI\nhvcNAQEFBQADggIBAICIf3DekijZBZRG/5BXqfEv3xoNa/p8DhxJJHkn2EaqbylZ\nUohwEurdPfWbU1Rv4WCiqAm57OtZfMY18dwY6fFn5a+6ReAJ3spED8IXDneRRXoz\nX1+WLGiLwUePmJs9wOzL9dWCkoQ10b42OFZyMVtHLaoXpGNR6woBrX/sdZ7LoR/x\nfxKxueRkf2fWIyr0uDldmOghp+G9PUIadJpwr2hsUF1Jz//7Dl3mLEfXgTpZALVz\na2Mg9jFFCDkO9HB+QHBaP9BrQql0PSgvAm11cpUJjUhjxsYjV5KTXjXBjfkK9yyd\nYhz2rXzdpjEetrHHfoUm+qRqtdpjMNHvkzeyZi99Bffnt0uYlDXA2TopwZ2yUDMd\nSqlapskD7+3056huirRXhOukP9DuqqqHW2Pok+JrqNS4cnhrG+055F3Lm6qH1U9O\nAP7Zap88MQ8oAgF9mOinsKJknnn4SPIVqczmyETrP3iZ8ntxPjzxmKfFGBI/5rso\nM0LpRQp8bfKGeS/Fghl9CYl8slR2iK7ewfPM4W7bMdaTrpmg7yVqc5iJWzouE4ge\nv8CSlDQb4ye3ix5vQv/n6TebUB0tovkC7stYWDpxvGjjqsGvHCgfotwjZT+B6q6Z\n09gwzxMNTxXJhLynSC34MCN32EZLeW32jO06f2ARePTpm67VVMB0gNELQp/B\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFdDCCA1ygAwIBAgIPAWdfJ9b+euPkrL4JWwWeMA0GCSqGSIb3DQEBCwUAMEQx\nCzAJBgNVBAYTAkZJMRowGAYDVQQKDBFUZWxpYSBGaW5sYW5kIE95ajEZMBcGA1UE\nAwwQVGVsaWEgUm9vdCBDQSB2MjAeFw0xODExMjkxMTU1NTRaFw00MzExMjkxMTU1\nNTRaMEQxCzAJBgNVBAYTAkZJMRowGAYDVQQKDBFUZWxpYSBGaW5sYW5kIE95ajEZ\nMBcGA1UEAwwQVGVsaWEgUm9vdCBDQSB2MjCCAiIwDQYJKoZIhvcNAQEBBQADggIP\nADCCAgoCggIBALLQPwe84nvQa5n44ndp586dpAO8gm2h/oFlH0wnrI4AuhZ76zBq\nAMCzdGh+sq/H1WKzej9Qyow2RCRj0jbpDIX2Q3bVTKFgcmfiKDOlyzG4OiIjNLh9\nvVYiQJ3q9HsDrWj8soFPmNB06o3lfc1jw6P23pLCWBnglrvFxKk9pXSW/q/5iaq9\nlRdU2HhE8Qx3FZLgmEKnpNaqIJLNwaCzlrI6hEKNfdWV5Nbb6WLEWLN5xYzTNTOD\nn3WhUidhOPFZPY5Q4L15POdslv5e2QJltI5c0BE0312/UqeBAMN/mUWZFdUXyApT\n7GPzmX3MaRKGwhfwAZ6/hLzRUssbkmbOpFPlob/E2wnW5olWK8jjfN7j/4nlNW4o\n6GwLI1GpJQXrSPjdscr6bAhR77cYbETKJuFzxokGgeWKrLDiKca5JLNrRBH0pUPC\nTEPlcDaMtjNXepUugqD0XBCzYYP2AgWGLnwtbNwDRm41k9V6lS/eINhbfpSQBGq6\nWT0EBXWdN6IOLj3rwaRSg/7Qa9RmjtzG6RJOHSpXqhC8fF6CfaamyfItufUXJ63R\nDolUK5X6wK0dmBR4M0KGCqlztft0DbcbMBnEWg4cJ7faGND/isgFuvGqHKI3t+ZI\npEYslOqodmJHixBTB0hXbOKSTbauBcvcwUpej6w9GU7C7WB1K9vBykLVAgMBAAGj\nYzBhMB8GA1UdIwQYMBaAFHKs5DN5qkWH9v2sHZ7Wxy+G2CQ5MB0GA1UdDgQWBBRy\nrOQzeapFh/b9rB2e1scvhtgkOTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUw\nAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAoDtZpwmUPjaE0n4vOaWWl/oRrfxn83EJ\n8rKJhGdEr7nv7ZbsnGTbMjBvZ5qsfl+yqwE2foH65IRe0qw24GtixX1LDoJt0nZi\n0f6X+J8wfBj5tFJ3gh1229MdqfDBmgC9bXXYfef6xzijnHDoRnkDry5023X4blMM\nA8iZGok1GTzTyVR8qPAs5m4HeW9q4ebqkYJpCh3DflminmtGFZhb069GHWLIzoBS\nSRE/yQQSwxN8PzuKlts8oB4KtItUsiRnDe+Cy748fdHif64W1lZYudogsYMVoe+K\nTTJvQS8TUoKU1xrBeKJR3Stwbbca+few4GeXVtt8YVMJAygCQMez2P2ccGrGKMOF\n6eLtGpOg3kuYooQ+BXcBlj37tCAPnHICehIv1aO6UXivKitEZU61/Qrowc15h2Er\n3oBXRb9n8ZuRXqWk7FlIEA04x7D6w0RtBPV4UBySllva9bguulvP5fBqnUsvWHMt\nTy3EHD70sz+rFQ47GUGKpMFXEmZxTPpT41frYpUJnlTd0cI8Vzy9OK2YZLe4A5pT\nVmBds9hCG1xLEooc6+t9xnppxyd/pPiL8uSUZodL6ZQHCRJ5irLrdATczvREWeAW\nysUsWNc8e89ihmpQfTU2Zqf7N+cox9jQraVplI/owd8k+BsHMYeB2F326CjYSlKA\nrBPuUBQemMc=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIQCgFCgAAAAUUjyES1AAAAAjANBgkqhkiG9w0BAQsFADBK\nMQswCQYDVQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVu\nVHJ1c3QgQ29tbWVyY2lhbCBSb290IENBIDEwHhcNMTQwMTE2MTgxMjIzWhcNMzQw\nMTE2MTgxMjIzWjBKMQswCQYDVQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0MScw\nJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVyY2lhbCBSb290IENBIDEwggIiMA0GCSqG\nSIb3DQEBAQUAA4ICDwAwggIKAoICAQCnUBneP5k91DNG8W9RYYKyqU+PZ4ldhNlT\n3Qwo2dfw/66VQ3KZ+bVdfIrBQuExUHTRgQ18zZshq0PirK1ehm7zCYofWjK9ouuU\n+ehcCuz/mNKvcbO0U59Oh++SvL3sTzIwiEsXXlfEU8L2ApeN2WIrvyQfYo3fw7gp\nS0l4PJNgiCL8mdo2yMKi1CxUAGc1bnO/AljwpN3lsKImesrgNqUZFvX9t++uP0D1\nbVoE/c40yiTcdCMbXTMTEl3EASX2MN0CXZ/g1Ue9tOsbobtJSdifWwLziuQkkORi\nT0/Br4sOdBeo0XKIanoBScy0RnnGF7HamB4HWfp1IYVl3ZBWzvurpWCdxJ35UrCL\nvYf5jysjCiN2O/cz4ckA82n5S6LgTrx+kzmEB/dEcH7+B1rlsazRGMzyNeVJSQjK\nVsk9+w8YfYs7wRPCTY/JTw436R+hDmrfYi7LNQZReSzIJTj0+kuniVyc0uMNOYZK\ndHzVWYfCP04MXFL0PfdSgvHqo6z9STQaKPNBiDoT7uje/5kdX7rL6B7yuVBgwDHT\nc+XvvqDtMwt0viAgxGds8AgDelWAf0ZOlqf0Hj7h9tgJ4TNkK2PXMl6f+cB7D3hv\nl7yTmvmcEpB4eoCHFddydJxVdHixuuFucAS6T6C6aMN7/zHwcz09lCqxC0EOoP5N\niGVreTO01wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB\n/zAdBgNVHQ4EFgQU7UQZwNPwBovupHu+QucmVMiONnYwDQYJKoZIhvcNAQELBQAD\nggIBAA2ukDL2pkt8RHYZYR4nKM1eVO8lvOMIkPkp165oCOGUAFjvLi5+U1KMtlwH\n6oi6mYtQlNeCgN9hCQCTrQ0U5s7B8jeUeLBfnLOic7iPBZM4zY0+sLj7wM+x8uwt\nLRvM7Kqas6pgghstO8OEPVeKlh6cdbjTMM1gCIOQ045U8U1mwF10A0Cj7oV+wh93\nnAbowacYXVKV7cndJZ5t+qntozo00Fl72u1Q8zW/7esUTTHHYPTa8Yec4kjixsU3\n+wYQ+nVZZjFHKdp2mhzpgq7vmrlR94gjmmmVYjzlVYA211QC//G5Xc7UI2/YRYRK\nW2XviQzdFKcgyxilJbQN+QHwotL0AMh0jqEqSI5l2xPE4iUXfeu+h1sXIFRRk0pT\nAwvsXcoz7WL9RccvW9xYoIA55vrX/hMUpu09lEpCdNTDd1lzzY9GvlU47/rokTLq\nl1gEIt44w8y8bckzOmoKaT+gyOpyj4xjhiO9bTyWnpXgSUyqorkqG5w2gXjtw+hG\n4iZZRHUe2XWJUc0QhJ1hYMtd+ZciTY6Y5uN/9lu7rs3KSoFrXgvzUeF0K+l+J6fZ\nmUlO+KWA2yUPHGNiiskzZ2s8EIPGrd6ozRaOjfAHN3Gf8qv8QfXBi+wAN10J5U6A\n7/qxXDgGpRtK4dw4LTzcqx+QGtVKnO7RcGzM7vRX+Bi6hG6H\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEKjCCAxKgAwIBAgIQYAGXt0an6rS0mtZLL/eQ+zANBgkqhkiG9w0BAQsFADCB\nrjELMAkGA1UEBhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMf\nQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjE4MDYGA1UECxMvKGMpIDIw\nMDggdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxJDAiBgNV\nBAMTG3RoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EgLSBHMzAeFw0wODA0MDIwMDAwMDBa\nFw0zNzEyMDEyMzU5NTlaMIGuMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMdGhhd3Rl\nLCBJbmMuMSgwJgYDVQQLEx9DZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9u\nMTgwNgYDVQQLEy8oYykgMjAwOCB0aGF3dGUsIEluYy4gLSBGb3IgYXV0aG9yaXpl\nZCB1c2Ugb25seTEkMCIGA1UEAxMbdGhhd3RlIFByaW1hcnkgUm9vdCBDQSAtIEcz\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsr8nLPvb2FvdeHsbnndm\ngcs+vHyu86YnmjSjaDFxODNi5PNxZnmxqWWjpYvVj2AtP0LMqmsywCPLLEHd5N/8\nYZzic7IilRFDGF/Eth9XbAoFWCLINkw6fKXRz4aviKdEAhN0cXMKQlkC+BsUa0Lf\nb1+6a4KinVvnSr0eAXLbS3ToO39/fR8EtCab4LRarEc9VbjXsCZSKAExQGbY2SS9\n9irY7CFJXJv2eul/VTV+lmuNk5Mny5K76qxAwJ/C+IDPXfRa3M50hqY+bAtTyr2S\nzhkGcuYMXDhpxwTWvGzOW/b3aJzcJRVIiKHpqfiYnODz1TEoYRFsZ5aNOZnLwkUk\nOQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNV\nHQ4EFgQUrWyqlGCc7eT/+j4KdCtjA/e2Wb8wDQYJKoZIhvcNAQELBQADggEBABpA\n2JVlrAmSicY59BDlqQ5mU1143vokkbvnRFHfxhY0Cu9qRFHqKweKA3rD6z8KLFIW\noCtDuSWQP3CpMyVtRRooOyfPqsMpQhvfO0zAMzRbQYi/aytlryjvsvXDqmbOe1bu\nt8jLZ8HJnBoYuMTDSQPxYA5QzUbF83d597YV4Djbxy8ooAw/dyZ02SUS2jHaGh7c\nKUGRIjxpp7sC8rZcJwOJ9Abqm+RyguOhCcHpABnTPtRwa7pxpqpYrvS76Wy274fM\nm7v/OeZWYdMKp8RcTGB7BXcmer/YB1IsYvdwY9k5vG8cwnncdimvzsUsZAReiDZu\nMdRAGmI0Nj81Aa6sY6A=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G\nA1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp\nZ24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4\nMTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG\nA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8\nRgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT\ngHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm\nKPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd\nQQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ\nXriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw\nDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o\nLkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU\nRUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp\njjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK\n6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX\nmcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs\nMx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH\nWD9f\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIGSzCCBDOgAwIBAgIRANm1Q3+vqTkPAAAAAFVlrVgwDQYJKoZIhvcNAQELBQAw\ngb4xCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMSgwJgYDVQQL\nEx9TZWUgd3d3LmVudHJ1c3QubmV0L2xlZ2FsLXRlcm1zMTkwNwYDVQQLEzAoYykg\nMjAxNSBFbnRydXN0LCBJbmMuIC0gZm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxMjAw\nBgNVBAMTKUVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEc0\nMB4XDTE1MDUyNzExMTExNloXDTM3MTIyNzExNDExNlowgb4xCzAJBgNVBAYTAlVT\nMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMSgwJgYDVQQLEx9TZWUgd3d3LmVudHJ1\nc3QubmV0L2xlZ2FsLXRlcm1zMTkwNwYDVQQLEzAoYykgMjAxNSBFbnRydXN0LCBJ\nbmMuIC0gZm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxMjAwBgNVBAMTKUVudHJ1c3Qg\nUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEc0MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAsewsQu7i0TD/pZJH4i3DumSXbcr3DbVZwbPLqGgZ\n2K+EbTBwXX7zLtJTmeH+H17ZSK9dE43b/2MzTdMAArzE+NEGCJR5WIoV3imz/f3E\nT+iq4qA7ec2/a0My3dl0ELn39GjUu9CH1apLiipvKgS1sqbHoHrmSKvS0VnM1n4j\n5pds8ELl3FFLFUHtSUrJ3hCX1nbB76W1NhSXNdh4IjVS70O92yfbYVaCNNzLiGAM\nC1rlLAHGVK/XqsEQe9IFWrhAnoanw5CGAlZSCXqc0ieCU0plUmr1POeo8pyvi73T\nDtTUXm6Hnmo9RR3RXRv06QqsYJn7ibT/mCzPfB3pAqoEmh643IhuJbNsZvc8kPNX\nwbMv9W3y+8qh+CmdRouzavbmZwe+LGcKKh9asj5XxNMhIWNlUpEbsZmOeX7m640A\n2Vqq6nPopIICR5b+W45UYaPrL0swsIsjdXJ8ITzI9vF01Bx7owVV7rtNOzK+mndm\nnqxpkCIHH2E6lr7lmk/MBTwoWdPBDFSoWWG9yHJM6Nyfh3+9nEg2XpWjDrk4JFX8\ndWbrAuMINClKxuMrLzOg2qOGpRKX/YAr2hRC45K9PvJdXmd0LhyIRyk0X+IyqJwl\nN4y6mACXi0mWHv0liqzc2thddG5msP9E36EYxr5ILzeUePiVSj9/E15dWf10hkNj\nc0kCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYD\nVR0OBBYEFJ84xFYjwznooHFs6FRM5Og6sb9nMA0GCSqGSIb3DQEBCwUAA4ICAQAS\n5UKme4sPDORGpbZgQIeMJX6tuGguW8ZAdjwD+MlZ9POrYs4QjbRaZIxowLByQzTS\nGwv2LFPSypBLhmb8qoMi9IsabyZIrHZ3CL/FmFz0Jomee8O5ZDIBf9PD3Vht7LGr\nhFV0d4QEJ1JrhkzO3bll/9bGXp+aEJlLdWr+aumXIOTkdnrG0CSqkM0gkLpHZPt/\nB7NTeLUKYvJzQ85BK4FqLoUWlFPUa19yIqtRLULVAJyZv967lDtX/Zr1hstWO1uI\nAeV8KEsD+UmDfLJ/fOPtjqF/YFOOVZ1QNBIPt5d7bIdKROf1beyAN/BYGW5KaHbw\nH5Lk6rWS02FREAutp9lfx1/cH6NcjKF+m7ee01ZvZl4HliDtC3T7Zk6LERXpgUl+\nb7DUUH8i119lAg2m9IUe2K4GS0qn0jFmwvjO5QimpAKWRGhXxNUzzxkvFMSUHHuk\n2fCfDrGA4tGeEWSpiBE6doLlYsKA2KSD7ZPvfC+QsDJMlhVoSFLUmQjAJOgc47Ol\nIQ6SwJAfzyBfyjs4x7dtOvPmRLgOMWuIjnDrnBdSqEGULoe256YSxXXfW8AKbnuk\n5F6G+TaU33fD6Q3AOfF5u0aOq0NZJ7cguyPpVkAh7DE9ZapD8j3fcEThuk0mEDuY\nn/PIjhs4ViFqUZPTkcpG2om3PVODLAgfi49T3f+sHw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFgzCCA2ugAwIBAgIORea7A4Mzw4VlSOb/RVEwDQYJKoZIhvcNAQEMBQAwTDEg\nMB4GA1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjYxEzARBgNVBAoTCkdsb2Jh\nbFNpZ24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMTQxMjEwMDAwMDAwWhcNMzQx\nMjEwMDAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSNjET\nMBEGA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCAiIwDQYJ\nKoZIhvcNAQEBBQADggIPADCCAgoCggIBAJUH6HPKZvnsFMp7PPcNCPG0RQssgrRI\nxutbPK6DuEGSMxSkb3/pKszGsIhrxbaJ0cay/xTOURQh7ErdG1rG1ofuTToVBu1k\nZguSgMpE3nOUTvOniX9PeGMIyBJQbUJmL025eShNUhqKGoC3GYEOfsSKvGRMIRxD\naNc9PIrFsmbVkJq3MQbFvuJtMgamHvm566qjuL++gmNQ0PAYid/kD3n16qIfKtJw\nLnvnvJO7bVPiSHyMEAc4/2ayd2F+4OqMPKq0pPbzlUoSB239jLKJz9CgYXfIWHSw\n1CM69106yqLbnQneXUQtkPGBzVeS+n68UARjNN9rkxi+azayOeSsJDa38O+2HBNX\nk7besvjihbdzorg1qkXy4J02oW9UivFyVm4uiMVRQkQVlO6jxTiWm05OWgtH8wY2\nSXcwvHE35absIQh1/OZhFj931dmRl4QKbNQCTXTAFO39OfuD8l4UoQSwC+n+7o/h\nbguyCLNhZglqsQY6ZZZZwPA1/cnaKI0aEYdwgQqomnUdnjqGBQCe24DWJfncBZ4n\nWUx2OVvq+aWh2IMP0f/fMBH5hc8zSPXKbWQULHpYT9NLCEnFlWQaYw55PfWzjMpY\nrZxCRXluDocZXFSxZba/jJvcE+kNb7gu3GduyYsRtYQUigAZcIN5kZeR1Bonvzce\nMgfYFGM8KEyvAgMBAAGjYzBhMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTAD\nAQH/MB0GA1UdDgQWBBSubAWjkxPioufi1xzWx/B/yGdToDAfBgNVHSMEGDAWgBSu\nbAWjkxPioufi1xzWx/B/yGdToDANBgkqhkiG9w0BAQwFAAOCAgEAgyXt6NH9lVLN\nnsAEoJFp5lzQhN7craJP6Ed41mWYqVuoPId8AorRbrcWc+ZfwFSY1XS+wc3iEZGt\nIxg93eFyRJa0lV7Ae46ZeBZDE1ZXs6KzO7V33EByrKPrmzU+sQghoefEQzd5Mr61\n55wsTLxDKZmOMNOsIeDjHfrYBzN2VAAiKrlNIC5waNrlU/yDXNOd8v9EDERm8tLj\nvUYAGm0CuiVdjaExUd1URhxN25mW7xocBFymFe944Hn+Xds+qkxV/ZoVqW/hpvvf\ncDDpw+5CRu3CkwWJ+n1jez/QcYF8AOiYrg54NMMl+68KnyBr3TsTjxKM4kEaSHpz\noHdpx7Zcf4LIHv5YGygrqGytXm3ABdJ7t+uA/iU3/gKbaKxCXcPu9czc8FB10jZp\nnOZ7BN9uBmm23goJSFmH63sUYHpkqmlD75HHTOwY3WzvUy2MmeFe8nI+z1TIvWfs\npA9MRf/TuTAjB0yPEL+GltmZWrSZVxykzLsViVO6LAUP5MSeGbEYNNVMnbrt9x+v\nJJUEeKgDu+6B5dpffItKoZB0JaezPkvILFa9x8jvOOJckvB595yEunQtYQEgfn7R\n8k8HWV+LLUNS60YMlOH1Zkd5d9VUWx+tJDfLRVpOoERIyNiwmcUVhAn21klJwGW4\n5hpxbqCo8YLoRT5s1gLXCmeDBVrJpBA=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF2TCCA8GgAwIBAgIQXAuFXAvnWUHfV8w/f52oNjANBgkqhkiG9w0BAQUFADBk\nMQswCQYDVQQGEwJjaDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsTHERpZ2l0\nYWwgQ2VydGlmaWNhdGUgU2VydmljZXMxGzAZBgNVBAMTElN3aXNzY29tIFJvb3Qg\nQ0EgMTAeFw0wNTA4MTgxMjA2MjBaFw0yNTA4MTgyMjA2MjBaMGQxCzAJBgNVBAYT\nAmNoMREwDwYDVQQKEwhTd2lzc2NvbTElMCMGA1UECxMcRGlnaXRhbCBDZXJ0aWZp\nY2F0ZSBTZXJ2aWNlczEbMBkGA1UEAxMSU3dpc3Njb20gUm9vdCBDQSAxMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA0LmwqAzZuz8h+BvVM5OAFmUgdbI9\nm2BtRsiMMW8Xw/qabFbtPMWRV8PNq5ZJkCoZSx6jbVfd8StiKHVFXqrWW/oLJdih\nFvkcxC7mlSpnzNApbjyFNDhhSbEAn9Y6cV9Nbc5fuankiX9qUvrKm/LcqfmdmUc/\nTilftKaNXXsLmREDA/7n29uj/x2lzZAeAR81sH8A25Bvxn570e56eqeqDFdvpG3F\nEzuwpdntMhy0XmeLVNxzh+XTF3xmUHJd1BpYwdnP2IkCb6dJtDZd0KTeByy2dbco\nkdaXvij1mB7qWybJvbCXc9qukSbraMH5ORXWZ0sKbU/Lz7DkQnGMU3nn7uHbHaBu\nHYwadzVcFh4rUx80i9Fs/PJnB3r1re3WmquhsUvhzDdf/X/NTa64H5xD+SpYVUNF\nvJbNcA78yeNmuk6NO4HLFWR7uZToXTNShXEuT46iBhFRyePLoW4xCGQMwtI89Tbo\n19AOeCMgkckkKmUpWyL3Ic6DXqTz3kvTaI9GdVyDCW4pa8RwjPWd1yAv/0bSKzjC\nL3UcPX7ape8eYIVpQtPM+GP+HkM5haa2Y0EQs3MevNP6yn0WR+Kn1dCjigoIlmJW\nbjTb2QK5MHXjBNLnj8KwEUAKrNVxAmKLMb7dxiNYMUJDLXT5xp6mig/p/r+D5kNX\nJLrvRjSq1xIBOO0CAwEAAaOBhjCBgzAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0hBBYw\nFDASBgdghXQBUwABBgdghXQBUwABMBIGA1UdEwEB/wQIMAYBAf8CAQcwHwYDVR0j\nBBgwFoAUAyUv3m+CATpcLNwroWm1Z9SM0/0wHQYDVR0OBBYEFAMlL95vggE6XCzc\nK6FptWfUjNP9MA0GCSqGSIb3DQEBBQUAA4ICAQA1EMvspgQNDQ/NwNurqPKIlwzf\nky9NfEBWMXrrpA9gzXrzvsMnjgM+pN0S734edAY8PzHyHHuRMSG08NBsl9Tpl7Ik\nVh5WwzW9iAUPWxAaZOHHgjD5Mq2eUCzneAXQMbFamIp1TpBcahQq4FJHgmDmHtqB\nsfsUC1rxn9KVuj7QG9YVHaO+htXbD8BJZLsuUBlL0iT43R4HVtA4oJVwIHaM190e\n3p9xxCPvgxNcoyQVTSlAPGrEqdi3pkSlDfTgnXceQHAm/NrZNuR55LU/vJtlvrsR\nls/bxig5OgjOR1tTWsWZ/l2p3e9M1MalrQLmjAcSHm8D0W+go/MpvRLHUKKwf4ip\nmXeascClOS5cfGniLLDqN2qk4Vrh9VDlg++luyqI54zb/W1elxmofmZ1a3Hqv7HH\nb6D0jqTsNFFbjCYDcKF31QESVwA12yPeDooomf2xEG9L/zgtYE4snOtnta1J7ksf\nrK/7DZBaZmBwXarNeNQk7shBoJMBkpxqnvy5JMWzFYJ+vq6VK+uxwNrjAWALXmms\nhFZhvnEX/h0TD/7Gh0Xp/jKgGg0TpJRVcaUWi7rKibCyx/yP2FS1k2Kdzs9Z+z0Y\nzirLNRWCXf9UIltxUvu3yf5gmwBBZPCqKuy2QkPOiWaByIufOVQDJdMWNY6E0F/6\nMBr1mmz0DlP5OlvRHA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFODCCAyCgAwIBAgIRAJW+FqD3LkbxezmCcvqLzZYwDQYJKoZIhvcNAQEFBQAw\nNzEUMBIGA1UECgwLVGVsaWFTb25lcmExHzAdBgNVBAMMFlRlbGlhU29uZXJhIFJv\nb3QgQ0EgdjEwHhcNMDcxMDE4MTIwMDUwWhcNMzIxMDE4MTIwMDUwWjA3MRQwEgYD\nVQQKDAtUZWxpYVNvbmVyYTEfMB0GA1UEAwwWVGVsaWFTb25lcmEgUm9vdCBDQSB2\nMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMK+6yfwIaPzaSZVfp3F\nVRaRXP3vIb9TgHot0pGMYzHw7CTww6XScnwQbfQ3t+XmfHnqjLWCi65ItqwA3GV1\n7CpNX8GH9SBlK4GoRz6JI5UwFpB/6FcHSOcZrr9FZ7E3GwYq/t75rH2D+1665I+X\nZ75Ljo1kB1c4VWk0Nj0TSO9P4tNmHqTPGrdeNjPUtAa9GAH9d4RQAEX1jF3oI7x+\n/jXh7VB7qTCNGdMJjmhnXb88lxhTuylixcpecsHHltTbLaC0H2kD7OriUPEMPPCs\n81Mt8Bz17Ww5OXOAFshSsCPN4D7c3TxHoLs1iuKYaIu+5b9y7tL6pe0S7fyYGKkm\ndtwoSxAgHNN/Fnct7W+A90m7UwW7XWjH1Mh1Fj+JWov3F0fUTPHSiXk+TT2YqGHe\nOh7S+F4D4MHJHIzTjU3TlTazN19jY5szFPAtJmtTfImMMsJu7D0hADnJoWjiUIMu\nsDor8zagrC/kb2HCUQk5PotTubtn2txTuXZZNp1D5SDgPTJghSJRt8czu90VL6R4\npgd7gUY2BIbdeTXHlSw7sKMXNeVzH7RcWe/a6hBle3rQf5+ztCo3O3CLm1u5K7fs\nslESl1MpWtTwEhDcTwK7EpIvYtQ/aUN8Ddb8WHUBiJ1YFkveupD/RwGJBmr2X7KQ\narMCpgKIv7NHfirZ1fpoeDVNAgMBAAGjPzA9MA8GA1UdEwEB/wQFMAMBAf8wCwYD\nVR0PBAQDAgEGMB0GA1UdDgQWBBTwj1k4ALP1j5qWDNXr+nuqF+gTEjANBgkqhkiG\n9w0BAQUFAAOCAgEAvuRcYk4k9AwI//DTDGjkk0kiP0Qnb7tt3oNmzqjMDfz1mgbl\ndxSR651Be5kqhOX//CHBXfDkH1e3damhXwIm/9fH907eT/j3HEbAek9ALCI18Bmx\n0GtnLLCo4MBANzX2hFxc469CeP6nyQ1Q6g2EdvZR74NTxnr/DlZJLo961gzmJ1Tj\nTQpgcmLNkQfWpb/ImWvtxBnmq0wROMVvMeJuScg/doAmAyYp4Db29iBT4xdwNBed\nY2gea+zDTYa4EzAvXUYNR0PVG6pZDrlcjQZIrXSHX8f8MVRBE+LHIQ6e4B4N4cB7\nQ4WQxYpYxmUKeFfyxiMPAdkgS94P+5KFdSpcc41teyWRyu5FrgZLAMzTsVlQ2jqI\nOylDRl6XK1TOU2+NSueW+r9xDkKLfP0ooNBIytrEgUy7onOTJsjrDNYmiLbAJM+7\nvVvrdX3pCI6GMyx5dwlppYn8s3CQh3aP0yK7Qs69cwsgJirQmz1wHiRszYd2qReW\nt88NkvuOGKmYSdGe/mBEciG5Ge3C9THxOUiIkCR1VBatzvT4aRRkOfujuLpwQMcn\nHL/EVlP6Y2XQ8xwOFvVrhlhNGNTkDY6lnVuR3HYkUD/GKvvZt5y11ubQ2egZixVx\nSK236thZiNSQvxaz2emsWWFUyBy6ysHK4bkgTI86k4mloMy/0/Z1pHWWbVY=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF2DCCA8CgAwIBAgIQTKr5yttjb+Af907YWwOGnTANBgkqhkiG9w0BAQwFADCB\nhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\nA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\nBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMTE5\nMDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgT\nEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR\nQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNh\ndGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCR\n6FSS0gpWsawNJN3Fz0RndJkrN6N9I3AAcbxT38T6KhKPS38QVr2fcHK3YX/JSw8X\npz3jsARh7v8Rl8f0hj4K+j5c+ZPmNHrZFGvnnLOFoIJ6dq9xkNfs/Q36nGz637CC\n9BR++b7Epi9Pf5l/tfxnQ3K9DADWietrLNPtj5gcFKt+5eNu/Nio5JIk2kNrYrhV\n/erBvGy2i/MOjZrkm2xpmfh4SDBF1a3hDTxFYPwyllEnvGfDyi62a+pGx8cgoLEf\nZd5ICLqkTqnyg0Y3hOvozIFIQ2dOciqbXL1MGyiKXCJ7tKuY2e7gUYPDCUZObT6Z\n+pUX2nwzV0E8jVHtC7ZcryxjGt9XyD+86V3Em69FmeKjWiS0uqlWPc9vqv9JWL7w\nqP/0uK3pN/u6uPQLOvnoQ0IeidiEyxPx2bvhiWC4jChWrBQdnArncevPDt09qZah\nSL0896+1DSJMwBGB7FY79tOi4lu3sgQiUpWAk2nojkxl8ZEDLXB0AuqLZxUpaVIC\nu9ffUGpVRr+goyhhf3DQw6KqLCGqR84onAZFdr+CGCe01a60y1Dma/RMhnEw6abf\nFobg2P9A3fvQQoh/ozM6LlweQRGBY84YcWsr7KaKtzFcOmpH4MN5WdYgGq/yapiq\ncrxXStJLnbsQ/LBMQeXtHT1eKJ2czL+zUdqnR+WEUwIDAQABo0IwQDAdBgNVHQ4E\nFgQUu69+Aj36pvE8hI6t7jiY7NkyMtQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAArx1UaEt65Ru2yyTUEUAJNMnMvl\nwFTPoCWOAvn9sKIN9SCYPBMtrFaisNZ+EZLpLrqeLppysb0ZRGxhNaKatBYSaVqM\n4dc+pBroLwP0rmEdEBsqpIt6xf4FpuHA1sj+nq6PK7o9mfjYcwlYRm6mnPTXJ9OV\n2jeDchzTc+CiR5kDOF3VSXkAKRzH7JsgHAckaVd4sjn8OoSgtZx8jb8uk2Intzna\nFxiuvTwJaP+EmzzV1gsD41eeFPfR60/IvYcjt7ZJQ3mFXLrrkguhxuhoqEwWsRqZ\nCuhTLJK7oQkYdQxlqHvLI7cawiiFwxv/0Cti76R7CZGYZ4wUAc1oBmpjIXUDgIiK\nboHGhfKppC3n9KUkEEeDys30jXlYsQab5xoq2Z0B15R97QNKyvDb6KkBPvVWmcke\njkk9u+UJueBPSZI9FoJAzMxZxuY67RIuaTxslbH9qh17f4a+Hg4yRvv7E491f0yL\nS0Zj/gA0QHDBw7mh3aZw4gSzQbzpgJHqZJx64SIDqZxubw5lT2yHh17zbqD5daWb\nQOhTsiedSrnAdyGN/4fy3ryM7xfft0kL0fJuMAsaDk527RH89elWsn2/x20Kk4yl\n0MC2Hb46TpSi125sC8KKfPog88Tk5c0NqMuRkrF8hey1FGlmDoLnzc7ILaZRfyHB\nNVOFBkpdn627G190\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF3TCCA8WgAwIBAgIIeyyb0xaAMpkwDQYJKoZIhvcNAQELBQAwfDELMAkGA1UE\nBhMCVVMxDjAMBgNVBAgMBVRleGFzMRAwDgYDVQQHDAdIb3VzdG9uMRgwFgYDVQQK\nDA9TU0wgQ29ycG9yYXRpb24xMTAvBgNVBAMMKFNTTC5jb20gUm9vdCBDZXJ0aWZp\nY2F0aW9uIEF1dGhvcml0eSBSU0EwHhcNMTYwMjEyMTczOTM5WhcNNDEwMjEyMTcz\nOTM5WjB8MQswCQYDVQQGEwJVUzEOMAwGA1UECAwFVGV4YXMxEDAOBgNVBAcMB0hv\ndXN0b24xGDAWBgNVBAoMD1NTTCBDb3Jwb3JhdGlvbjExMC8GA1UEAwwoU1NMLmNv\nbSBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IFJTQTCCAiIwDQYJKoZIhvcN\nAQEBBQADggIPADCCAgoCggIBAPkP3aMrfcvQKv7sZ4Wm5y4bunfh4/WvpOz6Sl2R\nxFdHaxh3a3by/ZPkPQ/CFp4LZsNWlJ4Xg4XOVu/yFv0AYvUiCVToZRdOQbngT0aX\nqhvIuG5iXmmxX9sqAn78bMrzQdjt0Oj8P2FI7bADFB0QDksZ4LtO7IZl/zbzXmcC\nC52GVWH9ejjt/uIZALdvoVBidXQ8oPrIJZK0bnoix/geoeOy3ZExqysdBP+lSgQ3\n6YWkMyv94tZVNHwZpEpox7Ko07fKoZOI68GXvIz5HdkihCR0xwQ9aqkpk8zruFvh\n/l8lqjRYyMEjVJ0bmBHDOJx+PYZspQ9AhnwC9FwCTyjLrnGfDzrIM/4RJTXq/LrF\nYD3ZfBjVsqnTdXgDciLKOsMf7yzlLqn6niy2UUb9rwPW6mBo6oUWNmuF6R7As93E\nJNyAKoFBbZQ+yODJgUEAnl6/f8UImKIYLEJAs/lvOCdLToD0PYFH4Ih86hzOtXVc\nUS4cK38acijnALXRdMbX5J+tB5O2UzU1/Dfkw/ZdFr4hc96SCvigY2q8lpJqPvi8\nZVWb3vUNiSYE/CUapiVpy8JtynziWV+XrOvvLsi81xtZPCvM8hnIk2snYxnP/Okm\n+Mpxm3+T/jRnhE6Z6/yzeAkzcLpmpnbtG3PrGqUNxCITIJRWCk4sbE6x/c+cCbqi\nM+2HAgMBAAGjYzBhMB0GA1UdDgQWBBTdBAkHovV6fVJTEpKV7jiAJQ2mWTAPBgNV\nHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFN0ECQei9Xp9UlMSkpXuOIAlDaZZMA4G\nA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAgEAIBgRlCn7Jp0cHh5wYfGV\ncpNxJK1ok1iOMq8bs3AD/CUrdIWQPXhq9LmLpZc7tRiRux6n+UBbkflVma8eEdBc\nHadm47GUBwwyOabqG7B52B2ccETjit3E+ZUfijhDPwGFpUenPUayvOUiaPd7nNgs\nPgohyC0zrL/FgZkxdMF1ccW+sfAjRfSda/wZY52jvATGGAslu1OJD7OAUN5F7kR/\nq5R4ZJjT9ijdh9hwZXT7DrkT66cPYakylszeu+1jTBi7qUD3oFRuIIhxdRjqerQ0\ncuAjJ3dctpDqhiVAq+8zD8ufgr6iIPv2tS0a5sKFsXQP+8hlAqRSAUfdSSLBv9jr\na6x+3uxjMxW3IwiPxg+NQVrdjsW5j+VFP3jbutIbQLH+cU0/4IGiul607BXgk90I\nH37hVZkLId6Tngr75qNJvTYw/ud3sqB1l7UtgYgXZSD32pAAn8lSzDLKNXz1PQ/Y\nK9f1JmzJBjSWFupwWRoyeXkLtoh/D1JIPb9s2KJELtFOt3JY04kTlf5Eq/jXixtu\nnLwsoFvVagCvXzfh1foQC5ichucmj87w7G6KVwuA406ywKBjYZC6VWg3dGq2ktuf\noYYitmUnDuy2n0Jg5GfCtdpBC8TTi2EbvPofkSvXRAdeuims2cXp71NIWuuA8ShY\nIc2wBlX7Jz9TkHCpBB5XJ7k=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDQzCCAiugAwIBAgIQX/h7KCtU3I1CoxW1aMmt/zANBgkqhkiG9w0BAQUFADA1\nMRYwFAYDVQQKEw1DaXNjbyBTeXN0ZW1zMRswGQYDVQQDExJDaXNjbyBSb290IENB\nIDIwNDgwHhcNMDQwNTE0MjAxNzEyWhcNMjkwNTE0MjAyNTQyWjA1MRYwFAYDVQQK\nEw1DaXNjbyBTeXN0ZW1zMRswGQYDVQQDExJDaXNjbyBSb290IENBIDIwNDgwggEg\nMA0GCSqGSIb3DQEBAQUAA4IBDQAwggEIAoIBAQCwmrmrp68Kd6ficba0ZmKUeIhH\nxmJVhEAyv8CrLqUccda8bnuoqrpu0hWISEWdovyD0My5jOAmaHBKeN8hF570YQXJ\nFcjPFto1YYmUQ6iEqDGYeJu5Tm8sUxJszR2tKyS7McQr/4NEb7Y9JHcJ6r8qqB9q\nVvYgDxFUl4F1pyXOWWqCZe+36ufijXWLbvLdT6ZeYpzPEApk0E5tzivMW/VgpSdH\njWn0f84bcN5wGyDWbs2mAag8EtKpP6BrXruOIIt6keO1aO6g58QBdKhTCytKmg9l\nEg6CTY5j/e/rmxrbU6YTYK/CfdfHbBcl1HP7R2RQgYCUTOG/rksc35LtLgXfAgED\no1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUJ/PI\nFR5umgIJFq0roIlgX9p7L6owEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQEF\nBQADggEBAJ2dhISjQal8dwy3U8pORFBi71R803UXHOjgxkhLtv5MOhmBVrBW7hmW\nYqpao2TB9k5UM8Z3/sUcuuVdJcr18JOagxEu5sv4dEX+5wW4q+ffy0vhN4TauYuX\ncB7w4ovXsNgOnbFp1iqRe6lJT37mjpXYgyc81WhJDtSd9i7rp77rMKSsH0T8lasz\nBvt9YAretIpjsJyp8qS5UwGH0GikJ3+r/+n6yUA4iGe0OcaEb1fJU9u6ju7AQ7L4\nCYNu/2bPPu8Xs1gYJQk0XuPL1hS27PKSb3TkL4Eq1ZKR4OCXPDJoBYVL0fdX4lId\nkxpUnwVwwEpxYB5DC2Ae/qPOgRnhCzU=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDODCCAiCgAwIBAgIGIAYFFnACMA0GCSqGSIb3DQEBBQUAMDsxCzAJBgNVBAYT\nAlJPMREwDwYDVQQKEwhjZXJ0U0lHTjEZMBcGA1UECxMQY2VydFNJR04gUk9PVCBD\nQTAeFw0wNjA3MDQxNzIwMDRaFw0zMTA3MDQxNzIwMDRaMDsxCzAJBgNVBAYTAlJP\nMREwDwYDVQQKEwhjZXJ0U0lHTjEZMBcGA1UECxMQY2VydFNJR04gUk9PVCBDQTCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALczuX7IJUqOtdu0KBuqV5Do\n0SLTZLrTk+jUrIZhQGpgV2hUhE28alQCBf/fm5oqrl0Hj0rDKH/v+yv6efHHrfAQ\nUySQi2bJqIirr1qjAOm+ukbuW3N7LBeCgV5iLKECZbO9xSsAfsT8AzNXDe3i+s5d\nRdY4zTW2ssHQnIFKquSyAVwdj1+ZxLGt24gh65AIgoDzMKND5pCCrlUoSe1b16kQ\nOA7+j0xbm0bqQfWwCHTD0IgztnzXdN/chNFDDnU5oSVAKOp4yw4sLjmdjItuFhwv\nJoIQ4uNllAoEwF73XVv4EOLQunpL+943AAAaWyjj0pxzPjKHmKHJUS/X3qwzs08C\nAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAcYwHQYDVR0O\nBBYEFOCMm9slSbPxfIbWskKHC9BroNnkMA0GCSqGSIb3DQEBBQUAA4IBAQA+0hyJ\nLjX8+HXd5n9liPRyTMks1zJO890ZeUe9jjtbkw9QSSQTaxQGcu8J06Gh40CEyecY\nMnQ8SG4Pn0vU9x7Tk4ZkVJdjclDVVc/6IJMCopvDI5NOFlV2oHB5bc0hH88vLbwZ\n44gx+FkagQnIl6Z0x2DEW8xXjrJ1/RsCCdtZb3KTafcxQdaIOL+Hsr0Wefmq5L6I\nJd1hJyMctTEHBDa0GpC9oHRxUIltvBTjD4au8as+x6AJzKNI0eDbZOeStc+vckNw\ni/nDhDwTqn6Sm1dTk/pwwpEOMfmbZ13pljheX7NzTogVZ96edhBiIL5VaZVDADlN\n9u6wWk5JRFRYX0KD\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF6zCCA9OgAwIBAgIIVrYpzTS8ePYwDQYJKoZIhvcNAQELBQAwgYIxCzAJBgNV\nBAYTAlVTMQ4wDAYDVQQIDAVUZXhhczEQMA4GA1UEBwwHSG91c3RvbjEYMBYGA1UE\nCgwPU1NMIENvcnBvcmF0aW9uMTcwNQYDVQQDDC5TU0wuY29tIEVWIFJvb3QgQ2Vy\ndGlmaWNhdGlvbiBBdXRob3JpdHkgUlNBIFIyMB4XDTE3MDUzMTE4MTQzN1oXDTQy\nMDUzMDE4MTQzN1owgYIxCzAJBgNVBAYTAlVTMQ4wDAYDVQQIDAVUZXhhczEQMA4G\nA1UEBwwHSG91c3RvbjEYMBYGA1UECgwPU1NMIENvcnBvcmF0aW9uMTcwNQYDVQQD\nDC5TU0wuY29tIEVWIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgUlNBIFIy\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAjzZlQOHWTcDXtOlG2mvq\nM0fNTPl9fb69LT3w23jhhqXZuglXaO1XPqDQCEGD5yhBJB/jchXQARr7XnAjssuf\nOePPxU7Gkm0mxnu7s9onnQqG6YE3Bf7wcXHswxzpY6IXFJ3vG2fThVUCAtZJycxa\n4bH3bzKfydQ7iEGonL3Lq9ttewkfokxykNorCPzPPFTOZw+oz12WGQvE43LrrdF9\nHSfvkusQv1vrO6/PgN3B0pYEW3p+pKk8OHakYo6gOV7qd89dAFmPZiw+B6KjBSYR\naZfqhbcPlgtLyEDhULouisv3D5oi53+aNxPN8k0TayHRwMwi8qFG9kRpnMphNQcA\nb9ZhCBHqurj26bNg5U257J8UZslXWNvNh2n4ioYSA0e/ZhN2rHd9NCSFg83XqpyQ\nGp8hLH94t2S42Oim9HizVcuE0jLEeK6jj2HdzghTreyI/BXkmg3mnxp3zkyPuBQV\nPWKchjgGAGYS5Fl2WlPAApiiECtoRHuOec4zSnaqW4EWG7WK2NAAe15itAnWhmMO\npgWVSbooi4iTsjQc2KRVbrcc0N6ZVTsj9CLg+SlmJuwgUHfbSguPvuUCYHBBXtSu\nUDkiFCbLsjtzdFVHB3mBOagwE0TlBIqulhMlQg+5U8Sb/M3kHN48+qvWBkofZ6aY\nMBzdLNvcGJVXZsb/XItW9XcCAwEAAaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAfBgNV\nHSMEGDAWgBT5YLvU49U09rj1BoAlp3PbRmmonjAdBgNVHQ4EFgQU+WC71OPVNPa4\n9QaAJadz20ZpqJ4wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBW\ns47LCp1Jjr+kxJG7ZhcFUZh1++VQLHqe8RT6q9OKPv+RKY9ji9i0qVQBDb6Thi/5\nSm3HXvVX+cpVHBK+Rw82xd9qt9t1wkclf7nxY/hoLVUE0fKNsKTPvDxeH3jnpaAg\ncLAExbf3cqfeIg29MyVGjGSSJuM+LmOW2puMPfgYCdcDzH2GguDKBAdRUNf/ktUM\n79qGn5nX67evaOI5JpS6aLe/g9Pqemc9YmeuJeVy6OLk7K4S9ksrPJ/psEDzOFSz\n/bdoyNrGj1E8svuR3Bznm53htw1yj+KkxKl4+esUrMZDBcJlOSgYAsOCsp0FvmXt\nll9ldDz7CTUue5wT/RsPXcdtgTpWD8w74a8CLyKsRspGPKAcTNZEtF4uXBVmCeEm\nKf7GUmG6sXP/wwyc5WxqlD8UykAWlYTzWamsX0xhk23RO8yilQwipmdnRC652dKK\nQbNmC1r7fSOl8hqw/96bg5Qu0T/fkreRrwU7ZcegbLHNYhLDkBvjJc40vG93drEQ\nw/cFGsDWr3RiSBd3kmmQYRzelYB0VI8YHMPzA9C/pEN1hlMYegouCRw2n5H9gooi\nS9EOUCXdywMMF8mDAAhONU2Ki+3wApRmLER/y5UnlhetCTCstnEXbosX9hwJ1C07\nmKVx01QT2WDz9UtmT/rx7iASjbSsV7FFY6GsdqnC+w==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICDDCCAZGgAwIBAgIQbkepx2ypcyRAiQ8DVd2NHTAKBggqhkjOPQQDAzBHMQsw\nCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEU\nMBIGA1UEAxMLR1RTIFJvb3QgUjMwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAw\nMDAwWjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZp\nY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjMwdjAQBgcqhkjOPQIBBgUrgQQA\nIgNiAAQfTzOHMymKoYTey8chWEGJ6ladK0uFxh1MJ7x/JlFyb+Kf1qPKzEUURout\n736GjOyxfi//qXGdGIRFBEFVbivqJn+7kAHjSxm65FSWRQmx1WyRRK2EE46ajA2A\nDDL24CejQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\nDgQWBBTB8Sa6oC2uhYHP0/EqEr24Cmf9vDAKBggqhkjOPQQDAwNpADBmAjEAgFuk\nfCPAlaUs3L6JbyO5o91lAFJekazInXJ0glMLfalAvWhgxeG4VDvBNhcl2MG9AjEA\nnjWSdIUlUfUk7GRSJFClH9voy8l27OyCbvWFGFPouOOaKaqW04MjyaR7YbPMAuhd\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICjzCCAhWgAwIBAgIQXIuZxVqUxdJxVt7NiYDMJjAKBggqhkjOPQQDAzCBiDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNl\neSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMT\nJVVTRVJUcnVzdCBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMjAx\nMDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgT\nCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVUaGUg\nVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBFQ0MgQ2VydGlm\naWNhdGlvbiBBdXRob3JpdHkwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQarFRaqflo\nI+d61SRvU8Za2EurxtW20eZzca7dnNYMYf3boIkDuAUU7FfO7l0/4iGzzvfUinng\no4N+LZfQYcTxmdwlkWOrfzCjtHDix6EznPO/LlxTsV+zfTJ/ijTjeXmjQjBAMB0G\nA1UdDgQWBBQ64QmG1M8ZwpZ2dEl23OA1xmNjmjAOBgNVHQ8BAf8EBAMCAQYwDwYD\nVR0TAQH/BAUwAwEB/zAKBggqhkjOPQQDAwNoADBlAjA2Z6EWCNzklwBBHU6+4WMB\nzzuqQhFkoJ2UOQIReVx7Hfpkue4WQrO/isIJxOzksU0CMQDpKmFHjFJKS04YcPbW\nRNZu9YO6bVi9JNlWSOrvxKJGgYhqOkbRqZtNyWHa0V1Xahg=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIECjCCAvKgAwIBAgIJAMJ+QwRORz8ZMA0GCSqGSIb3DQEBCwUAMIGCMQswCQYD\nVQQGEwJIVTERMA8GA1UEBwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0\nZC4xJzAlBgNVBAMMHk1pY3Jvc2VjIGUtU3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0G\nCSqGSIb3DQEJARYQaW5mb0BlLXN6aWduby5odTAeFw0wOTA2MTYxMTMwMThaFw0y\nOTEyMzAxMTMwMThaMIGCMQswCQYDVQQGEwJIVTERMA8GA1UEBwwIQnVkYXBlc3Qx\nFjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNVBAMMHk1pY3Jvc2VjIGUtU3pp\nZ25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5mb0BlLXN6aWduby5o\ndTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOn4j/NjrdqG2KfgQvvP\nkd6mJviZpWNwrZuuyjNAfW2WbqEORO7hE52UQlKavXWFdCyoDh2Tthi3jCyoz/tc\ncbna7P7ofo/kLx2yqHWH2Leh5TvPmUpG0IMZfcChEhyVbUr02MelTTMuhTlAdX4U\nfIASmFDHQWe4oIBhVKZsTh/gnQ4H6cm6M+f+wFUoLAKApxn1ntxVUwOXewdI/5n7\nN4okxFnMUBBjjqqpGrCEGob5X7uxUG6k0QrM1XF+H6cbfPVTbiJfyyvm1HxdrtbC\nxkzlBQHZ7Vf8wSN5/PrIJIOV87VqUQHQd9bpEqH5GoP7ghu5sJf0dgYzQ0mg/wu1\n+rUCAwEAAaOBgDB+MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0G\nA1UdDgQWBBTLD8bfQkPMPcu1SCOhGnqmKrs0aDAfBgNVHSMEGDAWgBTLD8bfQkPM\nPcu1SCOhGnqmKrs0aDAbBgNVHREEFDASgRBpbmZvQGUtc3ppZ25vLmh1MA0GCSqG\nSIb3DQEBCwUAA4IBAQDJ0Q5eLtXMs3w+y/w9/w0olZMEyL/azXm4Q5DwpL7v8u8h\nmLzU1F0G9u5C7DBsoKqpyvGvivo/C3NqPuouQH4frlRheesuCDfXI/OMn74dseGk\nddug4lQUsbocKaQY9hK6ohQU4zE1yED/t+AFdlfBHFny+L/k7SViXITwfn4fs775\ntyERzAMBVnCnEJIeGzSBHq2cGsMEPO0CYdYeBvNfOofyK/FFh+U9rNHHV4S9a67c\n2Pm2G2JwCz02yULyMtd6YebS2z3PyKnJm9zbWETXbzivf3jTo60adbocwTZ8jx5t\nHMN1Rq41Bab2XD0h7lbwyYIiLXpUq3DDfSJlgnCW\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICWTCCAd+gAwIBAgIQZvI9r4fei7FK6gxXMQHC7DAKBggqhkjOPQQDAzBlMQsw\nCQYDVQQGEwJVUzEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTYwNAYD\nVQQDEy1NaWNyb3NvZnQgRUNDIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIw\nMTcwHhcNMTkxMjE4MjMwNjQ1WhcNNDIwNzE4MjMxNjA0WjBlMQswCQYDVQQGEwJV\nUzEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTYwNAYDVQQDEy1NaWNy\nb3NvZnQgRUNDIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTcwdjAQBgcq\nhkjOPQIBBgUrgQQAIgNiAATUvD0CQnVBEyPNgASGAlEvaqiBYgtlzPbKnR5vSmZR\nogPZnZH6thaxjG7efM3beaYvzrvOcS/lpaso7GMEZpn4+vKTEAXhgShC48Zo9OYb\nhGBKia/teQ87zvH2RPUBeMCjVDBSMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBTIy5lycFIM+Oa+sgRXKSrPQhDtNTAQBgkrBgEEAYI3\nFQEEAwIBADAKBggqhkjOPQQDAwNoADBlAjBY8k3qDPlfXu5gKcs68tvWMoQZP3zV\nL8KxzJOuULsJMsbG7X7JNpQS5GiFBqIb0C8CMQCZ6Ra0DvpWSNSkMBaReNtUjGUB\niudQZsIxtzm6uBoiB078a1QWIP8rtedMDE2mT3M=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFWjCCA0KgAwIBAgIQbkepxlqz5yDFMJo/aFLybzANBgkqhkiG9w0BAQwFADBH\nMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExM\nQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjIwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIy\nMDAwMDAwWjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNl\ncnZpY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjIwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQDO3v2m++zsFDQ8BwZabFn3GTXd98GdVarTzTukk3Lv\nCvptnfbwhYBboUhSnznFt+4orO/LdmgUud+tAWyZH8QiHZ/+cnfgLFuv5AS/T3Kg\nGjSY6Dlo7JUle3ah5mm5hRm9iYz+re026nO8/4Piy33B0s5Ks40FnotJk9/BW9Bu\nXvAuMC6C/Pq8tBcKSOWIm8Wba96wyrQD8Nr0kLhlZPdcTK3ofmZemde4wj7I0BOd\nre7kRXuJVfeKH2JShBKzwkCX44ofR5GmdFrS+LFjKBC4swm4VndAoiaYecb+3yXu\nPuWgf9RhD1FLPD+M2uFwdNjCaKH5wQzpoeJ/u1U8dgbuak7MkogwTZq9TwtImoS1\nmKPV+3PBV2HdKFZ1E66HjucMUQkQdYhMvI35ezzUIkgfKtzra7tEscszcTJGr61K\n8YzodDqs5xoic4DSMPclQsciOzsSrZYuxsN2B6ogtzVJV+mSSeh2FnIxZyuWfoqj\nx5RWIr9qS34BIbIjMt/kmkRtWVtd9QCgHJvGeJeNkP+byKq0rxFROV7Z+2et1VsR\nnTKaG73VululycslaVNVJ1zgyjbLiGH7HrfQy+4W+9OmTN6SpdTi3/UGVN4unUu0\nkzCqgc7dGtxRcw1PcOnlthYhGXmy5okLdWTK1au8CcEYof/UVKGFPP0UJAOyh9Ok\ntwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUu//KjiOfT5nK2+JopqUVJxce2Q4wDQYJKoZIhvcNAQEMBQADggIBALZp\n8KZ3/p7uC4Gt4cCpx/k1HUCCq+YEtN/L9x0Pg/B+E02NjO7jMyLDOfxA325BS0JT\nvhaI8dI4XsRomRyYUpOM52jtG2pzegVATX9lO9ZY8c6DR2Dj/5epnGB3GFW1fgiT\nz9D2PGcDFWEJ+YF59exTpJ/JjwGLc8R3dtyDovUMSRqodt6Sm2T4syzFJ9MHwAiA\npJiS4wGWAqoC7o87xdFtCjMwc3i5T1QWvwsHoaRc5svJXISPD+AVdyx+Jn7axEvb\npxZ3B7DNdehyQtaVhJ2Gg/LkkM0JR9SLA3DaWsYDQvTtN6LwG1BUSw7YhN4ZKJmB\nR64JGz9I0cNv4rBgF/XuIwKl2gBbbZCr7qLpGzvpx0QnRY5rn/WkhLx3+WuXrD5R\nRaIRpsyF7gpo8j5QOHokYh4XIDdtak23CZvJ/KRY9bb7nE4Yu5UC56GtmwfuNmsk\n0jmGwZODUNKBRqhfYlcsu2xkiAhu7xNUX90txGdj08+JN7+dIPT7eoOboB6BAFDC\n5AwiWVIQ7UNWhwD4FFKnHYuTjKJNRn8nxnGbJN7k2oaLDX5rIMHAnuFl2GqjpuiF\nizoHCBy69Y9Vmhh1fuXsgWbRIXOhNUQLgD1bnF5vKheW0YMjiGZt5obicDIvUiLn\nyOd/xCxgXS/Dr55FBcOEArf9LAhST4Ldo/DUhgkC\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDqDCCApCgAwIBAgIJAP7c4wEPyUj/MA0GCSqGSIb3DQEBBQUAMDQxCzAJBgNV\nBAYTAkZSMRIwEAYDVQQKDAlEaGlteW90aXMxETAPBgNVBAMMCENlcnRpZ25hMB4X\nDTA3MDYyOTE1MTMwNVoXDTI3MDYyOTE1MTMwNVowNDELMAkGA1UEBhMCRlIxEjAQ\nBgNVBAoMCURoaW15b3RpczERMA8GA1UEAwwIQ2VydGlnbmEwggEiMA0GCSqGSIb3\nDQEBAQUAA4IBDwAwggEKAoIBAQDIaPHJ1tazNHUmgh7stL7qXOEm7RFHYeGifBZ4\nQCHkYJ5ayGPhxLGWkv8YbWkj4Sti993iNi+RB7lIzw7sebYs5zRLcAglozyHGxny\ngQcPOJAZ0xH+hrTy0V4eHpbNgGzOOzGTtvKg0KmVEn2lmsxryIRWijOp5yIVUxbw\nzBfsV1/pogqYCd7jX5xv3EjjhQsVWqa6n6xI4wmy9/Qy3l40vhx4XUJbzg4ij02Q\n130yGLMLLGq/jj8UEYkgDncUtT2UCIf3JR7VsmAA7G8qKCVuKj4YYxclPz5EIBb2\nJsglrgVKtOdjLPOMFlN+XPsRGgjBRmKfIrjxwo1p3Po6WAbfAgMBAAGjgbwwgbkw\nDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUGu3+QTmQtCRZvgHyUtVF9lo53BEw\nZAYDVR0jBF0wW4AUGu3+QTmQtCRZvgHyUtVF9lo53BGhOKQ2MDQxCzAJBgNVBAYT\nAkZSMRIwEAYDVQQKDAlEaGlteW90aXMxETAPBgNVBAMMCENlcnRpZ25hggkA/tzj\nAQ/JSP8wDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIABzANBgkqhkiG\n9w0BAQUFAAOCAQEAhQMeknH2Qq/ho2Ge6/PAD/Kl1NqV5ta+aDY9fm4fTIrv0Q8h\nbV6lUmPOEvjvKtpv6zf+EwLHyzs+ImvaYS5/1HI93TDhHkxAGYwP15zRgzB7mFnc\nfca5DClMoTOi62c6ZYTTluLtdkVwj7Ur3vkj1kluPBS1xp81HlDQwY9qcEQCYsuu\nHWhBp6pX6FOqB9IG9tUUBguRA3UsbHK1YZWaDYu5Def131TN3ubY1gkIl2PlwS6w\nt0QmwCbAr1UwnjvVNioZBPRcHv/PLLf/0P2HQBHVESO7SMAhqaQoLf0V+LBOK/Qw\nWyH8EZE0vkHve52Xdf+XlcCWWC/qu0bXu+TZLg==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgILWku9WvtPilv6ZeUwDQYJKoZIhvcNAQELBQAwTTELMAkG\nA1UEBhMCQVQxIzAhBgNVBAoTGmUtY29tbWVyY2UgbW9uaXRvcmluZyBHbWJIMRkw\nFwYDVQQDExBHTE9CQUxUUlVTVCAyMDIwMB4XDTIwMDIxMDAwMDAwMFoXDTQwMDYx\nMDAwMDAwMFowTTELMAkGA1UEBhMCQVQxIzAhBgNVBAoTGmUtY29tbWVyY2UgbW9u\naXRvcmluZyBHbWJIMRkwFwYDVQQDExBHTE9CQUxUUlVTVCAyMDIwMIICIjANBgkq\nhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAri5WrRsc7/aVj6B3GyvTY4+ETUWiD59b\nRatZe1E0+eyLinjF3WuvvcTfk0Uev5E4C64OFudBc/jbu9G4UeDLgztzOG53ig9Z\nYybNpyrOVPu44sB8R85gfD+yc/LAGbaKkoc1DZAoouQVBGM+uq/ufF7MpotQsjj3\nQWPKzv9pj2gOlTblzLmMCcpL3TGQlsjMH/1WljTbjhzqLL6FLmPdqqmV0/0plRPw\nyJiT2S0WR5ARg6I6IqIoV6Lr/sCMKKCmfecqQjuCgGOlYx8ZzHyyZqjC0203b+J+\nBlHZRYQfEs4kUmSFC0iAToexIiIwquuuvuAC4EDosEKAA1GqtH6qRNdDYfOiaxaJ\nSaSjpCuKAsR49GiKweR6NrFvG5Ybd0mN1MkGco/PU+PcF4UgStyYJ9ORJitHHmkH\nr96i5OTUawuzXnzUJIBHKWk7buis/UDr2O1xcSvy6Fgd60GXIsUf1DnQJ4+H4xj0\n4KlGDfV0OoIu0G4skaMxXDtG6nsEEFZegB31pWXogvziB4xiRfUg3kZwhqG8k9Me\ndKZssCz3AwyIDMvUclOGvGBG85hqwvG/Q/lwIHfKN0F5VVJjjVsSn8VoxIidrPIw\nq7ejMZdnrY8XD2zHc+0klGvIg5rQmjdJBKuxFshsSUktq6HQjJLyQUp5ISXbY9e2\nnKd+Qmn7OmMCAwEAAaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\nAQYwHQYDVR0OBBYEFNwuH9FhN3nkq9XVsxJxaD1qaJwiMB8GA1UdIwQYMBaAFNwu\nH9FhN3nkq9XVsxJxaD1qaJwiMA0GCSqGSIb3DQEBCwUAA4ICAQCR8EICaEDuw2jA\nVC/f7GLDw56KoDEoqoOOpFaWEhCGVrqXctJUMHytGdUdaG/7FELYjQ7ztdGl4wJC\nXtzoRlgHNQIw4Lx0SsFDKv/bGtCwr2zD/cuz9X9tAy5ZVp0tLTWMstZDFyySCstd\n6IwPS3BD0IL/qMy/pJTAvoe9iuOTe8aPmxadJ2W8esVCgmxcB9CpwYhgROmYhRZf\n+I/KARDOJcP5YBugxZfD0yyIMaK9MOzQ0MAS8cE54+X1+NZK3TTN+2/BT+MAi1bi\nkvcoskJ3ciNnxz8RFbLEAwW+uxF7Cr+obuf/WEPPm2eggAe2HcqtbepBEX4tdJP7\nwry+UUTF72glJ4DjyKDUEuzZpTcdN3y0kcra1LGWge9oXHYQSa9+pTeAsRxSvTOB\nTI/53WXZFM2KJVj04sWDpQmQ1GwUY7VA3+vA/MRYfg0UFodUJ25W5HCEuGwyEn6C\nMUO+1918oa2u1qsgEu8KwxCMSZY13At1XrFP1U80DhEgB3VDRemjEdqso5nCtnkn\n4rnvyOL2NSl6dPrFf4IFYqYK6miyeUcGbvJXqBUzxvd4Sj1Ce2t+/vdG6tHrju+I\naFvowdlxfv1k7/9nR4hYJS8+hge9+6jlgqispdNpQ80xiEmEU5LAsTkbOYMBMMTy\nqfrQA71yN2BWHzZ8vTmR9W0Nv3vXkg==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIGnTCCBIWgAwIBAgICBcYwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0x\nGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJv\nb3QgQ0EgMzAeFw0wNjExMjQxOTExMjNaFw0zMTExMjQxOTA2NDRaMEUxCzAJBgNV\nBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMRswGQYDVQQDExJRdW9W\nYWRpcyBSb290IENBIDMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDM\nV0IWVJzmmNPTTe7+7cefQzlKZbPoFog02w1ZkXTPkrgEQK0CSzGrvI2RaNggDhoB\n4hp7Thdd4oq3P5kazethq8Jlph+3t723j/z9cI8LoGe+AaJZz3HmDyl2/7FWeUUr\nH556VOijKTVopAFPD6QuN+8bv+OPEKhyq1hX51SGyMnzW9os2l2ObjyjPtr7guXd\n8lyyBTNvijbO0BNO/79KDDRMpsMhvVAEVeuxu537RR5kFd5VAYwCdrXLoT9Cabwv\nvWhDFlaJKjdhkf2mrk7AyxRllDdLkgbvBNDInIjbC3uBr7E9KsRlOni27tyAsdLT\nmZw67mtaa7ONt9XOnMK+pUsvFrGeaDsGb659n/je7Mwpp5ijJUMv7/FfJuGITfhe\nbtfZFG4ZM2mnO4SJk8RTVROhUXhA+LjJou57ulJCg54U7QVSWllWp5f8nT8KKdjc\nT5EOE7zelaTfi5m+rJsziO+1ga8bxiJTyPbH7pcUsMV8eFLI8M5ud2CEpukqdiDt\nWAEXMJPpGovgc2PZapKUSU60rUqFxKMiMPwJ7Wgic6aIDFUhWMXhOp8q3crhkODZ\nc6tsgLjoC2SToJyMGf+z0gzskSaHirOi4XCPLArlzW1oUevaPwV/izLmE1xr/l9A\n4iLItLRkT9a6fUg+qGkM17uGcclzuD87nSVL2v9A6wIDAQABo4IBlTCCAZEwDwYD\nVR0TAQH/BAUwAwEB/zCB4QYDVR0gBIHZMIHWMIHTBgkrBgEEAb5YAAMwgcUwgZMG\nCCsGAQUFBwICMIGGGoGDQW55IHVzZSBvZiB0aGlzIENlcnRpZmljYXRlIGNvbnN0\naXR1dGVzIGFjY2VwdGFuY2Ugb2YgdGhlIFF1b1ZhZGlzIFJvb3QgQ0EgMyBDZXJ0\naWZpY2F0ZSBQb2xpY3kgLyBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVu\ndC4wLQYIKwYBBQUHAgEWIWh0dHA6Ly93d3cucXVvdmFkaXNnbG9iYWwuY29tL2Nw\nczALBgNVHQ8EBAMCAQYwHQYDVR0OBBYEFPLAE+CCQz777i9nMpY1XNu4ywLQMG4G\nA1UdIwRnMGWAFPLAE+CCQz777i9nMpY1XNu4ywLQoUmkRzBFMQswCQYDVQQGEwJC\nTTEZMBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDEbMBkGA1UEAxMSUXVvVmFkaXMg\nUm9vdCBDQSAzggIFxjANBgkqhkiG9w0BAQUFAAOCAgEAT62gLEz6wPJv92ZVqyM0\n7ucp2sNbtrCD2dDQ4iH782CnO11gUyeim/YIIirnv6By5ZwkajGxkHon24QRiSem\nd1o417+shvzuXYO8BsbRd2sPbSQvS3pspweWyuOEn62Iix2rFo1bZhfZFvSLgNLd\n+LJ2w/w4E6oM3kJpK27zPOuAJ9v1pkQNn1pVWQvVDVJIxa6f8i+AxeoyUDUSly7B\n4f/xI4hROJ/yZlZ25w9Rl6VSDE1JUZU2Pb+iSwwQHYaZTKrzchGT5Or2m9qoXadN\nt54CrnMAyNojA+j56hl0YgCUyyIgvpSnWbWCar6ZeXqp8kokUvd0/bpO5qgdAm6x\nDYBEwa7TIzdfu4V8K5Iu6H6li92Z4b8nby1dqnuH/grdS/yO9SbkbnBCbjPsMZ57\nk8HkyWkaPcBrTiJt7qtYTcbQQcEr6k8Sh17rRdhs9ZgC06DYVYoGmRmioHfRMJ6s\nzHXug/WwYjnPbFfiTNKRCw51KBuav/0aQ/HKd/s7j2G4aSgWQgRecCocIdiP4b0j\nWy10QJLZYxkNc91pvGJHvOB0K7Lrfb5BG7XARsWhIstfTsEokt4YutUqKLsRixeT\nmJlglFwjz1onl14LBQaTNx47aTbrqZ5hHY8y2o4M1nQ+ewkk2gF3R8Q7zTSMmfXK\n4SVhM7JZG+Ju1zdXtg2pEto=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDjjCCAnagAwIBAgIQAzrx5qcRqaC7KGSxHQn65TANBgkqhkiG9w0BAQsFADBh\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBH\nMjAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVT\nMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\nb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEcyMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzfNNNx7a8myaJCtSnX/RrohCgiN9RlUyfuI\n2/Ou8jqJkTx65qsGGmvPrC3oXgkkRLpimn7Wo6h+4FR1IAWsULecYxpsMNzaHxmx\n1x7e/dfgy5SDN67sH0NO3Xss0r0upS/kqbitOtSZpLYl6ZtrAGCSYP9PIUkY92eQ\nq2EGnI/yuum06ZIya7XzV+hdG82MHauVBJVJ8zUtluNJbd134/tJS7SsVQepj5Wz\ntCO7TG1F8PapspUwtP1MVYwnSlcUfIKdzXOS0xZKBgyMUNGPHgm+F6HmIcr9g+UQ\nvIOlCsRnKPZzFBQ9RnbDhxSJITRNrw9FDKZJobq7nMWxM4MphQIDAQABo0IwQDAP\nBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUTiJUIBiV\n5uNu5g/6+rkS7QYXjzkwDQYJKoZIhvcNAQELBQADggEBAGBnKJRvDkhj6zHd6mcY\n1Yl9PMWLSn/pvtsrF9+wX3N3KjITOYFnQoQj8kVnNeyIv/iPsGEMNKSuIEyExtv4\nNeF22d+mQrvHRAiGfzZ0JFrabA0UWTW98kndth/Jsw1HKj2ZL7tcu7XUIOGZX1NG\nFdtom/DzMNU+MeKNhJ7jitralj41E6Vf8PlwUHBHQRFXGU7Aj64GxJUTFy8bJZ91\n8rGOmaFvE7FBcf6IKshPECBV1/MUReXgRPTqh5Uykw7+U0b6LJ3/iyK5S9kJRaTe\npLiaWN0bfVKfjllDiIGknibVb63dDcY3fe0Dkhvld1927jyNxF1WW6LZZm6zNTfl\nMrY=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIID3TCCAsWgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMx\nEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoT\nHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xMjAwBgNVBAMTKVN0YXJmaWVs\nZCBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5MDkwMTAwMDAw\nMFoXDTM3MTIzMTIzNTk1OVowgY8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6\nb25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxTdGFyZmllbGQgVGVj\naG5vbG9naWVzLCBJbmMuMTIwMAYDVQQDEylTdGFyZmllbGQgUm9vdCBDZXJ0aWZp\nY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAL3twQP89o/8ArFvW59I2Z154qK3A2FWGMNHttfKPTUuiUP3oWmb3ooa/RMg\nnLRJdzIpVv257IzdIvpy3Cdhl+72WoTsbhm5iSzchFvVdPtrX8WJpRBSiUZV9Lh1\nHOZ/5FSuS/hVclcCGfgXcVnrHigHdMWdSL5stPSksPNkN3mSwOxGXn/hbVNMYq/N\nHwtjuzqd+/x5AJhhdM8mgkBj87JyahkNmcrUDnXMN/uLicFZ8WJ/X7NfZTD4p7dN\ndloedl40wOiWVpmKs/B/pM293DIxfJHP4F8R+GuqSVzRmZTRouNjWwl2tVZi4Ut0\nHZbUJtQIBFnQmA4O5t78w+wfkPECAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAO\nBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFHwMMh+n2TB/xH1oo2Kooc6rB1snMA0G\nCSqGSIb3DQEBCwUAA4IBAQARWfolTwNvlJk7mh+ChTnUdgWUXuEok21iXQnCoKjU\nsHU48TRqneSfioYmUeYs0cYtbpUgSpIB7LiKZ3sx4mcujJUDJi5DnUox9g61DLu3\n4jd/IroAow57UvtruzvE03lRTs2Q9GcHGcg8RnoNAX3FWOdt5oUwF5okxBDgBPfg\n8n/Uqgr/Qh037ZTlZFkSIHc40zI+OIF1lnP6aI+xy84fxez6nH7PfrHxBy22/L/K\npL/QlwVKvOoYKAKQvVR4CSFx09F9HdkWsKlhPdAKACL8x3vLCWRFCztAgfd9fDL1\nmMpYjn0q7pBZc2T5NnReJaH1ZgUufzkVqSr7UIuOhWn0\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICwzCCAkqgAwIBAgIBADAKBggqhkjOPQQDAjCBqjELMAkGA1UEBhMCR1IxDzAN\nBgNVBAcTBkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJl\nc2VhcmNoIEluc3RpdHV0aW9ucyBDZXJ0LiBBdXRob3JpdHkxRDBCBgNVBAMTO0hl\nbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgRUNDIFJv\nb3RDQSAyMDE1MB4XDTE1MDcwNzEwMzcxMloXDTQwMDYzMDEwMzcxMlowgaoxCzAJ\nBgNVBAYTAkdSMQ8wDQYDVQQHEwZBdGhlbnMxRDBCBgNVBAoTO0hlbGxlbmljIEFj\nYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgQ2VydC4gQXV0aG9yaXR5\nMUQwQgYDVQQDEztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0\ndXRpb25zIEVDQyBSb290Q0EgMjAxNTB2MBAGByqGSM49AgEGBSuBBAAiA2IABJKg\nQehLgoRc4vgxEZmGZE4JJS+dQS8KrjVPdJWyUWRrjWvmP3CV8AVER6ZyOFB2lQJa\njq4onvktTpnvLEhvTCUp6NFxW98dwXU3tNf6e3pCnGoKVlp8aQuqgAkkbH7BRqNC\nMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFLQi\nC4KZJAEOnLvkDv2/+5cgk5kqMAoGCCqGSM49BAMCA2cAMGQCMGfOFmI4oqxiRaep\nlSTAGiecMjvAwNW6qef4BENThe5SId6d9SWDPp5YSy/XZxMOIQIwBeF1Ad5o7Sof\nTUwJCA3sS61kFyjndc5FZXIhF8siQQ6ME5g4mlRtm8rifOoCWCKR\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD\nQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT\nMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\nb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB\nCSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97\nnh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt\n43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P\nT19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4\ngdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO\nBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR\nTLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw\nDQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr\nhMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg\n06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF\nPnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls\nYSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\nCAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICPzCCAcWgAwIBAgIQBVVWvPJepDU1w6QP1atFcjAKBggqhkjOPQQDAzBhMQsw\nCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cu\nZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMzAe\nFw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVTMRUw\nEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20x\nIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEczMHYwEAYHKoZIzj0CAQYF\nK4EEACIDYgAE3afZu4q4C/sLfyHS8L6+c/MzXRq8NOrexpu80JX28MzQC7phW1FG\nfp4tn+6OYwwX7Adw9c+ELkCDnOg/QW07rdOkFFk2eJ0DQ+4QE2xy3q6Ip6FrtUPO\nZ9wj/wMco+I+o0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAd\nBgNVHQ4EFgQUs9tIpPmhxdiuNkHMEWNpYim8S8YwCgYIKoZIzj0EAwMDaAAwZQIx\nAK288mw/EkrRLTnDCgmXc/SINoyIJ7vmiI1Qhadj+Z4y3maTD/HMsQmP3Wyr+mt/\noAIwOWZbwmSNuJ5Q3KjVSaLtx9zRSX8XAbjIho9OjIgrqJqpisXRAL34VOKa5Vt8\nsycX\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFWjCCA0KgAwIBAgIQbkepxUtHDA3sM9CJuRz04TANBgkqhkiG9w0BAQwFADBH\nMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExM\nQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjEwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIy\nMDAwMDAwWjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNl\ncnZpY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjEwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQC2EQKLHuOhd5s73L+UPreVp0A8of2C+X0yBoJx9vaM\nf/vo27xqLpeXo4xL+Sv2sfnOhB2x+cWX3u+58qPpvBKJXqeqUqv4IyfLpLGcY9vX\nmX7wCl7raKb0xlpHDU0QM+NOsROjyBhsS+z8CZDfnWQpJSMHobTSPS5g4M/SCYe7\nzUjwTcLCeoiKu7rPWRnWr4+wB7CeMfGCwcDfLqZtbBkOtdh+JhpFAz2weaSUKK0P\nfyblqAj+lug8aJRT7oM6iCsVlgmy4HqMLnXWnOunVmSPlk9orj2XwoSPwLxAwAtc\nvfaHszVsrBhQf4TgTM2S0yDpM7xSma8ytSmzJSq0SPly4cpk9+aCEI3oncKKiPo4\nZor8Y/kB+Xj9e1x3+naH+uzfsQ55lVe0vSbv1gHR6xYKu44LtcXFilWr06zqkUsp\nzBmkMiVOKvFlRNACzqrOSbTqn3yDsEB750Orp2yjj32JgfpMpf/VjsPOS+C12LOO\nRc92wO1AK/1TD7Cn1TsNsYqiA94xrcx36m97PtbfkSIS5r762DL8EGMUUXLeXdYW\nk70paDPvOmbsB4om3xPXV2V4J95eSRQAogB/mqghtqmxlbCluQ0WEdrHbEg8QOB+\nDVrNVjzRlwW5y0vtOUucxD/SVRNuJLDWcfr0wbrM7Rv1/oFB2ACYPTrIrnqYNxgF\nlQIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQU5K8rJnEaK0gnhS9SZizv8IkTcT4wDQYJKoZIhvcNAQEMBQADggIBADiW\nCu49tJYeX++dnAsznyvgyv3SjgofQXSlfKqE1OXyHuY3UjKcC9FhHb8owbZEKTV1\nd5iyfNm9dKyKaOOpMQkpAWBz40d8U6iQSifvS9efk+eCNs6aaAyC58/UEBZvXw6Z\nXPYfcX3v73svfuo21pdwCxXu11xWajOl40k4DLh9+42FpLFZXvRq4d2h9mREruZR\ngyFmxhE+885H7pwoHyXa/6xmld01D1zvICxi/ZG6qcz8WpyTgYMpl0p8WnK0OdC3\nd8t5/Wk6kjftbjhlRn7pYL15iJdfOBL07q9bgsiG1eGZbYwE8na6SfZu6W0eX6Dv\nJ4J2QPim01hcDyxC2kLGe4g0x8HYRZvBPsVhHdljUEn2NIVq4BjFbkerQUIpm/Zg\nDdIx02OYI5NaAIFItO/Nis3Jz5nu2Z6qNuFoS3FJFDYoOj0dzpqPJeaAcWErtXvM\n+SUWgeExX6GjfhaknBZqlxi9dnKlC54dNuYvoS++cJEPqOba+MSSQGwlfnuzCdyy\nF62ARPBopY+Udf90WuioAnwMCeKpSwughQtiue+hMZL77/ZRBIls6Kl0obsXs7X9\nSQ98POyDGCBDTtWTurQ0sR8WNh8M5mQ5Fkzc4P4dyKliPUDqysU0ArSuiYgzNdws\nE3PYJ/HQcu51OyLemGhmW/HGY0dVHLqlCFF1pkgl\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIB9zCCAX2gAwIBAgIQBiUzsUcDMydc+Y2aub/M+DAKBggqhkjOPQQDAzA9MQsw\nCQYDVQQGEwJVUzESMBAGA1UEChMJQ2VydGFpbmx5MRowGAYDVQQDExFDZXJ0YWlu\nbHkgUm9vdCBFMTAeFw0yMTA0MDEwMDAwMDBaFw00NjA0MDEwMDAwMDBaMD0xCzAJ\nBgNVBAYTAlVTMRIwEAYDVQQKEwlDZXJ0YWlubHkxGjAYBgNVBAMTEUNlcnRhaW5s\neSBSb290IEUxMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE3m/4fxzf7flHh4axpMCK\n+IKXgOqPyEpeKn2IaKcBYhSRJHpcnqMXfYqGITQYUBsQ3tA3SybHGWCA6TS9YBk2\nQNYphwk8kXr2vBMj3VlOBF7PyAIcGFPBMdjaIOlEjeR2o0IwQDAOBgNVHQ8BAf8E\nBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU8ygYy2R17ikq6+2uI1g4\nhevIIgcwCgYIKoZIzj0EAwMDaAAwZQIxALGOWiDDshliTd6wT99u0nCK8Z9+aozm\nut6Dacpps6kFtZaSF4fC0urQe87YQVt8rgIwRt7qy12a7DLCZRawTDBcMPPaTnOG\nBtjOiQRINzf43TNRnXCve1XYAS59BWQOhriR\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFtzCCA5+gAwIBAgICBQkwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0x\nGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJv\nb3QgQ0EgMjAeFw0wNjExMjQxODI3MDBaFw0zMTExMjQxODIzMzNaMEUxCzAJBgNV\nBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMRswGQYDVQQDExJRdW9W\nYWRpcyBSb290IENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCa\nGMpLlA0ALa8DKYrwD4HIrkwZhR0In6spRIXzL4GtMh6QRr+jhiYaHv5+HBg6XJxg\nFyo6dIMzMH1hVBHL7avg5tKifvVrbxi3Cgst/ek+7wrGsxDp3MJGF/hd/aTa/55J\nWpzmM+Yklvc/ulsrHHo1wtZn/qtmUIttKGAr79dgw8eTvI02kfN/+NsRE8Scd3bB\nrrcCaoF6qUWD4gXmuVbBlDePSHFjIuwXZQeVikvfj8ZaCuWw419eaxGrDPmF60Tp\n+ARz8un+XJiM9XOva7R+zdRcAitMOeGylZUtQofX1bOQQ7dsE/He3fbE+Ik/0XX1\nksOR1YqI0JDs3G3eicJlcZaLDQP9nL9bFqyS2+r+eXyt66/3FsvbzSUr5R/7mp/i\nUcw6UwxI5g69ybR2BlLmEROFcmMDBOAENisgGQLodKcftslWZvB1JdxnwQ5hYIiz\nPtGo/KPaHbDRsSNU30R2be1B2MGyIrZTHN81Hdyhdyox5C315eXbyOD/5YDXC2Og\n/zOhD7osFRXql7PSorW+8oyWHhqPHWykYTe5hnMz15eWniN9gqRMgeKh0bpnX5UH\noycR7hYQe7xFSkyyBNKr79X9DFHOUGoIMfmR2gyPZFwDwzqLID9ujWc9Otb+fVuI\nyV77zGHcizN300QyNQliBJIWENieJ0f7OyHj+OsdWwIDAQABo4GwMIGtMA8GA1Ud\nEwEB/wQFMAMBAf8wCwYDVR0PBAQDAgEGMB0GA1UdDgQWBBQahGK8SEwzJQTU7tD2\nA8QZRtGUazBuBgNVHSMEZzBlgBQahGK8SEwzJQTU7tD2A8QZRtGUa6FJpEcwRTEL\nMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMT\nElF1b1ZhZGlzIFJvb3QgQ0EgMoICBQkwDQYJKoZIhvcNAQEFBQADggIBAD4KFk2f\nBluornFdLwUvZ+YTRYPENvbzwCYMDbVHZF34tHLJRqUDGCdViXh9duqWNIAXINzn\ng/iN/Ae42l9NLmeyhP3ZRPx3UIHmfLTJDQtyU/h2BwdBR5YM++CCJpNVjP4iH2Bl\nfF/nJrP3MpCYUNQ3cVX2kiF495V5+vgtJodmVjB3pjd4M1IQWK4/YY7yarHvGH5K\nWWPKjaJW1acvvFYfzznB4vsKqBUsfU16Y8Zsl0Q80m/DShcK+JDSV6IZUaUtl0Ha\nB0+pUNqQjZRG4T7wlP0QADj1O+hA4bRuVhogzG9Yje0uRY/W6ZM/57Es3zrWIozc\nhLsib9D45MY56QSIPMO661V6bYCZJPVsAfv4l7CUW+v90m/xd2gNNWQjrLhVoQPR\nTUIZ3Ph1WVaj+ahJefivDrkRoHy3au000LYmYjgahwz46P0u05B/B5EqHdZ+XIWD\nmbA4CD/pXvk1B+TJYm5Xf6dQlfe6yJvmjqIBxdZmv3lh8zwc4bmCXF2gw+nYSL0Z\nohEUGW6yhhtoPkg3Goi3XZZenMfvJ2II4pEZXNLxId26F0KCl3GBUzGpn/Z9Yr9y\n4aOTHcyKJloJONDO1w2AFrR4pTqHTI2KpdVGl/IsELm8VCLAAVBpQ570su9t+Oza\n8eOx79+Rj1QqCyXBJhnEUhAFZdWCEOrCMc0u\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDDDCCAfSgAwIBAgIDAQAgMA0GCSqGSIb3DQEBBQUAMD4xCzAJBgNVBAYTAlBM\nMRswGQYDVQQKExJVbml6ZXRvIFNwLiB6IG8uby4xEjAQBgNVBAMTCUNlcnR1bSBD\nQTAeFw0wMjA2MTExMDQ2MzlaFw0yNzA2MTExMDQ2MzlaMD4xCzAJBgNVBAYTAlBM\nMRswGQYDVQQKExJVbml6ZXRvIFNwLiB6IG8uby4xEjAQBgNVBAMTCUNlcnR1bSBD\nQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM6xwS7TT3zNJc4YPk/E\njG+AanPIW1H4m9LcuwBcsaD8dQPugfCI7iNS6eYVM42sLQnFdvkrOYCJ5JdLkKWo\nePhzQ3ukYbDYWMzhbGZ+nPMJXlVjhNWo7/OxLjBos8Q82KxujZlakE403Daaj4GI\nULdtlkIJ89eVgw1BS7Bqa/j8D35in2fE7SZfECYPCE/wpFcozo+47UX2bu4lXapu\nOb7kky/ZR6By6/qmW6/KUz/iDsaWVhFu9+lmqSbYf5VT7QqFiLpPKaVCjF62/IUg\nAKpoC6EahQGcxEZjgoi2IrHu/qpGWX7PNSzVttpd90gzFFS269lvzs2I1qsb2pY7\nHVkCAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEA\nuI3O7+cUus/usESSbLQ5PqKEbq24IXfS1HeCh+YgQYHu4vgRt2PRFze+GXYkHAQa\nTOs9qmdvLdTN/mUxcMUbpgIKumB7bVjCmkn+YzILa+M6wKyrO7Do0wlRjBCDxjTg\nxSvgGrZgFCdsMneMvLJymM/NzD+5yCRCFNZX/OYmQ6kd5YCQzgNUKD73P9P4Te1q\nCjqTE5s7FCMTY5w/0YcneeVMUeMBrYVdGjux1XMQpNPyvG5k9VpWkKjHDkx0Dy5x\nO/fIR/RpbxXyEV6DHpx8Uq79AtoSqFlnGNu8cN2bsWntgM6JQEhqDjXKKWYVIZQs\n6GAqm4VKQPNriiTsBhYscw==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIF3jCCA8agAwIBAgIQAf1tMPyjylGoG7xkDjUDLTANBgkqhkiG9w0BAQwFADCB\niDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0pl\ncnNleSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNV\nBAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAw\nMjAxMDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBiDELMAkGA1UEBhMCVVMxEzARBgNV\nBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVU\naGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBSU0EgQ2Vy\ndGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK\nAoICAQCAEmUXNg7D2wiz0KxXDXbtzSfTTK1Qg2HiqiBNCS1kCdzOiZ/MPans9s/B\n3PHTsdZ7NygRK0faOca8Ohm0X6a9fZ2jY0K2dvKpOyuR+OJv0OwWIJAJPuLodMkY\ntJHUYmTbf6MG8YgYapAiPLz+E/CHFHv25B+O1ORRxhFnRghRy4YUVD+8M/5+bJz/\nFp0YvVGONaanZshyZ9shZrHUm3gDwFA66Mzw3LyeTP6vBZY1H1dat//O+T23LLb2\nVN3I5xI6Ta5MirdcmrS3ID3KfyI0rn47aGYBROcBTkZTmzNg95S+UzeQc0PzMsNT\n79uq/nROacdrjGCT3sTHDN/hMq7MkztReJVni+49Vv4M0GkPGw/zJSZrM233bkf6\nc0Plfg6lZrEpfDKEY1WJxA3Bk1QwGROs0303p+tdOmw1XNtB1xLaqUkL39iAigmT\nYo61Zs8liM2EuLE/pDkP2QKe6xJMlXzzawWpXhaDzLhn4ugTncxbgtNMs+1b/97l\nc6wjOy0AvzVVdAlJ2ElYGn+SNuZRkg7zJn0cTRe8yexDJtC/QV9AqURE9JnnV4ee\nUB9XVKg+/XRjL7FQZQnmWEIuQxpMtPAlR1n6BB6T1CZGSlCBst6+eLf8ZxXhyVeE\nHg9j1uliutZfVS7qXMYoCAQlObgOK6nyTJccBz8NUvXt7y+CDwIDAQABo0IwQDAd\nBgNVHQ4EFgQUU3m/WqorSs9UgOHYm8Cd8rIDZsswDgYDVR0PAQH/BAQDAgEGMA8G\nA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAFzUfA3P9wF9QZllDHPF\nUp/L+M+ZBn8b2kMVn54CVVeWFPFSPCeHlCjtHzoBN6J2/FNQwISbxmtOuowhT6KO\nVWKR82kV2LyI48SqC/3vqOlLVSoGIG1VeCkZ7l8wXEskEVX/JJpuXior7gtNn3/3\nATiUFJVDBwn7YKnuHKsSjKCaXqeYalltiz8I+8jRRa8YFWSQEg9zKC7F4iRO/Fjs\n8PRF/iKz6y+O0tlFYQXBl2+odnKPi4w2r78NBc5xjeambx9spnFixdjQg3IM8WcR\niQycE0xyNN+81XHfqnHd4blsjDwSXWXavVcStkNr/+XeTWYRUc+ZruwXtuhxkYze\nSf7dNXGiFSeUHM9h4ya7b6NnJSFd5t0dCy5oGzuCr+yDZ4XUmFF0sbmZgIn/f3gZ\nXHlKYC6SQK5MNyosycdiyA5d9zZbyuAlJQG03RoHnHcAP9Dc1ew91Pq7P8yF1m9/\nqS3fuQL39ZeatTXaw2ewh0qpKJ4jjv9cJ2vhsE/zB+4ALtRZh8tSQZXq9EfX7mRB\nVXyNWQKV3WKdwrnuWih0hKWbt5DHDAff9Yk2dDLWKMGwsAvgnEzDHNb842m1R0aB\nL6KCq9NjRHDEjf8tM7qtj3u1cIiuPhnPQCjY/MiQu12ZIvVS5ljFH4gxQ+6IHdfG\njjxDah2nGN59PRbxYvnKkKj9\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFqDCCA5CgAwIBAgIQHtOXCV/YtLNHcB6qvn9FszANBgkqhkiG9w0BAQwFADBl\nMQswCQYDVQQGEwJVUzEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTYw\nNAYDVQQDEy1NaWNyb3NvZnQgUlNBIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5\nIDIwMTcwHhcNMTkxMjE4MjI1MTIyWhcNNDIwNzE4MjMwMDIzWjBlMQswCQYDVQQG\nEwJVUzEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTYwNAYDVQQDEy1N\naWNyb3NvZnQgUlNBIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTcwggIi\nMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKW76UM4wplZEWCpW9R2LBifOZ\nNt9GkMml7Xhqb0eRaPgnZ1AzHaGm++DlQ6OEAlcBXZxIQIJTELy/xztokLaCLeX0\nZdDMbRnMlfl7rEqUrQ7eS0MdhweSE5CAg2Q1OQT85elss7YfUJQ4ZVBcF0a5toW1\nHLUX6NZFndiyJrDKxHBKrmCk3bPZ7Pw71VdyvD/IybLeS2v4I2wDwAW9lcfNcztm\ngGTjGqwu+UcF8ga2m3P1eDNbx6H7JyqhtJqRjJHTOoI+dkC0zVJhUXAoP8XFWvLJ\njEm7FFtNyP9nTUwSlq31/niol4fX/V4ggNyhSyL71Imtus5Hl0dVe49FyGcohJUc\naDDv70ngNXtk55iwlNpNhTs+VcQor1fznhPbRiefHqJeRIOkpcrVE7NLP8TjwuaG\nYaRSMLl6IE9vDzhTyzMMEyuP1pq9KsgtsRx9S1HKR9FIJ3Jdh+vVReZIZZ2vUpC6\nW6IYZVcSn2i51BVrlMRpIpj0M+Dt+VGOQVDJNE92kKz8OMHY4Xu54+OU4UZpyw4K\nUGsTuqwPN1q3ErWQgR5WrlcihtnJ0tHXUeOrO8ZV/R4O03QK0dqq6mm4lyiPSMQH\n+FJDOvTKVTUssKZqwJz58oHhEmrARdlns87/I6KJClTUFLkqqNfs+avNJVgyeY+Q\nW5g5xAgGwax/Dj0ApQIDAQABo1QwUjAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUCctZf4aycI8awznjwNnpv7tNsiMwEAYJKwYBBAGC\nNxUBBAMCAQAwDQYJKoZIhvcNAQEMBQADggIBAKyvPl3CEZaJjqPnktaXFbgToqZC\nLgLNFgVZJ8og6Lq46BrsTaiXVq5lQ7GPAJtSzVXNUzltYkyLDVt8LkS/gxCP81OC\ngMNPOsduET/m4xaRhPtthH80dK2Jp86519efhGSSvpWhrQlTM93uCupKUY5vVau6\ntZRGrox/2KJQJWVggEbbMwSubLWYdFQl3JPk+ONVFT24bcMKpBLBaYVu32TxU5nh\nSnUgnZUP5NbcA/FZGOhHibJXWpS2qdgXKxdJ5XbLwVaZOjex/2kskZGT4d9Mozd2\nTaGf+G0eHdP67Pv0RR0Tbc/3WeUiJ3IrhvNXuzDtJE3cfVa7o7P4NHmJweDyAmH3\npvwPuxwXC65B2Xy9J6P9LjrRk5Sxcx0ki69bIImtt2dmefU6xqaWM/5TkshGsRGR\nxpl/j8nWZjEgQRCHLQzWwa80mMpkg/sTV9HB8Dx6jKXB/ZUhoHHBk2dxEuqPiApp\nGWSZI1b7rCoucL5mxAyE7+WL85MB+GqQk2dLsmijtWKP6T+MejteD+eMuMZ87zf9\ndOLITzNy4ZQ5bb0Sr74MTnB8G2+NszKTc0QWbej09+CVgI+WXTik9KveCjCHk9hN\nAHFiRSdLOkKEW39lt2c0Ui2cFmuqqNh7o0JMcccMyj6D5KbvtwEwXlGjefVwaaZB\nRA+GsCyRxj3qrg+E\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDPzCCAiegAwIBAgIEC/qx7zANBgkqhkiG9w0BAQsFADA8MSAwHgYDVQQDDBdj\nb20uYXBwbGUuc3lzdGVtZGVmYXVsdDEYMBYGA1UECgwPU3lzdGVtIElkZW50aXR5\nMB4XDTIyMDYyMzIyNDM0NVoXDTQyMDYxODIyNDM0NVowPDEgMB4GA1UEAwwXY29t\nLmFwcGxlLnN5c3RlbWRlZmF1bHQxGDAWBgNVBAoMD1N5c3RlbSBJZGVudGl0eTCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKAUabvBKnDR++8JGmLxIbID\n2E175BqEdw9ApsdaU7iIEP9t45e6ZnhCmECwmuYNaDYtp9GfLKipKfOdBnl+aYjO\nWqH8luHh0Qr33TBiXlVOKGjHV+/sOGkzfk2CZLNg3WVcT6WEjZ6lXmfr0T4dHUN6\n0JgF8TEaWVy3/CIAslE05jgXj6fT8ERXTv+Oz2T9xynAaFnczD9expftABwgydGp\n2utkTPv3mmj4+sIrB8SUoR5e+jr8VrvAz7qqDR9uA9skZxQ/CHNXoSQsSQzzjR2p\nKelkE0b/P5xSiIyfDPiyySeNKS9DOnRBQzjr9Pk8Qw0dJR0comU25IJRINppuKUC\nAwEAAaNJMEcwCwYDVR0PBAQDAgSwMCIGA1UdEQQbMBmCF2NvbS5hcHBsZS5zeXN0\nZW1kZWZhdWx0MBQGA1UdJQQNMAsGCSqGSIb3Y2QEBDANBgkqhkiG9w0BAQsFAAOC\nAQEAF6zzprQIKNMS6cqAefiHaMb3bZxaaOn2lhqQ4WhUwIGwomR1oka9l4oDb5FL\nIe3b6LyEXOlGOBuJQB11MT4JnjHEUQZ26BmbZX+DMvTMUFXcQ8OdO/Ho5rwsc5X3\nCPalacSl+TgeS1TJ+xA1clonp0BFxzGNZ7hJw0xd1/Boxmt6DY+ON2aL+YTzfRs7\nGM4+39YD3c6n9gPBeE2FdyTzEXiZpC+eQzEwFusoOkcrJIQx46zIDq6qpMKbUcX7\n0aWt6g1SySMPZTkX1F0CGUdKdTROl/50z0t6yObCRX8Ynmgoqgn4QgTZXk/PpL9T\nMizXEXmudjdVjYmT3T+l3GcSlA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDRDCCAiygAwIBAgIER+2O9DANBgkqhkiG9w0BAQsFADA7MR8wHQYDVQQDDBZj\nb20uYXBwbGUua2VyYmVyb3Mua2RjMRgwFgYDVQQKDA9TeXN0ZW0gSWRlbnRpdHkw\nHhcNMjIwNjIzMjI0MzQ3WhcNNDIwNjE4MjI0MzQ3WjA7MR8wHQYDVQQDDBZjb20u\nYXBwbGUua2VyYmVyb3Mua2RjMRgwFgYDVQQKDA9TeXN0ZW0gSWRlbnRpdHkwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDEtJcyoyszlGWN/Fitfiiwytqt\nAxMJ+3FJsDfRRoCSodw/opWoOq8JE2SxE/45LiesFHDdUOZMm0S/ru7/zR3Zr3j0\nYIlUvoPU7IPskST95+fE1Qoh898GkPhQi00cSCzP6Fob/hwOVZI7N6u5Z3rKJehL\nIYtfbor5tVfXeVloPsVr/D4nFdwyDudBBL0iprgld9+HOvbEy4S5NKOQB/3+6xMV\nvDjE66ecnRtk41/GhwaC7U9/PY6QIxnIURpCOG/glg0ZC+jPKcgecn4q6RtIlyCk\ngQKEkQt0LURQhAX1S+IvBz9SwwdjA1lFyEn3UY2jK2hCwQwtZ7bHGuoJX86lAgMB\nAAGjUDBOMAsGA1UdDwQEAwIFoDAhBgNVHREEGjAYghZjb20uYXBwbGUua2VyYmVy\nb3Mua2RjMBwGA1UdJQQVMBMGCCsGAQUFBwMBBgcrBgEFAgMFMA0GCSqGSIb3DQEB\nCwUAA4IBAQCF86MNnddvk4ry5A1tMw3B/aW9K3vGb8toylGsFjnSsz2XmqsObh+n\nPazJ8F/YncLK5pr66vQVFotwyjxffU7bA1eJxu5DrsWp4sLsBYwIX+0dJMMf5BbM\npNemnSBssq2FV96ysZhu2sEkG1kRfKdg4V/TvnaGv0X6VFBFe1+zcwf6bGE1Mknj\nqwrUPCMroT+t+vkDz9ZU6a0xYSuhk9r0NPlrH4d6xr927uLuojy5UClt7yEQFl0f\nAnGwUyZ9ZGajjPhOUxLsMqkMP3eqivwySnJF26vWzsAnSsqTzgs63vFfnF536D+b\nGdoJs8EZiyMsTDiLvr2mDOTw42JV2g1R\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDtzCCAp+gAwIBAgIFAIflIaswDQYJKoZIhvcNAQELBQAwPDE6MDgGA1UEAxMx\nQ2xvdWRmbGFyZSBJbmMgSlNTIEJ1aWx0LWluIENlcnRpZmljYXRlIEF1dGhvcml0\neTAeFw0xOTAxMDIxNzI3MDJaFw0yNDAxMDQxNzI3MDJaMEQxFzAVBgNVBAsTDkZJ\nTEVWQVVMVDJDT01NMSkwJwYDVQQDEyBKU1MgQnVpbHQtSW4gU2lnbmluZyBDZXJ0\naWZpY2F0ZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAInoMZ8+o3FF\n5CpduvOhsq7D8HVVN7CJLTuhAt1KKutB91NJuEHDGSshkS22jI5CugUsPI5XFh8x\nnb4BxzcfLq/W31dpuDcnjwgzXhs0CREg+zdonVCIvYVK+TNYratmBJOffXPjxDYr\naR2m9bEVITYSqPiNp+0wUGDGE3NbnIUkBSU6v2hXaMvoWc99IIkVGYLyueL9uw4q\ngxq4X4MWooT1Es13NfKBiR3wmc2924a5rt6oFgPfN1MSb9IsyILm2fqGMAsfq/M5\n4uP3DOIQP8N8mYWhSlHUob3VvZMXoPRW70CN/NeFY0s7twNB03ZlJ1IlggYZSztX\nJHyzHZh68oMCAwEAAaOBtzCBtDAdBgNVHQ4EFgQUYuq8/37ik/FkOQ/JyyBHrn+J\nJUEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDgYDVR0PAQH/BAQDAgGmMAwGA1UdEwEB\n/wQCMAAwPwYDVR0fBDgwNjA0oDKgMIYuaHR0cHM6Ly9hc2tpdC5qYW1mY2xvdWQu\nY29tLy9DQS9KQU1GQ1JMU2VydmxldDAfBgNVHSMEGDAWgBTfFyPl82tQeg1Kdyew\nacLncTKYhTANBgkqhkiG9w0BAQsFAAOCAQEAXFzOWYbK8DkjVLRdOBIybQFVDSyH\nn08R2n8/3Sw1bAhIt40zfz0+w5WZgogjtDeI4Pn/NxgcnYtultYIE2LMHg4YUOdw\n7XDfsv6EkGZ3YP4601uCYowEWju9g56gBQjc2RLS5fii5OjGaUAJ/3uD8WaCMRuq\n6WDVLnt4fsUZFoYqXev6bByZ9lrzkABMNZkdKFf5nG6Ik2G5cVqYHQ13uFz3t9r/\nvvuQabqjK/aYh4OUOz4YN8UkdYmmZ6ppitYlPhTZtDaMv10GyadVPP+uiJnd5FdS\nv9YkgqjcIQXQzUeDrr5rh/BNREWafcrznrSLOfi9ORe4JcdYqSp6blnLJg==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIC6zCCAkygAwIBAgIUI7b68p0pPrCBoW4ptlyvVcPItscwCgYIKoZIzj0EAwQw\ngY0xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1T\nYW4gRnJhbmNpc2NvMRgwFgYDVQQKEw9DbG91ZGZsYXJlLCBJbmMxNzA1BgNVBAMT\nLkNsb3VkZmxhcmUgZm9yIFRlYW1zIEVDQyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkw\nHhcNMjAwMjA0MTYwNTAwWhcNMjUwMjAyMTYwNTAwWjCBjTELMAkGA1UEBhMCVVMx\nEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBGcmFuY2lzY28xGDAW\nBgNVBAoTD0Nsb3VkZmxhcmUsIEluYzE3MDUGA1UEAxMuQ2xvdWRmbGFyZSBmb3Ig\nVGVhbXMgRUNDIENlcnRpZmljYXRlIEF1dGhvcml0eTCBmzAQBgcqhkjOPQIBBgUr\ngQQAIwOBhgAEAVdXsX8tpA9NAQeEQalvUIcVaFNDvGsR69ysZxOraRWNGHLfq1mi\nP6o3wtmtx/C2OXG01Cw7UFJbKl5MEDxnT2KoAdFSynSJOF2NDoe5LoZHbUW+yR3X\nFDl+MF6JzZ590VLGo6dPBf06UsXbH7PvHH2XKtFt8bBXVNMa5a21RdmpD0Pho0Uw\nQzAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBAjAdBgNVHQ4EFgQU\nYBcQng1AEMMNteuRDAMG0/vgFe0wCgYIKoZIzj0EAwQDgYwAMIGIAkIBQU5OTA2h\nYqmFk8paan5ezHVLcmcucsfYw4L/wmeEjCkczRmCVNm6L86LjhWU0v0wER0e+lHO\n3efvjbsu8gIGSagCQgEBnyYMP9gwg8l96QnQ1khFA1ljFlnqc2XgJHDSaAJC0gdz\n+NV3JMeWaD2Rb32jc9r6/a7xY0u0ByqxBQ1OQ0dt7A==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIQCgFCgAAAAUUjyES1AAAAAjANBgkqhkiG9w0BAQsFADBK\nMQswCQYDVQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVu\nVHJ1c3QgQ29tbWVyY2lhbCBSb290IENBIDEwHhcNMTQwMTE2MTgxMjIzWhcNMzQw\nMTE2MTgxMjIzWjBKMQswCQYDVQQGEwJVUzESMBAGA1UEChMJSWRlblRydXN0MScw\nJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVyY2lhbCBSb290IENBIDEwggIiMA0GCSqG\nSIb3DQEBAQUAA4ICDwAwggIKAoICAQCnUBneP5k91DNG8W9RYYKyqU+PZ4ldhNlT\n3Qwo2dfw/66VQ3KZ+bVdfIrBQuExUHTRgQ18zZshq0PirK1ehm7zCYofWjK9ouuU\n+ehcCuz/mNKvcbO0U59Oh++SvL3sTzIwiEsXXlfEU8L2ApeN2WIrvyQfYo3fw7gp\nS0l4PJNgiCL8mdo2yMKi1CxUAGc1bnO/AljwpN3lsKImesrgNqUZFvX9t++uP0D1\nbVoE/c40yiTcdCMbXTMTEl3EASX2MN0CXZ/g1Ue9tOsbobtJSdifWwLziuQkkORi\nT0/Br4sOdBeo0XKIanoBScy0RnnGF7HamB4HWfp1IYVl3ZBWzvurpWCdxJ35UrCL\nvYf5jysjCiN2O/cz4ckA82n5S6LgTrx+kzmEB/dEcH7+B1rlsazRGMzyNeVJSQjK\nVsk9+w8YfYs7wRPCTY/JTw436R+hDmrfYi7LNQZReSzIJTj0+kuniVyc0uMNOYZK\ndHzVWYfCP04MXFL0PfdSgvHqo6z9STQaKPNBiDoT7uje/5kdX7rL6B7yuVBgwDHT\nc+XvvqDtMwt0viAgxGds8AgDelWAf0ZOlqf0Hj7h9tgJ4TNkK2PXMl6f+cB7D3hv\nl7yTmvmcEpB4eoCHFddydJxVdHixuuFucAS6T6C6aMN7/zHwcz09lCqxC0EOoP5N\niGVreTO01wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB\n/zAdBgNVHQ4EFgQU7UQZwNPwBovupHu+QucmVMiONnYwDQYJKoZIhvcNAQELBQAD\nggIBAA2ukDL2pkt8RHYZYR4nKM1eVO8lvOMIkPkp165oCOGUAFjvLi5+U1KMtlwH\n6oi6mYtQlNeCgN9hCQCTrQ0U5s7B8jeUeLBfnLOic7iPBZM4zY0+sLj7wM+x8uwt\nLRvM7Kqas6pgghstO8OEPVeKlh6cdbjTMM1gCIOQ045U8U1mwF10A0Cj7oV+wh93\nnAbowacYXVKV7cndJZ5t+qntozo00Fl72u1Q8zW/7esUTTHHYPTa8Yec4kjixsU3\n+wYQ+nVZZjFHKdp2mhzpgq7vmrlR94gjmmmVYjzlVYA211QC//G5Xc7UI2/YRYRK\nW2XviQzdFKcgyxilJbQN+QHwotL0AMh0jqEqSI5l2xPE4iUXfeu+h1sXIFRRk0pT\nAwvsXcoz7WL9RccvW9xYoIA55vrX/hMUpu09lEpCdNTDd1lzzY9GvlU47/rokTLq\nl1gEIt44w8y8bckzOmoKaT+gyOpyj4xjhiO9bTyWnpXgSUyqorkqG5w2gXjtw+hG\n4iZZRHUe2XWJUc0QhJ1hYMtd+ZciTY6Y5uN/9lu7rs3KSoFrXgvzUeF0K+l+J6fZ\nmUlO+KWA2yUPHGNiiskzZ2s8EIPGrd6ozRaOjfAHN3Gf8qv8QfXBi+wAN10J5U6A\n7/qxXDgGpRtK4dw4LTzcqx+QGtVKnO7RcGzM7vRX+Bi6hG6H\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICXTCCAgOgAwIBAgIUcvZTrnG949ejK7q5dfXHROa9QPwwCgYIKoZIzj0EAwIw\ndDELMAkGA1UEBhMCVVMxDjAMBgNVBAgTBVRleGFzMQ8wDQYDVQQHEwZBdXN0aW4x\nGTAXBgNVBAoTEENsb3VkZmxhcmUsIEluYy4xETAPBgNVBAsTCFNlY3VyaXR5MRYw\nFAYDVQQDEw1DRk1hbmFnZSBSb290MCAXDTIxMDkyNDE4NDYwMFoYDzIwNTEwOTE3\nMTg0NjAwWjB/MQswCQYDVQQGEwJVUzEOMAwGA1UECBMFVGV4YXMxDzANBgNVBAcT\nBkF1c3RpbjEZMBcGA1UEChMQQ2xvdWRmbGFyZSwgSW5jLjERMA8GA1UECxMIU2Vj\ndXJpdHkxITAfBgNVBAMTGENGTWFuYWdlIEludGVybWVkaWF0ZSBDQTBZMBMGByqG\nSM49AgEGCCqGSM49AwEHA0IABAqoTPpDM7IkTjxHvPJWRbsykH2rsxOiiZOzlM+2\nkYYBJ/vE6J3tTBoTSia0NtBfannPxWlg1iowNWHgW2QfwS2jZjBkMA4GA1UdDwEB\n/wQEAwIBpjASBgNVHRMBAf8ECDAGAQH/AgEBMB0GA1UdDgQWBBRjZ3p4P6/SFSCc\nmC7k1IRqbUSqgzAfBgNVHSMEGDAWgBQXjuaDA/9LovQ+oZD8KF94VEqT6DAKBggq\nhkjOPQQDAgNIADBFAiEA5uylGJNQJ0i2QsQtcU7614dswik+uQyWHKOzPthvIpUC\nIAM7JepkYsQafbmSJeLso1ysAVVauup+2MXgjq5k9K4k\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICMjCCAdegAwIBAgIUSZqmuP2b2AQrXUVk58Zr0HbCu/IwCgYIKoZIzj0EAwIw\ndDELMAkGA1UEBhMCVVMxDjAMBgNVBAgTBVRleGFzMQ8wDQYDVQQHEwZBdXN0aW4x\nGTAXBgNVBAoTEENsb3VkZmxhcmUsIEluYy4xETAPBgNVBAsTCFNlY3VyaXR5MRYw\nFAYDVQQDEw1DRk1hbmFnZSBSb290MCAXDTIxMDkyNDE4NDMwMFoYDzIwNTEwOTE3\nMTg0MzAwWjB0MQswCQYDVQQGEwJVUzEOMAwGA1UECBMFVGV4YXMxDzANBgNVBAcT\nBkF1c3RpbjEZMBcGA1UEChMQQ2xvdWRmbGFyZSwgSW5jLjERMA8GA1UECxMIU2Vj\ndXJpdHkxFjAUBgNVBAMTDUNGTWFuYWdlIFJvb3QwWTATBgcqhkjOPQIBBggqhkjO\nPQMBBwNCAATI1iw5P/P/ViauLIuxtUOMZNlWsjHuoz01remAvs/OlLaikGAG7N78\nA+Az4kVmcm3GmutDYCMzB3sQVSAXz27eo0UwQzAOBgNVHQ8BAf8EBAMCAQYwEgYD\nVR0TAQH/BAgwBgEB/wIBAjAdBgNVHQ4EFgQUF47mgwP/S6L0PqGQ/ChfeFRKk+gw\nCgYIKoZIzj0EAwIDSQAwRgIhAJLF985Bkjx52g930RjiP5rj/dqOvib1T7eh/5yB\nfpAkAiEAiCx1ck1KAK8e61OKmRhMwqwxKJDkRNb0jfOympSmQyk=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIC5TCCAc2gAwIBAgIJAPuc8XarqryVMA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNV\nBAMMCWxvY2FsaG9zdDAeFw0xODExMDUxODQ4MDNaFw0yODExMDIxODQ4MDNaMBQx\nEjAQBgNVBAMMCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAMEk4HLDQtLZ1M2tOdiywfWnAC42LmTd3gPtzY8n+5gdAVUhprMIgVGwfwWc\nyc/7Z4JdXm52j+fRwZunKU4S3E7PACjmzbfZlq9nvwxay812xMmbw/9o7lvc36Tb\nfTCJPGiAvZ2oClAibLGsEtZP1gd2W0rWyqxEdKkOmHIxdtZn7uZQiCWuI/38lkHp\nFgkGbjO2div1JQyb6XgBjAeomNuV9QVUJODTYzu3ZM3sJeue5hysTcyy+oneUWd2\nQ++IEQj51fv7kO7fRyj1L5/6mhzVcldwNt26sVugCxXA1bU9nN88Iv7kP1hfalUO\nRyszZY1tXD5yuOtU81D4TQUuMfUCAwEAAaM6MDgwFAYDVR0RBA0wC4IJbG9jYWxo\nb3N0MAsGA1UdDwQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDATANBgkqhkiG9w0B\nAQsFAAOCAQEAHANOpvalb8DOVG2CvYlAqRe8Yiy3Ec7uB6pr3uplIUR3BLXgA71a\n8KOVLWPJdl+U6DJA35XEOAnluIgcPFtEvPhmtl9Eu7cbV1mWsUDiWCUj0IkTa4vX\n4szu7Fp2TEXcacFxEECVduYGim+sBd7j/Xp8LYVPNmmppp9iJ22mUdjPNWIyzLXw\nI+5zvH0QTO/OVpoGDK8EqO+lZVse9x9AeTIClG2vWhcVpneA/x3+oR0GvW9husPf\ns864jo3l5JspFkfzQ6V+3h+ECK6/+nm2XO/Qixsti/QD6TBDKZMW88PEPSX/g8QE\nFlECHFo6UV+a7dZXc+LGYZa27bRuKjPtNA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDhzCCAm+gAwIBAgIGMTAyMzA4MA0GCSqGSIb3DQEBCwUAMHIxGjAYBgNVBAMT\nEVN0cmF0dXMgbG9jYWwgZGV2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZv\ncm5pYTEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzEaMBgGA1UEChMRU3RyYXR1cyBs\nb2NhbCBkZXYwHhcNMjMwMzMwMTExNDUyWhcNMjMwNjI4MTExNDUyWjByMRowGAYD\nVQQDExFTdHJhdHVzIGxvY2FsIGRldjELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNh\nbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBGcmFuY2lzY28xGjAYBgNVBAoTEVN0cmF0\ndXMgbG9jYWwgZGV2MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw2N6\nyXlhNehtuYFysy7UOtg94PRIR2TM3TlJjX9blNgyjug8W76e/CBQkMR7b0x0aPg/\nYfnemYmNgtMDb76tKItCzBI8Kn0P3MD429LYDVQLIUyTNSjkUcyajuAhvvAt0w4i\nmQ7F5N4OFZ/1LbDstazOVPfTWsdhrEmJBH/SoymitTgVRSEV1i1GV4c/rVwK3oi8\ntOLOYQA2uL2cNxSu843nZqRPt9TQvXwjXGO1u5W9UlzKb/LlH1YDKjwsYk7u1iU6\nQFbACtb8OKyh/Llj+3RUkjzPld5QzXlZ7r4G/z5VPMiMOKbGtj8ehd6JxjUpw6nT\nq1+vqh/eKOlnS3erIQIDAQABoyMwITAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB\n/wQEAwICBDANBgkqhkiG9w0BAQsFAAOCAQEAMbqWSIt/y1b3bbHM3bRx/0ONW3I/\nfboEr8Z3wI7dnGvGhWsd2HRIIwPnM1VHj04A3E9emVQbTEQBppAJxxYj8XC774i5\ng14NtvoUXcR3VAZhU0PojJ74YDwNKnpMyLdDIvoke+2z+RtwrOJJ8uSAazlVJDx6\nzud38gfihDAXXv0IVR4cNzONCosrVmzWMVjntfFgbmbRk9Frk7s9WgYXgaM1U0JB\nNjdEZiH65uHLkN/LzNPikpydWKQv6AVqlFxIq9axHOl1r/XTWxinAtt7lwWTWPt7\nbaMOnQY012tRy6NxmapS6RJ+RJdLRVwytTUcnnZZaMQWQXruiStTVi3b5g==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDhzCCAm+gAwIBAgIGMTMxMTc4MA0GCSqGSIb3DQEBCwUAMHIxGjAYBgNVBAMT\nEVN0cmF0dXMgbG9jYWwgZGV2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZv\ncm5pYTEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzEaMBgGA1UEChMRU3RyYXR1cyBs\nb2NhbCBkZXYwHhcNMjMwNDE3MTM0MDA1WhcNMjMwNzE2MTM0MDA1WjByMRowGAYD\nVQQDExFTdHJhdHVzIGxvY2FsIGRldjELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNh\nbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBGcmFuY2lzY28xGjAYBgNVBAoTEVN0cmF0\ndXMgbG9jYWwgZGV2MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1II7\n4reC+zWXWPwgeRmFRQuR91CknbrcBjK/K9TZObtcj72qE8GS/Q9LnQzDeIigXXxl\nw6cI+DR8O59E7iTSwqNSp1lKyHfL2ys9fGuk8cZCXA8hvoG8s/Ab43BafJ58/uVa\nGN+M/WJbj8S2+HuH9fgPXB8kIVWxaIH0mzn0LVYBPeLRCCBn1NKZroWADK1IfL2P\nUIiTh+Z54N72c1ii+sPI+gIUYMAfIYkcg/8i48MGUGFyNoVMYyvLiI4YFmKdlOiK\ns+c5tQ9p0bpxym5UBfNLrJSq2rSQs+pNTCP8boJdiB7odiaqmcwHgsC1i3hbehD/\nRi/kdVS1Wgs/eFbMEQIDAQABoyMwITAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB\n/wQEAwICBDANBgkqhkiG9w0BAQsFAAOCAQEAtE7K/L1OtGYiBj19kYAFc26wBQgx\ntQvVrq9lbz60oTNLXRJpMjz63eadCBl/vO8/BzY201cDG6jTZEa9iZfwcjwB0ym3\nTeQxJf36i9NUKiu4W/ZZBR8q9z+1oDOAZ23fZ+fWKCFSkE744rh9F36erjoDh0wf\nvDLhUR5NW38of7SsVGo3UziRX6ECOrV4FMbb+/NN5Eh4N4KCe1zLyJYetl3nNWoZ\ncUs5pVdJTG/3HwmFnTftb004Ll7qqAkRn4wovIXgyuPDBCMPIY2mPzOWOo387hWl\nPi2ryGXfZqjrhgjR8wNO4CT/7vZbkEXQxaToesZx8It2NKyBuhshbH8G+g==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDsjCCApqgAwIBAgIFAMwF5RwwDQYJKoZIhvcNAQELBQAwPDE6MDgGA1UEAxMx\nQ2xvdWRmbGFyZSBJbmMgSlNTIEJ1aWx0LWluIENlcnRpZmljYXRlIEF1dGhvcml0\neTAeFw0xOTAxMDIxNzI3MDFaFw0yOTAxMDQxNzI3MDFaMDwxOjA4BgNVBAMTMUNs\nb3VkZmxhcmUgSW5jIEpTUyBCdWlsdC1pbiBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYxNk6I/BMmtH3kj63MxJc\nBLbI834wqDSb3vV/ogod7SKTzC7f68kOkM9CxUDcpJWpm1A9xfT66cAUoyhGhfUA\nxIgnA3tECehWQt3nePx0hTuOGa750xC20DY3d5qVrtnITwZZAwz3UVLYC6QmtZ8R\nv6AY8MsqwsQHFGs2gUb25oSIebIf+/xoP3rFFCFE5nEaMqjSZVRAR1ms5KcUpW4C\ngE0APLU0qIonCGuw8yvUAWtCTBq6EauE713Jwe58OP5//fin5X6SYZWhBYln6/Vh\n+yaiUcF7p3tjJL8lYCmVQqv/gXHFsP0Eb/DMrZ0qvGo7rbiyrWSxSG/sUVz2ZgVH\nAgMBAAGjgbowgbcwHQYDVR0OBBYEFN8XI+Xza1B6DUp3J7BpwudxMpiFMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMA4GA1UdDwEB/wQEAwIBpjAPBgNVHRMBAf8EBTADAQH/\nMD8GA1UdHwQ4MDYwNKAyoDCGLmh0dHBzOi8vYXNraXQuamFtZmNsb3VkLmNvbS8v\nQ0EvSkFNRkNSTFNlcnZsZXQwHwYDVR0jBBgwFoAU3xcj5fNrUHoNSncnsGnC53Ey\nmIUwDQYJKoZIhvcNAQELBQADggEBAGjzL+t5+F/WRzKPE6ZL4FnY15kLa34/fkyN\nAq9t+6yQpj84JnKcPTVN7+utLbi1WIhU4qv3jYZY6ghppEvYFkfV2ylw1rmL15DA\njBq1pUiu6MZjpRzqknjsQ35nakcJjk44TLTEAEnoQQyOLXy5OY3UXfwKwrJElT6l\n84AsNeqOuMJ5Xwz+sK88GHfkham7FmhkjgsO3xVnm6IROKSZt/J/O/9dD+cUouH5\njc4Pmd9BibNAIFpokPheyoGd/aXTx0cuMRLvNS5p3fhn7yZ4d8j/nlDM4qXOJP4A\niml7n3IjvCHWFkKD8xq/btA/bt9pzDYdGhPAhQ1JF/U44KDYDRs=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDuzCCAqOgAwIBAgIFAPYlNlMwDQYJKoZIhvcNAQELBQAwPDE6MDgGA1UEAxMx\nQ2xvdWRmbGFyZSBJbmMgSlNTIEJ1aWx0LWluIENlcnRpZmljYXRlIEF1dGhvcml0\neTAeFw0yMzA3MTIxNTAxNDJaFw0yNTA3MTMxNTAxNDJaMEgxLTArBgNVBAMTJENF\nQ0IzMTIxLTM5MjAtNEFEMC05NEUzLTJGMTQ2ODYzQkRBMTEXMBUGA1UEChMOQ2xv\ndWRmbGFyZSBJbmMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqRRlk\nvRlqmEBRCYtTZHJYZvsSF8eIWfmJ8pH7M6IlJkdDnLwNOR7suJBD7B88p+2XBUiI\nH9er6k26k9Jt6kJT06ShewUyyOaxMO7DMLzMwVQ4nGJpAs7M2PW7QSVTkOO3ENMR\n7r6UYP3I7ApNNx3h60P5hSLEoDZwJCuEFMhqF5+xi5QEGZ4eLJXZDYc8/EePWjvt\nwFe2RmgpKL2hButz9vN0dqDVv9WNAJ3wLq6eY2aLKDo8XVwUJ80hkeQW9yQdw+1Y\nc5LfGiirtO0TmgU1byfSUEf4CTH3Woo/rTu9v4FfwSuaknZH6CVu+dsSRHOE2OSK\ng43VMi0VEDPMWQCBAgMBAAGjgbcwgbQwHQYDVR0OBBYEFKMYhg1vdkKXTQFk3Rlo\nA22GW3szMBMGA1UdJQQMMAoGCCsGAQUFBwMCMA4GA1UdDwEB/wQEAwIHgDAMBgNV\nHRMBAf8EAjAAMD8GA1UdHwQ4MDYwNKAyoDCGLmh0dHBzOi8vYXNraXQuamFtZmNs\nb3VkLmNvbS8vQ0EvSkFNRkNSTFNlcnZsZXQwHwYDVR0jBBgwFoAU3xcj5fNrUHoN\nSncnsGnC53EymIUwDQYJKoZIhvcNAQELBQADggEBADjKLd7rH/Zym3sSjYymGZPr\n2Uyqzgg1grFrxsPfZfosrFnLnBNHtge+8SVhTSesdCUDzyBTBQSkwZ2DSbEGpWhn\n3S6KvuX3jmo9jLEGlhaf4aeJ5hBOO1h5qfknysVthaubT9nTEpLwmFb5WtWAqF3K\n1Em988PXBuL6dz6hryn0ZNnMB4gQIswrpub4kO7nrcdWUpZLKH9MgM4LDpNAzulW\nDhQElexStK1nYT04i7rmdpkEPT5fA5bkzZyUUfeUxW+We8V4AuResJMrXrBeu0Yx\n+EHjLjvHl0aahn8HSJRz7ntbU0w0VZJTTOuRflRycRh5h3U5d7f1PhrRHG5AzN0=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIICbjCCAhWgAwIBAgIUMinDVsKUgTH1IUsQx0rol8bRL1QwCgYIKoZIzj0EAwIw\nfzELMAkGA1UEBhMCVVMxDjAMBgNVBAgTBVRleGFzMQ8wDQYDVQQHEwZBdXN0aW4x\nGTAXBgNVBAoTEENsb3VkZmxhcmUsIEluYy4xETAPBgNVBAsTCFNlY3VyaXR5MSEw\nHwYDVQQDExhDRk1hbmFnZSBJbnRlcm1lZGlhdGUgQ0EwHhcNMjMwNzEzMTQ1ODAw\nWhcNMjgwNzExMTQ1ODAwWjBCMRgwFgYDVQQDEw95MGY0MXFrMzdjLnBoeXMxJjAk\nBgkqhkiG9w0BCQEMF3NtYWNsZW9kQGNsb3VkZmxhcmUuY29tMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAERliyB2FMYqwUHvoqjZ4ZhM0sziLsPl/+0f2ympA67Cfa\nK8BIfCeEUdopcIaic9TNXL4cXIgH8KgyUIIony4zdqOBqzCBqDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAdBgNVHQ4E\nFgQUooGdLY4KZRAJOMN2cLIgxethOnIwHwYDVR0jBBgwFoAUY2d6eD+v0hUgnJgu\n5NSEam1EqoMwMwYDVR0RBCwwKoIPeTBmNDFxazM3Yy5waHlzgRdzbWFjbGVvZEBj\nbG91ZGZsYXJlLmNvbTAKBggqhkjOPQQDAgNHADBEAiBZnSw2gSs00KXJ6DiMK+CW\n0nOu3YOxjW136WQ/WzACNAIgILDjoQq/MPeoLdIpmizzPYF0fj8l5icHa7VM70W7\nozo=\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDhzCCAm+gAwIBAgIGMTMzNzIyMA0GCSqGSIb3DQEBCwUAMHIxGjAYBgNVBAMT\nEVN0cmF0dXMgbG9jYWwgZGV2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZv\ncm5pYTEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzEaMBgGA1UEChMRU3RyYXR1cyBs\nb2NhbCBkZXYwHhcNMjMwODIyMTM1NjAwWhcNMjMxMTIwMTQ1NjAwWjByMRowGAYD\nVQQDExFTdHJhdHVzIGxvY2FsIGRldjELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNh\nbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBGcmFuY2lzY28xGjAYBgNVBAoTEVN0cmF0\ndXMgbG9jYWwgZGV2MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxMGl\nRGWDGQ+ZWmvrVY2Ms5oju3nSrzir0oU+UiZs0mN35VSyzWv/nfPsd6tKdMHUvRqC\nG5z/f+ERn8vzg64VKp5JnwuF3Plw+Hgud9Gd1eexrEUt7JXzKPYEzezAuQnsPtn7\nIICeib2FAf6oE1ShTO4G5BZJxiAulgVi6LBAAYNdwk0pNXU1pOuyF/nlGZuBytJG\n5Wpw+LqtlCvVLZZ285wvH+pUoSkLam0PqONKNC2rr0FOxj42N7KxAt2FxHafwkxP\nNgLFpS9n83vT1I0Gdm43GCSYY4OQriiQUkmKJs4hsy3d97nw42mElIw1kg4KP+cn\nJdv5Jwl0aGvMWCawMwIDAQABoyMwITAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB\n/wQEAwICBDANBgkqhkiG9w0BAQsFAAOCAQEAnMtlqVenIin1kue057Kyoog+Dq7x\nFQ0YIbWGFvW6ZBGkWKtfF7k5e+PG/0MahgUcFZRCcGK93Ccoe69aaXoRqan7J3Nw\nNB5rjFej1lF2yyzI1d+4BBxwft/o8NC/Ec2S8ILoiCDQGykGY1FhCyjlCSE0BNJC\nstq/KUbcUtnK9FM0mbL0rrHQ3hXxr9hbQRqmWyFXgZzOO811O0drVqhDbElIBDY1\nOxyf1nkBHqz/Py8jivGvpAJx+GaWzVoahhyDuf1XBsJHhfW5bF6ErkUqMJ7jgg1f\nO0YzhK31zi/cBNVfBd7HzahHXsj+mk2Glqd+rOMjufh6GyHeSVjdA23ySA==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIEIjCCAwqgAwIBAgIIAd68xDltoBAwDQYJKoZIhvcNAQEFBQAwYjELMAkGA1UE\nBhMCVVMxEzARBgNVBAoTCkFwcGxlIEluYy4xJjAkBgNVBAsTHUFwcGxlIENlcnRp\nZmljYXRpb24gQXV0aG9yaXR5MRYwFAYDVQQDEw1BcHBsZSBSb290IENBMB4XDTEz\nMDIwNzIxNDg0N1oXDTIzMDIwNzIxNDg0N1owgZYxCzAJBgNVBAYTAlVTMRMwEQYD\nVQQKDApBcHBsZSBJbmMuMSwwKgYDVQQLDCNBcHBsZSBXb3JsZHdpZGUgRGV2ZWxv\ncGVyIFJlbGF0aW9uczFEMEIGA1UEAww7QXBwbGUgV29ybGR3aWRlIERldmVsb3Bl\nciBSZWxhdGlvbnMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEiMA0GCSqGSIb3\nDQEBAQUAA4IBDwAwggEKAoIBAQDKOFSmy1aqyCQ5SOmM7uxfuH8mkbw0U3rOfGOA\nYXdkXqUHI7Y5/lAtFVZYcC1+xG7BSoU+L/DehBqhV8mvexj/avoVEkkVCBmsqtsq\nMu2WY2hSFT2Miuy/axiV4AOsAX2XBWfODoWVN2rtCbauZ81RZJ/GXNG8V25nNYB2\nNqSHgW44j9grFU57Jdhav06DwY3Sk9UacbVgnJ0zTlX5ElgMhrgWDcHld0WNUEi6\nKy3klIXh6MSdxmilsKP8Z35wugJZS3dCkTm59c3hTO/AO0iMpuUhXf1qarunFjVg\n0uat80YpyejDi+l5wGphZxWy8P3laLxiX27Pmd3vG2P+kmWrAgMBAAGjgaYwgaMw\nHQYDVR0OBBYEFIgnFwmpthhgi+zruvZHWcVSVKO3MA8GA1UdEwEB/wQFMAMBAf8w\nHwYDVR0jBBgwFoAUK9BpR5R2Cf70a40uQKb3R01/CF4wLgYDVR0fBCcwJTAjoCGg\nH4YdaHR0cDovL2NybC5hcHBsZS5jb20vcm9vdC5jcmwwDgYDVR0PAQH/BAQDAgGG\nMBAGCiqGSIb3Y2QGAgEEAgUAMA0GCSqGSIb3DQEBBQUAA4IBAQBPz+9Zviz1smwv\nj+4ThzLoBTWobot9yWkMudkXvHcs1Gfi/ZptOllc34MBvbKuKmFysa/Nw0Uwj6OD\nDc4dR7Txk4qjdJukw5hyhzs+r0ULklS5MruQGFNrCk4QttkdUGwhgAqJTleMa1s8\nPab93vcNIx0LSiaHP7qRkkykGRIZbVf1eliHe2iK5IaMSuviSRSqpd1VAKmuu0sw\nruGgsbwpgOYJd+W+NKIByn/c4grmO7i77LpilfMFY0GCzQ87HUyVpNur+cmV6U/k\nTecmmYHpvPm0KdIBembhLoz2IYrF+Hjhga6/05Cdqa3zr/04GpZnMBxRpVzscYqC\ntGwPDBUf\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIC2DCCAjqgAwIBAgIUULP/3b3pBVa4Rxs9Wp+Qdgb2DzAwCgYIKoZIzj0EAwQw\nfjELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNh\nbiBGcmFuY2lzY28xGDAWBgNVBAoMD0Nsb3VkZmxhcmUsIEluYzEoMCYGA1UEAwwf\nQ2xvdWRmbGFyZSBDb3Jwb3JhdGUgWmVybyBUcnVzdDAeFw0yMzExMDIxMzQyMTZa\nFw0zMzEwMzAxMzQyMTZaMH4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9y\nbmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMRgwFgYDVQQKDA9DbG91ZGZsYXJl\nLCBJbmMxKDAmBgNVBAMMH0Nsb3VkZmxhcmUgQ29ycG9yYXRlIFplcm8gVHJ1c3Qw\ngZswEAYHKoZIzj0CAQYFK4EEACMDgYYABAAqcf4GGW2gqIu3GRbDb8VLCPe/6m5K\nhhpsPCDOnaD5OxNtitMpEywq0ZtitzjD6uVtShIbBO6rVkUH0wyQNYtXhgG5a1uW\nG6QkHRm9/5sAe6UdOy+UwLWTYo/sVY4LHmIqHkLHCzEnaIC8rTl7K6nrUS0x0yuV\nAKDAYSW6WJXyXA+SRKNTMFEwHQYDVR0OBBYEFK60CpeVd5k8fTeuwtrBHtTs2mRV\nMB8GA1UdIwQYMBaAFK60CpeVd5k8fTeuwtrBHtTs2mRVMA8GA1UdEwEB/wQFMAMB\nAf8wCgYIKoZIzj0EAwQDgYsAMIGHAkIBhZTzUJfb++V8p4n2K7amHWgxBI9o3ajQ\nnRyQAFgG91x5xsOV51+IBdLyBN5Gt4SfaYM3KniUiSbN91fEkVljLQACQRtNL3ua\nMPeiqlj1HAL7oB8zfBuKgQuI+HrOAcpyDedvxS2uEa9+eSZFnTZmoZUWwHUnvEIR\nV5jaFyo3WEykfoUF\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIDhzCCAm+gAwIBAgIGMTAxMjE0MA0GCSqGSIb3DQEBCwUAMHIxGjAYBgNVBAMT\nEVN0cmF0dXMgbG9jYWwgZGV2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZv\ncm5pYTEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzEaMBgGA1UEChMRU3RyYXR1cyBs\nb2NhbCBkZXYwHhcNMjMxMjEyMTQxMjI5WhcNMjQwMzExMTQxMjI5WjByMRowGAYD\nVQQDExFTdHJhdHVzIGxvY2FsIGRldjELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNh\nbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBGcmFuY2lzY28xGjAYBgNVBAoTEVN0cmF0\ndXMgbG9jYWwgZGV2MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt55+\njvAwnlDRCA4wpktOG4BWMQfmm02IrWcc8iOuoPqqwCaA4Du408HBeqc2kdYbNBP8\n61Haawq1ywWmaCYp9dp0oap92dDyoPnIeBlO0SCOjfJyYJgHyGn1ZsLL2lSjQVZ6\n1L7RwGre/N2X/MJOP+wurIOscyixzxj9bolwnINiUHV5sTk2fthOLM1eZ47NeLs9\nyZsUMt10ztH0GFW1hzTbwFNLqbWiHjIH/kwazNL1QNmJ+C9Li9BLh7tfiMoRf45x\nkjqORxqu0i49K8Jx0P4+43VP+Sa0QiDgNQ3J7VB1mbaBlZxW5qD3vIYTXflHgK34\nbI6xe5SasxP9G/aihwIDAQABoyMwITAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB\n/wQEAwICBDANBgkqhkiG9w0BAQsFAAOCAQEART0MlWamF+TsLXglpPhfVnlSqtT3\nSQJFUWPkSydq5PBjCJm3CePqqOJhbJM98ZlDA4mUujfDruAKivT+KsKn4cKhfgK8\nm7erBuZK7UM8Z2JdEkPmXtH4h5swJ+3EdLA5IMrc3WR6ZdnyzUtHP5cnriwONcNx\n2OD+IFEnYiNBVeBUn7xwHydkBKqPd2yhGicI9iqRjDPNI54jSEyMFI26y3aLDsz6\nVg+BNWFBcofeOXKOhwu/PSnUJ34Om3vk+KeasvuTEA2TKTwhcBLiBM4o3VuCCaNX\n9sCYcLiDcUguibkY4KXkPDEdtqMLDV2xe0yGsoxblxlHJIPt42oXwT75Og==\n-----END CERTIFICATE-----",
            "-----BEGIN CERTIFICATE-----\nMIIC2DCCAjqgAwIBAgIUULP/3b3pBVa4Rxs9Wp+Qdgb2DzAwCgYIKoZIzj0EAwQw\nfjELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNh\nbiBGcmFuY2lzY28xGDAWBgNVBAoMD0Nsb3VkZmxhcmUsIEluYzEoMCYGA1UEAwwf\nQ2xvdWRmbGFyZSBDb3Jwb3JhdGUgWmVybyBUcnVzdDAeFw0yMzExMDIxMzQyMTZa\nFw0zMzEwMzAxMzQyMTZaMH4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9y\nbmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMRgwFgYDVQQKDA9DbG91ZGZsYXJl\nLCBJbmMxKDAmBgNVBAMMH0Nsb3VkZmxhcmUgQ29ycG9yYXRlIFplcm8gVHJ1c3Qw\ngZswEAYHKoZIzj0CAQYFK4EEACMDgYYABAAqcf4GGW2gqIu3GRbDb8VLCPe/6m5K\nhhpsPCDOnaD5OxNtitMpEywq0ZtitzjD6uVtShIbBO6rVkUH0wyQNYtXhgG5a1uW\nG6QkHRm9/5sAe6UdOy+UwLWTYo/sVY4LHmIqHkLHCzEnaIC8rTl7K6nrUS0x0yuV\nAKDAYSW6WJXyXA+SRKNTMFEwHQYDVR0OBBYEFK60CpeVd5k8fTeuwtrBHtTs2mRV\nMB8GA1UdIwQYMBaAFK60CpeVd5k8fTeuwtrBHtTs2mRVMA8GA1UdEwEB/wQFMAMB\nAf8wCgYIKoZIzj0EAwQDgYsAMIGHAkIBhZTzUJfb++V8p4n2K7amHWgxBI9o3ajQ\nnRyQAFgG91x5xsOV51+IBdLyBN5Gt4SfaYM3KniUiSbN91fEkVljLQACQRtNL3ua\nMPeiqlj1HAL7oB8zfBuKgQuI+HrOAcpyDedvxS2uEa9+eSZFnTZmoZUWwHUnvEIR\nV5jaFyo3WEykfoUF\n-----END CERTIFICATE-----"
          ]
        }
      }
    }
  ],
  "sockets": [
    {
      "name": "entry",
      "service": {
        "name": "core:entry"
      },
      "http": {}
    }
  ],
  "extensions": [
    {
      "modules": [
        {
          "name": "miniflare:shared",
          "esModule": "// src/workers/shared/blob.worker.ts\nimport assert from \"node-internal:internal_assert\";\nimport { Buffer as Buffer2 } from \"node-internal:internal_buffer\";\n\n// src/workers/shared/data.ts\nimport { Buffer } from \"node-internal:internal_buffer\";\nfunction viewToBuffer(view) {\n  return view.buffer.slice(\n    view.byteOffset,\n    view.byteOffset + view.byteLength\n  );\n}\nfunction base64Encode(value) {\n  return Buffer.from(value, \"utf8\").toString(\"base64\");\n}\nfunction base64Decode(encoded) {\n  return Buffer.from(encoded, \"base64\").toString(\"utf8\");\n}\nvar dotRegexp = /(^|\\/|\\\\)(\\.+)(\\/|\\\\|$)/g, illegalRegexp = /[?<>*\"'^/\\\\:|\\x00-\\x1f\\x80-\\x9f]/g, windowsReservedRegexp = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i, leadingRegexp = /^[ /\\\\]+/, trailingRegexp = /[ /\\\\]+$/;\nfunction dotReplacement(match, g1, g2, g3) {\n  return `${g1}${\"\".padStart(g2.length, \"_\")}${g3}`;\n}\nfunction underscoreReplacement(match) {\n  return \"\".padStart(match.length, \"_\");\n}\nfunction sanitisePath(unsafe) {\n  return unsafe.replace(dotRegexp, dotReplacement).replace(dotRegexp, dotReplacement).replace(illegalRegexp, \"_\").replace(windowsReservedRegexp, \"_\").replace(leadingRegexp, underscoreReplacement).replace(trailingRegexp, underscoreReplacement).substring(0, 255);\n}\n\n// src/workers/shared/blob.worker.ts\nvar ENCODER = new TextEncoder();\nasync function readPrefix(stream, prefixLength) {\n  let reader = await stream.getReader({ mode: \"byob\" }), result = await reader.readAtLeast(\n    prefixLength,\n    new Uint8Array(prefixLength)\n  );\n  assert(result.value !== void 0), reader.releaseLock();\n  let rest = stream.pipeThrough(new IdentityTransformStream());\n  return [result.value, rest];\n}\nfunction rangeHeaders(range) {\n  return { Range: `bytes=${range.start}-${range.end}` };\n}\nfunction assertFullRangeRequest(range, contentLength) {\n  assert(\n    range.start === 0 && range.end === contentLength - 1,\n    \"Received full content, but requested partial content\"\n  );\n}\nasync function fetchSingleRange(fetcher, url, range) {\n  let headers = range === void 0 ? {} : rangeHeaders(range), res = await fetcher.fetch(url, { headers });\n  if (res.status === 404) return null;\n  if (assert(res.ok && res.body !== null), range !== void 0 && res.status !== 206) {\n    let contentLength = parseInt(res.headers.get(\"Content-Length\"));\n    assert(!Number.isNaN(contentLength)), assertFullRangeRequest(range, contentLength);\n  }\n  return res.body;\n}\nasync function writeMultipleRanges(fetcher, url, ranges, boundary, writable, contentLength, contentType) {\n  for (let i = 0; i < ranges.length; i++) {\n    let range = ranges[i], writer2 = writable.getWriter();\n    i > 0 && await writer2.write(ENCODER.encode(`\\r\n`)), await writer2.write(ENCODER.encode(`--${boundary}\\r\n`)), contentType !== void 0 && await writer2.write(ENCODER.encode(`Content-Type: ${contentType}\\r\n`));\n    let start = range.start, end = Math.min(range.end, contentLength - 1);\n    await writer2.write(\n      ENCODER.encode(\n        `Content-Range: bytes ${start}-${end}/${contentLength}\\r\n\\r\n`\n      )\n    ), writer2.releaseLock();\n    let res = await fetcher.fetch(url, { headers: rangeHeaders(range) });\n    assert(\n      res.ok && res.body !== null,\n      `Failed to fetch ${url}[${range.start},${range.end}], received ${res.status} ${res.statusText}`\n    ), res.status !== 206 && assertFullRangeRequest(range, contentLength), await res.body.pipeTo(writable, { preventClose: !0 });\n  }\n  let writer = writable.getWriter();\n  ranges.length > 0 && await writer.write(ENCODER.encode(`\\r\n`)), await writer.write(ENCODER.encode(`--${boundary}--`)), await writer.close();\n}\nasync function fetchMultipleRanges(fetcher, url, ranges, opts) {\n  let res = await fetcher.fetch(url, { method: \"HEAD\" });\n  if (res.status === 404) return null;\n  assert(res.ok);\n  let contentLength = parseInt(res.headers.get(\"Content-Length\"));\n  assert(!Number.isNaN(contentLength));\n  let boundary = `miniflare-boundary-${crypto.randomUUID()}`, multipartContentType = `multipart/byteranges; boundary=${boundary}`, { readable, writable } = new IdentityTransformStream();\n  return writeMultipleRanges(\n    fetcher,\n    url,\n    ranges,\n    boundary,\n    writable,\n    contentLength,\n    opts?.contentType\n  ).catch((e) => console.error(\"Error writing multipart stream:\", e)), { multipartContentType, body: readable };\n}\nasync function fetchRange(fetcher, url, range, opts) {\n  return Array.isArray(range) ? fetchMultipleRanges(fetcher, url, range, opts) : fetchSingleRange(fetcher, url, range);\n}\nfunction generateBlobId() {\n  let idBuffer = Buffer2.alloc(40);\n  return crypto.getRandomValues(\n    new Uint8Array(idBuffer.buffer, idBuffer.byteOffset, 32)\n  ), idBuffer.writeBigInt64BE(\n    BigInt(performance.timeOrigin + performance.now()),\n    32\n  ), idBuffer.toString(\"hex\");\n}\nvar BlobStore = class {\n  // Database for binary large objects. Provides single and multi-ranged\n  // streaming reads and writes.\n  //\n  // Blobs have unguessable identifiers, can be deleted, but are otherwise\n  // immutable. These properties make it possible to perform atomic updates with\n  // the SQLite metadata store. No other operations will be able to interact\n  // with the blob until it's committed to the metadata store, because they\n  // won't be able to guess the ID, and we don't allow listing blobs.\n  //\n  // For example, if we put a blob in the store, then fail to insert the blob ID\n  // into the SQLite database for some reason during a transaction (e.g.\n  // `onlyIf` condition failed), no other operations can read that blob because\n  // the ID is lost (we'll just background-delete the blob in this case).\n  #fetcher;\n  #baseURL;\n  #stickyBlobs;\n  constructor(fetcher, namespace, stickyBlobs) {\n    namespace = encodeURIComponent(sanitisePath(namespace)), this.#fetcher = fetcher, this.#baseURL = `http://placeholder/${namespace}/blobs/`, this.#stickyBlobs = stickyBlobs;\n  }\n  idURL(id) {\n    let url = new URL(this.#baseURL + id);\n    return url.toString().startsWith(this.#baseURL) ? url : null;\n  }\n  async get(id, range, opts) {\n    let idURL = this.idURL(id);\n    return idURL === null ? null : fetchRange(this.#fetcher, idURL, range, opts);\n  }\n  async put(stream) {\n    let id = generateBlobId(), idURL = this.idURL(id);\n    return assert(idURL !== null), await this.#fetcher.fetch(idURL, {\n      method: \"PUT\",\n      body: stream\n    }), id;\n  }\n  async delete(id) {\n    if (this.#stickyBlobs) return;\n    let idURL = this.idURL(id);\n    if (idURL === null) return;\n    let res = await this.#fetcher.fetch(idURL, { method: \"DELETE\" });\n    assert(res.ok || res.status === 404);\n  }\n};\n\n// src/workers/shared/constants.ts\nvar SharedHeaders = {\n  LOG_LEVEL: \"MF-Log-Level\"\n}, SharedBindings = {\n  TEXT_NAMESPACE: \"MINIFLARE_NAMESPACE\",\n  DURABLE_OBJECT_NAMESPACE_OBJECT: \"MINIFLARE_OBJECT\",\n  MAYBE_SERVICE_BLOBS: \"MINIFLARE_BLOBS\",\n  MAYBE_SERVICE_LOOPBACK: \"MINIFLARE_LOOPBACK\",\n  MAYBE_JSON_ENABLE_CONTROL_ENDPOINTS: \"MINIFLARE_ENABLE_CONTROL_ENDPOINTS\",\n  MAYBE_JSON_ENABLE_STICKY_BLOBS: \"MINIFLARE_STICKY_BLOBS\"\n}, LogLevel = /* @__PURE__ */ ((LogLevel3) => (LogLevel3[LogLevel3.NONE = 0] = \"NONE\", LogLevel3[LogLevel3.ERROR = 1] = \"ERROR\", LogLevel3[LogLevel3.WARN = 2] = \"WARN\", LogLevel3[LogLevel3.INFO = 3] = \"INFO\", LogLevel3[LogLevel3.DEBUG = 4] = \"DEBUG\", LogLevel3[LogLevel3.VERBOSE = 5] = \"VERBOSE\", LogLevel3))(LogLevel || {});\n\n// src/workers/shared/keyvalue.worker.ts\nimport assert3 from \"node-internal:internal_assert\";\n\n// src/workers/shared/sql.worker.ts\nimport assert2 from \"node-internal:internal_assert\";\nfunction isTypedValue(value) {\n  return value === null || typeof value == \"string\" || typeof value == \"number\" || value instanceof ArrayBuffer;\n}\nfunction createStatementFactory(sql) {\n  return (query) => {\n    let keyIndices = /* @__PURE__ */ new Map();\n    query = query.replace(/[:@$]([a-z0-9_]+)/gi, (_, name) => {\n      let index = keyIndices.get(name);\n      return index === void 0 && (index = keyIndices.size, keyIndices.set(name, index)), `?${index + 1}`;\n    });\n    let stmt = sql.prepare(query);\n    return (argsObject) => {\n      let entries = Object.entries(argsObject);\n      assert2.strictEqual(\n        entries.length,\n        keyIndices.size,\n        \"Expected same number of keys in bindings and query\"\n      );\n      let argsArray = new Array(entries.length);\n      for (let [key, value] of entries) {\n        let index = keyIndices.get(key);\n        assert2(index !== void 0, `Unexpected binding key: ${key}`), argsArray[index] = value;\n      }\n      return stmt(...argsArray);\n    };\n  };\n}\nfunction createTransactionFactory(storage) {\n  return (closure) => (...args) => storage.transactionSync(() => closure(...args));\n}\nfunction createTypedSql(storage) {\n  let sql = storage.sql;\n  return sql.stmt = createStatementFactory(sql), sql.txn = createTransactionFactory(storage), sql;\n}\nfunction get(cursor) {\n  let result;\n  for (let row of cursor) result ??= row;\n  return result;\n}\nfunction all(cursor) {\n  return Array.from(cursor);\n}\nfunction drain(cursor) {\n  for (let _ of cursor)\n    ;\n}\n\n// src/workers/shared/keyvalue.worker.ts\nvar SQL_SCHEMA = `\nCREATE TABLE IF NOT EXISTS _mf_entries (\n  key TEXT PRIMARY KEY,\n  blob_id TEXT NOT NULL,\n  expiration INTEGER,\n  metadata TEXT\n);\nCREATE INDEX IF NOT EXISTS _mf_entries_expiration_idx ON _mf_entries(expiration);\n`;\nfunction sqlStmts(db) {\n  let stmtGetBlobIdByKey = db.stmt(\n    \"SELECT blob_id FROM _mf_entries WHERE key = :key\"\n  ), stmtPut = db.stmt(\n    `INSERT OR REPLACE INTO _mf_entries (key, blob_id, expiration, metadata)\n    VALUES (:key, :blob_id, :expiration, :metadata)`\n  );\n  return {\n    getByKey: db.prepare(\n      \"SELECT key, blob_id, expiration, metadata FROM _mf_entries WHERE key = ?1\"\n    ),\n    put: db.txn((newEntry) => {\n      let key = newEntry.key, previousEntry = get(stmtGetBlobIdByKey({ key }));\n      return stmtPut(newEntry), previousEntry?.blob_id;\n    }),\n    deleteByKey: db.stmt(\n      \"DELETE FROM _mf_entries WHERE key = :key RETURNING blob_id, expiration\"\n    ),\n    deleteExpired: db.stmt(\n      // `expiration` may be `NULL`, but `NULL < ...` should be falsy\n      \"DELETE FROM _mf_entries WHERE expiration < :now RETURNING blob_id\"\n    ),\n    list: db.stmt(\n      `SELECT key, expiration, metadata FROM _mf_entries\n        WHERE substr(key, 1, length(:prefix)) = :prefix\n        AND key > :start_after\n        AND (expiration IS NULL OR expiration >= :now)\n        ORDER BY key LIMIT :limit`\n    )\n  };\n}\nfunction rowEntry(entry) {\n  return {\n    key: entry.key,\n    expiration: entry.expiration ?? void 0,\n    metadata: entry.metadata === null ? void 0 : JSON.parse(entry.metadata)\n  };\n}\nvar KeyValueStorage = class {\n  #stmts;\n  #blob;\n  #timers;\n  constructor(object) {\n    object.db.exec(\"PRAGMA case_sensitive_like = TRUE\"), object.db.exec(SQL_SCHEMA), this.#stmts = sqlStmts(object.db), this.#blob = object.blob, this.#timers = object.timers;\n  }\n  #hasExpired(entry) {\n    return entry.expiration !== null && entry.expiration <= this.#timers.now();\n  }\n  #backgroundDelete(blobId) {\n    this.#timers.queueMicrotask(\n      () => this.#blob.delete(blobId).catch(() => {\n      })\n    );\n  }\n  async get(key, optsFactory) {\n    let row = get(this.#stmts.getByKey(key));\n    if (row === void 0) return null;\n    if (this.#hasExpired(row))\n      return drain(this.#stmts.deleteByKey({ key })), this.#backgroundDelete(row.blob_id), null;\n    let entry = rowEntry(row), opts = entry.metadata && optsFactory?.(entry.metadata);\n    if (opts?.ranges === void 0 || opts.ranges.length <= 1) {\n      let value = await this.#blob.get(row.blob_id, opts?.ranges?.[0]);\n      return value === null ? null : { ...entry, value };\n    } else {\n      let value = await this.#blob.get(row.blob_id, opts.ranges, opts);\n      return value === null ? null : { ...entry, value };\n    }\n  }\n  async put(entry) {\n    assert3(entry.key !== \"\");\n    let blobId = await this.#blob.put(entry.value);\n    entry.signal?.aborted && (this.#backgroundDelete(blobId), entry.signal.throwIfAborted());\n    let maybeOldBlobId = this.#stmts.put({\n      key: entry.key,\n      blob_id: blobId,\n      expiration: entry.expiration ?? null,\n      metadata: entry.metadata === void 0 ? null : JSON.stringify(await entry.metadata)\n    });\n    maybeOldBlobId !== void 0 && this.#backgroundDelete(maybeOldBlobId);\n  }\n  async delete(key) {\n    let cursor = this.#stmts.deleteByKey({ key }), row = get(cursor);\n    return row === void 0 ? !1 : (this.#backgroundDelete(row.blob_id), !this.#hasExpired(row));\n  }\n  async list(opts) {\n    let now = this.#timers.now(), prefix = opts.prefix ?? \"\", start_after = opts.cursor === void 0 ? \"\" : base64Decode(opts.cursor), limit = opts.limit + 1, rowsCursor = this.#stmts.list({\n      now,\n      prefix,\n      start_after,\n      limit\n    }), rows = Array.from(rowsCursor), expiredRows = this.#stmts.deleteExpired({ now });\n    for (let row of expiredRows) this.#backgroundDelete(row.blob_id);\n    let hasMoreRows = rows.length === opts.limit + 1;\n    rows.splice(opts.limit, 1);\n    let keys = rows.map((row) => rowEntry(row)), nextCursor = hasMoreRows ? base64Encode(rows[opts.limit - 1].key) : void 0;\n    return { keys, cursor: nextCursor };\n  }\n};\n\n// src/workers/shared/matcher.ts\nfunction testRegExps(matcher, value) {\n  for (let exclude of matcher.exclude) if (exclude.test(value)) return !1;\n  for (let include of matcher.include) if (include.test(value)) return !0;\n  return !1;\n}\n\n// src/workers/shared/object.worker.ts\nimport assert5 from \"node-internal:internal_assert\";\n\n// src/workers/shared/router.worker.ts\nvar HttpError = class extends Error {\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n    Object.setPrototypeOf(this, new.target.prototype), this.name = `${new.target.name} [${code}]`;\n  }\n  toResponse() {\n    return new Response(this.message, {\n      status: this.code,\n      // Custom statusMessage is required for runtime error messages\n      statusText: this.message.substring(0, 512)\n    });\n  }\n}, kRoutesTemplate = Symbol(\"kRoutesTemplate\"), Router = class {\n  // Routes added by @METHOD decorators\n  #routes;\n  constructor() {\n    this.#routes = new.target.prototype[kRoutesTemplate];\n  }\n  async fetch(req) {\n    let url = new URL(req.url), methodRoutes = this.#routes?.get(req.method);\n    if (methodRoutes === void 0) return new Response(null, { status: 405 });\n    let handlers = this;\n    try {\n      for (let [path, key] of methodRoutes) {\n        let match = path.exec(url.pathname);\n        if (match !== null) return await handlers[key](req, match.groups, url);\n      }\n      return new Response(null, { status: 404 });\n    } catch (e) {\n      if (e instanceof HttpError)\n        return e.toResponse();\n      throw e;\n    }\n  }\n};\nfunction pathToRegexp(path) {\n  return path === void 0 ? /^.*$/ : (path.endsWith(\"/\") || (path += \"/?\"), path = path.replace(/\\//g, \"\\\\/\"), path = path.replace(/:(\\w+)/g, \"(?<$1>[^\\\\/]+)\"), new RegExp(`^${path}$`));\n}\nvar createRouteDecorator = (method) => (path) => (prototype, key) => {\n  let route = [pathToRegexp(path), key], routes = prototype[kRoutesTemplate] ??= /* @__PURE__ */ new Map(), methodRoutes = routes.get(method);\n  methodRoutes ? methodRoutes.push(route) : routes.set(method, [route]);\n}, GET = createRouteDecorator(\"GET\"), HEAD = createRouteDecorator(\"HEAD\"), POST = createRouteDecorator(\"POST\"), PUT = createRouteDecorator(\"PUT\"), DELETE = createRouteDecorator(\"DELETE\"), PURGE = createRouteDecorator(\"PURGE\"), PATCH = createRouteDecorator(\"PATCH\");\n\n// src/workers/shared/timers.worker.ts\nimport assert4 from \"node-internal:internal_assert\";\nvar kFakeTimerHandle = Symbol(\"kFakeTimerHandle\"), Timers = class {\n  // Fake unix time in milliseconds. If defined, fake timers will be enabled.\n  #fakeTimestamp;\n  #fakeNextTimerHandle = 0;\n  #fakePendingTimeouts = /* @__PURE__ */ new Map();\n  #fakeRunningTasks = /* @__PURE__ */ new Set();\n  // Timers API\n  now = () => this.#fakeTimestamp ?? Date.now();\n  setTimeout(closure, delay, ...args) {\n    if (this.#fakeTimestamp === void 0)\n      return setTimeout(closure, delay, ...args);\n    let handle = this.#fakeNextTimerHandle++, argsClosure = () => closure(...args);\n    if (delay === 0)\n      this.queueMicrotask(argsClosure);\n    else {\n      let timeout = {\n        triggerTimestamp: this.#fakeTimestamp + delay,\n        closure: argsClosure\n      };\n      this.#fakePendingTimeouts.set(handle, timeout);\n    }\n    return { [kFakeTimerHandle]: handle };\n  }\n  clearTimeout(handle) {\n    if (typeof handle == \"number\") return clearTimeout(handle);\n    this.#fakePendingTimeouts.delete(handle[kFakeTimerHandle]);\n  }\n  queueMicrotask(closure) {\n    if (this.#fakeTimestamp === void 0) return queueMicrotask(closure);\n    let result = closure();\n    result instanceof Promise && (this.#fakeRunningTasks.add(result), result.finally(() => this.#fakeRunningTasks.delete(result)));\n  }\n  // Fake Timers Control API\n  #runPendingTimeouts() {\n    if (this.#fakeTimestamp !== void 0)\n      for (let [handle, timeout] of this.#fakePendingTimeouts)\n        timeout.triggerTimestamp <= this.#fakeTimestamp && (this.#fakePendingTimeouts.delete(handle), this.queueMicrotask(timeout.closure));\n  }\n  enableFakeTimers(timestamp) {\n    this.#fakeTimestamp = timestamp, this.#runPendingTimeouts();\n  }\n  disableFakeTimers() {\n    this.#fakeTimestamp = void 0, this.#fakePendingTimeouts.clear();\n  }\n  advanceFakeTime(delta) {\n    assert4(\n      this.#fakeTimestamp !== void 0,\n      \"Expected fake timers to be enabled before `advanceFakeTime()` call\"\n    ), this.#fakeTimestamp += delta, this.#runPendingTimeouts();\n  }\n  async waitForFakeTasks() {\n    for (; this.#fakeRunningTasks.size > 0; )\n      await Promise.all(this.#fakeRunningTasks);\n  }\n};\n\n// src/workers/shared/types.ts\nfunction reduceError(e) {\n  return {\n    name: e?.name,\n    message: e?.message ?? String(e),\n    stack: e?.stack,\n    cause: e?.cause === void 0 ? void 0 : reduceError(e.cause)\n  };\n}\nfunction maybeApply(f, maybeValue) {\n  return maybeValue === void 0 ? void 0 : f(maybeValue);\n}\n\n// src/workers/shared/object.worker.ts\nvar MiniflareDurableObject = class extends Router {\n  constructor(state, env) {\n    super();\n    this.state = state;\n    this.env = env;\n  }\n  timers = new Timers();\n  // If this Durable Object receives a control op, assume it's being tested.\n  // We use this to adjust some limits in tests.\n  beingTested = !1;\n  #db;\n  get db() {\n    return this.#db ??= createTypedSql(this.state.storage);\n  }\n  #name;\n  get name() {\n    return assert5(\n      this.#name !== void 0,\n      \"Expected `MiniflareDurableObject#fetch()` call before `name` access\"\n    ), this.#name;\n  }\n  #blob;\n  get blob() {\n    if (this.#blob !== void 0) return this.#blob;\n    let maybeBlobsService = this.env[SharedBindings.MAYBE_SERVICE_BLOBS], stickyBlobs = !!this.env[SharedBindings.MAYBE_JSON_ENABLE_STICKY_BLOBS];\n    return assert5(\n      maybeBlobsService !== void 0,\n      `Expected ${SharedBindings.MAYBE_SERVICE_BLOBS} service binding`\n    ), this.#blob = new BlobStore(maybeBlobsService, this.name, stickyBlobs), this.#blob;\n  }\n  async logWithLevel(level, message) {\n    await this.env[SharedBindings.MAYBE_SERVICE_LOOPBACK]?.fetch(\n      \"http://localhost/core/log\",\n      {\n        method: \"POST\",\n        headers: { [SharedHeaders.LOG_LEVEL]: level.toString() },\n        body: message\n      }\n    );\n  }\n  async #handleControlOp({\n    name,\n    args\n  }) {\n    if (this.beingTested = !0, name === \"sqlQuery\") {\n      assert5(args !== void 0);\n      let [query, ...params] = args;\n      assert5(typeof query == \"string\"), assert5(params.every(isTypedValue));\n      let results = all(this.db.prepare(query)(...params));\n      return Response.json(results);\n    } else if (name === \"getBlob\") {\n      assert5(args !== void 0);\n      let [id] = args;\n      assert5(typeof id == \"string\");\n      let stream = await this.blob.get(id);\n      return new Response(stream, { status: stream === null ? 404 : 200 });\n    } else {\n      let func = this.timers[name];\n      assert5(typeof func == \"function\");\n      let result = await func.apply(this.timers, args);\n      return Response.json(result ?? null);\n    }\n  }\n  async fetch(req) {\n    if (this.env[SharedBindings.MAYBE_JSON_ENABLE_CONTROL_ENDPOINTS] === !0) {\n      let controlOp = req?.cf?.miniflare?.controlOp;\n      if (controlOp !== void 0) return this.#handleControlOp(controlOp);\n    }\n    let name = req.cf?.miniflare?.name;\n    assert5(name !== void 0, \"Expected `cf.miniflare.name`\"), this.#name = name;\n    try {\n      return await super.fetch(req);\n    } catch (e) {\n      let error = reduceError(e), fallback = error.stack ?? error.message, loopbackService = this.env[SharedBindings.MAYBE_SERVICE_LOOPBACK];\n      return loopbackService !== void 0 ? loopbackService.fetch(\"http://localhost/core/error\", {\n        method: \"POST\",\n        body: JSON.stringify(error)\n      }).catch(() => {\n        console.error(fallback);\n      }) : console.error(fallback), new Response(fallback, { status: 500 });\n    } finally {\n      req.body !== null && !req.bodyUsed && await req.body.pipeTo(new WritableStream());\n    }\n  }\n};\n\n// src/workers/shared/range.ts\nvar rangePrefixRegexp = /^ *bytes *=/i, rangeRegexp = /^ *(?<start>\\d+)? *- *(?<end>\\d+)? *$/;\nfunction parseRanges(rangeHeader, length) {\n  let prefixMatch = rangePrefixRegexp.exec(rangeHeader);\n  if (prefixMatch === null) return;\n  if (rangeHeader = rangeHeader.substring(prefixMatch[0].length), rangeHeader.trimStart() === \"\") return [];\n  let ranges = rangeHeader.split(\",\"), result = [];\n  for (let range of ranges) {\n    let match = rangeRegexp.exec(range);\n    if (match === null) return;\n    let { start, end } = match.groups;\n    if (start !== void 0 && end !== void 0) {\n      let rangeStart = parseInt(start), rangeEnd = parseInt(end);\n      if (rangeStart > rangeEnd || rangeStart >= length) return;\n      rangeEnd >= length && (rangeEnd = length - 1), result.push({ start: rangeStart, end: rangeEnd });\n    } else if (start !== void 0 && end === void 0) {\n      let rangeStart = parseInt(start);\n      if (rangeStart >= length) return;\n      result.push({ start: rangeStart, end: length - 1 });\n    } else if (start === void 0 && end !== void 0) {\n      let suffix = parseInt(end);\n      if (suffix >= length) return [];\n      if (suffix === 0) continue;\n      result.push({ start: length - suffix, end: length - 1 });\n    } else\n      return;\n  }\n  return result;\n}\n\n// src/workers/shared/sync.ts\nimport assert6 from \"node-internal:internal_assert\";\nvar DeferredPromise = class extends Promise {\n  resolve;\n  reject;\n  constructor(executor = () => {\n  }) {\n    let promiseResolve, promiseReject;\n    super((resolve, reject) => (promiseResolve = resolve, promiseReject = reject, executor(resolve, reject))), this.resolve = promiseResolve, this.reject = promiseReject;\n  }\n}, Mutex = class {\n  locked = !1;\n  resolveQueue = [];\n  drainQueue = [];\n  lock() {\n    if (!this.locked) {\n      this.locked = !0;\n      return;\n    }\n    return new Promise((resolve) => this.resolveQueue.push(resolve));\n  }\n  unlock() {\n    if (assert6(this.locked), this.resolveQueue.length > 0)\n      this.resolveQueue.shift()?.();\n    else {\n      this.locked = !1;\n      let resolve;\n      for (; (resolve = this.drainQueue.shift()) !== void 0; ) resolve();\n    }\n  }\n  get hasWaiting() {\n    return this.resolveQueue.length > 0;\n  }\n  async runWith(closure) {\n    let acquireAwaitable = this.lock();\n    acquireAwaitable instanceof Promise && await acquireAwaitable;\n    try {\n      let awaitable = closure();\n      return awaitable instanceof Promise ? await awaitable : awaitable;\n    } finally {\n      this.unlock();\n    }\n  }\n  async drained() {\n    if (!(this.resolveQueue.length === 0 && !this.locked))\n      return new Promise((resolve) => this.drainQueue.push(resolve));\n  }\n}, WaitGroup = class {\n  counter = 0;\n  resolveQueue = [];\n  add() {\n    this.counter++;\n  }\n  done() {\n    if (assert6(this.counter > 0), this.counter--, this.counter === 0) {\n      let resolve;\n      for (; (resolve = this.resolveQueue.shift()) !== void 0; ) resolve();\n    }\n  }\n  wait() {\n    return this.counter === 0 ? Promise.resolve() : new Promise((resolve) => this.resolveQueue.push(resolve));\n  }\n};\nexport {\n  BlobStore,\n  DELETE,\n  DeferredPromise,\n  GET,\n  HEAD,\n  HttpError,\n  KeyValueStorage,\n  LogLevel,\n  MiniflareDurableObject,\n  Mutex,\n  PATCH,\n  POST,\n  PURGE,\n  PUT,\n  Router,\n  SharedBindings,\n  SharedHeaders,\n  Timers,\n  WaitGroup,\n  all,\n  base64Decode,\n  base64Encode,\n  drain,\n  get,\n  maybeApply,\n  parseRanges,\n  readPrefix,\n  reduceError,\n  testRegExps,\n  viewToBuffer\n};\n/*! Path sanitisation regexps adapted from node-sanitize-filename:\n * https://github.com/parshap/node-sanitize-filename/blob/209c39b914c8eb48ee27bcbde64b2c7822fdf3de/index.js#L4-L37\n *\n * Licensed under the ISC license:\n *\n * Copyright Parsha Pourkhomami <parshap@gmail.com>\n *\n * Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the\n * above copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY\n * DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n//# sourceMappingURL=index.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/shared/index.worker.js"
        },
        {
          "name": "miniflare:zod",
          "esModule": "// src/workers/shared/zod.worker.ts\nimport { Buffer } from \"node-internal:internal_buffer\";\n\n// ../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/index.mjs\nvar util;\n(function(util2) {\n  util2.assertEqual = (val) => val;\n  function assertIs(_arg) {\n  }\n  util2.assertIs = assertIs;\n  function assertNever(_x) {\n    throw new Error();\n  }\n  util2.assertNever = assertNever, util2.arrayToEnum = (items) => {\n    let obj = {};\n    for (let item of items)\n      obj[item] = item;\n    return obj;\n  }, util2.getValidEnumValues = (obj) => {\n    let validKeys = util2.objectKeys(obj).filter((k) => typeof obj[obj[k]] != \"number\"), filtered = {};\n    for (let k of validKeys)\n      filtered[k] = obj[k];\n    return util2.objectValues(filtered);\n  }, util2.objectValues = (obj) => util2.objectKeys(obj).map(function(e) {\n    return obj[e];\n  }), util2.objectKeys = typeof Object.keys == \"function\" ? (obj) => Object.keys(obj) : (object) => {\n    let keys = [];\n    for (let key in object)\n      Object.prototype.hasOwnProperty.call(object, key) && keys.push(key);\n    return keys;\n  }, util2.find = (arr, checker) => {\n    for (let item of arr)\n      if (checker(item))\n        return item;\n  }, util2.isInteger = typeof Number.isInteger == \"function\" ? (val) => Number.isInteger(val) : (val) => typeof val == \"number\" && isFinite(val) && Math.floor(val) === val;\n  function joinValues(array, separator = \" | \") {\n    return array.map((val) => typeof val == \"string\" ? `'${val}'` : val).join(separator);\n  }\n  util2.joinValues = joinValues, util2.jsonStringifyReplacer = (_, value) => typeof value == \"bigint\" ? value.toString() : value;\n})(util || (util = {}));\nvar objectUtil;\n(function(objectUtil2) {\n  objectUtil2.mergeShapes = (first, second) => ({\n    ...first,\n    ...second\n    // second overwrites first\n  });\n})(objectUtil || (objectUtil = {}));\nvar ZodParsedType = util.arrayToEnum([\n  \"string\",\n  \"nan\",\n  \"number\",\n  \"integer\",\n  \"float\",\n  \"boolean\",\n  \"date\",\n  \"bigint\",\n  \"symbol\",\n  \"function\",\n  \"undefined\",\n  \"null\",\n  \"array\",\n  \"object\",\n  \"unknown\",\n  \"promise\",\n  \"void\",\n  \"never\",\n  \"map\",\n  \"set\"\n]), getParsedType = (data) => {\n  switch (typeof data) {\n    case \"undefined\":\n      return ZodParsedType.undefined;\n    case \"string\":\n      return ZodParsedType.string;\n    case \"number\":\n      return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n    case \"boolean\":\n      return ZodParsedType.boolean;\n    case \"function\":\n      return ZodParsedType.function;\n    case \"bigint\":\n      return ZodParsedType.bigint;\n    case \"symbol\":\n      return ZodParsedType.symbol;\n    case \"object\":\n      return Array.isArray(data) ? ZodParsedType.array : data === null ? ZodParsedType.null : data.then && typeof data.then == \"function\" && data.catch && typeof data.catch == \"function\" ? ZodParsedType.promise : typeof Map < \"u\" && data instanceof Map ? ZodParsedType.map : typeof Set < \"u\" && data instanceof Set ? ZodParsedType.set : typeof Date < \"u\" && data instanceof Date ? ZodParsedType.date : ZodParsedType.object;\n    default:\n      return ZodParsedType.unknown;\n  }\n}, ZodIssueCode = util.arrayToEnum([\n  \"invalid_type\",\n  \"invalid_literal\",\n  \"custom\",\n  \"invalid_union\",\n  \"invalid_union_discriminator\",\n  \"invalid_enum_value\",\n  \"unrecognized_keys\",\n  \"invalid_arguments\",\n  \"invalid_return_type\",\n  \"invalid_date\",\n  \"invalid_string\",\n  \"too_small\",\n  \"too_big\",\n  \"invalid_intersection_types\",\n  \"not_multiple_of\",\n  \"not_finite\"\n]), quotelessJson = (obj) => JSON.stringify(obj, null, 2).replace(/\"([^\"]+)\":/g, \"$1:\"), ZodError = class extends Error {\n  constructor(issues) {\n    super(), this.issues = [], this.addIssue = (sub) => {\n      this.issues = [...this.issues, sub];\n    }, this.addIssues = (subs = []) => {\n      this.issues = [...this.issues, ...subs];\n    };\n    let actualProto = new.target.prototype;\n    Object.setPrototypeOf ? Object.setPrototypeOf(this, actualProto) : this.__proto__ = actualProto, this.name = \"ZodError\", this.issues = issues;\n  }\n  get errors() {\n    return this.issues;\n  }\n  format(_mapper) {\n    let mapper = _mapper || function(issue) {\n      return issue.message;\n    }, fieldErrors = { _errors: [] }, processError = (error) => {\n      for (let issue of error.issues)\n        if (issue.code === \"invalid_union\")\n          issue.unionErrors.map(processError);\n        else if (issue.code === \"invalid_return_type\")\n          processError(issue.returnTypeError);\n        else if (issue.code === \"invalid_arguments\")\n          processError(issue.argumentsError);\n        else if (issue.path.length === 0)\n          fieldErrors._errors.push(mapper(issue));\n        else {\n          let curr = fieldErrors, i = 0;\n          for (; i < issue.path.length; ) {\n            let el = issue.path[i];\n            i === issue.path.length - 1 ? (curr[el] = curr[el] || { _errors: [] }, curr[el]._errors.push(mapper(issue))) : curr[el] = curr[el] || { _errors: [] }, curr = curr[el], i++;\n          }\n        }\n    };\n    return processError(this), fieldErrors;\n  }\n  toString() {\n    return this.message;\n  }\n  get message() {\n    return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n  }\n  get isEmpty() {\n    return this.issues.length === 0;\n  }\n  flatten(mapper = (issue) => issue.message) {\n    let fieldErrors = {}, formErrors = [];\n    for (let sub of this.issues)\n      sub.path.length > 0 ? (fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [], fieldErrors[sub.path[0]].push(mapper(sub))) : formErrors.push(mapper(sub));\n    return { formErrors, fieldErrors };\n  }\n  get formErrors() {\n    return this.flatten();\n  }\n};\nZodError.create = (issues) => new ZodError(issues);\nvar errorMap = (issue, _ctx) => {\n  let message;\n  switch (issue.code) {\n    case ZodIssueCode.invalid_type:\n      issue.received === ZodParsedType.undefined ? message = \"Required\" : message = `Expected ${issue.expected}, received ${issue.received}`;\n      break;\n    case ZodIssueCode.invalid_literal:\n      message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n      break;\n    case ZodIssueCode.unrecognized_keys:\n      message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n      break;\n    case ZodIssueCode.invalid_union:\n      message = \"Invalid input\";\n      break;\n    case ZodIssueCode.invalid_union_discriminator:\n      message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n      break;\n    case ZodIssueCode.invalid_enum_value:\n      message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n      break;\n    case ZodIssueCode.invalid_arguments:\n      message = \"Invalid function arguments\";\n      break;\n    case ZodIssueCode.invalid_return_type:\n      message = \"Invalid function return type\";\n      break;\n    case ZodIssueCode.invalid_date:\n      message = \"Invalid date\";\n      break;\n    case ZodIssueCode.invalid_string:\n      typeof issue.validation == \"object\" ? \"includes\" in issue.validation ? (message = `Invalid input: must include \"${issue.validation.includes}\"`, typeof issue.validation.position == \"number\" && (message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`)) : \"startsWith\" in issue.validation ? message = `Invalid input: must start with \"${issue.validation.startsWith}\"` : \"endsWith\" in issue.validation ? message = `Invalid input: must end with \"${issue.validation.endsWith}\"` : util.assertNever(issue.validation) : issue.validation !== \"regex\" ? message = `Invalid ${issue.validation}` : message = \"Invalid\";\n      break;\n    case ZodIssueCode.too_small:\n      issue.type === \"array\" ? message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? \"at least\" : \"more than\"} ${issue.minimum} element(s)` : issue.type === \"string\" ? message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? \"at least\" : \"over\"} ${issue.minimum} character(s)` : issue.type === \"number\" ? message = `Number must be ${issue.exact ? \"exactly equal to \" : issue.inclusive ? \"greater than or equal to \" : \"greater than \"}${issue.minimum}` : issue.type === \"date\" ? message = `Date must be ${issue.exact ? \"exactly equal to \" : issue.inclusive ? \"greater than or equal to \" : \"greater than \"}${new Date(Number(issue.minimum))}` : message = \"Invalid input\";\n      break;\n    case ZodIssueCode.too_big:\n      issue.type === \"array\" ? message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? \"at most\" : \"less than\"} ${issue.maximum} element(s)` : issue.type === \"string\" ? message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? \"at most\" : \"under\"} ${issue.maximum} character(s)` : issue.type === \"number\" ? message = `Number must be ${issue.exact ? \"exactly\" : issue.inclusive ? \"less than or equal to\" : \"less than\"} ${issue.maximum}` : issue.type === \"bigint\" ? message = `BigInt must be ${issue.exact ? \"exactly\" : issue.inclusive ? \"less than or equal to\" : \"less than\"} ${issue.maximum}` : issue.type === \"date\" ? message = `Date must be ${issue.exact ? \"exactly\" : issue.inclusive ? \"smaller than or equal to\" : \"smaller than\"} ${new Date(Number(issue.maximum))}` : message = \"Invalid input\";\n      break;\n    case ZodIssueCode.custom:\n      message = \"Invalid input\";\n      break;\n    case ZodIssueCode.invalid_intersection_types:\n      message = \"Intersection results could not be merged\";\n      break;\n    case ZodIssueCode.not_multiple_of:\n      message = `Number must be a multiple of ${issue.multipleOf}`;\n      break;\n    case ZodIssueCode.not_finite:\n      message = \"Number must be finite\";\n      break;\n    default:\n      message = _ctx.defaultError, util.assertNever(issue);\n  }\n  return { message };\n}, overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n  overrideErrorMap = map;\n}\nfunction getErrorMap() {\n  return overrideErrorMap;\n}\nvar makeIssue = (params) => {\n  let { data, path, errorMaps, issueData } = params, fullPath = [...path, ...issueData.path || []], fullIssue = {\n    ...issueData,\n    path: fullPath\n  }, errorMessage = \"\", maps = errorMaps.filter((m) => !!m).slice().reverse();\n  for (let map of maps)\n    errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n  return {\n    ...issueData,\n    path: fullPath,\n    message: issueData.message || errorMessage\n  };\n}, EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n  let issue = makeIssue({\n    issueData,\n    data: ctx.data,\n    path: ctx.path,\n    errorMaps: [\n      ctx.common.contextualErrorMap,\n      ctx.schemaErrorMap,\n      getErrorMap(),\n      errorMap\n      // then global default map\n    ].filter((x) => !!x)\n  });\n  ctx.common.issues.push(issue);\n}\nvar ParseStatus = class _ParseStatus {\n  constructor() {\n    this.value = \"valid\";\n  }\n  dirty() {\n    this.value === \"valid\" && (this.value = \"dirty\");\n  }\n  abort() {\n    this.value !== \"aborted\" && (this.value = \"aborted\");\n  }\n  static mergeArray(status, results) {\n    let arrayValue = [];\n    for (let s of results) {\n      if (s.status === \"aborted\")\n        return INVALID;\n      s.status === \"dirty\" && status.dirty(), arrayValue.push(s.value);\n    }\n    return { status: status.value, value: arrayValue };\n  }\n  static async mergeObjectAsync(status, pairs) {\n    let syncPairs = [];\n    for (let pair of pairs)\n      syncPairs.push({\n        key: await pair.key,\n        value: await pair.value\n      });\n    return _ParseStatus.mergeObjectSync(status, syncPairs);\n  }\n  static mergeObjectSync(status, pairs) {\n    let finalObject = {};\n    for (let pair of pairs) {\n      let { key, value } = pair;\n      if (key.status === \"aborted\" || value.status === \"aborted\")\n        return INVALID;\n      key.status === \"dirty\" && status.dirty(), value.status === \"dirty\" && status.dirty(), key.value !== \"__proto__\" && (typeof value.value < \"u\" || pair.alwaysSet) && (finalObject[key.value] = value.value);\n    }\n    return { status: status.value, value: finalObject };\n  }\n}, INVALID = Object.freeze({\n  status: \"aborted\"\n}), DIRTY = (value) => ({ status: \"dirty\", value }), OK = (value) => ({ status: \"valid\", value }), isAborted = (x) => x.status === \"aborted\", isDirty = (x) => x.status === \"dirty\", isValid = (x) => x.status === \"valid\", isAsync = (x) => typeof Promise < \"u\" && x instanceof Promise, errorUtil;\n(function(errorUtil2) {\n  errorUtil2.errToObj = (message) => typeof message == \"string\" ? { message } : message || {}, errorUtil2.toString = (message) => typeof message == \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\nvar ParseInputLazyPath = class {\n  constructor(parent, value, path, key) {\n    this._cachedPath = [], this.parent = parent, this.data = value, this._path = path, this._key = key;\n  }\n  get path() {\n    return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)), this._cachedPath;\n  }\n}, handleResult = (ctx, result) => {\n  if (isValid(result))\n    return { success: !0, data: result.value };\n  if (!ctx.common.issues.length)\n    throw new Error(\"Validation failed but no issues detected.\");\n  return {\n    success: !1,\n    get error() {\n      if (this._error)\n        return this._error;\n      let error = new ZodError(ctx.common.issues);\n      return this._error = error, this._error;\n    }\n  };\n};\nfunction processCreateParams(params) {\n  if (!params)\n    return {};\n  let { errorMap: errorMap2, invalid_type_error, required_error, description } = params;\n  if (errorMap2 && (invalid_type_error || required_error))\n    throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n  return errorMap2 ? { errorMap: errorMap2, description } : { errorMap: (iss, ctx) => iss.code !== \"invalid_type\" ? { message: ctx.defaultError } : typeof ctx.data > \"u\" ? { message: required_error ?? ctx.defaultError } : { message: invalid_type_error ?? ctx.defaultError }, description };\n}\nvar ZodType = class {\n  constructor(def) {\n    this.spa = this.safeParseAsync, this._def = def, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.brand = this.brand.bind(this), this.default = this.default.bind(this), this.catch = this.catch.bind(this), this.describe = this.describe.bind(this), this.pipe = this.pipe.bind(this), this.readonly = this.readonly.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this);\n  }\n  get description() {\n    return this._def.description;\n  }\n  _getType(input) {\n    return getParsedType(input.data);\n  }\n  _getOrReturnCtx(input, ctx) {\n    return ctx || {\n      common: input.parent.common,\n      data: input.data,\n      parsedType: getParsedType(input.data),\n      schemaErrorMap: this._def.errorMap,\n      path: input.path,\n      parent: input.parent\n    };\n  }\n  _processInputParams(input) {\n    return {\n      status: new ParseStatus(),\n      ctx: {\n        common: input.parent.common,\n        data: input.data,\n        parsedType: getParsedType(input.data),\n        schemaErrorMap: this._def.errorMap,\n        path: input.path,\n        parent: input.parent\n      }\n    };\n  }\n  _parseSync(input) {\n    let result = this._parse(input);\n    if (isAsync(result))\n      throw new Error(\"Synchronous parse encountered promise.\");\n    return result;\n  }\n  _parseAsync(input) {\n    let result = this._parse(input);\n    return Promise.resolve(result);\n  }\n  parse(data, params) {\n    let result = this.safeParse(data, params);\n    if (result.success)\n      return result.data;\n    throw result.error;\n  }\n  safeParse(data, params) {\n    var _a;\n    let ctx = {\n      common: {\n        issues: [],\n        async: (_a = params?.async) !== null && _a !== void 0 ? _a : !1,\n        contextualErrorMap: params?.errorMap\n      },\n      path: params?.path || [],\n      schemaErrorMap: this._def.errorMap,\n      parent: null,\n      data,\n      parsedType: getParsedType(data)\n    }, result = this._parseSync({ data, path: ctx.path, parent: ctx });\n    return handleResult(ctx, result);\n  }\n  async parseAsync(data, params) {\n    let result = await this.safeParseAsync(data, params);\n    if (result.success)\n      return result.data;\n    throw result.error;\n  }\n  async safeParseAsync(data, params) {\n    let ctx = {\n      common: {\n        issues: [],\n        contextualErrorMap: params?.errorMap,\n        async: !0\n      },\n      path: params?.path || [],\n      schemaErrorMap: this._def.errorMap,\n      parent: null,\n      data,\n      parsedType: getParsedType(data)\n    }, maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx }), result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n    return handleResult(ctx, result);\n  }\n  refine(check, message) {\n    let getIssueProperties = (val) => typeof message == \"string\" || typeof message > \"u\" ? { message } : typeof message == \"function\" ? message(val) : message;\n    return this._refinement((val, ctx) => {\n      let result = check(val), setError = () => ctx.addIssue({\n        code: ZodIssueCode.custom,\n        ...getIssueProperties(val)\n      });\n      return typeof Promise < \"u\" && result instanceof Promise ? result.then((data) => data ? !0 : (setError(), !1)) : result ? !0 : (setError(), !1);\n    });\n  }\n  refinement(check, refinementData) {\n    return this._refinement((val, ctx) => check(val) ? !0 : (ctx.addIssue(typeof refinementData == \"function\" ? refinementData(val, ctx) : refinementData), !1));\n  }\n  _refinement(refinement) {\n    return new ZodEffects({\n      schema: this,\n      typeName: ZodFirstPartyTypeKind.ZodEffects,\n      effect: { type: \"refinement\", refinement }\n    });\n  }\n  superRefine(refinement) {\n    return this._refinement(refinement);\n  }\n  optional() {\n    return ZodOptional.create(this, this._def);\n  }\n  nullable() {\n    return ZodNullable.create(this, this._def);\n  }\n  nullish() {\n    return this.nullable().optional();\n  }\n  array() {\n    return ZodArray.create(this, this._def);\n  }\n  promise() {\n    return ZodPromise.create(this, this._def);\n  }\n  or(option) {\n    return ZodUnion.create([this, option], this._def);\n  }\n  and(incoming) {\n    return ZodIntersection.create(this, incoming, this._def);\n  }\n  transform(transform) {\n    return new ZodEffects({\n      ...processCreateParams(this._def),\n      schema: this,\n      typeName: ZodFirstPartyTypeKind.ZodEffects,\n      effect: { type: \"transform\", transform }\n    });\n  }\n  default(def) {\n    let defaultValueFunc = typeof def == \"function\" ? def : () => def;\n    return new ZodDefault({\n      ...processCreateParams(this._def),\n      innerType: this,\n      defaultValue: defaultValueFunc,\n      typeName: ZodFirstPartyTypeKind.ZodDefault\n    });\n  }\n  brand() {\n    return new ZodBranded({\n      typeName: ZodFirstPartyTypeKind.ZodBranded,\n      type: this,\n      ...processCreateParams(this._def)\n    });\n  }\n  catch(def) {\n    let catchValueFunc = typeof def == \"function\" ? def : () => def;\n    return new ZodCatch({\n      ...processCreateParams(this._def),\n      innerType: this,\n      catchValue: catchValueFunc,\n      typeName: ZodFirstPartyTypeKind.ZodCatch\n    });\n  }\n  describe(description) {\n    let This = this.constructor;\n    return new This({\n      ...this._def,\n      description\n    });\n  }\n  pipe(target) {\n    return ZodPipeline.create(this, target);\n  }\n  readonly() {\n    return ZodReadonly.create(this);\n  }\n  isOptional() {\n    return this.safeParse(void 0).success;\n  }\n  isNullable() {\n    return this.safeParse(null).success;\n  }\n}, cuidRegex = /^c[^\\s-]{8,}$/i, cuid2Regex = /^[a-z][a-z0-9]*$/, ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/, uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i, emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_+-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i, emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u, ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/, ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/, datetimeRegex = (args) => args.precision ? args.offset ? new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`) : new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`) : args.precision === 0 ? args.offset ? new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$\") : new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$\") : args.offset ? new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$\") : new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$\");\nfunction isValidIP(ip, version) {\n  return !!((version === \"v4\" || !version) && ipv4Regex.test(ip) || (version === \"v6\" || !version) && ipv6Regex.test(ip));\n}\nvar ZodString = class _ZodString extends ZodType {\n  constructor() {\n    super(...arguments), this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n      validation,\n      code: ZodIssueCode.invalid_string,\n      ...errorUtil.errToObj(message)\n    }), this.nonempty = (message) => this.min(1, errorUtil.errToObj(message)), this.trim = () => new _ZodString({\n      ...this._def,\n      checks: [...this._def.checks, { kind: \"trim\" }]\n    }), this.toLowerCase = () => new _ZodString({\n      ...this._def,\n      checks: [...this._def.checks, { kind: \"toLowerCase\" }]\n    }), this.toUpperCase = () => new _ZodString({\n      ...this._def,\n      checks: [...this._def.checks, { kind: \"toUpperCase\" }]\n    });\n  }\n  _parse(input) {\n    if (this._def.coerce && (input.data = String(input.data)), this._getType(input) !== ZodParsedType.string) {\n      let ctx2 = this._getOrReturnCtx(input);\n      return addIssueToContext(\n        ctx2,\n        {\n          code: ZodIssueCode.invalid_type,\n          expected: ZodParsedType.string,\n          received: ctx2.parsedType\n        }\n        //\n      ), INVALID;\n    }\n    let status = new ParseStatus(), ctx;\n    for (let check of this._def.checks)\n      if (check.kind === \"min\")\n        input.data.length < check.value && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n          code: ZodIssueCode.too_small,\n          minimum: check.value,\n          type: \"string\",\n          inclusive: !0,\n          exact: !1,\n          message: check.message\n        }), status.dirty());\n      else if (check.kind === \"max\")\n        input.data.length > check.value && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n          code: ZodIssueCode.too_big,\n          maximum: check.value,\n          type: \"string\",\n          inclusive: !0,\n          exact: !1,\n          message: check.message\n        }), status.dirty());\n      else if (check.kind === \"length\") {\n        let tooBig = input.data.length > check.value, tooSmall = input.data.length < check.value;\n        (tooBig || tooSmall) && (ctx = this._getOrReturnCtx(input, ctx), tooBig ? addIssueToContext(ctx, {\n          code: ZodIssueCode.too_big,\n          maximum: check.value,\n          type: \"string\",\n          inclusive: !0,\n          exact: !0,\n          message: check.message\n        }) : tooSmall && addIssueToContext(ctx, {\n          code: ZodIssueCode.too_small,\n          minimum: check.value,\n          type: \"string\",\n          inclusive: !0,\n          exact: !0,\n          message: check.message\n        }), status.dirty());\n      } else if (check.kind === \"email\")\n        emailRegex.test(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n          validation: \"email\",\n          code: ZodIssueCode.invalid_string,\n          message: check.message\n        }), status.dirty());\n      else if (check.kind === \"emoji\")\n        emojiRegex.test(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n          validation: \"emoji\",\n          code: ZodIssueCode.invalid_string,\n          message: check.message\n        }), status.dirty());\n      else if (check.kind === \"uuid\")\n        uuidRegex.test(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n          validation: \"uuid\",\n          code: ZodIssueCode.invalid_string,\n          message: check.message\n        }), status.dirty());\n      else if (check.kind === \"cuid\")\n        cuidRegex.test(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n          validation: \"cuid\",\n          code: ZodIssueCode.invalid_string,\n          message: check.message\n        }), status.dirty());\n      else if (check.kind === \"cuid2\")\n        cuid2Regex.test(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n          validation: \"cuid2\",\n          code: ZodIssueCode.invalid_string,\n          message: check.message\n        }), status.dirty());\n      else if (check.kind === \"ulid\")\n        ulidRegex.test(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n          validation: \"ulid\",\n          code: ZodIssueCode.invalid_string,\n          message: check.message\n        }), status.dirty());\n      else if (check.kind === \"url\")\n        try {\n          new URL(input.data);\n        } catch {\n          ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n            validation: \"url\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          }), status.dirty();\n        }\n      else check.kind === \"regex\" ? (check.regex.lastIndex = 0, check.regex.test(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        validation: \"regex\",\n        code: ZodIssueCode.invalid_string,\n        message: check.message\n      }), status.dirty())) : check.kind === \"trim\" ? input.data = input.data.trim() : check.kind === \"includes\" ? input.data.includes(check.value, check.position) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_string,\n        validation: { includes: check.value, position: check.position },\n        message: check.message\n      }), status.dirty()) : check.kind === \"toLowerCase\" ? input.data = input.data.toLowerCase() : check.kind === \"toUpperCase\" ? input.data = input.data.toUpperCase() : check.kind === \"startsWith\" ? input.data.startsWith(check.value) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_string,\n        validation: { startsWith: check.value },\n        message: check.message\n      }), status.dirty()) : check.kind === \"endsWith\" ? input.data.endsWith(check.value) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_string,\n        validation: { endsWith: check.value },\n        message: check.message\n      }), status.dirty()) : check.kind === \"datetime\" ? datetimeRegex(check).test(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_string,\n        validation: \"datetime\",\n        message: check.message\n      }), status.dirty()) : check.kind === \"ip\" ? isValidIP(input.data, check.version) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        validation: \"ip\",\n        code: ZodIssueCode.invalid_string,\n        message: check.message\n      }), status.dirty()) : util.assertNever(check);\n    return { status: status.value, value: input.data };\n  }\n  _addCheck(check) {\n    return new _ZodString({\n      ...this._def,\n      checks: [...this._def.checks, check]\n    });\n  }\n  email(message) {\n    return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n  }\n  url(message) {\n    return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n  }\n  emoji(message) {\n    return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n  }\n  uuid(message) {\n    return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n  }\n  cuid(message) {\n    return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n  }\n  cuid2(message) {\n    return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n  }\n  ulid(message) {\n    return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n  }\n  ip(options) {\n    return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n  }\n  datetime(options) {\n    var _a;\n    return typeof options == \"string\" ? this._addCheck({\n      kind: \"datetime\",\n      precision: null,\n      offset: !1,\n      message: options\n    }) : this._addCheck({\n      kind: \"datetime\",\n      precision: typeof options?.precision > \"u\" ? null : options?.precision,\n      offset: (_a = options?.offset) !== null && _a !== void 0 ? _a : !1,\n      ...errorUtil.errToObj(options?.message)\n    });\n  }\n  regex(regex, message) {\n    return this._addCheck({\n      kind: \"regex\",\n      regex,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  includes(value, options) {\n    return this._addCheck({\n      kind: \"includes\",\n      value,\n      position: options?.position,\n      ...errorUtil.errToObj(options?.message)\n    });\n  }\n  startsWith(value, message) {\n    return this._addCheck({\n      kind: \"startsWith\",\n      value,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  endsWith(value, message) {\n    return this._addCheck({\n      kind: \"endsWith\",\n      value,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  min(minLength, message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: minLength,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  max(maxLength, message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: maxLength,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  length(len, message) {\n    return this._addCheck({\n      kind: \"length\",\n      value: len,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  get isDatetime() {\n    return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n  }\n  get isEmail() {\n    return !!this._def.checks.find((ch) => ch.kind === \"email\");\n  }\n  get isURL() {\n    return !!this._def.checks.find((ch) => ch.kind === \"url\");\n  }\n  get isEmoji() {\n    return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n  }\n  get isUUID() {\n    return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n  }\n  get isCUID() {\n    return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n  }\n  get isCUID2() {\n    return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n  }\n  get isULID() {\n    return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n  }\n  get isIP() {\n    return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n  }\n  get minLength() {\n    let min = null;\n    for (let ch of this._def.checks)\n      ch.kind === \"min\" && (min === null || ch.value > min) && (min = ch.value);\n    return min;\n  }\n  get maxLength() {\n    let max = null;\n    for (let ch of this._def.checks)\n      ch.kind === \"max\" && (max === null || ch.value < max) && (max = ch.value);\n    return max;\n  }\n};\nZodString.create = (params) => {\n  var _a;\n  return new ZodString({\n    checks: [],\n    typeName: ZodFirstPartyTypeKind.ZodString,\n    coerce: (_a = params?.coerce) !== null && _a !== void 0 ? _a : !1,\n    ...processCreateParams(params)\n  });\n};\nfunction floatSafeRemainder(val, step) {\n  let valDecCount = (val.toString().split(\".\")[1] || \"\").length, stepDecCount = (step.toString().split(\".\")[1] || \"\").length, decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount, valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\")), stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n  return valInt % stepInt / Math.pow(10, decCount);\n}\nvar ZodNumber = class _ZodNumber extends ZodType {\n  constructor() {\n    super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;\n  }\n  _parse(input) {\n    if (this._def.coerce && (input.data = Number(input.data)), this._getType(input) !== ZodParsedType.number) {\n      let ctx2 = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx2, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.number,\n        received: ctx2.parsedType\n      }), INVALID;\n    }\n    let ctx, status = new ParseStatus();\n    for (let check of this._def.checks)\n      check.kind === \"int\" ? util.isInteger(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: \"integer\",\n        received: \"float\",\n        message: check.message\n      }), status.dirty()) : check.kind === \"min\" ? (check.inclusive ? input.data < check.value : input.data <= check.value) && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.too_small,\n        minimum: check.value,\n        type: \"number\",\n        inclusive: check.inclusive,\n        exact: !1,\n        message: check.message\n      }), status.dirty()) : check.kind === \"max\" ? (check.inclusive ? input.data > check.value : input.data >= check.value) && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.too_big,\n        maximum: check.value,\n        type: \"number\",\n        inclusive: check.inclusive,\n        exact: !1,\n        message: check.message\n      }), status.dirty()) : check.kind === \"multipleOf\" ? floatSafeRemainder(input.data, check.value) !== 0 && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.not_multiple_of,\n        multipleOf: check.value,\n        message: check.message\n      }), status.dirty()) : check.kind === \"finite\" ? Number.isFinite(input.data) || (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.not_finite,\n        message: check.message\n      }), status.dirty()) : util.assertNever(check);\n    return { status: status.value, value: input.data };\n  }\n  gte(value, message) {\n    return this.setLimit(\"min\", value, !0, errorUtil.toString(message));\n  }\n  gt(value, message) {\n    return this.setLimit(\"min\", value, !1, errorUtil.toString(message));\n  }\n  lte(value, message) {\n    return this.setLimit(\"max\", value, !0, errorUtil.toString(message));\n  }\n  lt(value, message) {\n    return this.setLimit(\"max\", value, !1, errorUtil.toString(message));\n  }\n  setLimit(kind, value, inclusive, message) {\n    return new _ZodNumber({\n      ...this._def,\n      checks: [\n        ...this._def.checks,\n        {\n          kind,\n          value,\n          inclusive,\n          message: errorUtil.toString(message)\n        }\n      ]\n    });\n  }\n  _addCheck(check) {\n    return new _ZodNumber({\n      ...this._def,\n      checks: [...this._def.checks, check]\n    });\n  }\n  int(message) {\n    return this._addCheck({\n      kind: \"int\",\n      message: errorUtil.toString(message)\n    });\n  }\n  positive(message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: 0,\n      inclusive: !1,\n      message: errorUtil.toString(message)\n    });\n  }\n  negative(message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: 0,\n      inclusive: !1,\n      message: errorUtil.toString(message)\n    });\n  }\n  nonpositive(message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: 0,\n      inclusive: !0,\n      message: errorUtil.toString(message)\n    });\n  }\n  nonnegative(message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: 0,\n      inclusive: !0,\n      message: errorUtil.toString(message)\n    });\n  }\n  multipleOf(value, message) {\n    return this._addCheck({\n      kind: \"multipleOf\",\n      value,\n      message: errorUtil.toString(message)\n    });\n  }\n  finite(message) {\n    return this._addCheck({\n      kind: \"finite\",\n      message: errorUtil.toString(message)\n    });\n  }\n  safe(message) {\n    return this._addCheck({\n      kind: \"min\",\n      inclusive: !0,\n      value: Number.MIN_SAFE_INTEGER,\n      message: errorUtil.toString(message)\n    })._addCheck({\n      kind: \"max\",\n      inclusive: !0,\n      value: Number.MAX_SAFE_INTEGER,\n      message: errorUtil.toString(message)\n    });\n  }\n  get minValue() {\n    let min = null;\n    for (let ch of this._def.checks)\n      ch.kind === \"min\" && (min === null || ch.value > min) && (min = ch.value);\n    return min;\n  }\n  get maxValue() {\n    let max = null;\n    for (let ch of this._def.checks)\n      ch.kind === \"max\" && (max === null || ch.value < max) && (max = ch.value);\n    return max;\n  }\n  get isInt() {\n    return !!this._def.checks.find((ch) => ch.kind === \"int\" || ch.kind === \"multipleOf\" && util.isInteger(ch.value));\n  }\n  get isFinite() {\n    let max = null, min = null;\n    for (let ch of this._def.checks) {\n      if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\")\n        return !0;\n      ch.kind === \"min\" ? (min === null || ch.value > min) && (min = ch.value) : ch.kind === \"max\" && (max === null || ch.value < max) && (max = ch.value);\n    }\n    return Number.isFinite(min) && Number.isFinite(max);\n  }\n};\nZodNumber.create = (params) => new ZodNumber({\n  checks: [],\n  typeName: ZodFirstPartyTypeKind.ZodNumber,\n  coerce: params?.coerce || !1,\n  ...processCreateParams(params)\n});\nvar ZodBigInt = class _ZodBigInt extends ZodType {\n  constructor() {\n    super(...arguments), this.min = this.gte, this.max = this.lte;\n  }\n  _parse(input) {\n    if (this._def.coerce && (input.data = BigInt(input.data)), this._getType(input) !== ZodParsedType.bigint) {\n      let ctx2 = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx2, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.bigint,\n        received: ctx2.parsedType\n      }), INVALID;\n    }\n    let ctx, status = new ParseStatus();\n    for (let check of this._def.checks)\n      check.kind === \"min\" ? (check.inclusive ? input.data < check.value : input.data <= check.value) && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.too_small,\n        type: \"bigint\",\n        minimum: check.value,\n        inclusive: check.inclusive,\n        message: check.message\n      }), status.dirty()) : check.kind === \"max\" ? (check.inclusive ? input.data > check.value : input.data >= check.value) && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.too_big,\n        type: \"bigint\",\n        maximum: check.value,\n        inclusive: check.inclusive,\n        message: check.message\n      }), status.dirty()) : check.kind === \"multipleOf\" ? input.data % check.value !== BigInt(0) && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.not_multiple_of,\n        multipleOf: check.value,\n        message: check.message\n      }), status.dirty()) : util.assertNever(check);\n    return { status: status.value, value: input.data };\n  }\n  gte(value, message) {\n    return this.setLimit(\"min\", value, !0, errorUtil.toString(message));\n  }\n  gt(value, message) {\n    return this.setLimit(\"min\", value, !1, errorUtil.toString(message));\n  }\n  lte(value, message) {\n    return this.setLimit(\"max\", value, !0, errorUtil.toString(message));\n  }\n  lt(value, message) {\n    return this.setLimit(\"max\", value, !1, errorUtil.toString(message));\n  }\n  setLimit(kind, value, inclusive, message) {\n    return new _ZodBigInt({\n      ...this._def,\n      checks: [\n        ...this._def.checks,\n        {\n          kind,\n          value,\n          inclusive,\n          message: errorUtil.toString(message)\n        }\n      ]\n    });\n  }\n  _addCheck(check) {\n    return new _ZodBigInt({\n      ...this._def,\n      checks: [...this._def.checks, check]\n    });\n  }\n  positive(message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: BigInt(0),\n      inclusive: !1,\n      message: errorUtil.toString(message)\n    });\n  }\n  negative(message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: BigInt(0),\n      inclusive: !1,\n      message: errorUtil.toString(message)\n    });\n  }\n  nonpositive(message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: BigInt(0),\n      inclusive: !0,\n      message: errorUtil.toString(message)\n    });\n  }\n  nonnegative(message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: BigInt(0),\n      inclusive: !0,\n      message: errorUtil.toString(message)\n    });\n  }\n  multipleOf(value, message) {\n    return this._addCheck({\n      kind: \"multipleOf\",\n      value,\n      message: errorUtil.toString(message)\n    });\n  }\n  get minValue() {\n    let min = null;\n    for (let ch of this._def.checks)\n      ch.kind === \"min\" && (min === null || ch.value > min) && (min = ch.value);\n    return min;\n  }\n  get maxValue() {\n    let max = null;\n    for (let ch of this._def.checks)\n      ch.kind === \"max\" && (max === null || ch.value < max) && (max = ch.value);\n    return max;\n  }\n};\nZodBigInt.create = (params) => {\n  var _a;\n  return new ZodBigInt({\n    checks: [],\n    typeName: ZodFirstPartyTypeKind.ZodBigInt,\n    coerce: (_a = params?.coerce) !== null && _a !== void 0 ? _a : !1,\n    ...processCreateParams(params)\n  });\n};\nvar ZodBoolean = class extends ZodType {\n  _parse(input) {\n    if (this._def.coerce && (input.data = !!input.data), this._getType(input) !== ZodParsedType.boolean) {\n      let ctx = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.boolean,\n        received: ctx.parsedType\n      }), INVALID;\n    }\n    return OK(input.data);\n  }\n};\nZodBoolean.create = (params) => new ZodBoolean({\n  typeName: ZodFirstPartyTypeKind.ZodBoolean,\n  coerce: params?.coerce || !1,\n  ...processCreateParams(params)\n});\nvar ZodDate = class _ZodDate extends ZodType {\n  _parse(input) {\n    if (this._def.coerce && (input.data = new Date(input.data)), this._getType(input) !== ZodParsedType.date) {\n      let ctx2 = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx2, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.date,\n        received: ctx2.parsedType\n      }), INVALID;\n    }\n    if (isNaN(input.data.getTime())) {\n      let ctx2 = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx2, {\n        code: ZodIssueCode.invalid_date\n      }), INVALID;\n    }\n    let status = new ParseStatus(), ctx;\n    for (let check of this._def.checks)\n      check.kind === \"min\" ? input.data.getTime() < check.value && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.too_small,\n        message: check.message,\n        inclusive: !0,\n        exact: !1,\n        minimum: check.value,\n        type: \"date\"\n      }), status.dirty()) : check.kind === \"max\" ? input.data.getTime() > check.value && (ctx = this._getOrReturnCtx(input, ctx), addIssueToContext(ctx, {\n        code: ZodIssueCode.too_big,\n        message: check.message,\n        inclusive: !0,\n        exact: !1,\n        maximum: check.value,\n        type: \"date\"\n      }), status.dirty()) : util.assertNever(check);\n    return {\n      status: status.value,\n      value: new Date(input.data.getTime())\n    };\n  }\n  _addCheck(check) {\n    return new _ZodDate({\n      ...this._def,\n      checks: [...this._def.checks, check]\n    });\n  }\n  min(minDate, message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: minDate.getTime(),\n      message: errorUtil.toString(message)\n    });\n  }\n  max(maxDate, message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: maxDate.getTime(),\n      message: errorUtil.toString(message)\n    });\n  }\n  get minDate() {\n    let min = null;\n    for (let ch of this._def.checks)\n      ch.kind === \"min\" && (min === null || ch.value > min) && (min = ch.value);\n    return min != null ? new Date(min) : null;\n  }\n  get maxDate() {\n    let max = null;\n    for (let ch of this._def.checks)\n      ch.kind === \"max\" && (max === null || ch.value < max) && (max = ch.value);\n    return max != null ? new Date(max) : null;\n  }\n};\nZodDate.create = (params) => new ZodDate({\n  checks: [],\n  coerce: params?.coerce || !1,\n  typeName: ZodFirstPartyTypeKind.ZodDate,\n  ...processCreateParams(params)\n});\nvar ZodSymbol = class extends ZodType {\n  _parse(input) {\n    if (this._getType(input) !== ZodParsedType.symbol) {\n      let ctx = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.symbol,\n        received: ctx.parsedType\n      }), INVALID;\n    }\n    return OK(input.data);\n  }\n};\nZodSymbol.create = (params) => new ZodSymbol({\n  typeName: ZodFirstPartyTypeKind.ZodSymbol,\n  ...processCreateParams(params)\n});\nvar ZodUndefined = class extends ZodType {\n  _parse(input) {\n    if (this._getType(input) !== ZodParsedType.undefined) {\n      let ctx = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.undefined,\n        received: ctx.parsedType\n      }), INVALID;\n    }\n    return OK(input.data);\n  }\n};\nZodUndefined.create = (params) => new ZodUndefined({\n  typeName: ZodFirstPartyTypeKind.ZodUndefined,\n  ...processCreateParams(params)\n});\nvar ZodNull = class extends ZodType {\n  _parse(input) {\n    if (this._getType(input) !== ZodParsedType.null) {\n      let ctx = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.null,\n        received: ctx.parsedType\n      }), INVALID;\n    }\n    return OK(input.data);\n  }\n};\nZodNull.create = (params) => new ZodNull({\n  typeName: ZodFirstPartyTypeKind.ZodNull,\n  ...processCreateParams(params)\n});\nvar ZodAny = class extends ZodType {\n  constructor() {\n    super(...arguments), this._any = !0;\n  }\n  _parse(input) {\n    return OK(input.data);\n  }\n};\nZodAny.create = (params) => new ZodAny({\n  typeName: ZodFirstPartyTypeKind.ZodAny,\n  ...processCreateParams(params)\n});\nvar ZodUnknown = class extends ZodType {\n  constructor() {\n    super(...arguments), this._unknown = !0;\n  }\n  _parse(input) {\n    return OK(input.data);\n  }\n};\nZodUnknown.create = (params) => new ZodUnknown({\n  typeName: ZodFirstPartyTypeKind.ZodUnknown,\n  ...processCreateParams(params)\n});\nvar ZodNever = class extends ZodType {\n  _parse(input) {\n    let ctx = this._getOrReturnCtx(input);\n    return addIssueToContext(ctx, {\n      code: ZodIssueCode.invalid_type,\n      expected: ZodParsedType.never,\n      received: ctx.parsedType\n    }), INVALID;\n  }\n};\nZodNever.create = (params) => new ZodNever({\n  typeName: ZodFirstPartyTypeKind.ZodNever,\n  ...processCreateParams(params)\n});\nvar ZodVoid = class extends ZodType {\n  _parse(input) {\n    if (this._getType(input) !== ZodParsedType.undefined) {\n      let ctx = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.void,\n        received: ctx.parsedType\n      }), INVALID;\n    }\n    return OK(input.data);\n  }\n};\nZodVoid.create = (params) => new ZodVoid({\n  typeName: ZodFirstPartyTypeKind.ZodVoid,\n  ...processCreateParams(params)\n});\nvar ZodArray = class _ZodArray extends ZodType {\n  _parse(input) {\n    let { ctx, status } = this._processInputParams(input), def = this._def;\n    if (ctx.parsedType !== ZodParsedType.array)\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.array,\n        received: ctx.parsedType\n      }), INVALID;\n    if (def.exactLength !== null) {\n      let tooBig = ctx.data.length > def.exactLength.value, tooSmall = ctx.data.length < def.exactLength.value;\n      (tooBig || tooSmall) && (addIssueToContext(ctx, {\n        code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n        minimum: tooSmall ? def.exactLength.value : void 0,\n        maximum: tooBig ? def.exactLength.value : void 0,\n        type: \"array\",\n        inclusive: !0,\n        exact: !0,\n        message: def.exactLength.message\n      }), status.dirty());\n    }\n    if (def.minLength !== null && ctx.data.length < def.minLength.value && (addIssueToContext(ctx, {\n      code: ZodIssueCode.too_small,\n      minimum: def.minLength.value,\n      type: \"array\",\n      inclusive: !0,\n      exact: !1,\n      message: def.minLength.message\n    }), status.dirty()), def.maxLength !== null && ctx.data.length > def.maxLength.value && (addIssueToContext(ctx, {\n      code: ZodIssueCode.too_big,\n      maximum: def.maxLength.value,\n      type: \"array\",\n      inclusive: !0,\n      exact: !1,\n      message: def.maxLength.message\n    }), status.dirty()), ctx.common.async)\n      return Promise.all([...ctx.data].map((item, i) => def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i)))).then((result2) => ParseStatus.mergeArray(status, result2));\n    let result = [...ctx.data].map((item, i) => def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n    return ParseStatus.mergeArray(status, result);\n  }\n  get element() {\n    return this._def.type;\n  }\n  min(minLength, message) {\n    return new _ZodArray({\n      ...this._def,\n      minLength: { value: minLength, message: errorUtil.toString(message) }\n    });\n  }\n  max(maxLength, message) {\n    return new _ZodArray({\n      ...this._def,\n      maxLength: { value: maxLength, message: errorUtil.toString(message) }\n    });\n  }\n  length(len, message) {\n    return new _ZodArray({\n      ...this._def,\n      exactLength: { value: len, message: errorUtil.toString(message) }\n    });\n  }\n  nonempty(message) {\n    return this.min(1, message);\n  }\n};\nZodArray.create = (schema, params) => new ZodArray({\n  type: schema,\n  minLength: null,\n  maxLength: null,\n  exactLength: null,\n  typeName: ZodFirstPartyTypeKind.ZodArray,\n  ...processCreateParams(params)\n});\nfunction deepPartialify(schema) {\n  if (schema instanceof ZodObject) {\n    let newShape = {};\n    for (let key in schema.shape) {\n      let fieldSchema = schema.shape[key];\n      newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n    }\n    return new ZodObject({\n      ...schema._def,\n      shape: () => newShape\n    });\n  } else return schema instanceof ZodArray ? new ZodArray({\n    ...schema._def,\n    type: deepPartialify(schema.element)\n  }) : schema instanceof ZodOptional ? ZodOptional.create(deepPartialify(schema.unwrap())) : schema instanceof ZodNullable ? ZodNullable.create(deepPartialify(schema.unwrap())) : schema instanceof ZodTuple ? ZodTuple.create(schema.items.map((item) => deepPartialify(item))) : schema;\n}\nvar ZodObject = class _ZodObject extends ZodType {\n  constructor() {\n    super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = this.extend;\n  }\n  _getCached() {\n    if (this._cached !== null)\n      return this._cached;\n    let shape = this._def.shape(), keys = util.objectKeys(shape);\n    return this._cached = { shape, keys };\n  }\n  _parse(input) {\n    if (this._getType(input) !== ZodParsedType.object) {\n      let ctx2 = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx2, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.object,\n        received: ctx2.parsedType\n      }), INVALID;\n    }\n    let { status, ctx } = this._processInputParams(input), { shape, keys: shapeKeys } = this._getCached(), extraKeys = [];\n    if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\"))\n      for (let key in ctx.data)\n        shapeKeys.includes(key) || extraKeys.push(key);\n    let pairs = [];\n    for (let key of shapeKeys) {\n      let keyValidator = shape[key], value = ctx.data[key];\n      pairs.push({\n        key: { status: \"valid\", value: key },\n        value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n        alwaysSet: key in ctx.data\n      });\n    }\n    if (this._def.catchall instanceof ZodNever) {\n      let unknownKeys = this._def.unknownKeys;\n      if (unknownKeys === \"passthrough\")\n        for (let key of extraKeys)\n          pairs.push({\n            key: { status: \"valid\", value: key },\n            value: { status: \"valid\", value: ctx.data[key] }\n          });\n      else if (unknownKeys === \"strict\")\n        extraKeys.length > 0 && (addIssueToContext(ctx, {\n          code: ZodIssueCode.unrecognized_keys,\n          keys: extraKeys\n        }), status.dirty());\n      else if (unknownKeys !== \"strip\") throw new Error(\"Internal ZodObject error: invalid unknownKeys value.\");\n    } else {\n      let catchall = this._def.catchall;\n      for (let key of extraKeys) {\n        let value = ctx.data[key];\n        pairs.push({\n          key: { status: \"valid\", value: key },\n          value: catchall._parse(\n            new ParseInputLazyPath(ctx, value, ctx.path, key)\n            //, ctx.child(key), value, getParsedType(value)\n          ),\n          alwaysSet: key in ctx.data\n        });\n      }\n    }\n    return ctx.common.async ? Promise.resolve().then(async () => {\n      let syncPairs = [];\n      for (let pair of pairs) {\n        let key = await pair.key;\n        syncPairs.push({\n          key,\n          value: await pair.value,\n          alwaysSet: pair.alwaysSet\n        });\n      }\n      return syncPairs;\n    }).then((syncPairs) => ParseStatus.mergeObjectSync(status, syncPairs)) : ParseStatus.mergeObjectSync(status, pairs);\n  }\n  get shape() {\n    return this._def.shape();\n  }\n  strict(message) {\n    return errorUtil.errToObj, new _ZodObject({\n      ...this._def,\n      unknownKeys: \"strict\",\n      ...message !== void 0 ? {\n        errorMap: (issue, ctx) => {\n          var _a, _b, _c, _d;\n          let defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n          return issue.code === \"unrecognized_keys\" ? {\n            message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError\n          } : {\n            message: defaultError\n          };\n        }\n      } : {}\n    });\n  }\n  strip() {\n    return new _ZodObject({\n      ...this._def,\n      unknownKeys: \"strip\"\n    });\n  }\n  passthrough() {\n    return new _ZodObject({\n      ...this._def,\n      unknownKeys: \"passthrough\"\n    });\n  }\n  // const AugmentFactory =\n  //   <Def extends ZodObjectDef>(def: Def) =>\n  //   <Augmentation extends ZodRawShape>(\n  //     augmentation: Augmentation\n  //   ): ZodObject<\n  //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n  //     Def[\"unknownKeys\"],\n  //     Def[\"catchall\"]\n  //   > => {\n  //     return new ZodObject({\n  //       ...def,\n  //       shape: () => ({\n  //         ...def.shape(),\n  //         ...augmentation,\n  //       }),\n  //     }) as any;\n  //   };\n  extend(augmentation) {\n    return new _ZodObject({\n      ...this._def,\n      shape: () => ({\n        ...this._def.shape(),\n        ...augmentation\n      })\n    });\n  }\n  /**\n   * Prior to zod@1.0.12 there was a bug in the\n   * inferred type of merged objects. Please\n   * upgrade if you are experiencing issues.\n   */\n  merge(merging) {\n    return new _ZodObject({\n      unknownKeys: merging._def.unknownKeys,\n      catchall: merging._def.catchall,\n      shape: () => ({\n        ...this._def.shape(),\n        ...merging._def.shape()\n      }),\n      typeName: ZodFirstPartyTypeKind.ZodObject\n    });\n  }\n  // merge<\n  //   Incoming extends AnyZodObject,\n  //   Augmentation extends Incoming[\"shape\"],\n  //   NewOutput extends {\n  //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n  //       ? Augmentation[k][\"_output\"]\n  //       : k extends keyof Output\n  //       ? Output[k]\n  //       : never;\n  //   },\n  //   NewInput extends {\n  //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n  //       ? Augmentation[k][\"_input\"]\n  //       : k extends keyof Input\n  //       ? Input[k]\n  //       : never;\n  //   }\n  // >(\n  //   merging: Incoming\n  // ): ZodObject<\n  //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n  //   Incoming[\"_def\"][\"unknownKeys\"],\n  //   Incoming[\"_def\"][\"catchall\"],\n  //   NewOutput,\n  //   NewInput\n  // > {\n  //   const merged: any = new ZodObject({\n  //     unknownKeys: merging._def.unknownKeys,\n  //     catchall: merging._def.catchall,\n  //     shape: () =>\n  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n  //     typeName: ZodFirstPartyTypeKind.ZodObject,\n  //   }) as any;\n  //   return merged;\n  // }\n  setKey(key, schema) {\n    return this.augment({ [key]: schema });\n  }\n  // merge<Incoming extends AnyZodObject>(\n  //   merging: Incoming\n  // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n  // ZodObject<\n  //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n  //   Incoming[\"_def\"][\"unknownKeys\"],\n  //   Incoming[\"_def\"][\"catchall\"]\n  // > {\n  //   // const mergedShape = objectUtil.mergeShapes(\n  //   //   this._def.shape(),\n  //   //   merging._def.shape()\n  //   // );\n  //   const merged: any = new ZodObject({\n  //     unknownKeys: merging._def.unknownKeys,\n  //     catchall: merging._def.catchall,\n  //     shape: () =>\n  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n  //     typeName: ZodFirstPartyTypeKind.ZodObject,\n  //   }) as any;\n  //   return merged;\n  // }\n  catchall(index) {\n    return new _ZodObject({\n      ...this._def,\n      catchall: index\n    });\n  }\n  pick(mask) {\n    let shape = {};\n    return util.objectKeys(mask).forEach((key) => {\n      mask[key] && this.shape[key] && (shape[key] = this.shape[key]);\n    }), new _ZodObject({\n      ...this._def,\n      shape: () => shape\n    });\n  }\n  omit(mask) {\n    let shape = {};\n    return util.objectKeys(this.shape).forEach((key) => {\n      mask[key] || (shape[key] = this.shape[key]);\n    }), new _ZodObject({\n      ...this._def,\n      shape: () => shape\n    });\n  }\n  /**\n   * @deprecated\n   */\n  deepPartial() {\n    return deepPartialify(this);\n  }\n  partial(mask) {\n    let newShape = {};\n    return util.objectKeys(this.shape).forEach((key) => {\n      let fieldSchema = this.shape[key];\n      mask && !mask[key] ? newShape[key] = fieldSchema : newShape[key] = fieldSchema.optional();\n    }), new _ZodObject({\n      ...this._def,\n      shape: () => newShape\n    });\n  }\n  required(mask) {\n    let newShape = {};\n    return util.objectKeys(this.shape).forEach((key) => {\n      if (mask && !mask[key])\n        newShape[key] = this.shape[key];\n      else {\n        let newField = this.shape[key];\n        for (; newField instanceof ZodOptional; )\n          newField = newField._def.innerType;\n        newShape[key] = newField;\n      }\n    }), new _ZodObject({\n      ...this._def,\n      shape: () => newShape\n    });\n  }\n  keyof() {\n    return createZodEnum(util.objectKeys(this.shape));\n  }\n};\nZodObject.create = (shape, params) => new ZodObject({\n  shape: () => shape,\n  unknownKeys: \"strip\",\n  catchall: ZodNever.create(),\n  typeName: ZodFirstPartyTypeKind.ZodObject,\n  ...processCreateParams(params)\n});\nZodObject.strictCreate = (shape, params) => new ZodObject({\n  shape: () => shape,\n  unknownKeys: \"strict\",\n  catchall: ZodNever.create(),\n  typeName: ZodFirstPartyTypeKind.ZodObject,\n  ...processCreateParams(params)\n});\nZodObject.lazycreate = (shape, params) => new ZodObject({\n  shape,\n  unknownKeys: \"strip\",\n  catchall: ZodNever.create(),\n  typeName: ZodFirstPartyTypeKind.ZodObject,\n  ...processCreateParams(params)\n});\nvar ZodUnion = class extends ZodType {\n  _parse(input) {\n    let { ctx } = this._processInputParams(input), options = this._def.options;\n    function handleResults(results) {\n      for (let result of results)\n        if (result.result.status === \"valid\")\n          return result.result;\n      for (let result of results)\n        if (result.result.status === \"dirty\")\n          return ctx.common.issues.push(...result.ctx.common.issues), result.result;\n      let unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_union,\n        unionErrors\n      }), INVALID;\n    }\n    if (ctx.common.async)\n      return Promise.all(options.map(async (option) => {\n        let childCtx = {\n          ...ctx,\n          common: {\n            ...ctx.common,\n            issues: []\n          },\n          parent: null\n        };\n        return {\n          result: await option._parseAsync({\n            data: ctx.data,\n            path: ctx.path,\n            parent: childCtx\n          }),\n          ctx: childCtx\n        };\n      })).then(handleResults);\n    {\n      let dirty, issues = [];\n      for (let option of options) {\n        let childCtx = {\n          ...ctx,\n          common: {\n            ...ctx.common,\n            issues: []\n          },\n          parent: null\n        }, result = option._parseSync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: childCtx\n        });\n        if (result.status === \"valid\")\n          return result;\n        result.status === \"dirty\" && !dirty && (dirty = { result, ctx: childCtx }), childCtx.common.issues.length && issues.push(childCtx.common.issues);\n      }\n      if (dirty)\n        return ctx.common.issues.push(...dirty.ctx.common.issues), dirty.result;\n      let unionErrors = issues.map((issues2) => new ZodError(issues2));\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_union,\n        unionErrors\n      }), INVALID;\n    }\n  }\n  get options() {\n    return this._def.options;\n  }\n};\nZodUnion.create = (types, params) => new ZodUnion({\n  options: types,\n  typeName: ZodFirstPartyTypeKind.ZodUnion,\n  ...processCreateParams(params)\n});\nvar getDiscriminator = (type) => type instanceof ZodLazy ? getDiscriminator(type.schema) : type instanceof ZodEffects ? getDiscriminator(type.innerType()) : type instanceof ZodLiteral ? [type.value] : type instanceof ZodEnum ? type.options : type instanceof ZodNativeEnum ? Object.keys(type.enum) : type instanceof ZodDefault ? getDiscriminator(type._def.innerType) : type instanceof ZodUndefined ? [void 0] : type instanceof ZodNull ? [null] : null, ZodDiscriminatedUnion = class _ZodDiscriminatedUnion extends ZodType {\n  _parse(input) {\n    let { ctx } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.object)\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.object,\n        received: ctx.parsedType\n      }), INVALID;\n    let discriminator = this.discriminator, discriminatorValue = ctx.data[discriminator], option = this.optionsMap.get(discriminatorValue);\n    return option ? ctx.common.async ? option._parseAsync({\n      data: ctx.data,\n      path: ctx.path,\n      parent: ctx\n    }) : option._parseSync({\n      data: ctx.data,\n      path: ctx.path,\n      parent: ctx\n    }) : (addIssueToContext(ctx, {\n      code: ZodIssueCode.invalid_union_discriminator,\n      options: Array.from(this.optionsMap.keys()),\n      path: [discriminator]\n    }), INVALID);\n  }\n  get discriminator() {\n    return this._def.discriminator;\n  }\n  get options() {\n    return this._def.options;\n  }\n  get optionsMap() {\n    return this._def.optionsMap;\n  }\n  /**\n   * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n   * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n   * have a different value for each object in the union.\n   * @param discriminator the name of the discriminator property\n   * @param types an array of object schemas\n   * @param params\n   */\n  static create(discriminator, options, params) {\n    let optionsMap = /* @__PURE__ */ new Map();\n    for (let type of options) {\n      let discriminatorValues = getDiscriminator(type.shape[discriminator]);\n      if (!discriminatorValues)\n        throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n      for (let value of discriminatorValues) {\n        if (optionsMap.has(value))\n          throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n        optionsMap.set(value, type);\n      }\n    }\n    return new _ZodDiscriminatedUnion({\n      typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n      discriminator,\n      options,\n      optionsMap,\n      ...processCreateParams(params)\n    });\n  }\n};\nfunction mergeValues(a, b) {\n  let aType = getParsedType(a), bType = getParsedType(b);\n  if (a === b)\n    return { valid: !0, data: a };\n  if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n    let bKeys = util.objectKeys(b), sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1), newObj = { ...a, ...b };\n    for (let key of sharedKeys) {\n      let sharedValue = mergeValues(a[key], b[key]);\n      if (!sharedValue.valid)\n        return { valid: !1 };\n      newObj[key] = sharedValue.data;\n    }\n    return { valid: !0, data: newObj };\n  } else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n    if (a.length !== b.length)\n      return { valid: !1 };\n    let newArray = [];\n    for (let index = 0; index < a.length; index++) {\n      let itemA = a[index], itemB = b[index], sharedValue = mergeValues(itemA, itemB);\n      if (!sharedValue.valid)\n        return { valid: !1 };\n      newArray.push(sharedValue.data);\n    }\n    return { valid: !0, data: newArray };\n  } else return aType === ZodParsedType.date && bType === ZodParsedType.date && +a == +b ? { valid: !0, data: a } : { valid: !1 };\n}\nvar ZodIntersection = class extends ZodType {\n  _parse(input) {\n    let { status, ctx } = this._processInputParams(input), handleParsed = (parsedLeft, parsedRight) => {\n      if (isAborted(parsedLeft) || isAborted(parsedRight))\n        return INVALID;\n      let merged = mergeValues(parsedLeft.value, parsedRight.value);\n      return merged.valid ? ((isDirty(parsedLeft) || isDirty(parsedRight)) && status.dirty(), { status: status.value, value: merged.data }) : (addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_intersection_types\n      }), INVALID);\n    };\n    return ctx.common.async ? Promise.all([\n      this._def.left._parseAsync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      }),\n      this._def.right._parseAsync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      })\n    ]).then(([left, right]) => handleParsed(left, right)) : handleParsed(this._def.left._parseSync({\n      data: ctx.data,\n      path: ctx.path,\n      parent: ctx\n    }), this._def.right._parseSync({\n      data: ctx.data,\n      path: ctx.path,\n      parent: ctx\n    }));\n  }\n};\nZodIntersection.create = (left, right, params) => new ZodIntersection({\n  left,\n  right,\n  typeName: ZodFirstPartyTypeKind.ZodIntersection,\n  ...processCreateParams(params)\n});\nvar ZodTuple = class _ZodTuple extends ZodType {\n  _parse(input) {\n    let { status, ctx } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.array)\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.array,\n        received: ctx.parsedType\n      }), INVALID;\n    if (ctx.data.length < this._def.items.length)\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.too_small,\n        minimum: this._def.items.length,\n        inclusive: !0,\n        exact: !1,\n        type: \"array\"\n      }), INVALID;\n    !this._def.rest && ctx.data.length > this._def.items.length && (addIssueToContext(ctx, {\n      code: ZodIssueCode.too_big,\n      maximum: this._def.items.length,\n      inclusive: !0,\n      exact: !1,\n      type: \"array\"\n    }), status.dirty());\n    let items = [...ctx.data].map((item, itemIndex) => {\n      let schema = this._def.items[itemIndex] || this._def.rest;\n      return schema ? schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex)) : null;\n    }).filter((x) => !!x);\n    return ctx.common.async ? Promise.all(items).then((results) => ParseStatus.mergeArray(status, results)) : ParseStatus.mergeArray(status, items);\n  }\n  get items() {\n    return this._def.items;\n  }\n  rest(rest) {\n    return new _ZodTuple({\n      ...this._def,\n      rest\n    });\n  }\n};\nZodTuple.create = (schemas, params) => {\n  if (!Array.isArray(schemas))\n    throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n  return new ZodTuple({\n    items: schemas,\n    typeName: ZodFirstPartyTypeKind.ZodTuple,\n    rest: null,\n    ...processCreateParams(params)\n  });\n};\nvar ZodRecord = class _ZodRecord extends ZodType {\n  get keySchema() {\n    return this._def.keyType;\n  }\n  get valueSchema() {\n    return this._def.valueType;\n  }\n  _parse(input) {\n    let { status, ctx } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.object)\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.object,\n        received: ctx.parsedType\n      }), INVALID;\n    let pairs = [], keyType = this._def.keyType, valueType = this._def.valueType;\n    for (let key in ctx.data)\n      pairs.push({\n        key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n        value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key))\n      });\n    return ctx.common.async ? ParseStatus.mergeObjectAsync(status, pairs) : ParseStatus.mergeObjectSync(status, pairs);\n  }\n  get element() {\n    return this._def.valueType;\n  }\n  static create(first, second, third) {\n    return second instanceof ZodType ? new _ZodRecord({\n      keyType: first,\n      valueType: second,\n      typeName: ZodFirstPartyTypeKind.ZodRecord,\n      ...processCreateParams(third)\n    }) : new _ZodRecord({\n      keyType: ZodString.create(),\n      valueType: first,\n      typeName: ZodFirstPartyTypeKind.ZodRecord,\n      ...processCreateParams(second)\n    });\n  }\n}, ZodMap = class extends ZodType {\n  get keySchema() {\n    return this._def.keyType;\n  }\n  get valueSchema() {\n    return this._def.valueType;\n  }\n  _parse(input) {\n    let { status, ctx } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.map)\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.map,\n        received: ctx.parsedType\n      }), INVALID;\n    let keyType = this._def.keyType, valueType = this._def.valueType, pairs = [...ctx.data.entries()].map(([key, value], index) => ({\n      key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n      value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"]))\n    }));\n    if (ctx.common.async) {\n      let finalMap = /* @__PURE__ */ new Map();\n      return Promise.resolve().then(async () => {\n        for (let pair of pairs) {\n          let key = await pair.key, value = await pair.value;\n          if (key.status === \"aborted\" || value.status === \"aborted\")\n            return INVALID;\n          (key.status === \"dirty\" || value.status === \"dirty\") && status.dirty(), finalMap.set(key.value, value.value);\n        }\n        return { status: status.value, value: finalMap };\n      });\n    } else {\n      let finalMap = /* @__PURE__ */ new Map();\n      for (let pair of pairs) {\n        let key = pair.key, value = pair.value;\n        if (key.status === \"aborted\" || value.status === \"aborted\")\n          return INVALID;\n        (key.status === \"dirty\" || value.status === \"dirty\") && status.dirty(), finalMap.set(key.value, value.value);\n      }\n      return { status: status.value, value: finalMap };\n    }\n  }\n};\nZodMap.create = (keyType, valueType, params) => new ZodMap({\n  valueType,\n  keyType,\n  typeName: ZodFirstPartyTypeKind.ZodMap,\n  ...processCreateParams(params)\n});\nvar ZodSet = class _ZodSet extends ZodType {\n  _parse(input) {\n    let { status, ctx } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.set)\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.set,\n        received: ctx.parsedType\n      }), INVALID;\n    let def = this._def;\n    def.minSize !== null && ctx.data.size < def.minSize.value && (addIssueToContext(ctx, {\n      code: ZodIssueCode.too_small,\n      minimum: def.minSize.value,\n      type: \"set\",\n      inclusive: !0,\n      exact: !1,\n      message: def.minSize.message\n    }), status.dirty()), def.maxSize !== null && ctx.data.size > def.maxSize.value && (addIssueToContext(ctx, {\n      code: ZodIssueCode.too_big,\n      maximum: def.maxSize.value,\n      type: \"set\",\n      inclusive: !0,\n      exact: !1,\n      message: def.maxSize.message\n    }), status.dirty());\n    let valueType = this._def.valueType;\n    function finalizeSet(elements2) {\n      let parsedSet = /* @__PURE__ */ new Set();\n      for (let element of elements2) {\n        if (element.status === \"aborted\")\n          return INVALID;\n        element.status === \"dirty\" && status.dirty(), parsedSet.add(element.value);\n      }\n      return { status: status.value, value: parsedSet };\n    }\n    let elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n    return ctx.common.async ? Promise.all(elements).then((elements2) => finalizeSet(elements2)) : finalizeSet(elements);\n  }\n  min(minSize, message) {\n    return new _ZodSet({\n      ...this._def,\n      minSize: { value: minSize, message: errorUtil.toString(message) }\n    });\n  }\n  max(maxSize, message) {\n    return new _ZodSet({\n      ...this._def,\n      maxSize: { value: maxSize, message: errorUtil.toString(message) }\n    });\n  }\n  size(size, message) {\n    return this.min(size, message).max(size, message);\n  }\n  nonempty(message) {\n    return this.min(1, message);\n  }\n};\nZodSet.create = (valueType, params) => new ZodSet({\n  valueType,\n  minSize: null,\n  maxSize: null,\n  typeName: ZodFirstPartyTypeKind.ZodSet,\n  ...processCreateParams(params)\n});\nvar ZodFunction = class _ZodFunction extends ZodType {\n  constructor() {\n    super(...arguments), this.validate = this.implement;\n  }\n  _parse(input) {\n    let { ctx } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.function)\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.function,\n        received: ctx.parsedType\n      }), INVALID;\n    function makeArgsIssue(args, error) {\n      return makeIssue({\n        data: args,\n        path: ctx.path,\n        errorMaps: [\n          ctx.common.contextualErrorMap,\n          ctx.schemaErrorMap,\n          getErrorMap(),\n          errorMap\n        ].filter((x) => !!x),\n        issueData: {\n          code: ZodIssueCode.invalid_arguments,\n          argumentsError: error\n        }\n      });\n    }\n    function makeReturnsIssue(returns, error) {\n      return makeIssue({\n        data: returns,\n        path: ctx.path,\n        errorMaps: [\n          ctx.common.contextualErrorMap,\n          ctx.schemaErrorMap,\n          getErrorMap(),\n          errorMap\n        ].filter((x) => !!x),\n        issueData: {\n          code: ZodIssueCode.invalid_return_type,\n          returnTypeError: error\n        }\n      });\n    }\n    let params = { errorMap: ctx.common.contextualErrorMap }, fn = ctx.data;\n    if (this._def.returns instanceof ZodPromise) {\n      let me = this;\n      return OK(async function(...args) {\n        let error = new ZodError([]), parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n          throw error.addIssue(makeArgsIssue(args, e)), error;\n        }), result = await Reflect.apply(fn, this, parsedArgs);\n        return await me._def.returns._def.type.parseAsync(result, params).catch((e) => {\n          throw error.addIssue(makeReturnsIssue(result, e)), error;\n        });\n      });\n    } else {\n      let me = this;\n      return OK(function(...args) {\n        let parsedArgs = me._def.args.safeParse(args, params);\n        if (!parsedArgs.success)\n          throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n        let result = Reflect.apply(fn, this, parsedArgs.data), parsedReturns = me._def.returns.safeParse(result, params);\n        if (!parsedReturns.success)\n          throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n        return parsedReturns.data;\n      });\n    }\n  }\n  parameters() {\n    return this._def.args;\n  }\n  returnType() {\n    return this._def.returns;\n  }\n  args(...items) {\n    return new _ZodFunction({\n      ...this._def,\n      args: ZodTuple.create(items).rest(ZodUnknown.create())\n    });\n  }\n  returns(returnType) {\n    return new _ZodFunction({\n      ...this._def,\n      returns: returnType\n    });\n  }\n  implement(func) {\n    return this.parse(func);\n  }\n  strictImplement(func) {\n    return this.parse(func);\n  }\n  static create(args, returns, params) {\n    return new _ZodFunction({\n      args: args || ZodTuple.create([]).rest(ZodUnknown.create()),\n      returns: returns || ZodUnknown.create(),\n      typeName: ZodFirstPartyTypeKind.ZodFunction,\n      ...processCreateParams(params)\n    });\n  }\n}, ZodLazy = class extends ZodType {\n  get schema() {\n    return this._def.getter();\n  }\n  _parse(input) {\n    let { ctx } = this._processInputParams(input);\n    return this._def.getter()._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n  }\n};\nZodLazy.create = (getter, params) => new ZodLazy({\n  getter,\n  typeName: ZodFirstPartyTypeKind.ZodLazy,\n  ...processCreateParams(params)\n});\nvar ZodLiteral = class extends ZodType {\n  _parse(input) {\n    if (input.data !== this._def.value) {\n      let ctx = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx, {\n        received: ctx.data,\n        code: ZodIssueCode.invalid_literal,\n        expected: this._def.value\n      }), INVALID;\n    }\n    return { status: \"valid\", value: input.data };\n  }\n  get value() {\n    return this._def.value;\n  }\n};\nZodLiteral.create = (value, params) => new ZodLiteral({\n  value,\n  typeName: ZodFirstPartyTypeKind.ZodLiteral,\n  ...processCreateParams(params)\n});\nfunction createZodEnum(values, params) {\n  return new ZodEnum({\n    values,\n    typeName: ZodFirstPartyTypeKind.ZodEnum,\n    ...processCreateParams(params)\n  });\n}\nvar ZodEnum = class _ZodEnum extends ZodType {\n  _parse(input) {\n    if (typeof input.data != \"string\") {\n      let ctx = this._getOrReturnCtx(input), expectedValues = this._def.values;\n      return addIssueToContext(ctx, {\n        expected: util.joinValues(expectedValues),\n        received: ctx.parsedType,\n        code: ZodIssueCode.invalid_type\n      }), INVALID;\n    }\n    if (this._def.values.indexOf(input.data) === -1) {\n      let ctx = this._getOrReturnCtx(input), expectedValues = this._def.values;\n      return addIssueToContext(ctx, {\n        received: ctx.data,\n        code: ZodIssueCode.invalid_enum_value,\n        options: expectedValues\n      }), INVALID;\n    }\n    return OK(input.data);\n  }\n  get options() {\n    return this._def.values;\n  }\n  get enum() {\n    let enumValues = {};\n    for (let val of this._def.values)\n      enumValues[val] = val;\n    return enumValues;\n  }\n  get Values() {\n    let enumValues = {};\n    for (let val of this._def.values)\n      enumValues[val] = val;\n    return enumValues;\n  }\n  get Enum() {\n    let enumValues = {};\n    for (let val of this._def.values)\n      enumValues[val] = val;\n    return enumValues;\n  }\n  extract(values) {\n    return _ZodEnum.create(values);\n  }\n  exclude(values) {\n    return _ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n  }\n};\nZodEnum.create = createZodEnum;\nvar ZodNativeEnum = class extends ZodType {\n  _parse(input) {\n    let nativeEnumValues = util.getValidEnumValues(this._def.values), ctx = this._getOrReturnCtx(input);\n    if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n      let expectedValues = util.objectValues(nativeEnumValues);\n      return addIssueToContext(ctx, {\n        expected: util.joinValues(expectedValues),\n        received: ctx.parsedType,\n        code: ZodIssueCode.invalid_type\n      }), INVALID;\n    }\n    if (nativeEnumValues.indexOf(input.data) === -1) {\n      let expectedValues = util.objectValues(nativeEnumValues);\n      return addIssueToContext(ctx, {\n        received: ctx.data,\n        code: ZodIssueCode.invalid_enum_value,\n        options: expectedValues\n      }), INVALID;\n    }\n    return OK(input.data);\n  }\n  get enum() {\n    return this._def.values;\n  }\n};\nZodNativeEnum.create = (values, params) => new ZodNativeEnum({\n  values,\n  typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n  ...processCreateParams(params)\n});\nvar ZodPromise = class extends ZodType {\n  unwrap() {\n    return this._def.type;\n  }\n  _parse(input) {\n    let { ctx } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === !1)\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.promise,\n        received: ctx.parsedType\n      }), INVALID;\n    let promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n    return OK(promisified.then((data) => this._def.type.parseAsync(data, {\n      path: ctx.path,\n      errorMap: ctx.common.contextualErrorMap\n    })));\n  }\n};\nZodPromise.create = (schema, params) => new ZodPromise({\n  type: schema,\n  typeName: ZodFirstPartyTypeKind.ZodPromise,\n  ...processCreateParams(params)\n});\nvar ZodEffects = class extends ZodType {\n  innerType() {\n    return this._def.schema;\n  }\n  sourceType() {\n    return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;\n  }\n  _parse(input) {\n    let { status, ctx } = this._processInputParams(input), effect = this._def.effect || null, checkCtx = {\n      addIssue: (arg) => {\n        addIssueToContext(ctx, arg), arg.fatal ? status.abort() : status.dirty();\n      },\n      get path() {\n        return ctx.path;\n      }\n    };\n    if (checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx), effect.type === \"preprocess\") {\n      let processed = effect.transform(ctx.data, checkCtx);\n      return ctx.common.issues.length ? {\n        status: \"dirty\",\n        value: ctx.data\n      } : ctx.common.async ? Promise.resolve(processed).then((processed2) => this._def.schema._parseAsync({\n        data: processed2,\n        path: ctx.path,\n        parent: ctx\n      })) : this._def.schema._parseSync({\n        data: processed,\n        path: ctx.path,\n        parent: ctx\n      });\n    }\n    if (effect.type === \"refinement\") {\n      let executeRefinement = (acc) => {\n        let result = effect.refinement(acc, checkCtx);\n        if (ctx.common.async)\n          return Promise.resolve(result);\n        if (result instanceof Promise)\n          throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n        return acc;\n      };\n      if (ctx.common.async === !1) {\n        let inner = this._def.schema._parseSync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: ctx\n        });\n        return inner.status === \"aborted\" ? INVALID : (inner.status === \"dirty\" && status.dirty(), executeRefinement(inner.value), { status: status.value, value: inner.value });\n      } else\n        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => inner.status === \"aborted\" ? INVALID : (inner.status === \"dirty\" && status.dirty(), executeRefinement(inner.value).then(() => ({ status: status.value, value: inner.value }))));\n    }\n    if (effect.type === \"transform\")\n      if (ctx.common.async === !1) {\n        let base = this._def.schema._parseSync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: ctx\n        });\n        if (!isValid(base))\n          return base;\n        let result = effect.transform(base.value, checkCtx);\n        if (result instanceof Promise)\n          throw new Error(\"Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.\");\n        return { status: status.value, value: result };\n      } else\n        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => isValid(base) ? Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result })) : base);\n    util.assertNever(effect);\n  }\n};\nZodEffects.create = (schema, effect, params) => new ZodEffects({\n  schema,\n  typeName: ZodFirstPartyTypeKind.ZodEffects,\n  effect,\n  ...processCreateParams(params)\n});\nZodEffects.createWithPreprocess = (preprocess, schema, params) => new ZodEffects({\n  schema,\n  effect: { type: \"preprocess\", transform: preprocess },\n  typeName: ZodFirstPartyTypeKind.ZodEffects,\n  ...processCreateParams(params)\n});\nvar ZodOptional = class extends ZodType {\n  _parse(input) {\n    return this._getType(input) === ZodParsedType.undefined ? OK(void 0) : this._def.innerType._parse(input);\n  }\n  unwrap() {\n    return this._def.innerType;\n  }\n};\nZodOptional.create = (type, params) => new ZodOptional({\n  innerType: type,\n  typeName: ZodFirstPartyTypeKind.ZodOptional,\n  ...processCreateParams(params)\n});\nvar ZodNullable = class extends ZodType {\n  _parse(input) {\n    return this._getType(input) === ZodParsedType.null ? OK(null) : this._def.innerType._parse(input);\n  }\n  unwrap() {\n    return this._def.innerType;\n  }\n};\nZodNullable.create = (type, params) => new ZodNullable({\n  innerType: type,\n  typeName: ZodFirstPartyTypeKind.ZodNullable,\n  ...processCreateParams(params)\n});\nvar ZodDefault = class extends ZodType {\n  _parse(input) {\n    let { ctx } = this._processInputParams(input), data = ctx.data;\n    return ctx.parsedType === ZodParsedType.undefined && (data = this._def.defaultValue()), this._def.innerType._parse({\n      data,\n      path: ctx.path,\n      parent: ctx\n    });\n  }\n  removeDefault() {\n    return this._def.innerType;\n  }\n};\nZodDefault.create = (type, params) => new ZodDefault({\n  innerType: type,\n  typeName: ZodFirstPartyTypeKind.ZodDefault,\n  defaultValue: typeof params.default == \"function\" ? params.default : () => params.default,\n  ...processCreateParams(params)\n});\nvar ZodCatch = class extends ZodType {\n  _parse(input) {\n    let { ctx } = this._processInputParams(input), newCtx = {\n      ...ctx,\n      common: {\n        ...ctx.common,\n        issues: []\n      }\n    }, result = this._def.innerType._parse({\n      data: newCtx.data,\n      path: newCtx.path,\n      parent: {\n        ...newCtx\n      }\n    });\n    return isAsync(result) ? result.then((result2) => ({\n      status: \"valid\",\n      value: result2.status === \"valid\" ? result2.value : this._def.catchValue({\n        get error() {\n          return new ZodError(newCtx.common.issues);\n        },\n        input: newCtx.data\n      })\n    })) : {\n      status: \"valid\",\n      value: result.status === \"valid\" ? result.value : this._def.catchValue({\n        get error() {\n          return new ZodError(newCtx.common.issues);\n        },\n        input: newCtx.data\n      })\n    };\n  }\n  removeCatch() {\n    return this._def.innerType;\n  }\n};\nZodCatch.create = (type, params) => new ZodCatch({\n  innerType: type,\n  typeName: ZodFirstPartyTypeKind.ZodCatch,\n  catchValue: typeof params.catch == \"function\" ? params.catch : () => params.catch,\n  ...processCreateParams(params)\n});\nvar ZodNaN = class extends ZodType {\n  _parse(input) {\n    if (this._getType(input) !== ZodParsedType.nan) {\n      let ctx = this._getOrReturnCtx(input);\n      return addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.nan,\n        received: ctx.parsedType\n      }), INVALID;\n    }\n    return { status: \"valid\", value: input.data };\n  }\n};\nZodNaN.create = (params) => new ZodNaN({\n  typeName: ZodFirstPartyTypeKind.ZodNaN,\n  ...processCreateParams(params)\n});\nvar BRAND = Symbol(\"zod_brand\"), ZodBranded = class extends ZodType {\n  _parse(input) {\n    let { ctx } = this._processInputParams(input), data = ctx.data;\n    return this._def.type._parse({\n      data,\n      path: ctx.path,\n      parent: ctx\n    });\n  }\n  unwrap() {\n    return this._def.type;\n  }\n}, ZodPipeline = class _ZodPipeline extends ZodType {\n  _parse(input) {\n    let { status, ctx } = this._processInputParams(input);\n    if (ctx.common.async)\n      return (async () => {\n        let inResult = await this._def.in._parseAsync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: ctx\n        });\n        return inResult.status === \"aborted\" ? INVALID : inResult.status === \"dirty\" ? (status.dirty(), DIRTY(inResult.value)) : this._def.out._parseAsync({\n          data: inResult.value,\n          path: ctx.path,\n          parent: ctx\n        });\n      })();\n    {\n      let inResult = this._def.in._parseSync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      });\n      return inResult.status === \"aborted\" ? INVALID : inResult.status === \"dirty\" ? (status.dirty(), {\n        status: \"dirty\",\n        value: inResult.value\n      }) : this._def.out._parseSync({\n        data: inResult.value,\n        path: ctx.path,\n        parent: ctx\n      });\n    }\n  }\n  static create(a, b) {\n    return new _ZodPipeline({\n      in: a,\n      out: b,\n      typeName: ZodFirstPartyTypeKind.ZodPipeline\n    });\n  }\n}, ZodReadonly = class extends ZodType {\n  _parse(input) {\n    let result = this._def.innerType._parse(input);\n    return isValid(result) && (result.value = Object.freeze(result.value)), result;\n  }\n};\nZodReadonly.create = (type, params) => new ZodReadonly({\n  innerType: type,\n  typeName: ZodFirstPartyTypeKind.ZodReadonly,\n  ...processCreateParams(params)\n});\nvar custom = (check, params = {}, fatal) => check ? ZodAny.create().superRefine((data, ctx) => {\n  var _a, _b;\n  if (!check(data)) {\n    let p = typeof params == \"function\" ? params(data) : typeof params == \"string\" ? { message: params } : params, _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : !0, p2 = typeof p == \"string\" ? { message: p } : p;\n    ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n  }\n}) : ZodAny.create(), late = {\n  object: ZodObject.lazycreate\n}, ZodFirstPartyTypeKind;\n(function(ZodFirstPartyTypeKind2) {\n  ZodFirstPartyTypeKind2.ZodString = \"ZodString\", ZodFirstPartyTypeKind2.ZodNumber = \"ZodNumber\", ZodFirstPartyTypeKind2.ZodNaN = \"ZodNaN\", ZodFirstPartyTypeKind2.ZodBigInt = \"ZodBigInt\", ZodFirstPartyTypeKind2.ZodBoolean = \"ZodBoolean\", ZodFirstPartyTypeKind2.ZodDate = \"ZodDate\", ZodFirstPartyTypeKind2.ZodSymbol = \"ZodSymbol\", ZodFirstPartyTypeKind2.ZodUndefined = \"ZodUndefined\", ZodFirstPartyTypeKind2.ZodNull = \"ZodNull\", ZodFirstPartyTypeKind2.ZodAny = \"ZodAny\", ZodFirstPartyTypeKind2.ZodUnknown = \"ZodUnknown\", ZodFirstPartyTypeKind2.ZodNever = \"ZodNever\", ZodFirstPartyTypeKind2.ZodVoid = \"ZodVoid\", ZodFirstPartyTypeKind2.ZodArray = \"ZodArray\", ZodFirstPartyTypeKind2.ZodObject = \"ZodObject\", ZodFirstPartyTypeKind2.ZodUnion = \"ZodUnion\", ZodFirstPartyTypeKind2.ZodDiscriminatedUnion = \"ZodDiscriminatedUnion\", ZodFirstPartyTypeKind2.ZodIntersection = \"ZodIntersection\", ZodFirstPartyTypeKind2.ZodTuple = \"ZodTuple\", ZodFirstPartyTypeKind2.ZodRecord = \"ZodRecord\", ZodFirstPartyTypeKind2.ZodMap = \"ZodMap\", ZodFirstPartyTypeKind2.ZodSet = \"ZodSet\", ZodFirstPartyTypeKind2.ZodFunction = \"ZodFunction\", ZodFirstPartyTypeKind2.ZodLazy = \"ZodLazy\", ZodFirstPartyTypeKind2.ZodLiteral = \"ZodLiteral\", ZodFirstPartyTypeKind2.ZodEnum = \"ZodEnum\", ZodFirstPartyTypeKind2.ZodEffects = \"ZodEffects\", ZodFirstPartyTypeKind2.ZodNativeEnum = \"ZodNativeEnum\", ZodFirstPartyTypeKind2.ZodOptional = \"ZodOptional\", ZodFirstPartyTypeKind2.ZodNullable = \"ZodNullable\", ZodFirstPartyTypeKind2.ZodDefault = \"ZodDefault\", ZodFirstPartyTypeKind2.ZodCatch = \"ZodCatch\", ZodFirstPartyTypeKind2.ZodPromise = \"ZodPromise\", ZodFirstPartyTypeKind2.ZodBranded = \"ZodBranded\", ZodFirstPartyTypeKind2.ZodPipeline = \"ZodPipeline\", ZodFirstPartyTypeKind2.ZodReadonly = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nvar instanceOfType = (cls, params = {\n  message: `Input not instance of ${cls.name}`\n}) => custom((data) => data instanceof cls, params), stringType = ZodString.create, numberType = ZodNumber.create, nanType = ZodNaN.create, bigIntType = ZodBigInt.create, booleanType = ZodBoolean.create, dateType = ZodDate.create, symbolType = ZodSymbol.create, undefinedType = ZodUndefined.create, nullType = ZodNull.create, anyType = ZodAny.create, unknownType = ZodUnknown.create, neverType = ZodNever.create, voidType = ZodVoid.create, arrayType = ZodArray.create, objectType = ZodObject.create, strictObjectType = ZodObject.strictCreate, unionType = ZodUnion.create, discriminatedUnionType = ZodDiscriminatedUnion.create, intersectionType = ZodIntersection.create, tupleType = ZodTuple.create, recordType = ZodRecord.create, mapType = ZodMap.create, setType = ZodSet.create, functionType = ZodFunction.create, lazyType = ZodLazy.create, literalType = ZodLiteral.create, enumType = ZodEnum.create, nativeEnumType = ZodNativeEnum.create, promiseType = ZodPromise.create, effectsType = ZodEffects.create, optionalType = ZodOptional.create, nullableType = ZodNullable.create, preprocessType = ZodEffects.createWithPreprocess, pipelineType = ZodPipeline.create, ostring = () => stringType().optional(), onumber = () => numberType().optional(), oboolean = () => booleanType().optional(), coerce = {\n  string: (arg) => ZodString.create({ ...arg, coerce: !0 }),\n  number: (arg) => ZodNumber.create({ ...arg, coerce: !0 }),\n  boolean: (arg) => ZodBoolean.create({\n    ...arg,\n    coerce: !0\n  }),\n  bigint: (arg) => ZodBigInt.create({ ...arg, coerce: !0 }),\n  date: (arg) => ZodDate.create({ ...arg, coerce: !0 })\n}, NEVER = INVALID, z = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  defaultErrorMap: errorMap,\n  setErrorMap,\n  getErrorMap,\n  makeIssue,\n  EMPTY_PATH,\n  addIssueToContext,\n  ParseStatus,\n  INVALID,\n  DIRTY,\n  OK,\n  isAborted,\n  isDirty,\n  isValid,\n  isAsync,\n  get util() {\n    return util;\n  },\n  get objectUtil() {\n    return objectUtil;\n  },\n  ZodParsedType,\n  getParsedType,\n  ZodType,\n  ZodString,\n  ZodNumber,\n  ZodBigInt,\n  ZodBoolean,\n  ZodDate,\n  ZodSymbol,\n  ZodUndefined,\n  ZodNull,\n  ZodAny,\n  ZodUnknown,\n  ZodNever,\n  ZodVoid,\n  ZodArray,\n  ZodObject,\n  ZodUnion,\n  ZodDiscriminatedUnion,\n  ZodIntersection,\n  ZodTuple,\n  ZodRecord,\n  ZodMap,\n  ZodSet,\n  ZodFunction,\n  ZodLazy,\n  ZodLiteral,\n  ZodEnum,\n  ZodNativeEnum,\n  ZodPromise,\n  ZodEffects,\n  ZodTransformer: ZodEffects,\n  ZodOptional,\n  ZodNullable,\n  ZodDefault,\n  ZodCatch,\n  ZodNaN,\n  BRAND,\n  ZodBranded,\n  ZodPipeline,\n  ZodReadonly,\n  custom,\n  Schema: ZodType,\n  ZodSchema: ZodType,\n  late,\n  get ZodFirstPartyTypeKind() {\n    return ZodFirstPartyTypeKind;\n  },\n  coerce,\n  any: anyType,\n  array: arrayType,\n  bigint: bigIntType,\n  boolean: booleanType,\n  date: dateType,\n  discriminatedUnion: discriminatedUnionType,\n  effect: effectsType,\n  enum: enumType,\n  function: functionType,\n  instanceof: instanceOfType,\n  intersection: intersectionType,\n  lazy: lazyType,\n  literal: literalType,\n  map: mapType,\n  nan: nanType,\n  nativeEnum: nativeEnumType,\n  never: neverType,\n  null: nullType,\n  nullable: nullableType,\n  number: numberType,\n  object: objectType,\n  oboolean,\n  onumber,\n  optional: optionalType,\n  ostring,\n  pipeline: pipelineType,\n  preprocess: preprocessType,\n  promise: promiseType,\n  record: recordType,\n  set: setType,\n  strictObject: strictObjectType,\n  string: stringType,\n  symbol: symbolType,\n  transformer: effectsType,\n  tuple: tupleType,\n  undefined: undefinedType,\n  union: unionType,\n  unknown: unknownType,\n  void: voidType,\n  NEVER,\n  ZodIssueCode,\n  quotelessJson,\n  ZodError\n});\n\n// src/workers/shared/zod.worker.ts\nvar HEX_REGEXP = /^[0-9a-f]*$/i, BASE64_REGEXP = /^[0-9a-z+/=]*$/i, HexDataSchema = z.string().regex(HEX_REGEXP).transform((hex) => Buffer.from(hex, \"hex\")), Base64DataSchema = z.string().regex(BASE64_REGEXP).transform((base64) => Buffer.from(base64, \"base64\"));\nexport {\n  BASE64_REGEXP,\n  Base64DataSchema,\n  HEX_REGEXP,\n  HexDataSchema,\n  z\n};\n//# sourceMappingURL=zod.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/shared/zod.worker.js"
        }
      ]
    },
    {
      "modules": [
        {
          "name": "cloudflare-internal:ratelimit:module",
          "esModule": "// src/workers/ratelimit/ratelimit.worker.ts\nvar RatelimitOptionKeys = [\"key\", \"limit\", \"period\"], RatelimitPeriodValues = [10, 60];\nfunction validate(test, message) {\n  if (!test)\n    throw new Error(message);\n}\nvar Ratelimit = class {\n  namespaceId;\n  limitVal;\n  period;\n  buckets;\n  epoch;\n  constructor(config) {\n    this.namespaceId = config.namespaceId, this.limitVal = config.limit, this.period = config.period, this.buckets = /* @__PURE__ */ new Map(), this.epoch = 0;\n  }\n  // method that counts and checks against the limit in in-memory buckets\n  async limit(options) {\n    validate(\n      typeof options == \"object\" && options !== null,\n      \"invalid rate limit options\"\n    );\n    let invalidProps = Object.keys(options ?? {}).filter(\n      (key2) => !RatelimitOptionKeys.includes(key2)\n    );\n    validate(\n      invalidProps.length == 0,\n      `bad rate limit options: [${invalidProps.join(\",\")}]`\n    );\n    let {\n      key = \"\",\n      limit = this.limitVal,\n      period = this.period\n    } = options;\n    validate(typeof key == \"string\", `invalid key: ${key}`), validate(typeof limit == \"number\", `limit must be a number: ${limit}`), validate(typeof period == \"number\", `period must be a number: ${period}`), validate(\n      RatelimitPeriodValues.includes(period),\n      `unsupported period: ${period}`\n    );\n    let epoch = Math.floor(Date.now() / (period * 1e3));\n    epoch != this.epoch && (this.epoch = epoch, this.buckets.clear());\n    let val = this.buckets.get(key) || 0;\n    return val >= limit ? {\n      success: !1\n    } : (this.buckets.set(key, val + 1), {\n      success: !0\n    });\n  }\n};\nfunction ratelimit_worker_default(env) {\n  return new Ratelimit(env);\n}\nexport {\n  ratelimit_worker_default as default\n};\n//# sourceMappingURL=ratelimit.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/ratelimit/ratelimit.worker.js",
          "internal": true
        }
      ]
    },
    {
      "modules": [
        {
          "name": "cloudflare-internal:email",
          "esModule": "// src/workers/email/constants.ts\nvar RAW_EMAIL = \"EmailMessage::raw\";\n\n// src/workers/email/email.worker.ts\nvar EmailMessage = class {\n  constructor(from, to, raw) {\n    this.from = from;\n    this.to = to;\n    this.raw = raw;\n    return {\n      from,\n      to,\n      // @ts-expect-error We need to be able to access the raw contents of an EmailMessage in entry.worker.ts\n      [RAW_EMAIL]: raw\n    };\n  }\n}, email_worker_default = {\n  EmailMessage\n};\nexport {\n  email_worker_default as default\n};\n//# sourceMappingURL=email.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/email/email.worker.js",
          "internal": true
        }
      ]
    },
    {
      "modules": [
        {
          "name": "analytics-engine:local-simulator",
          "esModule": "// src/workers/analytics-engine/analytics-engine.worker.ts\nvar LocalAnalyticsEngineDataset = class {\n  constructor(env) {\n    this.env = env;\n  }\n  writeDataPoint(_event) {\n  }\n};\nfunction analytics_engine_worker_default(env) {\n  return new LocalAnalyticsEngineDataset(env);\n}\nexport {\n  analytics_engine_worker_default as default\n};\n//# sourceMappingURL=analytics-engine.worker.js.map\n//# sourceURL=file:///Users/penalosa/dev/wsdk/packages/miniflare/dist/src/workers/analytics-engine/analytics-engine.worker.js",
          "internal": true
        }
      ]
    }
  ],
  "structuredLogging": false
}