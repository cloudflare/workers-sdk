name: Pull Request

on: pull_request

jobs:
  check:
    name: "Checks"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js 16.13
        uses: actions/setup-node@v3
        with:
          node-version: 16.13
          cache: "npm" # cache ~/.npm in case 'npm ci' needs to run

      - uses: actions/cache@v3
        id: eslint-cache
        with:
          path: |
            .eslintcache
            tsconfig.tsbuildinfo
          key: ${{ matrix.os }}-eslint-tsbuildinfo-${{ hashFiles('**/*.ts','**/*.js', 'package.json', 'tsconfig.json') }}

      - name: Install NPM Dependencies
        run: npm ci

      - name: Check for errors
        run: npm run check

  test:
    name: "Tests"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js 16.13
        uses: actions/setup-node@v3
        with:
          node-version: 16.13
          cache: "npm" # cache ~/.npm in case 'npm ci' needs to run

      - name: Install NPM Dependencies
        run: npm ci

      - name: Run builds
        run: npm run build
        env:
          NODE_ENV: "production"

      - name: Run tests & collect coverage
        run: npm run test:ci
        env:
          TMP_CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TMP_CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Report Code Coverage
        uses: codecov/codecov-action@v3
