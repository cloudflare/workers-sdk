# Runs the C3 e2e tests on dependabot PRs

name: C3 E2E Tests (Dependabot)

on:
  pull_request:
    paths:
      - .changeset/c3-frameworks-update-*.md

env:
  node-version: 18.17.1
  bun-version: 1.0.3

jobs:
  get-dependabot-bumped-framework:
    name: "Get bumped framework (dependabot-only)"
    runs-on: ubuntu-latest
    outputs:
      bumped-framework-cli: ${{ steps.detect.outputs.result }}
    if: |
      github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: detect-bumped-framework
        id: detect
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const getBumpedFrameworkCli = require('.github/get-c3-dependabot-bumped-framework.cjs');
            return getBumpedFrameworkCli();

  # For dependabot versioning PRs we only want to run the e2es for the specifically bumped
  # framework (this is both for optimization and in order to reduce unnecessary flakiness)
  e2e-only-dependabot-bumped-framework:
    # Note: please keep this job in sync with the e2e one
    #       in .github/workflows/c3-e2e.yml
    needs: [get-dependabot-bumped-framework]
    name: ${{ format('Dependabot E2E ({0})', matrix.pm) }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        pm: [npm, pnpm, bun, yarn]
        # include a single windows test with pnpm
        include:
          - os: windows-latest
            pm: pnpm
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: E2E Tests
        uses: ./.github/actions/run-c3-e2e
        with:
          package-manager: ${{ matrix.pm }}
          framework: ${{ needs.get-dependabot-bumped-framework.outputs.bumped-framework-cli }}
          accountId: ${{ secrets.C3_TEST_CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.C3_TEST_CLOUDFLARE_API_TOKEN }}
