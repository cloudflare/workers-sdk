name: Create Pull Request Prerelease

on: pull_request

jobs:
  build:
    if: ${{ github.repository_owner == 'cloudflare' }}
    name: Build & Publish a Prerelease to the Adhoc Registry
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    timeout-minutes: 30
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8.8.0
      - name: Use Node.js 16.18
        uses: actions/setup-node@v3
        with:
          node-version: 16.18
          cache: "pnpm"

      - name: Install workerd Dependencies
        if: ${{ runner.os == 'Linux' }}
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y libc++1

      - name: Install NPM Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Miniflare
        # `extract-runtime-versions.mjs` needs to be able to resolve `miniflare`, but we want to have the correct
        # `package.json` versions when we build packages for packing
        run: pnpm run build --filter miniflare
        env:
          CI_OS: ${{ runner.os }}

      - name: Extract runtime versions
        run: node .github/extract-runtime-versions.mjs # extract versions before modifying version to include commit hash

      - name: Upload runtime versions
        uses: actions/upload-artifact@v3
        with:
          name: runtime-versions.md
          path: runtime-versions.md

      - name: Expose ACTIONS_RUNTIME_TOKEN and ACTIONS_RESULTS_URL
        uses: ./.github/actions/expose-actions-variables

      - name: Update versions and dependencies
        run: node .github/prereleases/1-versions.mjs

      - name: Build, pack, and upload packages
        run: node .github/prereleases/2-build-pack-upload.mjs
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ env.GITHUB_ACTIONS_RUNTIME_TOKEN }}
          ACTIONS_RESULTS_URL: ${{ env.GITHUB_ACTIONS_RESULTS_URL }}
          NODE_ENV: "production"
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_PUBLIC_KEY: ${{ secrets.ALGOLIA_PUBLIC_KEY }}
          SENTRY_DSN: "https://9edbb8417b284aa2bbead9b4c318918b@sentry10.cfdata.org/583"
          CI_OS: ${{ runner.os }}

      - name: Build and upload prerelease comment
        run: node .github/prereleases/3-comment.mjs
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ env.GITHUB_ACTIONS_RUNTIME_TOKEN }}
          ACTIONS_RESULTS_URL: ${{ env.GITHUB_ACTIONS_RESULTS_URL }}
