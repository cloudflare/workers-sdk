name: Deploy all Pages sites

on:
  push:
    branches:
      - main
  pull_request:
    types: [synchronize, opened, reopened, labeled, unlabeled]

jobs:
  filter-packages:
    strategy:
      matrix:
        package: ["workers-playground", "other-playground"]
    name: Build & Deploy Playground Shell to Cloudflare Pages
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.is-match.outputs.continue }}
      package: ${{ matrix.package }}

    steps:
      - id: preview-label
        run: echo "label=${{ matrix.package }}-preview" >> "$GITHUB_OUTPUT"

      - id: is-match
        run: echo "continue=${{ github.repository_owner == 'cloudflare' && (github.event_name != 'pull_request' || (github.event_name == 'pull_request' && contains(github.event.*.labels.*.name, steps.preview-label.outputs.label )) )}}" >> "$GITHUB_OUTPUT"

  publish:
    needs: filter-packages
    if: needs.filter-packages.outputs.continue
    name: Build & Deploy Playground Shell to Cloudflare Pages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

      - name: Install NPM Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Deploy Playground Shell to Pages
        run: pnpm --filter ${{ needs.filter-packages.outputs.package }} run deploy
        env:
          CLOUDFLARE_ACCOUNT_ID: "e35fd947284363a46fd7061634477114"
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
