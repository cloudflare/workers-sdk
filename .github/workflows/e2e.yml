name: E2E tests

on:
  push:
    branches:
      - changeset-release/main
  pull_request:
    types: [synchronize, opened, reopened, labeled, unlabeled]
  repository_dispatch:

jobs:
  e2e-test:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.os }}-${{ matrix.node }}
      cancel-in-progress: true
    timeout-minutes: 15
    if: github.repository_owner == 'cloudflare' && (github.event_name != 'pull_request' || (github.event_name == 'pull_request' && contains(github.event.*.labels.*.name, 'e2e' )))
    name: "E2E Test"
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, windows-2022, ubuntu-22.04]
        node: ["18"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8.8.0
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install workerd Dependencies
        if: ${{ runner.os == 'Linux' }}
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y libc++1

      - name: Install NPM Dependencies
        run: pnpm install --frozen-lockfile

      - name: Run builds
        run: pnpm run build
        env:
          NODE_ENV: "production"
          CI_OS: ${{ runner.os }}

      - name: Pack Miniflare
        run: pnpm pack --pack-destination $HOME
        env:
          NODE_ENV: "production"
        working-directory: packages/miniflare

      - name: Modify wrangler package.json miniflare dependency
        run: pnpm add $(ls $HOME/miniflare-*.tgz)
        working-directory: packages/wrangler

      - name: Pack Wrangler
        run: pnpm pack --pack-destination $HOME
        env:
          NODE_ENV: "production"
        working-directory: packages/wrangler

      - name: Find Wrangler
        shell: bash
        id: "find-wrangler"
        run: echo "dir=$(ls $HOME/wrangler-*.tgz)" >> $GITHUB_OUTPUT;

      - name: Run tests (unix)
        if: matrix.os == 'macos-13' || matrix.os == 'ubuntu-22.04'
        run: |
          pnpm add ${{ steps.find-wrangler.outputs.dir}} --global
          pnpm run --filter wrangler test:e2e
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.TEST_CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.TEST_CLOUDFLARE_ACCOUNT_ID }}
          WRANGLER: wrangler
          NODE_OPTIONS: "--max_old_space_size=8192"
          WRANGLER_LOG_PATH: ${{ runner.temp }}/wrangler-debug-logs/

      - name: Run tests (windows)
        if: matrix.os == 'windows-2022'
        run: pnpm run --filter wrangler test:e2e
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.TEST_CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.TEST_CLOUDFLARE_ACCOUNT_ID }}
          WRANGLER: pnpm --silent --package ${{ steps.find-wrangler.outputs.dir}} dlx wrangler
          NODE_OPTIONS: "--max_old_space_size=8192"
          WRANGLER_LOG_PATH: ${{ runner.temp }}/wrangler-debug-logs/

      - name: Upload debug logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-debug-logs-${{ matrix.os }}-${{ matrix.node }}
          path: ${{ runner.temp }}/wrangler-debug-logs/
