From 85fcb93878fac45074cc24d4e215ede8b9082339 Mon Sep 17 00:00:00 2001
From: Samuel Macleod <smacleod@cloudflare.com>
Date: Thu, 4 May 2023 03:22:33 +0100
Subject: [PATCH 15/15] Support sourcemaps:

    * Recognise `wrangler://` URLs as "special", and always load them with Network.loadNetworkResource

    * Support a `text` property on the response to `Network.loadNetworkResource` to support providing a raw response, rather than a response stream

    * Enable the experimental `AUTHORED_DEPLOYED_GROUPING` and `JUST_MY_CODE` by default, for a better splitting of sourcemapped/deployed Worker code, and to su
---
 front_end/core/common/ParsedURL.ts       | 2 +-
 front_end/core/sdk/PageResourceLoader.ts | 4 +++-
 front_end/entrypoints/main/MainImpl.ts   | 2 ++
 3 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/front_end/core/common/ParsedURL.ts b/front_end/core/common/ParsedURL.ts
index 37c79c85c1..bc52e4c7ce 100644
--- a/front_end/core/common/ParsedURL.ts
+++ b/front_end/core/common/ParsedURL.ts
@@ -355,7 +355,7 @@ export class ParsedURL {
     // Return special URLs as-is.
     const trimmedHref = href.trim();
     if (trimmedHref.startsWith('data:') || trimmedHref.startsWith('blob:') || trimmedHref.startsWith('javascript:') ||
-        trimmedHref.startsWith('mailto:')) {
+        trimmedHref.startsWith('mailto:') || trimmedHref.startsWith('wrangler:')) {
       return href as Platform.DevToolsPath.UrlString;
     }
 
diff --git a/front_end/core/sdk/PageResourceLoader.ts b/front_end/core/sdk/PageResourceLoader.ts
index b057267115..23d7872699 100644
--- a/front_end/core/sdk/PageResourceLoader.ts
+++ b/front_end/core/sdk/PageResourceLoader.ts
@@ -307,7 +307,9 @@ export class PageResourceLoader extends Common.ObjectWrapper.ObjectWrapper<Event
     const resource =
         await networkManager.loadNetworkResource(frameId, url, {disableCache: true, includeCredentials: true});
     try {
-      const content = resource.stream ? await ioModel.readToString(resource.stream) : '';
+      // @ts-expect-error Property 'text' does not exist on type 'LoadNetworkResourcePageResult'.
+      // Cloudflare custom extension to load network data without streams
+      const content = resource.stream ? await ioModel.readToString(resource.stream) : (resource.text ?? '');
       return {
         success: resource.success,
         content,
diff --git a/front_end/entrypoints/main/MainImpl.ts b/front_end/entrypoints/main/MainImpl.ts
index 87ad8ea645..047313c89c 100644
--- a/front_end/entrypoints/main/MainImpl.ts
+++ b/front_end/entrypoints/main/MainImpl.ts
@@ -428,6 +428,8 @@ export class MainImpl {
       Root.Runtime.ExperimentName.CSS_AUTHORING_HINTS,
       'sourcesPrettyPrint',
       Root.Runtime.ExperimentName.DISABLE_COLOR_FORMAT_SETTING,
+      Root.Runtime.ExperimentName.AUTHORED_DEPLOYED_GROUPING,
+      Root.Runtime.ExperimentName.JUST_MY_CODE
     ]);
 
     Root.Runtime.experiments.setNonConfigurableExperiments([
-- 
2.39.2 (Apple Git-143)

