{"version":3,"file":"Color.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/Color.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2009 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Platform from '../platform/platform.js';\n\nimport {\n  blendColors,\n  contrastRatioAPCA,\n  desiredLuminanceAPCA,\n  luminance,\n  luminanceAPCA,\n  rgbaToHsla,\n  rgbaToHwba,\n} from './ColorUtils.js';\n\nexport class Color {\n  #hslaInternal: number[]|undefined;\n  #hwbaInternal: number[]|undefined;\n  #rgbaInternal: number[];\n  #originalText: string|null;\n  readonly #originalTextIsValid: boolean;\n  #formatInternal: Format;\n\n  constructor(rgba: number[], format: Format, originalText?: string) {\n    this.#hslaInternal = undefined;\n    this.#hwbaInternal = undefined;\n    this.#rgbaInternal = rgba;\n    this.#originalText = originalText || null;\n    this.#originalTextIsValid = Boolean(this.#originalText);\n    this.#formatInternal = format;\n    if (typeof this.#rgbaInternal[3] === 'undefined') {\n      this.#rgbaInternal[3] = 1;\n    }\n\n    for (let i = 0; i < 4; ++i) {\n      if (this.#rgbaInternal[i] < 0) {\n        this.#rgbaInternal[i] = 0;\n        this.#originalTextIsValid = false;\n      }\n      if (this.#rgbaInternal[i] > 1) {\n        this.#rgbaInternal[i] = 1;\n        this.#originalTextIsValid = false;\n      }\n    }\n  }\n\n  static parse(text: string): Color|null {\n    // Simple - #hex, nickname\n    const value = text.toLowerCase().replace(/\\s+/g, '');\n    const simple = /^(?:#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})|(\\w+))$/i;\n    let match = value.match(simple);\n    if (match) {\n      if (match[1]) {  // hex\n        let hex = match[1].toLowerCase();\n        let format;\n        if (hex.length === 3) {\n          format = Format.ShortHEX;\n          hex = hex.charAt(0) + hex.charAt(0) + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2);\n        } else if (hex.length === 4) {\n          format = Format.ShortHEXA;\n          hex = hex.charAt(0) + hex.charAt(0) + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2) +\n              hex.charAt(3) + hex.charAt(3);\n        } else if (hex.length === 6) {\n          format = Format.HEX;\n        } else {\n          format = Format.HEXA;\n        }\n        const r = parseInt(hex.substring(0, 2), 16);\n        const g = parseInt(hex.substring(2, 4), 16);\n        const b = parseInt(hex.substring(4, 6), 16);\n        let a = 1;\n        if (hex.length === 8) {\n          a = parseInt(hex.substring(6, 8), 16) / 255;\n        }\n        return new Color([r / 255, g / 255, b / 255, a], format, text);\n      }\n\n      if (match[2]) {  // nickname\n        const nickname = match[2].toLowerCase();\n        const rgba = Nicknames.get(nickname);\n        if (rgba !== undefined) {\n          const color = Color.fromRGBA(rgba);\n          color.#formatInternal = Format.Nickname;\n          color.#originalText = text;\n          return color;\n        }\n        return null;\n      }\n\n      return null;\n    }\n\n    // rgb/rgba(), hsl/hsla(), hwb/hwba()\n    match = text.toLowerCase().match(/^\\s*(?:(rgba?)|(hsla?)|(hwba?))\\((.*)\\)\\s*$/);\n    if (match) {\n      // hwb(a) must have white space delimiters between its parameters.\n      const values = this.splitColorFunctionParameters(match[4], !match[3]);\n      if (!values) {\n        return null;\n      }\n      const hasAlpha = (values[3] !== undefined);\n\n      if (match[1]) {  // rgb/rgba\n        const rgba = [\n          Color.parseRgbNumeric(values[0]),\n          Color.parseRgbNumeric(values[1]),\n          Color.parseRgbNumeric(values[2]),\n          hasAlpha ? Color.parseAlphaNumeric(values[3]) : 1,\n        ];\n        if (rgba.indexOf(null) > -1) {\n          return null;\n        }\n        return new Color((rgba as number[]), hasAlpha ? Format.RGBA : Format.RGB, text);\n      }\n\n      if (match[2] || match[3]) {  // hsl/hsla or hwb/hwba\n        const parameters = [\n          Color.parseHueNumeric(values[0]),\n          Color.parseSatLightNumeric(values[1]),\n          Color.parseSatLightNumeric(values[2]),\n          hasAlpha ? Color.parseAlphaNumeric(values[3]) : 1,\n        ];\n        if (parameters.indexOf(null) > -1) {\n          return null;\n        }\n        const rgba: number[] = [];\n        if (match[2]) {\n          Color.hsl2rgb((parameters as number[]), rgba);\n          return new Color(rgba, hasAlpha ? Format.HSLA : Format.HSL, text);\n        }\n        Color.hwb2rgb((parameters as number[]), rgba);\n        return new Color(rgba, hasAlpha ? Format.HWBA : Format.HWB, text);\n      }\n    }\n\n    return null;\n  }\n\n  static fromRGBA(rgba: number[]): Color {\n    return new Color([rgba[0] / 255, rgba[1] / 255, rgba[2] / 255, rgba[3]], Format.RGBA);\n  }\n\n  static fromHSVA(hsva: number[]): Color {\n    const rgba: number[] = [];\n    Color.hsva2rgba(hsva, rgba);\n    return new Color(rgba, Format.HSLA);\n  }\n\n  /**\n   * Split the color parameters of (e.g.) rgb(a), hsl(a), hwb(a) functions.\n   */\n  static splitColorFunctionParameters(content: string, allowCommas: boolean): string[]|null {\n    const components = content.trim();\n    let values: string[] = [];\n\n    if (allowCommas) {\n      values = components.split(/\\s*,\\s*/);\n    }\n    if (!allowCommas || values.length === 1) {\n      values = components.split(/\\s+/);\n      if (values[3] === '/') {\n        values.splice(3, 1);\n        if (values.length !== 4) {\n          return null;\n        }\n      } else if (\n          (values.length > 2 && values[2].indexOf('/') !== -1) ||\n          (values.length > 3 && values[3].indexOf('/') !== -1)) {\n        const alpha = values.slice(2, 4).join('');\n        values = values.slice(0, 2).concat(alpha.split(/\\//)).concat(values.slice(4));\n      } else if (values.length >= 4) {\n        return null;\n      }\n    }\n    if (values.length !== 3 && values.length !== 4 || values.indexOf('') > -1) {\n      return null;\n    }\n    return values;\n  }\n\n  static parsePercentOrNumber(value: string): number|null {\n    // @ts-ignore: isNaN can accept strings\n    if (isNaN(value.replace('%', ''))) {\n      return null;\n    }\n    const parsed = parseFloat(value);\n\n    if (value.indexOf('%') !== -1) {\n      if (value.indexOf('%') !== value.length - 1) {\n        return null;\n      }\n      return parsed / 100;\n    }\n    return parsed;\n  }\n\n  static parseRgbNumeric(value: string): number|null {\n    const parsed = Color.parsePercentOrNumber(value);\n    if (parsed === null) {\n      return null;\n    }\n\n    if (value.indexOf('%') !== -1) {\n      return parsed;\n    }\n    return parsed / 255;\n  }\n\n  static parseHueNumeric(value: string): number|null {\n    const angle = value.replace(/(deg|g?rad|turn)$/, '');\n    // @ts-ignore: isNaN can accept strings\n    if (isNaN(angle) || value.match(/\\s+(deg|g?rad|turn)/)) {\n      return null;\n    }\n    const number = parseFloat(angle);\n\n    if (value.indexOf('turn') !== -1) {\n      return number % 1;\n    }\n    if (value.indexOf('grad') !== -1) {\n      return (number / 400) % 1;\n    }\n    if (value.indexOf('rad') !== -1) {\n      return (number / (2 * Math.PI)) % 1;\n    }\n    return (number / 360) % 1;\n  }\n\n  static parseSatLightNumeric(value: string): number|null {\n    // @ts-ignore: isNaN can accept strings\n    if (value.indexOf('%') !== value.length - 1 || isNaN(value.replace('%', ''))) {\n      return null;\n    }\n    const parsed = parseFloat(value);\n    return Math.min(1, parsed / 100);\n  }\n\n  static parseAlphaNumeric(value: string): number|null {\n    return Color.parsePercentOrNumber(value);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static hsva2hsla(hsva: number[], out_hsla: number[]): void {\n    const h = hsva[0];\n    let s: 0|number = hsva[1];\n    const v = hsva[2];\n\n    const t = (2 - s) * v;\n    if (v === 0 || s === 0) {\n      s = 0;\n    } else {\n      s *= v / (t < 1 ? t : 2 - t);\n    }\n\n    out_hsla[0] = h;\n    out_hsla[1] = s;\n    out_hsla[2] = t / 2;\n    out_hsla[3] = hsva[3];\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static hsl2rgb(hsl: number[], out_rgb: number[]): void {\n    const h = hsl[0];\n    let s: 0|number = hsl[1];\n    const l = hsl[2];\n\n    function hue2rgb(p: number, q: number, h: number): number {\n      if (h < 0) {\n        h += 1;\n      } else if (h > 1) {\n        h -= 1;\n      }\n\n      if ((h * 6) < 1) {\n        return p + (q - p) * h * 6;\n      }\n      if ((h * 2) < 1) {\n        return q;\n      }\n      if ((h * 3) < 2) {\n        return p + (q - p) * ((2 / 3) - h) * 6;\n      }\n      return p;\n    }\n\n    if (s < 0) {\n      s = 0;\n    }\n\n    let q;\n    if (l <= 0.5) {\n      q = l * (1 + s);\n    } else {\n      q = l + s - (l * s);\n    }\n\n    const p = 2 * l - q;\n\n    const tr = h + (1 / 3);\n    const tg = h;\n    const tb = h - (1 / 3);\n\n    out_rgb[0] = hue2rgb(p, q, tr);\n    out_rgb[1] = hue2rgb(p, q, tg);\n    out_rgb[2] = hue2rgb(p, q, tb);\n    out_rgb[3] = hsl[3];\n  }\n\n  // See https://drafts.csswg.org/css-color-4/#hwb-to-rgb for formula reference.\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static hwb2rgb(hwb: number[], out_rgb: number[]): void {\n    const h = hwb[0];\n    const w = hwb[1];\n    const b = hwb[2];\n\n    if (w + b >= 1) {\n      out_rgb[0] = out_rgb[1] = out_rgb[2] = w / (w + b);\n      out_rgb[3] = hwb[3];\n    } else {\n      Color.hsl2rgb([h, 1, 0.5, hwb[3]], out_rgb);\n      for (let i = 0; i < 3; ++i) {\n        out_rgb[i] += w - (w + b) * out_rgb[i];\n      }\n    }\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static hsva2rgba(hsva: number[], out_rgba: number[]): void {\n    Color.hsva2hsla(hsva, _tmpHSLA);\n    Color.hsl2rgb(_tmpHSLA, out_rgba);\n\n    for (let i = 0; i < _tmpHSLA.length; i++) {\n      _tmpHSLA[i] = 0;\n    }\n  }\n\n  /**\n   * Compute a desired luminance given a given luminance and a desired contrast\n   * ratio.\n   */\n  static desiredLuminance(luminance: number, contrast: number, lighter: boolean): number {\n    function computeLuminance(): number {\n      if (lighter) {\n        return (luminance + 0.05) * contrast - 0.05;\n      }\n      return (luminance + 0.05) / contrast - 0.05;\n    }\n    let desiredLuminance = computeLuminance();\n    if (desiredLuminance < 0 || desiredLuminance > 1) {\n      lighter = !lighter;\n      desiredLuminance = computeLuminance();\n    }\n    return desiredLuminance;\n  }\n\n  /**\n   * Approach a value of the given component of `candidateHSVA` such that the\n   * calculated luminance of `candidateHSVA` approximates `desiredLuminance`.\n   */\n  static approachColorValue(\n      candidateHSVA: number[], bgRGBA: number[], index: number, desiredLuminance: number,\n      candidateLuminance: (arg0: Array<number>) => number): number|null {\n    const epsilon = 0.0002;\n\n    let x = candidateHSVA[index];\n    let multiplier = 1;\n    let dLuminance: number = candidateLuminance(candidateHSVA) - desiredLuminance;\n    let previousSign = Math.sign(dLuminance);\n\n    for (let guard = 100; guard; guard--) {\n      if (Math.abs(dLuminance) < epsilon) {\n        candidateHSVA[index] = x;\n        return x;\n      }\n\n      const sign = Math.sign(dLuminance);\n      if (sign !== previousSign) {\n        // If `x` overshoots the correct value, halve the step size.\n        multiplier /= 2;\n        previousSign = sign;\n      } else if (x < 0 || x > 1) {\n        // If there is no overshoot and `x` is out of bounds, there is no\n        // acceptable value for `x`.\n        return null;\n      }\n\n      // Adjust `x` by a multiple of `dLuminance` to decrease step size as\n      // the computed luminance converges on `desiredLuminance`.\n      x += multiplier * (index === 2 ? -dLuminance : dLuminance);\n\n      candidateHSVA[index] = x;\n\n      dLuminance = candidateLuminance(candidateHSVA) - desiredLuminance;\n    }\n\n    return null;\n  }\n\n  static findFgColorForContrast(fgColor: Color, bgColor: Color, requiredContrast: number): Color|null {\n    const candidateHSVA = fgColor.hsva();\n    const bgRGBA = bgColor.rgba();\n\n    const candidateLuminance = (candidateHSVA: number[]): number => {\n      return luminance(blendColors(Color.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n    };\n\n    const bgLuminance = luminance(bgColor.rgba());\n    const fgLuminance = candidateLuminance(candidateHSVA);\n    const fgIsLighter = fgLuminance > bgLuminance;\n\n    const desiredLuminance = Color.desiredLuminance(bgLuminance, requiredContrast, fgIsLighter);\n\n    const saturationComponentIndex = 1;\n    const valueComponentIndex = 2;\n\n    if (Color.approachColorValue(candidateHSVA, bgRGBA, valueComponentIndex, desiredLuminance, candidateLuminance)) {\n      return Color.fromHSVA(candidateHSVA);\n    }\n\n    candidateHSVA[valueComponentIndex] = 1;\n    if (Color.approachColorValue(\n            candidateHSVA, bgRGBA, saturationComponentIndex, desiredLuminance, candidateLuminance)) {\n      return Color.fromHSVA(candidateHSVA);\n    }\n\n    return null;\n  }\n\n  static findFgColorForContrastAPCA(fgColor: Color, bgColor: Color, requiredContrast: number): Color|null {\n    const candidateHSVA = fgColor.hsva();\n    const bgRGBA = bgColor.rgba();\n\n    const candidateLuminance = (candidateHSVA: number[]): number => {\n      return luminanceAPCA(Color.fromHSVA(candidateHSVA).rgba());\n    };\n\n    const bgLuminance = luminanceAPCA(bgColor.rgba());\n    const fgLuminance = candidateLuminance(candidateHSVA);\n    const fgIsLighter = fgLuminance >= bgLuminance;\n    const desiredLuminance = desiredLuminanceAPCA(bgLuminance, requiredContrast, fgIsLighter);\n\n    const saturationComponentIndex = 1;\n    const valueComponentIndex = 2;\n\n    if (Color.approachColorValue(candidateHSVA, bgRGBA, valueComponentIndex, desiredLuminance, candidateLuminance)) {\n      const candidate = Color.fromHSVA(candidateHSVA);\n      if (Math.abs(contrastRatioAPCA(bgColor.rgba(), candidate.rgba())) >= requiredContrast) {\n        return candidate;\n      }\n    }\n\n    candidateHSVA[valueComponentIndex] = 1;\n    if (Color.approachColorValue(\n            candidateHSVA, bgRGBA, saturationComponentIndex, desiredLuminance, candidateLuminance)) {\n      const candidate = Color.fromHSVA(candidateHSVA);\n      if (Math.abs(contrastRatioAPCA(bgColor.rgba(), candidate.rgba())) >= requiredContrast) {\n        return candidate;\n      }\n    }\n\n    return null;\n  }\n\n  format(): Format {\n    return this.#formatInternal;\n  }\n\n  /** HSLA with components within [0..1]\n     */\n  hsla(): number[] {\n    if (this.#hslaInternal) {\n      return this.#hslaInternal;\n    }\n    this.#hslaInternal = rgbaToHsla(this.#rgbaInternal);\n    return this.#hslaInternal;\n  }\n\n  canonicalHSLA(): number[] {\n    const hsla = this.hsla();\n    return [Math.round(hsla[0] * 360), Math.round(hsla[1] * 100), Math.round(hsla[2] * 100), hsla[3]];\n  }\n\n  /** HSVA with components within [0..1]\n     */\n  hsva(): number[] {\n    const hsla = this.hsla();\n    const h = hsla[0];\n    let s = hsla[1];\n    const l = hsla[2];\n\n    s *= l < 0.5 ? l : 1 - l;\n    return [h, s !== 0 ? 2 * s / (l + s) : 0, (l + s), hsla[3]];\n  }\n\n  /** HWBA with components within [0..1]\n     */\n  hwba(): number[] {\n    if (this.#hwbaInternal) {\n      return this.#hwbaInternal;\n    }\n    this.#hwbaInternal = rgbaToHwba(this.#rgbaInternal);\n    return this.#hwbaInternal;\n  }\n\n  canonicalHWBA(): number[] {\n    const hwba = this.hwba();\n    return [Math.round(hwba[0] * 360), Math.round(hwba[1] * 100), Math.round(hwba[2] * 100), hwba[3]];\n  }\n\n  hasAlpha(): boolean {\n    return this.#rgbaInternal[3] !== 1;\n  }\n\n  detectHEXFormat(): Format {\n    let canBeShort = true;\n    for (let i = 0; i < 4; ++i) {\n      const c = Math.round(this.#rgbaInternal[i] * 255);\n      if (c % 17) {\n        canBeShort = false;\n        break;\n      }\n    }\n\n    const hasAlpha = this.hasAlpha();\n    const cf = Format;\n    if (canBeShort) {\n      return hasAlpha ? cf.ShortHEXA : cf.ShortHEX;\n    }\n    return hasAlpha ? cf.HEXA : cf.HEX;\n  }\n\n  asString(format?: string|null): string|null {\n    if (format === this.#formatInternal && this.#originalTextIsValid) {\n      return this.#originalText;\n    }\n\n    if (!format) {\n      format = this.#formatInternal;\n    }\n\n    function toRgbValue(value: number): number {\n      return Math.round(value * 255);\n    }\n\n    function toHexValue(value: number): string {\n      const hex = Math.round(value * 255).toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n    }\n\n    function toShortHexValue(value: number): string {\n      return (Math.round(value * 255) / 17).toString(16);\n    }\n\n    switch (format) {\n      case Format.Original: {\n        return this.#originalText;\n      }\n      case Format.RGB:\n      case Format.RGBA: {\n        const start = Platform.StringUtilities.sprintf(\n            'rgb(%d %d %d', toRgbValue(this.#rgbaInternal[0]), toRgbValue(this.#rgbaInternal[1]),\n            toRgbValue(this.#rgbaInternal[2]));\n        if (this.hasAlpha()) {\n          return start + Platform.StringUtilities.sprintf(' / %d%)', Math.round(this.#rgbaInternal[3] * 100));\n        }\n        return start + ')';\n      }\n      case Format.HSL:\n      case Format.HSLA: {\n        const hsla = this.hsla();\n        const start = Platform.StringUtilities.sprintf(\n            'hsl(%ddeg %d% %d%', Math.round(hsla[0] * 360), Math.round(hsla[1] * 100), Math.round(hsla[2] * 100));\n        if (this.hasAlpha()) {\n          return start + Platform.StringUtilities.sprintf(' / %d%)', Math.round(hsla[3] * 100));\n        }\n        return start + ')';\n      }\n      case Format.HWB:\n      case Format.HWBA: {\n        const hwba = this.hwba();\n        const start = Platform.StringUtilities.sprintf(\n            'hwb(%ddeg %d% %d%', Math.round(hwba[0] * 360), Math.round(hwba[1] * 100), Math.round(hwba[2] * 100));\n        if (this.hasAlpha()) {\n          return start + Platform.StringUtilities.sprintf(' / %d%)', Math.round(hwba[3] * 100));\n        }\n        return start + ')';\n      }\n      case Format.HEXA: {\n        return Platform.StringUtilities\n            .sprintf(\n                '#%s%s%s%s', toHexValue(this.#rgbaInternal[0]), toHexValue(this.#rgbaInternal[1]),\n                toHexValue(this.#rgbaInternal[2]), toHexValue(this.#rgbaInternal[3]))\n            .toLowerCase();\n      }\n      case Format.HEX: {\n        if (this.hasAlpha()) {\n          return null;\n        }\n        return Platform.StringUtilities\n            .sprintf(\n                '#%s%s%s', toHexValue(this.#rgbaInternal[0]), toHexValue(this.#rgbaInternal[1]),\n                toHexValue(this.#rgbaInternal[2]))\n            .toLowerCase();\n      }\n      case Format.ShortHEXA: {\n        const hexFormat = this.detectHEXFormat();\n        if (hexFormat !== Format.ShortHEXA && hexFormat !== Format.ShortHEX) {\n          return null;\n        }\n        return Platform.StringUtilities\n            .sprintf(\n                '#%s%s%s%s', toShortHexValue(this.#rgbaInternal[0]), toShortHexValue(this.#rgbaInternal[1]),\n                toShortHexValue(this.#rgbaInternal[2]), toShortHexValue(this.#rgbaInternal[3]))\n            .toLowerCase();\n      }\n      case Format.ShortHEX: {\n        if (this.hasAlpha()) {\n          return null;\n        }\n        if (this.detectHEXFormat() !== Format.ShortHEX) {\n          return null;\n        }\n        return Platform.StringUtilities\n            .sprintf(\n                '#%s%s%s', toShortHexValue(this.#rgbaInternal[0]), toShortHexValue(this.#rgbaInternal[1]),\n                toShortHexValue(this.#rgbaInternal[2]))\n            .toLowerCase();\n      }\n      case Format.Nickname: {\n        return this.nickname();\n      }\n    }\n\n    return this.#originalText;\n  }\n\n  rgba(): number[] {\n    return this.#rgbaInternal.slice();\n  }\n\n  canonicalRGBA(): number[] {\n    const rgba = new Array(4);\n    for (let i = 0; i < 3; ++i) {\n      rgba[i] = Math.round(this.#rgbaInternal[i] * 255);\n    }\n    rgba[3] = this.#rgbaInternal[3];\n    return rgba;\n  }\n\n  /** nickname\n     */\n  nickname(): string|null {\n    return RGBAToNickname.get(String(this.canonicalRGBA())) || null;\n  }\n\n  toProtocolRGBA(): {\n    r: number,\n    g: number,\n    b: number,\n    a: (number|undefined),\n  } {\n    const rgba = this.canonicalRGBA();\n    const result: {\n      r: number,\n      g: number,\n      b: number,\n      a: number|undefined,\n    } = {r: rgba[0], g: rgba[1], b: rgba[2], a: undefined};\n    if (rgba[3] !== 1) {\n      result.a = rgba[3];\n    }\n    return result;\n  }\n\n  invert(): Color {\n    const rgba = [];\n    rgba[0] = 1 - this.#rgbaInternal[0];\n    rgba[1] = 1 - this.#rgbaInternal[1];\n    rgba[2] = 1 - this.#rgbaInternal[2];\n    rgba[3] = this.#rgbaInternal[3];\n    return new Color(rgba, Format.RGBA);\n  }\n\n  setAlpha(alpha: number): Color {\n    const rgba = this.#rgbaInternal.slice();\n    rgba[3] = alpha;\n    return new Color(rgba, Format.RGBA);\n  }\n\n  blendWith(fgColor: Color): Color {\n    const rgba: number[] = blendColors(fgColor.#rgbaInternal, this.#rgbaInternal);\n    return new Color(rgba, Format.RGBA);\n  }\n\n  blendWithAlpha(alpha: number): Color {\n    const rgba = this.#rgbaInternal.slice();\n    rgba[3] *= alpha;\n    return new Color(rgba, Format.RGBA);\n  }\n\n  setFormat(format: Format): void {\n    this.#formatInternal = format;\n  }\n\n  equal(other: Color): boolean {\n    return this.#rgbaInternal.every((v, i) => v === other.#rgbaInternal[i]) &&\n        this.#formatInternal === other.#formatInternal;\n  }\n}\n\nexport const Regex: RegExp =\n    /((?:rgb|hsl|hwb)a?\\([^)]+\\)|#[0-9a-fA-F]{8}|#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3,4}|\\b[a-zA-Z]+\\b(?!-))/g;\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Format {\n  Original = 'original',\n  Nickname = 'nickname',\n  HEX = 'hex',\n  ShortHEX = 'shorthex',\n  HEXA = 'hexa',\n  ShortHEXA = 'shorthexa',\n  RGB = 'rgb',\n  RGBA = 'rgba',\n  HSL = 'hsl',\n  HSLA = 'hsla',\n  HWB = 'hwb',\n  HWBA = 'hwba',\n}\n\nconst COLOR_TO_RGBA_ENTRIES: Array<readonly[string, number[]]> = [\n  ['aliceblue', [240, 248, 255]],\n  ['antiquewhite', [250, 235, 215]],\n  ['aqua', [0, 255, 255]],\n  ['aquamarine', [127, 255, 212]],\n  ['azure', [240, 255, 255]],\n  ['beige', [245, 245, 220]],\n  ['bisque', [255, 228, 196]],\n  ['black', [0, 0, 0]],\n  ['blanchedalmond', [255, 235, 205]],\n  ['blue', [0, 0, 255]],\n  ['blueviolet', [138, 43, 226]],\n  ['brown', [165, 42, 42]],\n  ['burlywood', [222, 184, 135]],\n  ['cadetblue', [95, 158, 160]],\n  ['chartreuse', [127, 255, 0]],\n  ['chocolate', [210, 105, 30]],\n  ['coral', [255, 127, 80]],\n  ['cornflowerblue', [100, 149, 237]],\n  ['cornsilk', [255, 248, 220]],\n  ['crimson', [237, 20, 61]],\n  ['cyan', [0, 255, 255]],\n  ['darkblue', [0, 0, 139]],\n  ['darkcyan', [0, 139, 139]],\n  ['darkgoldenrod', [184, 134, 11]],\n  ['darkgray', [169, 169, 169]],\n  ['darkgrey', [169, 169, 169]],\n  ['darkgreen', [0, 100, 0]],\n  ['darkkhaki', [189, 183, 107]],\n  ['darkmagenta', [139, 0, 139]],\n  ['darkolivegreen', [85, 107, 47]],\n  ['darkorange', [255, 140, 0]],\n  ['darkorchid', [153, 50, 204]],\n  ['darkred', [139, 0, 0]],\n  ['darksalmon', [233, 150, 122]],\n  ['darkseagreen', [143, 188, 143]],\n  ['darkslateblue', [72, 61, 139]],\n  ['darkslategray', [47, 79, 79]],\n  ['darkslategrey', [47, 79, 79]],\n  ['darkturquoise', [0, 206, 209]],\n  ['darkviolet', [148, 0, 211]],\n  ['deeppink', [255, 20, 147]],\n  ['deepskyblue', [0, 191, 255]],\n  ['dimgray', [105, 105, 105]],\n  ['dimgrey', [105, 105, 105]],\n  ['dodgerblue', [30, 144, 255]],\n  ['firebrick', [178, 34, 34]],\n  ['floralwhite', [255, 250, 240]],\n  ['forestgreen', [34, 139, 34]],\n  ['fuchsia', [255, 0, 255]],\n  ['gainsboro', [220, 220, 220]],\n  ['ghostwhite', [248, 248, 255]],\n  ['gold', [255, 215, 0]],\n  ['goldenrod', [218, 165, 32]],\n  ['gray', [128, 128, 128]],\n  ['grey', [128, 128, 128]],\n  ['green', [0, 128, 0]],\n  ['greenyellow', [173, 255, 47]],\n  ['honeydew', [240, 255, 240]],\n  ['hotpink', [255, 105, 180]],\n  ['indianred', [205, 92, 92]],\n  ['indigo', [75, 0, 130]],\n  ['ivory', [255, 255, 240]],\n  ['khaki', [240, 230, 140]],\n  ['lavender', [230, 230, 250]],\n  ['lavenderblush', [255, 240, 245]],\n  ['lawngreen', [124, 252, 0]],\n  ['lemonchiffon', [255, 250, 205]],\n  ['lightblue', [173, 216, 230]],\n  ['lightcoral', [240, 128, 128]],\n  ['lightcyan', [224, 255, 255]],\n  ['lightgoldenrodyellow', [250, 250, 210]],\n  ['lightgreen', [144, 238, 144]],\n  ['lightgray', [211, 211, 211]],\n  ['lightgrey', [211, 211, 211]],\n  ['lightpink', [255, 182, 193]],\n  ['lightsalmon', [255, 160, 122]],\n  ['lightseagreen', [32, 178, 170]],\n  ['lightskyblue', [135, 206, 250]],\n  ['lightslategray', [119, 136, 153]],\n  ['lightslategrey', [119, 136, 153]],\n  ['lightsteelblue', [176, 196, 222]],\n  ['lightyellow', [255, 255, 224]],\n  ['lime', [0, 255, 0]],\n  ['limegreen', [50, 205, 50]],\n  ['linen', [250, 240, 230]],\n  ['magenta', [255, 0, 255]],\n  ['maroon', [128, 0, 0]],\n  ['mediumaquamarine', [102, 205, 170]],\n  ['mediumblue', [0, 0, 205]],\n  ['mediumorchid', [186, 85, 211]],\n  ['mediumpurple', [147, 112, 219]],\n  ['mediumseagreen', [60, 179, 113]],\n  ['mediumslateblue', [123, 104, 238]],\n  ['mediumspringgreen', [0, 250, 154]],\n  ['mediumturquoise', [72, 209, 204]],\n  ['mediumvioletred', [199, 21, 133]],\n  ['midnightblue', [25, 25, 112]],\n  ['mintcream', [245, 255, 250]],\n  ['mistyrose', [255, 228, 225]],\n  ['moccasin', [255, 228, 181]],\n  ['navajowhite', [255, 222, 173]],\n  ['navy', [0, 0, 128]],\n  ['oldlace', [253, 245, 230]],\n  ['olive', [128, 128, 0]],\n  ['olivedrab', [107, 142, 35]],\n  ['orange', [255, 165, 0]],\n  ['orangered', [255, 69, 0]],\n  ['orchid', [218, 112, 214]],\n  ['palegoldenrod', [238, 232, 170]],\n  ['palegreen', [152, 251, 152]],\n  ['paleturquoise', [175, 238, 238]],\n  ['palevioletred', [219, 112, 147]],\n  ['papayawhip', [255, 239, 213]],\n  ['peachpuff', [255, 218, 185]],\n  ['peru', [205, 133, 63]],\n  ['pink', [255, 192, 203]],\n  ['plum', [221, 160, 221]],\n  ['powderblue', [176, 224, 230]],\n  ['purple', [128, 0, 128]],\n  ['rebeccapurple', [102, 51, 153]],\n  ['red', [255, 0, 0]],\n  ['rosybrown', [188, 143, 143]],\n  ['royalblue', [65, 105, 225]],\n  ['saddlebrown', [139, 69, 19]],\n  ['salmon', [250, 128, 114]],\n  ['sandybrown', [244, 164, 96]],\n  ['seagreen', [46, 139, 87]],\n  ['seashell', [255, 245, 238]],\n  ['sienna', [160, 82, 45]],\n  ['silver', [192, 192, 192]],\n  ['skyblue', [135, 206, 235]],\n  ['slateblue', [106, 90, 205]],\n  ['slategray', [112, 128, 144]],\n  ['slategrey', [112, 128, 144]],\n  ['snow', [255, 250, 250]],\n  ['springgreen', [0, 255, 127]],\n  ['steelblue', [70, 130, 180]],\n  ['tan', [210, 180, 140]],\n  ['teal', [0, 128, 128]],\n  ['thistle', [216, 191, 216]],\n  ['tomato', [255, 99, 71]],\n  ['turquoise', [64, 224, 208]],\n  ['violet', [238, 130, 238]],\n  ['wheat', [245, 222, 179]],\n  ['white', [255, 255, 255]],\n  ['whitesmoke', [245, 245, 245]],\n  ['yellow', [255, 255, 0]],\n  ['yellowgreen', [154, 205, 50]],\n  ['transparent', [0, 0, 0, 0]],\n];\n\nPlatform.DCHECK(() => {\n  return COLOR_TO_RGBA_ENTRIES.every(([nickname]) => nickname.toLowerCase() === nickname);\n}, 'All color nicknames must be lowercase.');\n\nexport const Nicknames = new Map(COLOR_TO_RGBA_ENTRIES);\n\nconst RGBAToNickname = new Map(\n    // Default opacity to 1 if the color only specified 3 channels\n    COLOR_TO_RGBA_ENTRIES.map(([nickname, [r, g, b, a = 1]]) => {\n      return [String([r, g, b, a]), nickname];\n    }),\n);\n\nconst LAYOUT_LINES_HIGHLIGHT_COLOR = [127, 32, 210];\n\nexport const PageHighlight = {\n  Content: Color.fromRGBA([111, 168, 220, .66]),\n  ContentLight: Color.fromRGBA([111, 168, 220, .5]),\n  ContentOutline: Color.fromRGBA([9, 83, 148]),\n  Padding: Color.fromRGBA([147, 196, 125, .55]),\n  PaddingLight: Color.fromRGBA([147, 196, 125, .4]),\n  Border: Color.fromRGBA([255, 229, 153, .66]),\n  BorderLight: Color.fromRGBA([255, 229, 153, .5]),\n  Margin: Color.fromRGBA([246, 178, 107, .66]),\n  MarginLight: Color.fromRGBA([246, 178, 107, .5]),\n  EventTarget: Color.fromRGBA([255, 196, 196, .66]),\n  Shape: Color.fromRGBA([96, 82, 177, 0.8]),\n  ShapeMargin: Color.fromRGBA([96, 82, 127, .6]),\n  CssGrid: Color.fromRGBA([0x4b, 0, 0x82, 1]),\n  LayoutLine: Color.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, 1]),\n  GridBorder: Color.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, 1]),\n  GapBackground: Color.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, .3]),\n  GapHatch: Color.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, .8]),\n  GridAreaBorder: Color.fromRGBA([26, 115, 232, 1]),\n};\n\nexport const SourceOrderHighlight = {\n  ParentOutline: Color.fromRGBA([224, 90, 183, 1]),\n  ChildOutline: Color.fromRGBA([0, 120, 212, 1]),\n};\n\nexport const IsolationModeHighlight = {\n  Resizer: Color.fromRGBA([222, 225, 230, 1]),  // --color-background-elevation-2\n  ResizerHandle: Color.fromRGBA([166, 166, 166, 1]),\n  Mask: Color.fromRGBA([248, 249, 249, 1]),\n};\n\nexport class Generator {\n  readonly #hueSpace: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  };\n  readonly #satSpace: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  };\n  readonly #lightnessSpace: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  };\n  readonly #alphaSpace: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  };\n  readonly #colors: Map<string, string>;\n  constructor(\n      hueSpace?: number|{\n        min: number,\n        max: number,\n        count: (number|undefined),\n      },\n      satSpace?: number|{\n        min: number,\n        max: number,\n        count: (number|undefined),\n      },\n      lightnessSpace?: number|{\n        min: number,\n        max: number,\n        count: (number|undefined),\n      },\n      alphaSpace?: number|{\n        min: number,\n        max: number,\n        count: (number|undefined),\n      }) {\n    this.#hueSpace = hueSpace || {min: 0, max: 360, count: undefined};\n    this.#satSpace = satSpace || 67;\n    this.#lightnessSpace = lightnessSpace || 80;\n    this.#alphaSpace = alphaSpace || 1;\n    this.#colors = new Map();\n  }\n\n  setColorForID(id: string, color: string): void {\n    this.#colors.set(id, color);\n  }\n\n  colorForID(id: string): string {\n    let color = this.#colors.get(id);\n    if (!color) {\n      color = this.generateColorForID(id);\n      this.#colors.set(id, color);\n    }\n    return color;\n  }\n\n  private generateColorForID(id: string): string {\n    const hash = Platform.StringUtilities.hashCode(id);\n    const h = this.indexToValueInSpace(hash, this.#hueSpace);\n    const s = this.indexToValueInSpace(hash >> 8, this.#satSpace);\n    const l = this.indexToValueInSpace(hash >> 16, this.#lightnessSpace);\n    const a = this.indexToValueInSpace(hash >> 24, this.#alphaSpace);\n    const start = `hsl(${h}deg ${s}% ${l}%`;\n    if (a !== 1) {\n      return `${start} / ${Math.floor(a * 100)}%)`;\n    }\n    return `${start})`;\n  }\n\n  private indexToValueInSpace(index: number, space: number|{\n    min: number,\n    max: number,\n    count: (number|undefined),\n  }): number {\n    if (typeof space === 'number') {\n      return space;\n    }\n    const count = space.count || space.max - space.min;\n    index %= count;\n    return space.min + Math.floor(index / (count - 1) * (space.max - space.min));\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _tmpHSLA = [0, 0, 0, 0];\n"]}