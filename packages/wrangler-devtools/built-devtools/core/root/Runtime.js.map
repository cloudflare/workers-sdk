{"version":3,"file":"Runtime.js","sourceRoot":"","sources":["../../../../../../front_end/core/root/Runtime.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\n\nconst queryParamsObject = new URLSearchParams(location.search);\n\nlet runtimePlatform = '';\n\nlet runtimeInstance: Runtime|undefined;\n\nexport function getRemoteBase(location: string = self.location.toString()): {\n  base: string,\n  version: string,\n}|null {\n  const url = new URL(location);\n  const remoteBase = url.searchParams.get('remoteBase');\n  if (!remoteBase) {\n    return null;\n  }\n\n  const version = /\\/serve_file\\/(@[0-9a-zA-Z]+)\\/?$/.exec(remoteBase);\n  if (!version) {\n    return null;\n  }\n\n  return {base: `${url.origin}/remote/serve_file/${version[1]}/`, version: version[1]};\n}\n\nexport class Runtime {\n  private constructor() {\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): Runtime {\n    const {forceNew} = opts;\n    if (!runtimeInstance || forceNew) {\n      runtimeInstance = new Runtime();\n    }\n\n    return runtimeInstance;\n  }\n\n  static removeInstance(): void {\n    runtimeInstance = undefined;\n  }\n\n  static queryParam(name: string): string|null {\n    return queryParamsObject.get(name);\n  }\n\n  static setQueryParamForTesting(name: string, value: string): void {\n    queryParamsObject.set(name, value);\n  }\n\n  static experimentsSetting(): {\n    [x: string]: boolean,\n  } {\n    try {\n      return JSON.parse(\n                 self.localStorage && self.localStorage['experiments'] ? self.localStorage['experiments'] : '{}') as {\n        [x: string]: boolean,\n      };\n    } catch (e) {\n      console.error('Failed to parse localStorage[\\'experiments\\']');\n      return {};\n    }\n  }\n\n  static setPlatform(platform: string): void {\n    runtimePlatform = platform;\n  }\n\n  static platform(): string {\n    return runtimePlatform;\n  }\n\n  static isDescriptorEnabled(descriptor: {\n    experiment: ((string | undefined)|null),\n    condition: ((string | undefined)|null),\n  }): boolean {\n    const activatorExperiment = descriptor['experiment'];\n    if (activatorExperiment === '*') {\n      return true;\n    }\n    if (activatorExperiment && activatorExperiment.startsWith('!') &&\n        experiments.isEnabled(activatorExperiment.substring(1))) {\n      return false;\n    }\n    if (activatorExperiment && !activatorExperiment.startsWith('!') && !experiments.isEnabled(activatorExperiment)) {\n      return false;\n    }\n    const condition = descriptor['condition'];\n    if (condition && !condition.startsWith('!') && !Runtime.queryParam(condition)) {\n      return false;\n    }\n    if (condition && condition.startsWith('!') && Runtime.queryParam(condition.substring(1))) {\n      return false;\n    }\n    return true;\n  }\n\n  loadLegacyModule(modulePath: string): Promise<void> {\n    return import(`../../${modulePath}`);\n  }\n}\n\nexport interface Option {\n  title: string;\n  value: string|boolean;\n  raw?: boolean;\n  text?: string;\n}\n\nexport class ExperimentsSupport {\n  #experiments: Experiment[];\n  #experimentNames: Set<string>;\n  #enabledTransiently: Set<string>;\n  readonly #enabledByDefault: Set<string>;\n  readonly #serverEnabled: Set<string>;\n  constructor() {\n    this.#experiments = [];\n    this.#experimentNames = new Set();\n    this.#enabledTransiently = new Set();\n    this.#enabledByDefault = new Set();\n    this.#serverEnabled = new Set();\n  }\n\n  allConfigurableExperiments(): Experiment[] {\n    const result = [];\n    for (const experiment of this.#experiments) {\n      if (!this.#enabledTransiently.has(experiment.name)) {\n        result.push(experiment);\n      }\n    }\n    return result;\n  }\n\n  enabledExperiments(): Experiment[] {\n    return this.#experiments.filter(experiment => experiment.isEnabled());\n  }\n\n  private setExperimentsSetting(value: Object): void {\n    if (!self.localStorage) {\n      return;\n    }\n    self.localStorage['experiments'] = JSON.stringify(value);\n  }\n\n  register(experimentName: string, experimentTitle: string, unstable?: boolean, docLink?: string): void {\n    Platform.DCHECK(\n        () => !this.#experimentNames.has(experimentName), 'Duplicate registration of experiment ' + experimentName);\n    this.#experimentNames.add(experimentName);\n    this.#experiments.push(new Experiment(\n        this, experimentName, experimentTitle, Boolean(unstable),\n        docLink as Platform.DevToolsPath.UrlString ?? Platform.DevToolsPath.EmptyUrlString));\n  }\n\n  isEnabled(experimentName: string): boolean {\n    this.checkExperiment(experimentName);\n    // Check for explicitly disabled #experiments first - the code could call setEnable(false) on the experiment enabled\n    // by default and we should respect that.\n    if (Runtime.experimentsSetting()[experimentName] === false) {\n      return false;\n    }\n    if (this.#enabledTransiently.has(experimentName) || this.#enabledByDefault.has(experimentName)) {\n      return true;\n    }\n    if (this.#serverEnabled.has(experimentName)) {\n      return true;\n    }\n\n    return Boolean(Runtime.experimentsSetting()[experimentName]);\n  }\n\n  setEnabled(experimentName: string, enabled: boolean): void {\n    this.checkExperiment(experimentName);\n    const experimentsSetting = Runtime.experimentsSetting();\n    experimentsSetting[experimentName] = enabled;\n    this.setExperimentsSetting(experimentsSetting);\n  }\n\n  enableExperimentsTransiently(experimentNames: string[]): void {\n    for (const experimentName of experimentNames) {\n      this.checkExperiment(experimentName);\n      this.#enabledTransiently.add(experimentName);\n    }\n  }\n\n  enableExperimentsByDefault(experimentNames: string[]): void {\n    for (const experimentName of experimentNames) {\n      this.checkExperiment(experimentName);\n      this.#enabledByDefault.add(experimentName);\n    }\n  }\n\n  setServerEnabledExperiments(experimentNames: string[]): void {\n    for (const experiment of experimentNames) {\n      this.checkExperiment(experiment);\n      this.#serverEnabled.add(experiment);\n    }\n  }\n\n  enableForTest(experimentName: string): void {\n    this.checkExperiment(experimentName);\n    this.#enabledTransiently.add(experimentName);\n  }\n\n  disableForTest(experimentName: string): void {\n    this.checkExperiment(experimentName);\n    this.#enabledTransiently.delete(experimentName);\n  }\n\n  clearForTest(): void {\n    this.#experiments = [];\n    this.#experimentNames.clear();\n    this.#enabledTransiently.clear();\n    this.#enabledByDefault.clear();\n    this.#serverEnabled.clear();\n  }\n\n  cleanUpStaleExperiments(): void {\n    const experimentsSetting = Runtime.experimentsSetting();\n    const cleanedUpExperimentSetting: {\n      [x: string]: boolean,\n    } = {};\n    for (const {name: experimentName} of this.#experiments) {\n      if (experimentsSetting.hasOwnProperty(experimentName)) {\n        const isEnabled = experimentsSetting[experimentName];\n        if (isEnabled || this.#enabledByDefault.has(experimentName)) {\n          cleanedUpExperimentSetting[experimentName] = isEnabled;\n        }\n      }\n    }\n    this.setExperimentsSetting(cleanedUpExperimentSetting);\n  }\n\n  private checkExperiment(experimentName: string): void {\n    Platform.DCHECK(() => this.#experimentNames.has(experimentName), 'Unknown experiment ' + experimentName);\n  }\n}\n\nexport class Experiment {\n  name: string;\n  title: string;\n  unstable: boolean;\n  docLink?: Platform.DevToolsPath.UrlString;\n  readonly #experiments: ExperimentsSupport;\n  constructor(\n      experiments: ExperimentsSupport, name: string, title: string, unstable: boolean,\n      docLink: Platform.DevToolsPath.UrlString) {\n    this.name = name;\n    this.title = title;\n    this.unstable = unstable;\n    this.docLink = docLink;\n    this.#experiments = experiments;\n  }\n\n  isEnabled(): boolean {\n    return this.#experiments.isEnabled(this.name);\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.#experiments.setEnabled(this.name, enabled);\n  }\n}\n\n// This must be constructed after the query parameters have been parsed.\nexport const experiments = new ExperimentsSupport();\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum ExperimentName {\n  CAPTURE_NODE_CREATION_STACKS = 'captureNodeCreationStacks',\n  CSS_OVERVIEW = 'cssOverview',\n  LIVE_HEAP_PROFILE = 'liveHeapProfile',\n  DEVELOPER_RESOURCES_VIEW = 'developerResourcesView',\n  TIMELINE_REPLAY_EVENT = 'timelineReplayEvent',\n  CSP_VIOLATIONS_VIEW = 'cspViolationsView',\n  WASM_DWARF_DEBUGGING = 'wasmDWARFDebugging',\n  ALL = '*',\n  PROTOCOL_MONITOR = 'protocolMonitor',\n  WEBAUTHN_PANE = 'webauthnPane',\n  SYNC_SETTINGS = 'syncSettings',\n  FULL_ACCESSIBILITY_TREE = 'fullAccessibilityTree',\n  PRECISE_CHANGES = 'preciseChanges',\n  STYLES_PANE_CSS_CHANGES = 'stylesPaneCSSChanges',\n  HEADER_OVERRIDES = 'headerOverrides',\n  CSS_LAYERS = 'cssLayers',\n  EYEDROPPER_COLOR_PICKER = 'eyedropperColorPicker',\n  INSTRUMENTATION_BREAKPOINTS = 'instrumentationBreakpoints',\n  CSS_AUTHORING_HINTS = 'cssAuthoringHints',\n  AUTHORED_DEPLOYED_GROUPING = 'authoredDeployedGrouping',\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum ConditionName {\n  CAN_DOCK = 'can_dock',\n  NOT_SOURCES_HIDE_ADD_FOLDER = '!sources.hide_add_folder',\n}\n"]}