{"version":3,"file":"Target.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Target.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as Platform from '../platform/platform.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type {TargetManager} from './TargetManager.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class Target extends ProtocolClient.InspectorBackend.TargetBase {\n  readonly #targetManagerInternal: TargetManager;\n  #nameInternal: string;\n  #inspectedURLInternal: Platform.DevToolsPath.UrlString;\n  #inspectedURLName: string;\n  readonly #capabilitiesMask: number;\n  #typeInternal: Type;\n  readonly #parentTargetInternal: Target|null;\n  #idInternal: Protocol.Target.TargetID|'main';\n  #modelByConstructor: Map<new(arg1: Target) => SDKModel, SDKModel>;\n  #isSuspended: boolean;\n  #targetInfoInternal: Protocol.Target.TargetInfo|undefined;\n  #creatingModels?: boolean;\n\n  constructor(\n      targetManager: TargetManager, id: Protocol.Target.TargetID|'main', name: string, type: Type,\n      parentTarget: Target|null, sessionId: string, suspended: boolean,\n      connection: ProtocolClient.InspectorBackend.Connection|null, targetInfo?: Protocol.Target.TargetInfo) {\n    const needsNodeJSPatching = type === Type.Node;\n    super(needsNodeJSPatching, parentTarget, sessionId, connection);\n    this.#targetManagerInternal = targetManager;\n    this.#nameInternal = name;\n    this.#inspectedURLInternal = Platform.DevToolsPath.EmptyUrlString;\n    this.#inspectedURLName = '';\n    this.#capabilitiesMask = 0;\n    switch (type) {\n      case Type.Frame:\n        this.#capabilitiesMask = Capability.Browser | Capability.Storage | Capability.DOM | Capability.JS |\n            Capability.Log | Capability.Network | Capability.Target | Capability.Tracing | Capability.Emulation |\n            Capability.Input | Capability.Inspector | Capability.Audits | Capability.WebAuthn | Capability.IO |\n            Capability.Media;\n        if (!parentTarget) {\n          // This matches backend exposing certain capabilities only for the main frame.\n          this.#capabilitiesMask |=\n              Capability.DeviceEmulation | Capability.ScreenCapture | Capability.Security | Capability.ServiceWorker;\n          // TODO(dgozman): we report service workers for the whole frame tree on the main frame,\n          // while we should be able to only cover the subtree corresponding to the target.\n        }\n        break;\n      case Type.ServiceWorker:\n        this.#capabilitiesMask = Capability.JS | Capability.Log | Capability.Network | Capability.Target |\n            Capability.Inspector | Capability.IO;\n        if (!parentTarget) {\n          this.#capabilitiesMask |= Capability.Browser;\n        }\n        break;\n      case Type.SharedWorker:\n        this.#capabilitiesMask = Capability.JS | Capability.Log | Capability.Network | Capability.Target |\n            Capability.IO | Capability.Media | Capability.Inspector;\n        break;\n      case Type.Worker:\n        this.#capabilitiesMask = Capability.JS | Capability.Log | Capability.Network | Capability.Target |\n            Capability.IO | Capability.Media | Capability.Emulation;\n        break;\n      case Type.Node:\n        this.#capabilitiesMask = Capability.JS;\n        break;\n      case Type.AuctionWorklet:\n        this.#capabilitiesMask = Capability.JS | Capability.EventBreakpoints;\n        break;\n      case Type.Browser:\n        this.#capabilitiesMask = Capability.Target | Capability.IO;\n        break;\n    }\n    this.#typeInternal = type;\n    this.#parentTargetInternal = parentTarget;\n    this.#idInternal = id;\n    /* } */\n    this.#modelByConstructor = new Map();\n    this.#isSuspended = suspended;\n    this.#targetInfoInternal = targetInfo;\n  }\n\n  createModels(required: Set<new(arg1: Target) => SDKModel>): void {\n    this.#creatingModels = true;\n    const registeredModels = Array.from(SDKModel.registeredModels.entries());\n    // Create early models.\n    for (const [modelClass, info] of registeredModels) {\n      if (info.early) {\n        this.model(modelClass);\n      }\n    }\n    // Create autostart and required models.\n    for (const [modelClass, info] of registeredModels) {\n      if (info.autostart || required.has(modelClass)) {\n        this.model(modelClass);\n      }\n    }\n    this.#creatingModels = false;\n  }\n\n  id(): Protocol.Target.TargetID|'main' {\n    return this.#idInternal;\n  }\n\n  name(): string {\n    return this.#nameInternal || this.#inspectedURLName;\n  }\n\n  type(): Type {\n    return this.#typeInternal;\n  }\n\n  markAsNodeJSForTest(): void {\n    super.markAsNodeJSForTest();\n    this.#typeInternal = Type.Node;\n  }\n\n  targetManager(): TargetManager {\n    return this.#targetManagerInternal;\n  }\n\n  hasAllCapabilities(capabilitiesMask: number): boolean {\n    // TODO(dgozman): get rid of this method, once we never observe targets with\n    // capability mask.\n    return (this.#capabilitiesMask & capabilitiesMask) === capabilitiesMask;\n  }\n\n  decorateLabel(label: string): string {\n    return (this.#typeInternal === Type.Worker || this.#typeInternal === Type.ServiceWorker) ? '\\u2699 ' + label :\n                                                                                               label;\n  }\n\n  parentTarget(): Target|null {\n    return this.#parentTargetInternal;\n  }\n\n  dispose(reason: string): void {\n    super.dispose(reason);\n    this.#targetManagerInternal.removeTarget(this);\n    for (const model of this.#modelByConstructor.values()) {\n      model.dispose();\n    }\n  }\n\n  model<T extends SDKModel>(modelClass: new(arg1: Target) => T): T|null {\n    if (!this.#modelByConstructor.get(modelClass)) {\n      const info = SDKModel.registeredModels.get(modelClass);\n      if (info === undefined) {\n        throw 'Model class is not registered @' + new Error().stack;\n      }\n      if ((this.#capabilitiesMask & info.capabilities) === info.capabilities) {\n        const model = new modelClass(this);\n        this.#modelByConstructor.set(modelClass, model);\n        if (!this.#creatingModels) {\n          this.#targetManagerInternal.modelAdded(this, modelClass, model);\n        }\n      }\n    }\n    return (this.#modelByConstructor.get(modelClass) as T) || null;\n  }\n\n  models(): Map<new(arg1: Target) => SDKModel, SDKModel> {\n    return this.#modelByConstructor;\n  }\n\n  inspectedURL(): Platform.DevToolsPath.UrlString {\n    return this.#inspectedURLInternal;\n  }\n\n  setInspectedURL(inspectedURL: Platform.DevToolsPath.UrlString): void {\n    this.#inspectedURLInternal = inspectedURL;\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(inspectedURL);\n    this.#inspectedURLName = parsedURL ? parsedURL.lastPathComponentWithFragment() : '#' + this.#idInternal;\n    if (!this.parentTarget()) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectedURLChanged(\n          inspectedURL || Platform.DevToolsPath.EmptyUrlString);\n    }\n    this.#targetManagerInternal.onInspectedURLChange(this);\n    if (!this.#nameInternal) {\n      this.#targetManagerInternal.onNameChange(this);\n    }\n  }\n\n  async suspend(reason?: string): Promise<void> {\n    if (this.#isSuspended) {\n      return;\n    }\n    this.#isSuspended = true;\n\n    await Promise.all(Array.from(this.models().values(), m => m.preSuspendModel(reason)));\n    await Promise.all(Array.from(this.models().values(), m => m.suspendModel(reason)));\n  }\n\n  async resume(): Promise<void> {\n    if (!this.#isSuspended) {\n      return;\n    }\n    this.#isSuspended = false;\n\n    await Promise.all(Array.from(this.models().values(), m => m.resumeModel()));\n    await Promise.all(Array.from(this.models().values(), m => m.postResumeModel()));\n  }\n\n  suspended(): boolean {\n    return this.#isSuspended;\n  }\n\n  updateTargetInfo(targetInfo: Protocol.Target.TargetInfo): void {\n    this.#targetInfoInternal = targetInfo;\n  }\n\n  targetInfo(): Protocol.Target.TargetInfo|undefined {\n    return this.#targetInfoInternal;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Type {\n  Frame = 'frame',\n  ServiceWorker = 'service-worker',\n  Worker = 'worker',\n  SharedWorker = 'shared-worker',\n  Node = 'node',\n  Browser = 'browser',\n  AuctionWorklet = 'auction-worklet',\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Capability {\n  Browser = 1 << 0,\n  DOM = 1 << 1,\n  JS = 1 << 2,\n  Log = 1 << 3,\n  Network = 1 << 4,\n  Target = 1 << 5,\n  ScreenCapture = 1 << 6,\n  Tracing = 1 << 7,\n  Emulation = 1 << 8,\n  Security = 1 << 9,\n  Input = 1 << 10,\n  Inspector = 1 << 11,\n  DeviceEmulation = 1 << 12,\n  Storage = 1 << 13,\n  ServiceWorker = 1 << 14,\n  Audits = 1 << 15,\n  WebAuthn = 1 << 16,\n  IO = 1 << 17,\n  Media = 1 << 18,\n  EventBreakpoints = 1 << 19,\n  None = 0,\n}\n"]}