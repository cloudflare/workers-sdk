{"version":3,"file":"OverlayModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/OverlayModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Root from '../root/root.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {DebuggerModel, Events as DebuggerModelEvents} from './DebuggerModel.js';\nimport type {DOMNode} from './DOMModel.js';\nimport {DeferredDOMNode, DOMModel, Events as DOMModelEvents} from './DOMModel.js';\nimport {OverlayPersistentHighlighter} from './OverlayPersistentHighlighter.js';\nimport type {RemoteObject} from './RemoteObject.js';\nimport type {Target} from './Target.js';\nimport {Capability} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\nimport {TargetManager} from './TargetManager.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Overlay Model\n  */\n  pausedInDebugger: 'Paused in debugger',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/OverlayModel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface HighlightColor {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nexport interface HighlightRect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  color: HighlightColor;\n  outlineColor: HighlightColor;\n}\nexport interface Hinge {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  contentColor: HighlightColor;\n  outlineColor: HighlightColor;\n}\n\nexport class OverlayModel extends SDKModel<EventTypes> implements ProtocolProxyApi.OverlayDispatcher {\n  readonly #domModel: DOMModel;\n  overlayAgent: ProtocolProxyApi.OverlayApi;\n  readonly #debuggerModel: DebuggerModel|null;\n  #inspectModeEnabledInternal: boolean;\n  #hideHighlightTimeout: number|null;\n  #defaultHighlighter: Highlighter;\n  #highlighter: Highlighter;\n  #showPaintRectsSetting: Common.Settings.Setting<boolean>;\n  #showLayoutShiftRegionsSetting: Common.Settings.Setting<boolean>;\n  #showAdHighlightsSetting: Common.Settings.Setting<boolean>;\n  #showDebugBordersSetting: Common.Settings.Setting<boolean>;\n  #showFPSCounterSetting: Common.Settings.Setting<boolean>;\n  #showScrollBottleneckRectsSetting: Common.Settings.Setting<boolean>;\n  #showWebVitalsSetting: Common.Settings.Setting<boolean>;\n  #registeredListeners: Common.EventTarget.EventDescriptor[];\n  #showViewportSizeOnResize: boolean;\n  #persistentHighlighter: OverlayPersistentHighlighter|null;\n  readonly #sourceOrderHighlighter: SourceOrderHighlighter;\n  #sourceOrderModeActiveInternal: boolean;\n\n  constructor(target: Target) {\n    super(target);\n    this.#domModel = (target.model(DOMModel) as DOMModel);\n\n    target.registerOverlayDispatcher(this);\n    this.overlayAgent = target.overlayAgent();\n\n    this.#debuggerModel = target.model(DebuggerModel);\n    if (this.#debuggerModel) {\n      Common.Settings.Settings.instance()\n          .moduleSetting('disablePausedStateOverlay')\n          .addChangeListener(this.updatePausedInDebuggerMessage, this);\n      this.#debuggerModel.addEventListener(\n          DebuggerModelEvents.DebuggerPaused, this.updatePausedInDebuggerMessage, this);\n      this.#debuggerModel.addEventListener(\n          DebuggerModelEvents.DebuggerResumed, this.updatePausedInDebuggerMessage, this);\n      // TODO(dgozman): we should get DebuggerResumed on navigations instead of listening to GlobalObjectCleared.\n      this.#debuggerModel.addEventListener(\n          DebuggerModelEvents.GlobalObjectCleared, this.updatePausedInDebuggerMessage, this);\n    }\n\n    this.#inspectModeEnabledInternal = false;\n\n    this.#hideHighlightTimeout = null;\n    this.#defaultHighlighter = new DefaultHighlighter(this);\n    this.#highlighter = this.#defaultHighlighter;\n\n    this.#showPaintRectsSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('showPaintRects');\n    this.#showLayoutShiftRegionsSetting =\n        Common.Settings.Settings.instance().moduleSetting<boolean>('showLayoutShiftRegions');\n    this.#showAdHighlightsSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('showAdHighlights');\n    this.#showDebugBordersSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('showDebugBorders');\n    this.#showFPSCounterSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('showFPSCounter');\n    this.#showScrollBottleneckRectsSetting =\n        Common.Settings.Settings.instance().moduleSetting<boolean>('showScrollBottleneckRects');\n    this.#showWebVitalsSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('showWebVitals');\n\n    this.#registeredListeners = [];\n    this.#showViewportSizeOnResize = true;\n    if (!target.suspended()) {\n      void this.overlayAgent.invoke_enable();\n      void this.wireAgentToSettings();\n    }\n\n    this.#persistentHighlighter = new OverlayPersistentHighlighter(this);\n    this.#domModel.addEventListener(DOMModelEvents.NodeRemoved, () => {\n      this.#persistentHighlighter && this.#persistentHighlighter.refreshHighlights();\n    });\n    this.#domModel.addEventListener(DOMModelEvents.DocumentUpdated, () => {\n      this.#persistentHighlighter && this.#persistentHighlighter.hideAllInOverlay();\n    });\n\n    this.#sourceOrderHighlighter = new SourceOrderHighlighter(this);\n    this.#sourceOrderModeActiveInternal = false;\n  }\n\n  static highlightObjectAsDOMNode(object: RemoteObject): void {\n    const domModel = object.runtimeModel().target().model(DOMModel);\n    if (domModel) {\n      domModel.overlayModel().highlightInOverlay({object, selectorList: undefined});\n    }\n  }\n\n  static hideDOMNodeHighlight(): void {\n    for (const overlayModel of TargetManager.instance().models(OverlayModel)) {\n      overlayModel.delayedHideHighlight(0);\n    }\n  }\n\n  static async muteHighlight(): Promise<void[]> {\n    return Promise.all(TargetManager.instance().models(OverlayModel).map(model => model.suspendModel()));\n  }\n\n  static async unmuteHighlight(): Promise<void[]> {\n    return Promise.all(TargetManager.instance().models(OverlayModel).map(model => model.resumeModel()));\n  }\n\n  static highlightRect(rect: HighlightRect): void {\n    for (const overlayModel of TargetManager.instance().models(OverlayModel)) {\n      void overlayModel.highlightRect(rect);\n    }\n  }\n\n  static clearHighlight(): void {\n    for (const overlayModel of TargetManager.instance().models(OverlayModel)) {\n      void overlayModel.clearHighlight();\n    }\n  }\n\n  getDOMModel(): DOMModel {\n    return this.#domModel;\n  }\n\n  highlightRect({x, y, width, height, color, outlineColor}: HighlightRect):\n      Promise<Protocol.ProtocolResponseWithError> {\n    const highlightColor = color || {r: 255, g: 0, b: 255, a: 0.3};\n    const highlightOutlineColor = outlineColor || {r: 255, g: 0, b: 255, a: 0.5};\n    return this.overlayAgent.invoke_highlightRect(\n        {x, y, width, height, color: highlightColor, outlineColor: highlightOutlineColor});\n  }\n\n  clearHighlight(): Promise<Protocol.ProtocolResponseWithError> {\n    return this.overlayAgent.invoke_hideHighlight();\n  }\n\n  private async wireAgentToSettings(): Promise<void> {\n    this.#registeredListeners = [\n      this.#showPaintRectsSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowPaintRects({result: this.#showPaintRectsSetting.get()})),\n      this.#showLayoutShiftRegionsSetting.addChangeListener(\n          () =>\n              this.overlayAgent.invoke_setShowLayoutShiftRegions({result: this.#showLayoutShiftRegionsSetting.get()})),\n      this.#showAdHighlightsSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowAdHighlights({show: this.#showAdHighlightsSetting.get()})),\n      this.#showDebugBordersSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowDebugBorders({show: this.#showDebugBordersSetting.get()})),\n      this.#showFPSCounterSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowFPSCounter({show: this.#showFPSCounterSetting.get()})),\n      this.#showScrollBottleneckRectsSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowScrollBottleneckRects(\n              {show: this.#showScrollBottleneckRectsSetting.get()})),\n      this.#showWebVitalsSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowWebVitals({show: this.#showWebVitalsSetting.get()})),\n    ];\n\n    if (this.#showPaintRectsSetting.get()) {\n      void this.overlayAgent.invoke_setShowPaintRects({result: true});\n    }\n    if (this.#showLayoutShiftRegionsSetting.get()) {\n      void this.overlayAgent.invoke_setShowLayoutShiftRegions({result: true});\n    }\n    if (this.#showAdHighlightsSetting.get()) {\n      void this.overlayAgent.invoke_setShowAdHighlights({show: true});\n    }\n    if (this.#showDebugBordersSetting.get()) {\n      void this.overlayAgent.invoke_setShowDebugBorders({show: true});\n    }\n    if (this.#showFPSCounterSetting.get()) {\n      void this.overlayAgent.invoke_setShowFPSCounter({show: true});\n    }\n    if (this.#showScrollBottleneckRectsSetting.get()) {\n      void this.overlayAgent.invoke_setShowScrollBottleneckRects({show: true});\n    }\n    if (this.#showWebVitalsSetting.get()) {\n      void this.overlayAgent.invoke_setShowWebVitals({show: true});\n    }\n    if (this.#debuggerModel && this.#debuggerModel.isPaused()) {\n      this.updatePausedInDebuggerMessage();\n    }\n    await this.overlayAgent.invoke_setShowViewportSizeOnResize({show: this.#showViewportSizeOnResize});\n  }\n\n  async suspendModel(): Promise<void> {\n    Common.EventTarget.removeEventListeners(this.#registeredListeners);\n    await this.overlayAgent.invoke_disable();\n  }\n\n  async resumeModel(): Promise<void> {\n    await Promise.all([this.overlayAgent.invoke_enable(), this.wireAgentToSettings()]);\n  }\n\n  setShowViewportSizeOnResize(show: boolean): void {\n    if (this.#showViewportSizeOnResize === show) {\n      return;\n    }\n\n    this.#showViewportSizeOnResize = show;\n    if (this.target().suspended()) {\n      return;\n    }\n    void this.overlayAgent.invoke_setShowViewportSizeOnResize({show});\n  }\n\n  private updatePausedInDebuggerMessage(): void {\n    if (this.target().suspended()) {\n      return;\n    }\n    const message = this.#debuggerModel && this.#debuggerModel.isPaused() &&\n            !Common.Settings.Settings.instance().moduleSetting('disablePausedStateOverlay').get() ?\n        i18nString(UIStrings.pausedInDebugger) :\n        undefined;\n    void this.overlayAgent.invoke_setPausedInDebuggerMessage({message});\n  }\n\n  setHighlighter(highlighter: Highlighter|null): void {\n    this.#highlighter = highlighter || this.#defaultHighlighter;\n  }\n\n  async setInspectMode(mode: Protocol.Overlay.InspectMode, showDetailedTooltip: boolean|undefined = true):\n      Promise<void> {\n    await this.#domModel.requestDocument();\n    this.#inspectModeEnabledInternal = mode !== Protocol.Overlay.InspectMode.None;\n    this.dispatchEventToListeners(Events.InspectModeWillBeToggled, this);\n    void this.#highlighter.setInspectMode(mode, this.buildHighlightConfig('all', showDetailedTooltip));\n  }\n\n  inspectModeEnabled(): boolean {\n    return this.#inspectModeEnabledInternal;\n  }\n\n  highlightInOverlay(data: HighlightData, mode?: string, showInfo?: boolean): void {\n    if (this.#sourceOrderModeActiveInternal) {\n      // Return early if the source order is currently being shown the in the\n      // overlay, so that it is not cleared by the highlight\n      return;\n    }\n    if (this.#hideHighlightTimeout) {\n      clearTimeout(this.#hideHighlightTimeout);\n      this.#hideHighlightTimeout = null;\n    }\n    const highlightConfig = this.buildHighlightConfig(mode);\n    if (typeof showInfo !== 'undefined') {\n      highlightConfig.showInfo = showInfo;\n    }\n    this.#highlighter.highlightInOverlay(data, highlightConfig);\n  }\n\n  highlightInOverlayForTwoSeconds(data: HighlightData): void {\n    this.highlightInOverlay(data);\n    this.delayedHideHighlight(2000);\n  }\n\n  highlightGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.highlightGridInOverlay(nodeId);\n    this.dispatchEventToListeners(Events.PersistentGridOverlayStateChanged, {nodeId, enabled: true});\n  }\n\n  isHighlightedGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId): boolean {\n    if (!this.#persistentHighlighter) {\n      return false;\n    }\n    return this.#persistentHighlighter.isGridHighlighted(nodeId);\n  }\n\n  hideGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.hideGridInOverlay(nodeId);\n    this.dispatchEventToListeners(Events.PersistentGridOverlayStateChanged, {nodeId, enabled: false});\n  }\n\n  highlightScrollSnapInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.highlightScrollSnapInOverlay(nodeId);\n    this.dispatchEventToListeners(Events.PersistentScrollSnapOverlayStateChanged, {nodeId, enabled: true});\n  }\n\n  isHighlightedScrollSnapInPersistentOverlay(nodeId: Protocol.DOM.NodeId): boolean {\n    if (!this.#persistentHighlighter) {\n      return false;\n    }\n    return this.#persistentHighlighter.isScrollSnapHighlighted(nodeId);\n  }\n\n  hideScrollSnapInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.hideScrollSnapInOverlay(nodeId);\n    this.dispatchEventToListeners(Events.PersistentScrollSnapOverlayStateChanged, {nodeId, enabled: false});\n  }\n\n  highlightFlexContainerInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.highlightFlexInOverlay(nodeId);\n    this.dispatchEventToListeners(Events.PersistentFlexContainerOverlayStateChanged, {nodeId, enabled: true});\n  }\n\n  isHighlightedFlexContainerInPersistentOverlay(nodeId: Protocol.DOM.NodeId): boolean {\n    if (!this.#persistentHighlighter) {\n      return false;\n    }\n    return this.#persistentHighlighter.isFlexHighlighted(nodeId);\n  }\n\n  hideFlexContainerInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.hideFlexInOverlay(nodeId);\n    this.dispatchEventToListeners(Events.PersistentFlexContainerOverlayStateChanged, {nodeId, enabled: false});\n  }\n\n  highlightContainerQueryInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.highlightContainerQueryInOverlay(nodeId);\n    this.dispatchEventToListeners(Events.PersistentContainerQueryOverlayStateChanged, {nodeId, enabled: true});\n  }\n\n  isHighlightedContainerQueryInPersistentOverlay(nodeId: Protocol.DOM.NodeId): boolean {\n    if (!this.#persistentHighlighter) {\n      return false;\n    }\n    return this.#persistentHighlighter.isContainerQueryHighlighted(nodeId);\n  }\n\n  hideContainerQueryInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.hideContainerQueryInOverlay(nodeId);\n    this.dispatchEventToListeners(Events.PersistentContainerQueryOverlayStateChanged, {nodeId, enabled: false});\n  }\n\n  highlightSourceOrderInOverlay(node: DOMNode): void {\n    const sourceOrderConfig = {\n      parentOutlineColor: Common.Color.SourceOrderHighlight.ParentOutline.toProtocolRGBA(),\n      childOutlineColor: Common.Color.SourceOrderHighlight.ChildOutline.toProtocolRGBA(),\n    };\n    this.#sourceOrderHighlighter.highlightSourceOrderInOverlay(node, sourceOrderConfig);\n  }\n\n  colorOfGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId): string|null {\n    if (!this.#persistentHighlighter) {\n      return null;\n    }\n    return this.#persistentHighlighter.colorOfGrid(nodeId).asString(Common.Color.Format.HEX);\n  }\n\n  setColorOfGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId, colorStr: string): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    const color = Common.Color.Color.parse(colorStr);\n    if (!color) {\n      return;\n    }\n    this.#persistentHighlighter.setColorOfGrid(nodeId, color);\n    this.#persistentHighlighter.resetOverlay();\n  }\n\n  colorOfFlexInPersistentOverlay(nodeId: Protocol.DOM.NodeId): string|null {\n    if (!this.#persistentHighlighter) {\n      return null;\n    }\n    return this.#persistentHighlighter.colorOfFlex(nodeId).asString(Common.Color.Format.HEX);\n  }\n\n  setColorOfFlexInPersistentOverlay(nodeId: Protocol.DOM.NodeId, colorStr: string): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    const color = Common.Color.Color.parse(colorStr);\n    if (!color) {\n      return;\n    }\n    this.#persistentHighlighter.setColorOfFlex(nodeId, color);\n    this.#persistentHighlighter.resetOverlay();\n  }\n\n  hideSourceOrderInOverlay(): void {\n    this.#sourceOrderHighlighter.hideSourceOrderHighlight();\n  }\n\n  setSourceOrderActive(isActive: boolean): void {\n    this.#sourceOrderModeActiveInternal = isActive;\n  }\n\n  sourceOrderModeActive(): boolean {\n    return this.#sourceOrderModeActiveInternal;\n  }\n\n  highlightIsolatedElementInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.highlightIsolatedElementInOverlay(nodeId);\n  }\n\n  hideIsolatedElementInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.hideIsolatedElementInOverlay(nodeId);\n  }\n\n  isHighlightedIsolatedElementInPersistentOverlay(nodeId: Protocol.DOM.NodeId): boolean {\n    if (!this.#persistentHighlighter) {\n      return false;\n    }\n    return this.#persistentHighlighter.isIsolatedElementHighlighted(nodeId);\n  }\n\n  private delayedHideHighlight(delay: number): void {\n    if (this.#hideHighlightTimeout === null) {\n      this.#hideHighlightTimeout = window.setTimeout(() => this.highlightInOverlay({clear: true}), delay);\n    }\n  }\n\n  highlightFrame(frameId: Protocol.Page.FrameId): void {\n    if (this.#hideHighlightTimeout) {\n      clearTimeout(this.#hideHighlightTimeout);\n      this.#hideHighlightTimeout = null;\n    }\n    this.#highlighter.highlightFrame(frameId);\n  }\n\n  showHingeForDualScreen(hinge: Hinge|null): void {\n    if (hinge) {\n      const {x, y, width, height, contentColor, outlineColor} = hinge;\n      void this.overlayAgent.invoke_setShowHinge({\n        hingeConfig:\n            {rect: {x: x, y: y, width: width, height: height}, contentColor: contentColor, outlineColor: outlineColor},\n      });\n    } else {\n      void this.overlayAgent.invoke_setShowHinge({});\n    }\n  }\n\n  private buildHighlightConfig(mode: string|undefined = 'all', showDetailedToolip: boolean|undefined = false):\n      Protocol.Overlay.HighlightConfig {\n    const showRulers = Common.Settings.Settings.instance().moduleSetting('showMetricsRulers').get();\n    const colorFormat = Common.Settings.Settings.instance().moduleSetting('colorFormat').get();\n\n    const highlightConfig: Protocol.Overlay.HighlightConfig = {\n      showInfo: mode === 'all' || mode === 'container-outline',\n      showRulers: showRulers,\n      showStyles: showDetailedToolip,\n      showAccessibilityInfo: showDetailedToolip,\n      showExtensionLines: showRulers,\n      gridHighlightConfig: {},\n      flexContainerHighlightConfig: {},\n      flexItemHighlightConfig: {},\n      contrastAlgorithm: Root.Runtime.experiments.isEnabled('APCA') ? Protocol.Overlay.ContrastAlgorithm.Apca :\n                                                                      Protocol.Overlay.ContrastAlgorithm.Aa,\n    };\n\n    if (mode === 'all' || mode === 'content') {\n      highlightConfig.contentColor = Common.Color.PageHighlight.Content.toProtocolRGBA();\n    }\n\n    if (mode === 'all' || mode === 'padding') {\n      highlightConfig.paddingColor = Common.Color.PageHighlight.Padding.toProtocolRGBA();\n    }\n\n    if (mode === 'all' || mode === 'border') {\n      highlightConfig.borderColor = Common.Color.PageHighlight.Border.toProtocolRGBA();\n    }\n\n    if (mode === 'all' || mode === 'margin') {\n      highlightConfig.marginColor = Common.Color.PageHighlight.Margin.toProtocolRGBA();\n    }\n\n    if (mode === 'all') {\n      highlightConfig.eventTargetColor = Common.Color.PageHighlight.EventTarget.toProtocolRGBA();\n      highlightConfig.shapeColor = Common.Color.PageHighlight.Shape.toProtocolRGBA();\n      highlightConfig.shapeMarginColor = Common.Color.PageHighlight.ShapeMargin.toProtocolRGBA();\n\n      highlightConfig.gridHighlightConfig = {\n        rowGapColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        rowHatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n        columnGapColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        columnHatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n        rowLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        columnLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        rowLineDash: true,\n        columnLineDash: true,\n      };\n\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        itemSeparator: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dotted,\n        },\n        lineSeparator: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        mainDistributedSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n        crossDistributedSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n        rowGapSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n        columnGapSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n      };\n\n      highlightConfig.flexItemHighlightConfig = {\n        baseSizeBox: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n        },\n        baseSizeBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dotted,\n        },\n        flexibilityArrow: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        },\n      };\n    }\n\n    if (mode.endsWith('gap')) {\n      highlightConfig.gridHighlightConfig = {\n        gridBorderColor: Common.Color.PageHighlight.GridBorder.toProtocolRGBA(),\n        gridBorderDash: true,\n      };\n\n      if (mode === 'gap' || mode === 'row-gap') {\n        highlightConfig.gridHighlightConfig.rowGapColor = Common.Color.PageHighlight.GapBackground.toProtocolRGBA();\n        highlightConfig.gridHighlightConfig.rowHatchColor = Common.Color.PageHighlight.GapHatch.toProtocolRGBA();\n      }\n      if (mode === 'gap' || mode === 'column-gap') {\n        highlightConfig.gridHighlightConfig.columnGapColor = Common.Color.PageHighlight.GapBackground.toProtocolRGBA();\n        highlightConfig.gridHighlightConfig.columnHatchColor = Common.Color.PageHighlight.GapHatch.toProtocolRGBA();\n      }\n    }\n\n    if (mode.endsWith('gap')) {\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n      };\n\n      if (mode === 'gap' || mode === 'row-gap') {\n        highlightConfig.flexContainerHighlightConfig.rowGapSpace = {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        };\n      }\n      if (mode === 'gap' || mode === 'column-gap') {\n        highlightConfig.flexContainerHighlightConfig.columnGapSpace = {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        };\n      }\n    }\n\n    if (mode === 'grid-areas') {\n      highlightConfig.gridHighlightConfig = {\n        rowLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        columnLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        rowLineDash: true,\n        columnLineDash: true,\n        showAreaNames: true,\n        areaBorderColor: Common.Color.PageHighlight.GridAreaBorder.toProtocolRGBA(),\n      };\n    }\n\n    if (mode === 'grid-template-columns') {\n      highlightConfig.contentColor = Common.Color.PageHighlight.Content.toProtocolRGBA();\n      highlightConfig.gridHighlightConfig = {\n        columnLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        columnLineDash: true,\n      };\n    }\n\n    if (mode === 'grid-template-rows') {\n      highlightConfig.contentColor = Common.Color.PageHighlight.Content.toProtocolRGBA();\n      highlightConfig.gridHighlightConfig = {\n        rowLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        rowLineDash: true,\n      };\n    }\n\n    if (mode === 'justify-content') {\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        mainDistributedSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n      };\n    }\n\n    if (mode === 'align-content') {\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        crossDistributedSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n      };\n    }\n\n    if (mode === 'align-items') {\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        lineSeparator: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        crossAlignment: {color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA()},\n      };\n    }\n\n    if (mode === 'flexibility') {\n      highlightConfig.flexItemHighlightConfig = {\n        baseSizeBox: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n        },\n        baseSizeBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dotted,\n        },\n        flexibilityArrow: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        },\n      };\n    }\n\n    if (mode === 'container-outline') {\n      highlightConfig.containerQueryContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n      };\n    }\n\n    // the backend does not support the 'original' format because\n    // it currently cannot retrieve the original format using computed styles\n    const supportedColorFormats = new Set(['rgb', 'hsl', 'hex']);\n    if (supportedColorFormats.has(colorFormat)) {\n      highlightConfig.colorFormat = colorFormat;\n    }\n\n    return highlightConfig;\n  }\n\n  nodeHighlightRequested({nodeId}: Protocol.Overlay.NodeHighlightRequestedEvent): void {\n    const node = this.#domModel.nodeForId(nodeId);\n    if (node) {\n      this.dispatchEventToListeners(Events.HighlightNodeRequested, node);\n    }\n  }\n\n  static setInspectNodeHandler(handler: (arg0: DOMNode) => void): void {\n    OverlayModel.inspectNodeHandler = handler;\n  }\n\n  inspectNodeRequested({backendNodeId}: Protocol.Overlay.InspectNodeRequestedEvent): void {\n    const deferredNode = new DeferredDOMNode(this.target(), backendNodeId);\n    if (OverlayModel.inspectNodeHandler) {\n      void deferredNode.resolvePromise().then(node => {\n        if (node && OverlayModel.inspectNodeHandler) {\n          OverlayModel.inspectNodeHandler(node);\n        }\n      });\n    } else {\n      void Common.Revealer.reveal(deferredNode);\n    }\n    this.dispatchEventToListeners(Events.ExitedInspectMode);\n  }\n\n  screenshotRequested({viewport}: Protocol.Overlay.ScreenshotRequestedEvent): void {\n    this.dispatchEventToListeners(Events.ScreenshotRequested, viewport);\n    this.dispatchEventToListeners(Events.ExitedInspectMode);\n  }\n\n  inspectModeCanceled(): void {\n    this.dispatchEventToListeners(Events.ExitedInspectMode);\n  }\n\n  static inspectNodeHandler: ((node: DOMNode) => void)|null = null;\n\n  getOverlayAgent(): ProtocolProxyApi.OverlayApi {\n    return this.overlayAgent;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  InspectModeWillBeToggled = 'InspectModeWillBeToggled',\n  ExitedInspectMode = 'InspectModeExited',\n  HighlightNodeRequested = 'HighlightNodeRequested',\n  ScreenshotRequested = 'ScreenshotRequested',\n  PersistentGridOverlayStateChanged = 'PersistentGridOverlayStateChanged',\n  PersistentFlexContainerOverlayStateChanged = 'PersistentFlexContainerOverlayStateChanged',\n  PersistentScrollSnapOverlayStateChanged = 'PersistentScrollSnapOverlayStateChanged',\n  PersistentContainerQueryOverlayStateChanged = 'PersistentContainerQueryOverlayStateChanged',\n}\n\nexport interface ChangedNodeId {\n  nodeId: number;\n  enabled: boolean;\n}\n\nexport type EventTypes = {\n  [Events.InspectModeWillBeToggled]: OverlayModel,\n  [Events.ExitedInspectMode]: void,\n  [Events.HighlightNodeRequested]: DOMNode,\n  [Events.ScreenshotRequested]: Protocol.Page.Viewport,\n  [Events.PersistentGridOverlayStateChanged]: ChangedNodeId,\n  [Events.PersistentFlexContainerOverlayStateChanged]: ChangedNodeId,\n  [Events.PersistentScrollSnapOverlayStateChanged]: ChangedNodeId,\n  [Events.PersistentContainerQueryOverlayStateChanged]: ChangedNodeId,\n};\n\nexport interface Highlighter {\n  highlightInOverlay(data: HighlightData, config: Protocol.Overlay.HighlightConfig): void;\n\n  setInspectMode(mode: Protocol.Overlay.InspectMode, config: Protocol.Overlay.HighlightConfig): Promise<void>;\n\n  highlightFrame(frameId: Protocol.Page.FrameId): void;\n}\n\nclass DefaultHighlighter implements Highlighter {\n  readonly #model: OverlayModel;\n  constructor(model: OverlayModel) {\n    this.#model = model;\n  }\n\n  highlightInOverlay(data: HighlightData, highlightConfig: Protocol.Overlay.HighlightConfig): void {\n    const {node, deferredNode, object, selectorList} =\n        {node: undefined, deferredNode: undefined, object: undefined, selectorList: undefined, ...data};\n    const nodeId = node ? node.id : undefined;\n    const backendNodeId = deferredNode ? deferredNode.backendNodeId() : undefined;\n    const objectId = object ? object.objectId : undefined;\n    if (nodeId || backendNodeId || objectId) {\n      void this.#model.target().overlayAgent().invoke_highlightNode(\n          {highlightConfig, nodeId, backendNodeId, objectId, selector: selectorList});\n    } else {\n      void this.#model.target().overlayAgent().invoke_hideHighlight();\n    }\n  }\n\n  async setInspectMode(mode: Protocol.Overlay.InspectMode, highlightConfig: Protocol.Overlay.HighlightConfig):\n      Promise<void> {\n    await this.#model.target().overlayAgent().invoke_setInspectMode({mode, highlightConfig});\n  }\n\n  highlightFrame(frameId: Protocol.Page.FrameId): void {\n    void this.#model.target().overlayAgent().invoke_highlightFrame({\n      frameId,\n      contentColor: Common.Color.PageHighlight.Content.toProtocolRGBA(),\n      contentOutlineColor: Common.Color.PageHighlight.ContentOutline.toProtocolRGBA(),\n    });\n  }\n}\n\nexport class SourceOrderHighlighter {\n  readonly #model: OverlayModel;\n  constructor(model: OverlayModel) {\n    this.#model = model;\n  }\n\n  highlightSourceOrderInOverlay(node: DOMNode, sourceOrderConfig: Protocol.Overlay.SourceOrderConfig): void {\n    this.#model.setSourceOrderActive(true);\n    this.#model.setShowViewportSizeOnResize(false);\n    void this.#model.getOverlayAgent().invoke_highlightSourceOrder({sourceOrderConfig, nodeId: node.id});\n  }\n\n  hideSourceOrderHighlight(): void {\n    this.#model.setSourceOrderActive(false);\n    this.#model.setShowViewportSizeOnResize(true);\n    void this.#model.clearHighlight();\n  }\n}\n\nSDKModel.register(OverlayModel, {capabilities: Capability.DOM, autostart: true});\n\nexport interface HighlightNodeData {\n  node: DOMNode;\n  selectorList?: string;\n}\n\nexport interface HighlightDeferredNode {\n  deferredNode: DeferredDOMNode;\n}\n\nexport interface HighlightObjectData {\n  object: RemoteObject;\n  selectorList?: string;\n}\n\nexport type HighlightData = HighlightNodeData|HighlightDeferredNode|HighlightObjectData|{clear: boolean};\n"]}