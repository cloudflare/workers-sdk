{"version":3,"file":"ChildTargetManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/ChildTargetManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport type * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {ParallelConnection} from './Connections.js';\nimport type {Target} from './Target.js';\nimport {Capability, Type} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\nimport {Events as TargetManagerEvents, TargetManager} from './TargetManager.js';\n\nexport class ChildTargetManager extends SDKModel<EventTypes> implements ProtocolProxyApi.TargetDispatcher {\n  readonly #targetManager: TargetManager;\n  #parentTarget: Target;\n  readonly #targetAgent: ProtocolProxyApi.TargetApi;\n  readonly #targetInfosInternal: Map<Protocol.Target.TargetID, Protocol.Target.TargetInfo> = new Map();\n  readonly #childTargetsBySessionId: Map<Protocol.Target.SessionID, Target> = new Map();\n  readonly #childTargetsById: Map<Protocol.Target.TargetID|'main', Target> = new Map();\n  readonly #parallelConnections: Map<string, ProtocolClient.InspectorBackend.Connection> = new Map();\n  #parentTargetId: Protocol.Target.TargetID|null = null;\n\n  constructor(parentTarget: Target) {\n    super(parentTarget);\n    this.#targetManager = parentTarget.targetManager();\n    this.#parentTarget = parentTarget;\n    this.#targetAgent = parentTarget.targetAgent();\n    parentTarget.registerTargetDispatcher(this);\n    const browserTarget = this.#targetManager.browserTarget();\n    if (browserTarget) {\n      if (browserTarget !== parentTarget) {\n        void browserTarget.targetAgent().invoke_autoAttachRelated(\n            {targetId: parentTarget.id() as Protocol.Target.TargetID, waitForDebuggerOnStart: true});\n      }\n    } else {\n      void this.#targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: true, flatten: true});\n    }\n\n    if (!parentTarget.parentTarget() && !Host.InspectorFrontendHost.isUnderTest()) {\n      void this.#targetAgent.invoke_setDiscoverTargets({discover: true});\n      void this.#targetAgent.invoke_setRemoteLocations({locations: [{host: 'localhost', port: 9229}]});\n    }\n  }\n\n  static install(attachCallback?: ((arg0: {\n                                     target: Target,\n                                     waitingForDebugger: boolean,\n                                   }) => Promise<void>)): void {\n    ChildTargetManager.attachCallback = attachCallback;\n    SDKModel.register(ChildTargetManager, {capabilities: Capability.Target, autostart: true});\n  }\n\n  childTargets(): Target[] {\n    return Array.from(this.#childTargetsBySessionId.values());\n  }\n\n  async suspendModel(): Promise<void> {\n    await this.#targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: false, flatten: true});\n  }\n\n  async resumeModel(): Promise<void> {\n    await this.#targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: true, flatten: true});\n  }\n\n  dispose(): void {\n    for (const sessionId of this.#childTargetsBySessionId.keys()) {\n      this.detachedFromTarget({sessionId, targetId: undefined});\n    }\n  }\n\n  targetCreated({targetInfo}: Protocol.Target.TargetCreatedEvent): void {\n    this.#targetInfosInternal.set(targetInfo.targetId, targetInfo);\n    this.fireAvailableTargetsChanged();\n    this.dispatchEventToListeners(Events.TargetCreated, targetInfo);\n  }\n\n  targetInfoChanged({targetInfo}: Protocol.Target.TargetInfoChangedEvent): void {\n    this.#targetInfosInternal.set(targetInfo.targetId, targetInfo);\n    const target = this.#childTargetsById.get(targetInfo.targetId);\n    if (target) {\n      target.updateTargetInfo(targetInfo);\n    }\n    this.fireAvailableTargetsChanged();\n    this.dispatchEventToListeners(Events.TargetInfoChanged, targetInfo);\n  }\n\n  targetDestroyed({targetId}: Protocol.Target.TargetDestroyedEvent): void {\n    this.#targetInfosInternal.delete(targetId);\n    this.fireAvailableTargetsChanged();\n    this.dispatchEventToListeners(Events.TargetDestroyed, targetId);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  targetCrashed({targetId, status, errorCode}: Protocol.Target.TargetCrashedEvent): void {\n  }\n\n  private fireAvailableTargetsChanged(): void {\n    TargetManager.instance().dispatchEventToListeners(\n        TargetManagerEvents.AvailableTargetsChanged, [...this.#targetInfosInternal.values()]);\n  }\n\n  async getParentTargetId(): Promise<Protocol.Target.TargetID> {\n    if (!this.#parentTargetId) {\n      this.#parentTargetId = (await this.#parentTarget.targetAgent().invoke_getTargetInfo({})).targetInfo.targetId;\n    }\n    return this.#parentTargetId;\n  }\n\n  async attachedToTarget({sessionId, targetInfo, waitingForDebugger}: Protocol.Target.AttachedToTargetEvent):\n      Promise<void> {\n    if (this.#parentTargetId === targetInfo.targetId) {\n      return;\n    }\n    let targetName = '';\n    if (targetInfo.type === 'worker' && targetInfo.title && targetInfo.title !== targetInfo.url) {\n      targetName = targetInfo.title;\n    } else if (targetInfo.type !== 'iframe' && targetInfo.type !== 'webview') {\n      const parsedURL = Common.ParsedURL.ParsedURL.fromString(targetInfo.url);\n      targetName =\n          parsedURL ? parsedURL.lastPathComponentWithFragment() : '#' + (++ChildTargetManager.lastAnonymousTargetId);\n    }\n\n    let type = Type.Browser;\n    if (targetInfo.type === 'iframe' || targetInfo.type === 'webview') {\n      type = Type.Frame;\n    }\n    // TODO(lfg): ensure proper capabilities for child pages (e.g. portals).\n    else if (targetInfo.type === 'page') {\n      type = Type.Frame;\n    } else if (targetInfo.type === 'worker') {\n      type = Type.Worker;\n    } else if (targetInfo.type === 'shared_worker') {\n      type = Type.SharedWorker;\n    } else if (targetInfo.type === 'service_worker') {\n      type = Type.ServiceWorker;\n    } else if (targetInfo.type === 'auction_worklet') {\n      type = Type.AuctionWorklet;\n    }\n    const target = this.#targetManager.createTarget(\n        targetInfo.targetId, targetName, type, this.#parentTarget, sessionId, undefined, undefined, targetInfo);\n    this.#childTargetsBySessionId.set(sessionId, target);\n    this.#childTargetsById.set(target.id(), target);\n\n    if (ChildTargetManager.attachCallback) {\n      await ChildTargetManager.attachCallback({target, waitingForDebugger});\n    }\n    void target.runtimeAgent().invoke_runIfWaitingForDebugger();\n  }\n\n  detachedFromTarget({sessionId}: Protocol.Target.DetachedFromTargetEvent): void {\n    if (this.#parallelConnections.has(sessionId)) {\n      this.#parallelConnections.delete(sessionId);\n    } else {\n      const target = this.#childTargetsBySessionId.get(sessionId);\n      if (target) {\n        target.dispose('target terminated');\n        this.#childTargetsBySessionId.delete(sessionId);\n        this.#childTargetsById.delete(target.id());\n      }\n    }\n  }\n\n  receivedMessageFromTarget({}: Protocol.Target.ReceivedMessageFromTargetEvent): void {\n    // We use flatten protocol.\n  }\n\n  async createParallelConnection(onMessage: (arg0: (Object|string)) => void):\n      Promise<{connection: ProtocolClient.InspectorBackend.Connection, sessionId: string}> {\n    // The main Target id is actually just `main`, instead of the real targetId.\n    // Get the real id (requires an async operation) so that it can be used synchronously later.\n    const targetId = await this.getParentTargetId();\n    const {connection, sessionId} =\n        await this.createParallelConnectionAndSessionForTarget(this.#parentTarget, targetId);\n    connection.setOnMessage(onMessage);\n    this.#parallelConnections.set(sessionId, connection);\n    return {connection, sessionId};\n  }\n\n  private async createParallelConnectionAndSessionForTarget(target: Target, targetId: Protocol.Target.TargetID):\n      Promise<{\n        connection: ProtocolClient.InspectorBackend.Connection,\n        sessionId: string,\n      }> {\n    const targetAgent = target.targetAgent();\n    const targetRouter = (target.router() as ProtocolClient.InspectorBackend.SessionRouter);\n    const sessionId = (await targetAgent.invoke_attachToTarget({targetId, flatten: true})).sessionId;\n    const connection = new ParallelConnection(targetRouter.connection(), sessionId);\n    targetRouter.registerSession(target, sessionId, connection);\n    connection.setOnDisconnect(() => {\n      targetRouter.unregisterSession(sessionId);\n      void targetAgent.invoke_detachFromTarget({sessionId});\n    });\n    return {connection, sessionId};\n  }\n\n  targetInfos(): Protocol.Target.TargetInfo[] {\n    return Array.from(this.#targetInfosInternal.values());\n  }\n\n  private static lastAnonymousTargetId = 0;\n\n  private static attachCallback?: ((arg0: {\n                                     target: Target,\n                                     waitingForDebugger: boolean,\n                                   }) => Promise<void>);\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  TargetCreated = 'TargetCreated',\n  TargetDestroyed = 'TargetDestroyed',\n  TargetInfoChanged = 'TargetInfoChanged',\n}\n\nexport type EventTypes = {\n  [Events.TargetCreated]: Protocol.Target.TargetInfo,\n  [Events.TargetDestroyed]: Protocol.Target.TargetID,\n  [Events.TargetInfoChanged]: Protocol.Target.TargetInfo,\n};\n"]}