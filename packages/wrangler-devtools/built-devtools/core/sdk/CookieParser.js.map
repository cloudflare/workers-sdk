{"version":3,"file":"CookieParser.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CookieParser.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// Ideally, we would rely on platform support for parsing a cookie, since\n// this would save us from any potential inconsistency. However, exposing\n// platform cookie parsing logic would require quite a bit of additional\n// plumbing, and at least some platforms lack support for parsing Cookie,\n// which is in a format slightly different from Set-Cookie and is normally\n// only required on the server side.\n\nimport {Cookie, Type} from './Cookie.js';\n\nexport class CookieParser {\n  readonly #domain: string|undefined;\n  #cookiesInternal: Cookie[];\n  #input!: string|undefined;\n  #originalInputLength: number;\n  #lastCookie?: Cookie|null;\n  #lastCookieLine?: string;\n  #lastCookiePosition?: number;\n  constructor(domain?: string) {\n    if (domain) {\n      // Handle #domain according to\n      // https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-5.3.3\n      this.#domain = domain.toLowerCase().replace(/^\\./, '');\n    }\n\n    this.#cookiesInternal = [];\n\n    this.#originalInputLength = 0;\n  }\n\n  static parseSetCookie(header: string|undefined, domain?: string): Cookie[]|null {\n    return (new CookieParser(domain)).parseSetCookie(header);\n  }\n\n  cookies(): Cookie[] {\n    return this.#cookiesInternal;\n  }\n\n  parseSetCookie(setCookieHeader: string|undefined): Cookie[]|null {\n    if (!this.initialize(setCookieHeader)) {\n      return null;\n    }\n    for (let kv = this.extractKeyValue(); kv; kv = this.extractKeyValue()) {\n      if (this.#lastCookie) {\n        this.#lastCookie.addAttribute(kv.key, kv.value);\n      } else {\n        this.addCookie(kv, Type.Response);\n      }\n      if (this.advanceAndCheckCookieDelimiter()) {\n        this.flushCookie();\n      }\n    }\n    this.flushCookie();\n    return this.#cookiesInternal;\n  }\n\n  private initialize(headerValue: string|undefined): boolean {\n    this.#input = headerValue;\n\n    if (typeof headerValue !== 'string') {\n      return false;\n    }\n\n    this.#cookiesInternal = [];\n    this.#lastCookie = null;\n    this.#lastCookieLine = '';\n    this.#originalInputLength = (this.#input as string).length;\n    return true;\n  }\n\n  private flushCookie(): void {\n    if (this.#lastCookie) {\n      // if we have a last cookie we know that these valeus all exist, hence the typecasts\n      this.#lastCookie.setSize(\n          this.#originalInputLength - (this.#input as string).length - (this.#lastCookiePosition as number));\n      this.#lastCookie.setCookieLine((this.#lastCookieLine as string).replace('\\n', ''));\n    }\n    this.#lastCookie = null;\n    this.#lastCookieLine = '';\n  }\n\n  private extractKeyValue(): KeyValue|null {\n    if (!this.#input || !this.#input.length) {\n      return null;\n    }\n    // Note: RFCs offer an option for quoted values that may contain commas and semicolons.\n    // Many browsers/platforms do not support this, however (see http://webkit.org/b/16699\n    // and http://crbug.com/12361). The logic below matches latest versions of IE, Firefox,\n    // Chrome and Safari on some old platforms. The latest version of Safari supports quoted\n    // cookie values, though.\n    const keyValueMatch = /^[ \\t]*([^=;]+)[ \\t]*(?:=[ \\t]*([^;\\n]*))?/.exec(this.#input);\n    if (!keyValueMatch) {\n      console.error('Failed parsing cookie header before: ' + this.#input);\n      return null;\n    }\n\n    const result = new KeyValue(\n        keyValueMatch[1] && keyValueMatch[1].trim(), keyValueMatch[2] && keyValueMatch[2].trim(),\n        (this.#originalInputLength as number) - this.#input.length);\n    this.#lastCookieLine += keyValueMatch[0];\n    this.#input = this.#input.slice(keyValueMatch[0].length);\n    return result;\n  }\n\n  private advanceAndCheckCookieDelimiter(): boolean {\n    if (!this.#input) {\n      return false;\n    }\n\n    const match = /^\\s*[\\n;]\\s*/.exec(this.#input);\n    if (!match) {\n      return false;\n    }\n    this.#lastCookieLine += match[0];\n    this.#input = this.#input.slice(match[0].length);\n    return match[0].match('\\n') !== null;\n  }\n\n  private addCookie(keyValue: KeyValue, type: Type): void {\n    if (this.#lastCookie) {\n      this.#lastCookie.setSize(keyValue.position - (this.#lastCookiePosition as number));\n    }\n\n    // Mozilla bug 169091: Mozilla, IE and Chrome treat single token (w/o \"=\") as\n    // specifying a value for a cookie with empty name.\n    this.#lastCookie = typeof keyValue.value === 'string' ? new Cookie(keyValue.key, keyValue.value, type) :\n                                                            new Cookie('', keyValue.key, type);\n    if (this.#domain) {\n      this.#lastCookie.addAttribute('domain', this.#domain);\n    }\n    this.#lastCookiePosition = keyValue.position;\n    this.#cookiesInternal.push(this.#lastCookie);\n  }\n}\n\nclass KeyValue {\n  key: string;\n  value: string|undefined;\n  position: number;\n  constructor(key: string, value: string|undefined, position: number) {\n    this.key = key;\n    this.value = value;\n    this.position = position;\n  }\n}\n"]}