{"version":3,"file":"CompilerSourceMappingContentProvider.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CompilerSourceMappingContentProvider.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,OAAO,KAAK,SAAS,MAAM,uCAAuC,CAAC;AAEnE,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AAIxC,OAAO,EAAC,kBAAkB,EAAC,MAAM,yBAAyB,CAAC;AAE3D,MAAM,SAAS,GAAG;IAChB;;;;MAIE;IACF,wBAAwB,EAAE,0CAA0C;CACrE,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kDAAkD,EAAE,SAAS,CAAC,CAAC;AACxG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,OAAO,oCAAoC;IACtC,UAAU,CAAkC;IAC5C,oBAAoB,CAAmC;IACvD,UAAU,CAA4B;IAE/C,YACI,SAA0C,EAAE,WAA6C,EACzF,SAAoC;QACtC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,IAAI;YACF,MAAM,EAAC,OAAO,EAAC,GAAG,MAAM,kBAAkB,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACrG,OAAO,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;SACpC;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,EAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC;YACrG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO,EAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;SACjD;IACH,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,KAAa,EAAE,aAAsB,EAAE,OAAgB;QAE3E,MAAM,EAAC,OAAO,EAAC,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC9C,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC/B,OAAO,EAAE,CAAC;SACX;QACD,OAAO,SAAS,CAAC,SAAS,CAAC,sBAAsB,CAAC,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC5F,CAAC;CACF","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport type {PageResourceLoadInitiator} from './PageResourceLoader.js';\nimport {PageResourceLoader} from './PageResourceLoader.js';\n\nconst UIStrings = {\n  /**\n  *@description Error message when failing to fetch a resource referenced in a source map\n  *@example {https://example.com/sourcemap.map} PH1\n  *@example {An error occurred} PH2\n  */\n  couldNotLoadContentForSS: 'Could not load content for {PH1} ({PH2})',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/CompilerSourceMappingContentProvider.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class CompilerSourceMappingContentProvider implements TextUtils.ContentProvider.ContentProvider {\n  readonly #sourceURL: Platform.DevToolsPath.UrlString;\n  readonly #contentTypeInternal: Common.ResourceType.ResourceType;\n  readonly #initiator: PageResourceLoadInitiator;\n\n  constructor(\n      sourceURL: Platform.DevToolsPath.UrlString, contentType: Common.ResourceType.ResourceType,\n      initiator: PageResourceLoadInitiator) {\n    this.#sourceURL = sourceURL;\n    this.#contentTypeInternal = contentType;\n    this.#initiator = initiator;\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.#sourceURL;\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    return this.#contentTypeInternal;\n  }\n\n  async contentEncoded(): Promise<boolean> {\n    return false;\n  }\n\n  async requestContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    try {\n      const {content} = await PageResourceLoader.instance().loadResource(this.#sourceURL, this.#initiator);\n      return {content, isEncoded: false};\n    } catch (e) {\n      const error = i18nString(UIStrings.couldNotLoadContentForSS, {PH1: this.#sourceURL, PH2: e.message});\n      console.error(error);\n      return {content: null, error, isEncoded: false};\n    }\n  }\n\n  async searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    const {content} = await this.requestContent();\n    if (typeof content !== 'string') {\n      return [];\n    }\n    return TextUtils.TextUtils.performSearchInContent(content, query, caseSensitive, isRegex);\n  }\n}\n"]}