{"version":3,"file":"CSSMatchedStyles.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CSSMatchedStyles.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\n\nimport {cssMetadata, CustomVariableRegex, VariableRegex} from './CSSMetadata.js';\n\nimport type {CSSModel} from './CSSModel.js';\nimport type {CSSProperty} from './CSSProperty.js';\nimport {CSSKeyframesRule, CSSStyleRule} from './CSSRule.js';\nimport {CSSStyleDeclaration, Type} from './CSSStyleDeclaration.js';\nimport type {DOMNode} from './DOMModel.js';\n\nexport class CSSMatchedStyles {\n  readonly #cssModelInternal: CSSModel;\n  readonly #nodeInternal: DOMNode;\n  readonly #addedStyles: Map<CSSStyleDeclaration, DOMNode>;\n  readonly #matchingSelectors: Map<number, Map<string, boolean>>;\n  readonly #keyframesInternal: CSSKeyframesRule[];\n  readonly #nodeForStyleInternal: Map<CSSStyleDeclaration, DOMNode|null>;\n  readonly #inheritedStyles: Set<CSSStyleDeclaration>;\n  readonly #mainDOMCascade: DOMInheritanceCascade;\n  readonly #pseudoDOMCascades: Map<Protocol.DOM.PseudoType, DOMInheritanceCascade>;\n  readonly #customHighlightPseudoDOMCascades: Map<string, DOMInheritanceCascade>;\n  readonly #styleToDOMCascade: Map<CSSStyleDeclaration, DOMInheritanceCascade>;\n\n  constructor(\n      cssModel: CSSModel, node: DOMNode, inlinePayload: Protocol.CSS.CSSStyle|null,\n      attributesPayload: Protocol.CSS.CSSStyle|null, matchedPayload: Protocol.CSS.RuleMatch[],\n      pseudoPayload: Protocol.CSS.PseudoElementMatches[], inheritedPayload: Protocol.CSS.InheritedStyleEntry[],\n      inheritedPseudoPayload: Protocol.CSS.InheritedPseudoElementMatches[],\n      animationsPayload: Protocol.CSS.CSSKeyframesRule[]) {\n    this.#cssModelInternal = cssModel;\n    this.#nodeInternal = node;\n    this.#addedStyles = new Map();\n    this.#matchingSelectors = new Map();\n    this.#keyframesInternal = [];\n    if (animationsPayload) {\n      this.#keyframesInternal = animationsPayload.map(rule => new CSSKeyframesRule(cssModel, rule));\n    }\n\n    this.#nodeForStyleInternal = new Map();\n    this.#inheritedStyles = new Set();\n\n    matchedPayload = cleanUserAgentPayload(matchedPayload);\n    for (const inheritedResult of inheritedPayload) {\n      inheritedResult.matchedCSSRules = cleanUserAgentPayload(inheritedResult.matchedCSSRules);\n    }\n\n    this.#mainDOMCascade = this.buildMainCascade(inlinePayload, attributesPayload, matchedPayload, inheritedPayload);\n    [this.#pseudoDOMCascades, this.#customHighlightPseudoDOMCascades] =\n        this.buildPseudoCascades(pseudoPayload, inheritedPseudoPayload);\n\n    this.#styleToDOMCascade = new Map();\n    for (const domCascade of Array.from(this.#customHighlightPseudoDOMCascades.values())\n             .concat(Array.from(this.#pseudoDOMCascades.values()))\n             .concat(this.#mainDOMCascade)) {\n      for (const style of domCascade.styles()) {\n        this.#styleToDOMCascade.set(style, domCascade);\n      }\n    }\n\n    function cleanUserAgentPayload(payload: Protocol.CSS.RuleMatch[]): Protocol.CSS.RuleMatch[] {\n      for (const ruleMatch of payload) {\n        cleanUserAgentSelectors(ruleMatch);\n      }\n\n      // Merge UA rules that are sequential and have similar selector/media.\n      const cleanMatchedPayload = [];\n      for (const ruleMatch of payload) {\n        const lastMatch = cleanMatchedPayload[cleanMatchedPayload.length - 1];\n        if (!lastMatch || ruleMatch.rule.origin !== 'user-agent' || lastMatch.rule.origin !== 'user-agent' ||\n            ruleMatch.rule.selectorList.text !== lastMatch.rule.selectorList.text ||\n            mediaText(ruleMatch) !== mediaText(lastMatch)) {\n          cleanMatchedPayload.push(ruleMatch);\n          continue;\n        }\n        mergeRule(ruleMatch, lastMatch);\n      }\n      return cleanMatchedPayload;\n\n      function mergeRule(from: Protocol.CSS.RuleMatch, to: Protocol.CSS.RuleMatch): void {\n        const shorthands = (new Map() as Map<string, string>);\n        const properties = (new Map() as Map<string, string>);\n        for (const entry of to.rule.style.shorthandEntries) {\n          shorthands.set(entry.name, entry.value);\n        }\n        for (const entry of to.rule.style.cssProperties) {\n          properties.set(entry.name, entry.value);\n        }\n        for (const entry of from.rule.style.shorthandEntries) {\n          shorthands.set(entry.name, entry.value);\n        }\n        for (const entry of from.rule.style.cssProperties) {\n          properties.set(entry.name, entry.value);\n        }\n        to.rule.style.shorthandEntries = [...shorthands.entries()].map(([name, value]) => ({name, value}));\n        to.rule.style.cssProperties = [...properties.entries()].map(([name, value]) => ({name, value}));\n      }\n\n      function mediaText(ruleMatch: Protocol.CSS.RuleMatch): string|null {\n        if (!ruleMatch.rule.media) {\n          return null;\n        }\n        return ruleMatch.rule.media.map(media => media.text).join(', ');\n      }\n\n      function cleanUserAgentSelectors(ruleMatch: Protocol.CSS.RuleMatch): void {\n        const {matchingSelectors, rule} = ruleMatch;\n        if (rule.origin !== 'user-agent' || !matchingSelectors.length) {\n          return;\n        }\n        rule.selectorList.selectors = rule.selectorList.selectors.filter((item, i) => matchingSelectors.includes(i));\n        rule.selectorList.text = rule.selectorList.selectors.map(item => item.text).join(', ');\n        ruleMatch.matchingSelectors = matchingSelectors.map((item, i) => i);\n      }\n    }\n  }\n\n  private buildMainCascade(\n      inlinePayload: Protocol.CSS.CSSStyle|null, attributesPayload: Protocol.CSS.CSSStyle|null,\n      matchedPayload: Protocol.CSS.RuleMatch[],\n      inheritedPayload: Protocol.CSS.InheritedStyleEntry[]): DOMInheritanceCascade {\n    const nodeCascades: NodeCascade[] = [];\n\n    const nodeStyles: CSSStyleDeclaration[] = [];\n\n    function addAttributesStyle(this: CSSMatchedStyles): void {\n      if (!attributesPayload) {\n        return;\n      }\n      const style = new CSSStyleDeclaration(this.#cssModelInternal, null, attributesPayload, Type.Attributes);\n      this.#nodeForStyleInternal.set(style, this.#nodeInternal);\n      nodeStyles.push(style);\n    }\n\n    // Inline style has the greatest specificity.\n    if (inlinePayload && this.#nodeInternal.nodeType() === Node.ELEMENT_NODE) {\n      const style = new CSSStyleDeclaration(this.#cssModelInternal, null, inlinePayload, Type.Inline);\n      this.#nodeForStyleInternal.set(style, this.#nodeInternal);\n      nodeStyles.push(style);\n    }\n\n    // Add rules in reverse order to match the cascade order.\n    let addedAttributesStyle;\n    for (let i = matchedPayload.length - 1; i >= 0; --i) {\n      const rule = new CSSStyleRule(this.#cssModelInternal, matchedPayload[i].rule);\n      if ((rule.isInjected() || rule.isUserAgent()) && !addedAttributesStyle) {\n        // Show element's Style Attributes after all author rules.\n        addedAttributesStyle = true;\n        addAttributesStyle.call(this);\n      }\n      this.#nodeForStyleInternal.set(rule.style, this.#nodeInternal);\n      nodeStyles.push(rule.style);\n      this.addMatchingSelectors(this.#nodeInternal, rule, matchedPayload[i].matchingSelectors);\n    }\n\n    if (!addedAttributesStyle) {\n      addAttributesStyle.call(this);\n    }\n    nodeCascades.push(new NodeCascade(this, nodeStyles, false /* #isInherited */));\n\n    // Walk the node structure and identify styles with inherited properties.\n    let parentNode: (DOMNode|null) = this.#nodeInternal.parentNode;\n    for (let i = 0; parentNode && inheritedPayload && i < inheritedPayload.length; ++i) {\n      const inheritedStyles = [];\n      const entryPayload = inheritedPayload[i];\n      const inheritedInlineStyle = entryPayload.inlineStyle ?\n          new CSSStyleDeclaration(this.#cssModelInternal, null, entryPayload.inlineStyle, Type.Inline) :\n          null;\n      if (inheritedInlineStyle && this.containsInherited(inheritedInlineStyle)) {\n        this.#nodeForStyleInternal.set(inheritedInlineStyle, parentNode);\n        inheritedStyles.push(inheritedInlineStyle);\n        this.#inheritedStyles.add(inheritedInlineStyle);\n      }\n\n      const inheritedMatchedCSSRules = entryPayload.matchedCSSRules || [];\n      for (let j = inheritedMatchedCSSRules.length - 1; j >= 0; --j) {\n        const inheritedRule = new CSSStyleRule(this.#cssModelInternal, inheritedMatchedCSSRules[j].rule);\n        this.addMatchingSelectors(parentNode, inheritedRule, inheritedMatchedCSSRules[j].matchingSelectors);\n        if (!this.containsInherited(inheritedRule.style)) {\n          continue;\n        }\n        if (containsStyle(nodeStyles, inheritedRule.style) ||\n            containsStyle(this.#inheritedStyles, inheritedRule.style)) {\n          continue;\n        }\n        this.#nodeForStyleInternal.set(inheritedRule.style, parentNode);\n        inheritedStyles.push(inheritedRule.style);\n        this.#inheritedStyles.add(inheritedRule.style);\n      }\n      parentNode = parentNode.parentNode;\n      nodeCascades.push(new NodeCascade(this, inheritedStyles, true /* #isInherited */));\n    }\n\n    return new DOMInheritanceCascade(nodeCascades);\n\n    function containsStyle(\n        styles: CSSStyleDeclaration[]|Set<CSSStyleDeclaration>, query: CSSStyleDeclaration): boolean {\n      if (!query.styleSheetId || !query.range) {\n        return false;\n      }\n      for (const style of styles) {\n        if (query.styleSheetId === style.styleSheetId && style.range && query.range.equal(style.range)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Pseudo rule matches received via the inspector protocol are grouped by pseudo type.\n   * For custom highlight pseudos, we need to instead group the rule matches by highlight\n   * name in order to produce separate cascades for each highlight name. This is necessary\n   * so that styles of ::highlight(foo) are not shown as overriding styles of ::highlight(bar).\n   *\n   * This helper function takes a list of rule matches and generates separate NodeCascades\n   * for each custom highlight name that was matched.\n   */\n  private buildSplitCustomHighlightCascades(\n      rules: Protocol.CSS.RuleMatch[], node: DOMNode, isInherited: boolean,\n      pseudoCascades: Map<string, NodeCascade[]>): void {\n    const splitHighlightRules = new Map<string, CSSStyleDeclaration[]>();\n\n    for (let j = rules.length - 1; j >= 0; --j) {\n      const highlightNamesToMatchingSelectorIndices = this.customHighlightNamesToMatchingSelectorIndices(rules[j]);\n\n      for (const [highlightName, matchingSelectors] of highlightNamesToMatchingSelectorIndices) {\n        const pseudoRule = new CSSStyleRule(this.#cssModelInternal, rules[j].rule);\n        this.#nodeForStyleInternal.set(pseudoRule.style, node);\n        if (isInherited) {\n          this.#inheritedStyles.add(pseudoRule.style);\n        }\n        this.addMatchingSelectors(node, pseudoRule, matchingSelectors);\n\n        const ruleListForHighlightName = splitHighlightRules.get(highlightName);\n        if (ruleListForHighlightName) {\n          ruleListForHighlightName.push(pseudoRule.style);\n        } else {\n          splitHighlightRules.set(highlightName, [pseudoRule.style]);\n        }\n      }\n    }\n\n    for (const [highlightName, highlightStyles] of splitHighlightRules) {\n      const nodeCascade = new NodeCascade(this, highlightStyles, isInherited, true /* #isHighlightPseudoCascade*/);\n      const cascadeListForHighlightName = pseudoCascades.get(highlightName);\n      if (cascadeListForHighlightName) {\n        cascadeListForHighlightName.push(nodeCascade);\n      } else {\n        pseudoCascades.set(highlightName, [nodeCascade]);\n      }\n    }\n  }\n\n  /**\n   * Return a mapping of the highlight names in the specified RuleMatch to\n   * the indices of selectors in that selector list with that highlight name.\n   *\n   * For example, consider the following ruleset:\n   * span::highlight(foo), div, #mySpan::highlight(bar), .highlighted::highlight(foo) {\n   *   color: blue;\n   * }\n   *\n   * For a <span id=\"mySpan\" class=\"highlighted\"></span>, a RuleMatch for that span\n   * would have matchingSelectors [0, 2, 3] indicating that the span\n   * matches all of the highlight selectors.\n   *\n   * For that RuleMatch, this function would produce the following map:\n   * {\n   *  \"foo\": [0, 3],\n   *  \"bar\": [2]\n   * }\n   *\n   * @param ruleMatch\n   * @returns A mapping of highlight names to lists of indices into the selector\n   * list associated with ruleMatch. The indices correspond to the selectors in the rule\n   * associated with the key's highlight name.\n   */\n  private customHighlightNamesToMatchingSelectorIndices(ruleMatch: Protocol.CSS.RuleMatch): Map<string, number[]> {\n    const highlightNamesToMatchingSelectors = new Map<string, number[]>();\n\n    for (let i = 0; i < ruleMatch.matchingSelectors.length; i++) {\n      const matchingSelectorIndex = ruleMatch.matchingSelectors[i];\n      const selectorText = ruleMatch.rule.selectorList.selectors[matchingSelectorIndex].text;\n      const highlightNameMatch = selectorText.match(/::highlight\\((.*)\\)/);\n      if (highlightNameMatch) {\n        const highlightName = highlightNameMatch[1];\n        const selectorsForName = highlightNamesToMatchingSelectors.get(highlightName);\n        if (selectorsForName) {\n          selectorsForName.push(matchingSelectorIndex);\n        } else {\n          highlightNamesToMatchingSelectors.set(highlightName, [matchingSelectorIndex]);\n        }\n      }\n    }\n    return highlightNamesToMatchingSelectors;\n  }\n\n  private buildPseudoCascades(\n      pseudoPayload: Protocol.CSS.PseudoElementMatches[],\n      inheritedPseudoPayload: Protocol.CSS.InheritedPseudoElementMatches[]):\n      [Map<Protocol.DOM.PseudoType, DOMInheritanceCascade>, Map<string, DOMInheritanceCascade>] {\n    const pseudoInheritanceCascades = new Map<Protocol.DOM.PseudoType, DOMInheritanceCascade>();\n    const customHighlightPseudoInheritanceCascades = new Map<string, DOMInheritanceCascade>();\n    if (!pseudoPayload) {\n      return [pseudoInheritanceCascades, customHighlightPseudoInheritanceCascades];\n    }\n\n    const pseudoCascades = new Map<Protocol.DOM.PseudoType, NodeCascade[]>();\n    const customHighlightPseudoCascades = new Map<string, NodeCascade[]>();\n    for (let i = 0; i < pseudoPayload.length; ++i) {\n      const entryPayload = pseudoPayload[i];\n      // PseudoElement nodes are not created unless \"content\" css property is set.\n      const pseudoElement = this.#nodeInternal.pseudoElements().get(entryPayload.pseudoType)?.at(-1) || null;\n      const pseudoStyles = [];\n      const rules = entryPayload.matches || [];\n\n      if (entryPayload.pseudoType === Protocol.DOM.PseudoType.Highlight) {\n        this.buildSplitCustomHighlightCascades(\n            rules, this.#nodeInternal, false /* #isInherited */, customHighlightPseudoCascades);\n      } else {\n        for (let j = rules.length - 1; j >= 0; --j) {\n          const pseudoRule = new CSSStyleRule(this.#cssModelInternal, rules[j].rule);\n          pseudoStyles.push(pseudoRule.style);\n          const nodeForStyle =\n              cssMetadata().isHighlightPseudoType(entryPayload.pseudoType) ? this.#nodeInternal : pseudoElement;\n          this.#nodeForStyleInternal.set(pseudoRule.style, nodeForStyle);\n          if (nodeForStyle) {\n            this.addMatchingSelectors(nodeForStyle, pseudoRule, rules[j].matchingSelectors);\n          }\n        }\n        const isHighlightPseudoCascade = cssMetadata().isHighlightPseudoType(entryPayload.pseudoType);\n        const nodeCascade = new NodeCascade(\n            this, pseudoStyles, false /* #isInherited */, isHighlightPseudoCascade /* #isHighlightPseudoCascade*/);\n        pseudoCascades.set(entryPayload.pseudoType, [nodeCascade]);\n      }\n    }\n\n    if (inheritedPseudoPayload) {\n      let parentNode: (DOMNode|null) = this.#nodeInternal.parentNode;\n      for (let i = 0; parentNode && i < inheritedPseudoPayload.length; ++i) {\n        const inheritedPseudoMatches = inheritedPseudoPayload[i].pseudoElements;\n        for (let j = 0; j < inheritedPseudoMatches.length; ++j) {\n          const inheritedEntryPayload = inheritedPseudoMatches[j];\n          const rules = inheritedEntryPayload.matches || [];\n\n          if (inheritedEntryPayload.pseudoType === Protocol.DOM.PseudoType.Highlight) {\n            this.buildSplitCustomHighlightCascades(\n                rules, parentNode, true /* #isInherited */, customHighlightPseudoCascades);\n          } else {\n            const pseudoStyles = [];\n            for (let k = rules.length - 1; k >= 0; --k) {\n              const pseudoRule = new CSSStyleRule(this.#cssModelInternal, rules[k].rule);\n              pseudoStyles.push(pseudoRule.style);\n              this.#nodeForStyleInternal.set(pseudoRule.style, parentNode);\n              this.#inheritedStyles.add(pseudoRule.style);\n              this.addMatchingSelectors(parentNode, pseudoRule, rules[k].matchingSelectors);\n            }\n\n            const isHighlightPseudoCascade = cssMetadata().isHighlightPseudoType(inheritedEntryPayload.pseudoType);\n            const nodeCascade = new NodeCascade(\n                this, pseudoStyles, true /* #isInherited */, isHighlightPseudoCascade /* #isHighlightPseudoCascade*/);\n            const cascadeListForPseudoType = pseudoCascades.get(inheritedEntryPayload.pseudoType);\n            if (cascadeListForPseudoType) {\n              cascadeListForPseudoType.push(nodeCascade);\n            } else {\n              pseudoCascades.set(inheritedEntryPayload.pseudoType, [nodeCascade]);\n            }\n          }\n        }\n\n        parentNode = parentNode.parentNode;\n      }\n    }\n\n    // Now that we've built the arrays of NodeCascades for each pseudo type, convert them into\n    // DOMInheritanceCascades.\n    for (const [pseudoType, nodeCascade] of pseudoCascades.entries()) {\n      pseudoInheritanceCascades.set(pseudoType, new DOMInheritanceCascade(nodeCascade));\n    }\n\n    for (const [highlightName, nodeCascade] of customHighlightPseudoCascades.entries()) {\n      customHighlightPseudoInheritanceCascades.set(highlightName, new DOMInheritanceCascade(nodeCascade));\n    }\n\n    return [pseudoInheritanceCascades, customHighlightPseudoInheritanceCascades];\n  }\n\n  private addMatchingSelectors(\n      this: CSSMatchedStyles, node: DOMNode, rule: CSSStyleRule, matchingSelectorIndices: number[]): void {\n    for (const matchingSelectorIndex of matchingSelectorIndices) {\n      const selector = rule.selectors[matchingSelectorIndex];\n      this.setSelectorMatches(node, selector.text, true);\n    }\n  }\n\n  node(): DOMNode {\n    return this.#nodeInternal;\n  }\n\n  cssModel(): CSSModel {\n    return this.#cssModelInternal;\n  }\n\n  hasMatchingSelectors(rule: CSSStyleRule): boolean {\n    const matchingSelectors = this.getMatchingSelectors(rule);\n    return matchingSelectors.length > 0 && this.queryMatches(rule.style);\n  }\n\n  getMatchingSelectors(rule: CSSStyleRule): number[] {\n    const node = this.nodeForStyle(rule.style);\n    if (!node || typeof node.id !== 'number') {\n      return [];\n    }\n    const map = this.#matchingSelectors.get(node.id);\n    if (!map) {\n      return [];\n    }\n    const result = [];\n    for (let i = 0; i < rule.selectors.length; ++i) {\n      if (map.get(rule.selectors[i].text)) {\n        result.push(i);\n      }\n    }\n    return result;\n  }\n\n  async recomputeMatchingSelectors(rule: CSSStyleRule): Promise<void> {\n    const node = this.nodeForStyle(rule.style);\n    if (!node) {\n      return;\n    }\n    const promises = [];\n    for (const selector of rule.selectors) {\n      promises.push(querySelector.call(this, node, selector.text));\n    }\n    await Promise.all(promises);\n\n    async function querySelector(this: CSSMatchedStyles, node: DOMNode, selectorText: string): Promise<void> {\n      const ownerDocument = node.ownerDocument;\n      if (!ownerDocument) {\n        return;\n      }\n      // We assume that \"matching\" property does not ever change during the\n      // MatchedStyleResult's lifetime.\n      if (typeof node.id === 'number') {\n        const map = this.#matchingSelectors.get(node.id);\n        if (map && map.has(selectorText)) {\n          return;\n        }\n      }\n\n      if (typeof ownerDocument.id !== 'number') {\n        return;\n      }\n      const matchingNodeIds = await this.#nodeInternal.domModel().querySelectorAll(ownerDocument.id, selectorText);\n\n      if (matchingNodeIds) {\n        if (typeof node.id === 'number') {\n          this.setSelectorMatches(node, selectorText, matchingNodeIds.indexOf(node.id) !== -1);\n        } else {\n          this.setSelectorMatches(node, selectorText, false);\n        }\n      }\n    }\n  }\n\n  addNewRule(rule: CSSStyleRule, node: DOMNode): Promise<void> {\n    this.#addedStyles.set(rule.style, node);\n    return this.recomputeMatchingSelectors(rule);\n  }\n\n  private setSelectorMatches(node: DOMNode, selectorText: string, value: boolean): void {\n    if (typeof node.id !== 'number') {\n      return;\n    }\n    let map = this.#matchingSelectors.get(node.id);\n    if (!map) {\n      map = new Map();\n      this.#matchingSelectors.set(node.id, map);\n    }\n    map.set(selectorText, value);\n  }\n\n  queryMatches(style: CSSStyleDeclaration): boolean {\n    if (!style.parentRule) {\n      return true;\n    }\n    const parentRule = style.parentRule as CSSStyleRule;\n    const queries = [...parentRule.media, ...parentRule.containerQueries, ...parentRule.supports, ...parentRule.scopes];\n    for (const query of queries) {\n      if (!query.active()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  nodeStyles(): CSSStyleDeclaration[] {\n    return this.#mainDOMCascade.styles();\n  }\n\n  keyframes(): CSSKeyframesRule[] {\n    return this.#keyframesInternal;\n  }\n\n  pseudoStyles(pseudoType: Protocol.DOM.PseudoType): CSSStyleDeclaration[] {\n    const domCascade = this.#pseudoDOMCascades.get(pseudoType);\n    return domCascade ? domCascade.styles() : [];\n  }\n\n  pseudoTypes(): Set<Protocol.DOM.PseudoType> {\n    return new Set(this.#pseudoDOMCascades.keys());\n  }\n\n  customHighlightPseudoStyles(highlightName: string): CSSStyleDeclaration[] {\n    const domCascade = this.#customHighlightPseudoDOMCascades.get(highlightName);\n    return domCascade ? domCascade.styles() : [];\n  }\n\n  customHighlightPseudoNames(): Set<string> {\n    return new Set(this.#customHighlightPseudoDOMCascades.keys());\n  }\n\n  private containsInherited(style: CSSStyleDeclaration): boolean {\n    const properties = style.allProperties();\n    for (let i = 0; i < properties.length; ++i) {\n      const property = properties[i];\n      // Does this style contain non-overridden inherited property?\n      if (property.activeInStyle() && cssMetadata().isPropertyInherited(property.name)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  nodeForStyle(style: CSSStyleDeclaration): DOMNode|null {\n    return this.#addedStyles.get(style) || this.#nodeForStyleInternal.get(style) || null;\n  }\n\n  availableCSSVariables(style: CSSStyleDeclaration): string[] {\n    const domCascade = this.#styleToDOMCascade.get(style) || null;\n    return domCascade ? domCascade.findAvailableCSSVariables(style) : [];\n  }\n\n  computeCSSVariable(style: CSSStyleDeclaration, variableName: string): string|null {\n    const domCascade = this.#styleToDOMCascade.get(style) || null;\n    return domCascade ? domCascade.computeCSSVariable(style, variableName) : null;\n  }\n\n  computeValue(style: CSSStyleDeclaration, value: string): string|null {\n    const domCascade = this.#styleToDOMCascade.get(style) || null;\n    return domCascade ? domCascade.computeValue(style, value) : null;\n  }\n\n  /**\n   * Same as computeValue, but to be used for `var(--#name [,...])` values only\n   */\n  computeSingleVariableValue(style: CSSStyleDeclaration, cssVariableValue: string): {\n    computedValue: string|null,\n    fromFallback: boolean,\n  }|null {\n    const domCascade = this.#styleToDOMCascade.get(style) || null;\n    const cssVariableValueNoSpaces = cssVariableValue.replace(/\\s/g, '');\n    return domCascade ? domCascade.computeSingleVariableValue(style, cssVariableValueNoSpaces) : null;\n  }\n\n  isInherited(style: CSSStyleDeclaration): boolean {\n    return this.#inheritedStyles.has(style);\n  }\n\n  propertyState(property: CSSProperty): PropertyState|null {\n    const domCascade = this.#styleToDOMCascade.get(property.ownerStyle);\n    return domCascade ? domCascade.propertyState(property) : null;\n  }\n\n  resetActiveProperties(): void {\n    this.#mainDOMCascade.reset();\n    for (const domCascade of this.#pseudoDOMCascades.values()) {\n      domCascade.reset();\n    }\n\n    for (const domCascade of this.#customHighlightPseudoDOMCascades.values()) {\n      domCascade.reset();\n    }\n  }\n}\n\nclass NodeCascade {\n  #matchedStyles: CSSMatchedStyles;\n  readonly styles: CSSStyleDeclaration[];\n  readonly #isInherited: boolean;\n  readonly #isHighlightPseudoCascade: boolean;\n  readonly propertiesState: Map<CSSProperty, PropertyState>;\n  readonly activeProperties: Map<string, CSSProperty>;\n  constructor(\n      matchedStyles: CSSMatchedStyles, styles: CSSStyleDeclaration[], isInherited: boolean,\n      isHighlightPseudoCascade: boolean = false) {\n    this.#matchedStyles = matchedStyles;\n    this.styles = styles;\n    this.#isInherited = isInherited;\n    this.#isHighlightPseudoCascade = isHighlightPseudoCascade;\n    this.propertiesState = new Map();\n    this.activeProperties = new Map();\n  }\n\n  computeActiveProperties(): void {\n    this.propertiesState.clear();\n    this.activeProperties.clear();\n\n    for (const style of this.styles) {\n      const rule = style.parentRule;\n      // Compute cascade for CSSStyleRules only.\n      if (rule && !(rule instanceof CSSStyleRule)) {\n        continue;\n      }\n      if (rule && !this.#matchedStyles.hasMatchingSelectors(rule)) {\n        continue;\n      }\n\n      for (const property of style.allProperties()) {\n        // Do not pick non-inherited properties from inherited styles.\n        const metadata = cssMetadata();\n\n        // All properties are inherited for highlight pseudos.\n        if (this.#isInherited && !this.#isHighlightPseudoCascade && !metadata.isPropertyInherited(property.name)) {\n          continue;\n        }\n\n        if (!property.activeInStyle()) {\n          this.propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n\n        const canonicalName = metadata.canonicalPropertyName(property.name);\n        const isPropShorthand = Boolean(metadata.getLonghands(canonicalName));\n\n        if (isPropShorthand) {\n          const longhandsFromShort =\n              (property.value.match(CustomVariableRegex) || []).map(e => e.replace(CustomVariableRegex, '$2'));\n          longhandsFromShort.forEach(longhandProperty => {\n            if (metadata.isCSSPropertyName(longhandProperty)) {\n              const activeProperty = this.activeProperties.get(longhandProperty);\n              if (!activeProperty) {\n                this.activeProperties.set(longhandProperty, property);\n              } else {\n                this.propertiesState.set(activeProperty, PropertyState.Overloaded);\n                this.activeProperties.set(longhandProperty, property);\n              }\n            }\n          });\n        }\n\n        const activeProperty = this.activeProperties.get(canonicalName);\n        if (activeProperty && (activeProperty.important || !property.important)) {\n          this.propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n\n        if (activeProperty) {\n          this.propertiesState.set(activeProperty, PropertyState.Overloaded);\n        }\n        this.propertiesState.set(property, PropertyState.Active);\n        this.activeProperties.set(canonicalName, property);\n      }\n    }\n  }\n}\n\nclass DOMInheritanceCascade {\n  readonly #nodeCascades: NodeCascade[];\n  readonly #propertiesState: Map<CSSProperty, PropertyState>;\n  readonly #availableCSSVariables: Map<NodeCascade, Map<string, string|null>>;\n  readonly #computedCSSVariables: Map<NodeCascade, Map<string, string|null>>;\n  #initialized: boolean;\n  readonly #styleToNodeCascade: Map<CSSStyleDeclaration, NodeCascade>;\n  constructor(nodeCascades: NodeCascade[]) {\n    this.#nodeCascades = nodeCascades;\n    this.#propertiesState = new Map();\n    this.#availableCSSVariables = new Map();\n    this.#computedCSSVariables = new Map();\n    this.#initialized = false;\n\n    this.#styleToNodeCascade = new Map();\n    for (const nodeCascade of nodeCascades) {\n      for (const style of nodeCascade.styles) {\n        this.#styleToNodeCascade.set(style, nodeCascade);\n      }\n    }\n  }\n\n  findAvailableCSSVariables(style: CSSStyleDeclaration): string[] {\n    const nodeCascade = this.#styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return [];\n    }\n    this.ensureInitialized();\n    const availableCSSVariables = this.#availableCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables) {\n      return [];\n    }\n    return Array.from(availableCSSVariables.keys());\n  }\n\n  computeCSSVariable(style: CSSStyleDeclaration, variableName: string): string|null {\n    const nodeCascade = this.#styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return null;\n    }\n    this.ensureInitialized();\n    const availableCSSVariables = this.#availableCSSVariables.get(nodeCascade);\n    const computedCSSVariables = this.#computedCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables || !computedCSSVariables) {\n      return null;\n    }\n    return this.innerComputeCSSVariable(availableCSSVariables, computedCSSVariables, variableName);\n  }\n\n  computeValue(style: CSSStyleDeclaration, value: string): string|null {\n    const nodeCascade = this.#styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return null;\n    }\n    this.ensureInitialized();\n    const availableCSSVariables = this.#availableCSSVariables.get(nodeCascade);\n    const computedCSSVariables = this.#computedCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables || !computedCSSVariables) {\n      return null;\n    }\n    return this.innerComputeValue(availableCSSVariables, computedCSSVariables, value);\n  }\n\n  computeSingleVariableValue(style: CSSStyleDeclaration, cssVariableValue: string): {\n    computedValue: string|null,\n    fromFallback: boolean,\n  }|null {\n    const nodeCascade = this.#styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return null;\n    }\n    this.ensureInitialized();\n    const availableCSSVariables = this.#availableCSSVariables.get(nodeCascade);\n    const computedCSSVariables = this.#computedCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables || !computedCSSVariables) {\n      return null;\n    }\n    const computedValue = this.innerComputeValue(availableCSSVariables, computedCSSVariables, cssVariableValue);\n    const {variableName} = this.getCSSVariableNameAndFallback(cssVariableValue);\n\n    return {computedValue, fromFallback: variableName !== null && !availableCSSVariables.has(variableName)};\n  }\n\n  private getCSSVariableNameAndFallback(cssVariableValue: string): {\n    variableName: string|null,\n    fallback: string|null,\n  } {\n    const match = cssVariableValue.match(/^var\\((--[a-zA-Z0-9-_]+)[,]?\\s*(.*)\\)$/);\n    return {variableName: match && match[1], fallback: match && match[2]};\n  }\n\n  private innerComputeCSSVariable(\n      availableCSSVariables: Map<string, string|null>, computedCSSVariables: Map<string, string|null>,\n      variableName: string): string|null {\n    if (!availableCSSVariables.has(variableName)) {\n      return null;\n    }\n    if (computedCSSVariables.has(variableName)) {\n      return computedCSSVariables.get(variableName) || null;\n    }\n    // Set dummy value to avoid infinite recursion.\n    computedCSSVariables.set(variableName, null);\n    const definedValue = availableCSSVariables.get(variableName);\n    if (definedValue === undefined || definedValue === null) {\n      return null;\n    }\n    const computedValue = this.innerComputeValue(availableCSSVariables, computedCSSVariables, definedValue);\n    computedCSSVariables.set(variableName, computedValue);\n    return computedValue;\n  }\n\n  private innerComputeValue(\n      availableCSSVariables: Map<string, string|null>, computedCSSVariables: Map<string, string|null>,\n      value: string): string|null {\n    const results = TextUtils.TextUtils.Utils.splitStringByRegexes(value, [VariableRegex]);\n    const tokens = [];\n    for (const result of results) {\n      if (result.regexIndex === -1) {\n        tokens.push(result.value);\n        continue;\n      }\n      // process var() function\n      const {variableName, fallback} = this.getCSSVariableNameAndFallback(result.value);\n      if (!variableName) {\n        return null;\n      }\n      const computedValue = this.innerComputeCSSVariable(availableCSSVariables, computedCSSVariables, variableName);\n      if (computedValue === null && !fallback) {\n        return null;\n      }\n      if (computedValue === null) {\n        tokens.push(fallback);\n      } else {\n        tokens.push(computedValue);\n      }\n    }\n    return tokens.map(token => token ? token.trim() : '').join(' ');\n  }\n\n  styles(): CSSStyleDeclaration[] {\n    return Array.from(this.#styleToNodeCascade.keys());\n  }\n\n  propertyState(property: CSSProperty): PropertyState|null {\n    this.ensureInitialized();\n    return this.#propertiesState.get(property) || null;\n  }\n\n  reset(): void {\n    this.#initialized = false;\n    this.#propertiesState.clear();\n    this.#availableCSSVariables.clear();\n    this.#computedCSSVariables.clear();\n  }\n\n  private ensureInitialized(): void {\n    if (this.#initialized) {\n      return;\n    }\n    this.#initialized = true;\n\n    const activeProperties = new Map<string, CSSProperty>();\n    for (const nodeCascade of this.#nodeCascades) {\n      nodeCascade.computeActiveProperties();\n      for (const entry of nodeCascade.propertiesState.entries()) {\n        const property = (entry[0] as CSSProperty);\n        const state = (entry[1] as PropertyState);\n        if (state === PropertyState.Overloaded) {\n          this.#propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n        const canonicalName = cssMetadata().canonicalPropertyName(property.name);\n        if (activeProperties.has(canonicalName)) {\n          this.#propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n        activeProperties.set(canonicalName, property);\n        this.#propertiesState.set(property, PropertyState.Active);\n      }\n    }\n    // If every longhand of the shorthand is not active, then the shorthand is not active too.\n    for (const entry of activeProperties.entries()) {\n      const canonicalName = (entry[0] as string);\n      const shorthandProperty = (entry[1] as CSSProperty);\n      const shorthandStyle = shorthandProperty.ownerStyle;\n      const longhands = shorthandStyle.longhandProperties(shorthandProperty.name);\n      if (!longhands.length) {\n        continue;\n      }\n      let hasActiveLonghands = false;\n      for (const longhand of longhands) {\n        const longhandCanonicalName = cssMetadata().canonicalPropertyName(longhand.name);\n        const longhandActiveProperty = activeProperties.get(longhandCanonicalName);\n        if (!longhandActiveProperty) {\n          continue;\n        }\n        if (longhandActiveProperty.ownerStyle === shorthandStyle) {\n          hasActiveLonghands = true;\n          break;\n        }\n      }\n      if (hasActiveLonghands) {\n        continue;\n      }\n      activeProperties.delete(canonicalName);\n      this.#propertiesState.set(shorthandProperty, PropertyState.Overloaded);\n    }\n\n    // Work inheritance chain backwards to compute visible CSS Variables.\n    const accumulatedCSSVariables = new Map<string, string|null>();\n    for (let i = this.#nodeCascades.length - 1; i >= 0; --i) {\n      const nodeCascade = this.#nodeCascades[i];\n      const variableNames = [];\n      for (const entry of nodeCascade.activeProperties.entries()) {\n        const propertyName = (entry[0] as string);\n        const property = (entry[1] as CSSProperty);\n        if (propertyName.startsWith('--')) {\n          accumulatedCSSVariables.set(propertyName, property.value);\n          variableNames.push(propertyName);\n        }\n      }\n      const availableCSSVariablesMap = new Map(accumulatedCSSVariables);\n      const computedVariablesMap = new Map();\n      this.#availableCSSVariables.set(nodeCascade, availableCSSVariablesMap);\n      this.#computedCSSVariables.set(nodeCascade, computedVariablesMap);\n      for (const variableName of variableNames) {\n        accumulatedCSSVariables.delete(variableName);\n        accumulatedCSSVariables.set(\n            variableName, this.innerComputeCSSVariable(availableCSSVariablesMap, computedVariablesMap, variableName));\n      }\n    }\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum PropertyState {\n  Active = 'Active',\n  Overloaded = 'Overloaded',\n}\n"]}