{"version":3,"file":"WebAuthnModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/WebAuthnModel.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAM7B,OAAO,EAAC,UAAU,EAAC,MAAM,aAAa,CAAC;AACvC,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAEvC,MAAM,OAAO,aAAc,SAAQ,QAAQ;IAChC,MAAM,CAA+B;IAC9C,YAAY,MAAc;QACxB,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;IACvC,CAAC;IAED,wBAAwB,CAAC,MAAe;QACtC,IAAI,MAAM,EAAE;YACV,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,OAAsD;QAE3E,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,8BAA8B,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QAC7E,OAAO,QAAQ,CAAC,eAAe,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,eAAkD;QAC1E,MAAM,IAAI,CAAC,MAAM,CAAC,iCAAiC,CAAC,EAAC,eAAe,EAAC,CAAC,CAAC;IACzE,CAAC;IAED,KAAK,CAAC,8BAA8B,CAAC,eAAkD,EAAE,OAAgB;QAEvG,MAAM,IAAI,CAAC,MAAM,CAAC,qCAAqC,CAAC,EAAC,eAAe,EAAE,OAAO,EAAC,CAAC,CAAC;IACtF,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,eAAkD;QACrE,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAC,eAAe,EAAC,CAAC,CAAC;QAC5E,OAAO,QAAQ,CAAC,WAAW,CAAC;IAC9B,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,eAAkD,EAAE,YAAoB;QAC7F,MAAM,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,EAAC,eAAe,EAAE,YAAY,EAAC,CAAC,CAAC;IAC7E,CAAC;CACF;AAED,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAC,YAAY,EAAE,UAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {Target} from './Target.js';\nimport {Capability} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class WebAuthnModel extends SDKModel {\n  readonly #agent: ProtocolProxyApi.WebAuthnApi;\n  constructor(target: Target) {\n    super(target);\n    this.#agent = target.webAuthnAgent();\n  }\n\n  setVirtualAuthEnvEnabled(enable: boolean): Promise<Object> {\n    if (enable) {\n      return this.#agent.invoke_enable({enableUI: true});\n    }\n    return this.#agent.invoke_disable();\n  }\n\n  async addAuthenticator(options: Protocol.WebAuthn.VirtualAuthenticatorOptions):\n      Promise<Protocol.WebAuthn.AuthenticatorId> {\n    const response = await this.#agent.invoke_addVirtualAuthenticator({options});\n    return response.authenticatorId;\n  }\n\n  async removeAuthenticator(authenticatorId: Protocol.WebAuthn.AuthenticatorId): Promise<void> {\n    await this.#agent.invoke_removeVirtualAuthenticator({authenticatorId});\n  }\n\n  async setAutomaticPresenceSimulation(authenticatorId: Protocol.WebAuthn.AuthenticatorId, enabled: boolean):\n      Promise<void> {\n    await this.#agent.invoke_setAutomaticPresenceSimulation({authenticatorId, enabled});\n  }\n\n  async getCredentials(authenticatorId: Protocol.WebAuthn.AuthenticatorId): Promise<Protocol.WebAuthn.Credential[]> {\n    const response = await this.#agent.invoke_getCredentials({authenticatorId});\n    return response.credentials;\n  }\n\n  async removeCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, credentialId: string): Promise<void> {\n    await this.#agent.invoke_removeCredential({authenticatorId, credentialId});\n  }\n}\n\nSDKModel.register(WebAuthnModel, {capabilities: Capability.WebAuthn, autostart: false});\n"]}