{"version":3,"file":"CSSRule.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CSSRule.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {CSSContainerQuery} from './CSSContainerQuery.js';\nimport {CSSLayer} from './CSSLayer.js';\nimport {CSSMedia} from './CSSMedia.js';\nimport {CSSScope} from './CSSScope.js';\nimport {CSSSupports} from './CSSSupports.js';\n\nimport type {CSSModel, Edit} from './CSSModel.js';\nimport {CSSStyleDeclaration, Type} from './CSSStyleDeclaration.js';\nimport type {CSSStyleSheetHeader} from './CSSStyleSheetHeader.js';\n\nexport class CSSRule {\n  readonly cssModelInternal: CSSModel;\n  styleSheetId: Protocol.CSS.StyleSheetId|undefined;\n  sourceURL: string|undefined;\n  origin: Protocol.CSS.StyleSheetOrigin;\n  style: CSSStyleDeclaration;\n\n  constructor(cssModel: CSSModel, payload: {\n    style: Protocol.CSS.CSSStyle,\n    styleSheetId: Protocol.CSS.StyleSheetId|undefined,\n    origin: Protocol.CSS.StyleSheetOrigin,\n  }) {\n    this.cssModelInternal = cssModel;\n    this.styleSheetId = payload.styleSheetId;\n\n    if (this.styleSheetId) {\n      const styleSheetHeader = this.getStyleSheetHeader(this.styleSheetId);\n      this.sourceURL = styleSheetHeader.sourceURL;\n    }\n    this.origin = payload.origin;\n    this.style = new CSSStyleDeclaration(this.cssModelInternal, this, payload.style, Type.Regular);\n  }\n\n  rebase(edit: Edit): void {\n    if (this.styleSheetId !== edit.styleSheetId) {\n      return;\n    }\n    this.style.rebase(edit);\n  }\n\n  resourceURL(): Platform.DevToolsPath.UrlString {\n    if (!this.styleSheetId) {\n      return Platform.DevToolsPath.EmptyUrlString;\n    }\n    const styleSheetHeader = this.getStyleSheetHeader(this.styleSheetId);\n    return styleSheetHeader.resourceURL();\n  }\n\n  isUserAgent(): boolean {\n    return this.origin === Protocol.CSS.StyleSheetOrigin.UserAgent;\n  }\n\n  isInjected(): boolean {\n    return this.origin === Protocol.CSS.StyleSheetOrigin.Injected;\n  }\n\n  isViaInspector(): boolean {\n    return this.origin === Protocol.CSS.StyleSheetOrigin.Inspector;\n  }\n\n  isRegular(): boolean {\n    return this.origin === Protocol.CSS.StyleSheetOrigin.Regular;\n  }\n\n  cssModel(): CSSModel {\n    return this.cssModelInternal;\n  }\n\n  getStyleSheetHeader(styleSheetId: Protocol.CSS.StyleSheetId): CSSStyleSheetHeader {\n    const styleSheetHeader = this.cssModelInternal.styleSheetHeaderForId(styleSheetId);\n    console.assert(styleSheetHeader !== null);\n    return styleSheetHeader as CSSStyleSheetHeader;\n  }\n}\n\nclass CSSValue {\n  text: string;\n  range: TextUtils.TextRange.TextRange|undefined;\n  constructor(payload: Protocol.CSS.Value) {\n    this.text = payload.text;\n    if (payload.range) {\n      this.range = TextUtils.TextRange.TextRange.fromObject(payload.range);\n    }\n  }\n\n  rebase(edit: Edit): void {\n    if (!this.range) {\n      return;\n    }\n    this.range = this.range.rebaseAfterTextEdit(edit.oldRange, edit.newRange);\n  }\n}\n\nexport class CSSStyleRule extends CSSRule {\n  selectors!: CSSValue[];\n  media: CSSMedia[];\n  containerQueries: CSSContainerQuery[];\n  supports: CSSSupports[];\n  scopes: CSSScope[];\n  layers: CSSLayer[];\n  wasUsed: boolean;\n  constructor(cssModel: CSSModel, payload: Protocol.CSS.CSSRule, wasUsed?: boolean) {\n    // TODO(crbug.com/1011811): Replace with spread operator or better types once Closure is gone.\n    super(cssModel, {origin: payload.origin, style: payload.style, styleSheetId: payload.styleSheetId});\n    this.reinitializeSelectors(payload.selectorList);\n    this.media = payload.media ? CSSMedia.parseMediaArrayPayload(cssModel, payload.media) : [];\n    this.containerQueries = payload.containerQueries ?\n        CSSContainerQuery.parseContainerQueriesPayload(cssModel, payload.containerQueries) :\n        [];\n    this.scopes = payload.scopes ? CSSScope.parseScopesPayload(cssModel, payload.scopes) : [];\n    this.supports = payload.supports ? CSSSupports.parseSupportsPayload(cssModel, payload.supports) : [];\n    this.layers = payload.layers ? CSSLayer.parseLayerPayload(cssModel, payload.layers) : [];\n    this.wasUsed = wasUsed || false;\n  }\n\n  static createDummyRule(cssModel: CSSModel, selectorText: string): CSSStyleRule {\n    const dummyPayload = {\n      selectorList: {\n        text: '',\n        selectors: [{text: selectorText, value: undefined}],\n      },\n      style: {\n        styleSheetId: '0' as Protocol.CSS.StyleSheetId,\n        range: new TextUtils.TextRange.TextRange(0, 0, 0, 0),\n        shorthandEntries: [],\n        cssProperties: [],\n      },\n      origin: Protocol.CSS.StyleSheetOrigin.Inspector,\n    };\n    return new CSSStyleRule(cssModel, (dummyPayload as Protocol.CSS.CSSRule));\n  }\n\n  private reinitializeSelectors(selectorList: Protocol.CSS.SelectorList): void {\n    this.selectors = [];\n    for (let i = 0; i < selectorList.selectors.length; ++i) {\n      this.selectors.push(new CSSValue(selectorList.selectors[i]));\n    }\n  }\n\n  setSelectorText(newSelector: string): Promise<boolean> {\n    const styleSheetId = this.styleSheetId;\n    if (!styleSheetId) {\n      throw 'No rule stylesheet id';\n    }\n    const range = this.selectorRange();\n    if (!range) {\n      throw 'Rule selector is not editable';\n    }\n    return this.cssModelInternal.setSelectorText(styleSheetId, range, newSelector);\n  }\n\n  selectorText(): string {\n    return this.selectors.map(selector => selector.text).join(', ');\n  }\n\n  selectorRange(): TextUtils.TextRange.TextRange|null {\n    const firstRange = this.selectors[0].range;\n    const lastRange = this.selectors[this.selectors.length - 1].range;\n    if (!firstRange || !lastRange) {\n      return null;\n    }\n    return new TextUtils.TextRange.TextRange(\n        firstRange.startLine, firstRange.startColumn, lastRange.endLine, lastRange.endColumn);\n  }\n\n  lineNumberInSource(selectorIndex: number): number {\n    const selector = this.selectors[selectorIndex];\n    if (!selector || !selector.range || !this.styleSheetId) {\n      return 0;\n    }\n    const styleSheetHeader = this.getStyleSheetHeader(this.styleSheetId);\n    return styleSheetHeader.lineNumberInSource(selector.range.startLine);\n  }\n\n  columnNumberInSource(selectorIndex: number): number|undefined {\n    const selector = this.selectors[selectorIndex];\n    if (!selector || !selector.range || !this.styleSheetId) {\n      return undefined;\n    }\n    const styleSheetHeader = this.getStyleSheetHeader(this.styleSheetId);\n    return styleSheetHeader.columnNumberInSource(selector.range.startLine, selector.range.startColumn);\n  }\n\n  rebase(edit: Edit): void {\n    if (this.styleSheetId !== edit.styleSheetId) {\n      return;\n    }\n    const range = this.selectorRange();\n    if (range && range.equal(edit.oldRange)) {\n      this.reinitializeSelectors((edit.payload as Protocol.CSS.SelectorList));\n    } else {\n      for (let i = 0; i < this.selectors.length; ++i) {\n        this.selectors[i].rebase(edit);\n      }\n    }\n    this.media.forEach(media => media.rebase(edit));\n    this.containerQueries.forEach(cq => cq.rebase(edit));\n    this.scopes.forEach(scope => scope.rebase(edit));\n    this.supports.forEach(supports => supports.rebase(edit));\n\n    super.rebase(edit);\n  }\n}\n\nexport class CSSKeyframesRule {\n  readonly #animationName: CSSValue;\n  readonly #keyframesInternal: CSSKeyframeRule[];\n  constructor(cssModel: CSSModel, payload: Protocol.CSS.CSSKeyframesRule) {\n    this.#animationName = new CSSValue(payload.animationName);\n    this.#keyframesInternal = payload.keyframes.map(keyframeRule => new CSSKeyframeRule(cssModel, keyframeRule));\n  }\n\n  name(): CSSValue {\n    return this.#animationName;\n  }\n\n  keyframes(): CSSKeyframeRule[] {\n    return this.#keyframesInternal;\n  }\n}\n\nexport class CSSKeyframeRule extends CSSRule {\n  #keyText!: CSSValue;\n  constructor(cssModel: CSSModel, payload: Protocol.CSS.CSSKeyframeRule) {\n    // TODO(crbug.com/1011811): Replace with spread operator or better types once Closure is gone.\n    super(cssModel, {origin: payload.origin, style: payload.style, styleSheetId: payload.styleSheetId});\n    this.reinitializeKey(payload.keyText);\n  }\n\n  key(): CSSValue {\n    return this.#keyText;\n  }\n\n  private reinitializeKey(payload: Protocol.CSS.Value): void {\n    this.#keyText = new CSSValue(payload);\n  }\n\n  rebase(edit: Edit): void {\n    if (this.styleSheetId !== edit.styleSheetId || !this.#keyText.range) {\n      return;\n    }\n    if (edit.oldRange.equal(this.#keyText.range)) {\n      this.reinitializeKey((edit.payload as Protocol.CSS.Value));\n    } else {\n      this.#keyText.rebase(edit);\n    }\n\n    super.rebase(edit);\n  }\n\n  setKeyText(newKeyText: string): Promise<boolean> {\n    const styleSheetId = this.styleSheetId;\n    if (!styleSheetId) {\n      throw 'No rule stylesheet id';\n    }\n    const range = this.#keyText.range;\n    if (!range) {\n      throw 'Keyframe key is not editable';\n    }\n    return this.cssModelInternal.setKeyframeKey(styleSheetId, range, newKeyText);\n  }\n}\n"]}