{"version":3,"file":"DOMDebuggerModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/DOMDebuggerModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {CategorizedBreakpoint} from './CategorizedBreakpoint.js';\nimport type {Location} from './DebuggerModel.js';\nimport type {DOMNode} from './DOMModel.js';\nimport {DOMModel, Events as DOMModelEvents} from './DOMModel.js';\nimport {RemoteObject} from './RemoteObject.js';\nimport {RuntimeModel} from './RuntimeModel.js';\nimport type {Target} from './Target.js';\nimport {Capability} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\nimport type {SDKModelObserver} from './TargetManager.js';\nimport {TargetManager} from './TargetManager.js';\n\nconst UIStrings = {\n  /**\n  *@description Title for a category of breakpoints on Trusted Type violations\n  */\n  trustedTypeViolations: 'Trusted Type Violations',\n  /**\n   * @description Noun. Title for a checkbox that turns on breakpoints on Trusted Type sink violations.\n   * \"Trusted Types\" is a Web API. A \"Sink\" (Noun, singular) is a special function, akin to a data sink, that expects\n   * to receive data in a specific format. Should the data be in the wrong format, or something else\n   * go wrong, its called a \"sink violation\".\n   */\n  sinkViolations: 'Sink Violations',\n  /**\n  *@description Title for a checkbox that turns on breakpoints on Trusted Type policy violations\n  */\n  policyViolations: 'Policy Violations',\n  /**\n  *@description Text that refers to the animation of the web page\n  */\n  animation: 'Animation',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  canvas: 'Canvas',\n  /**\n  *@description Title for a group of cities\n  */\n  geolocation: 'Geolocation',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  notification: 'Notification',\n  /**\n  *@description Text to parse something\n  */\n  parse: 'Parse',\n  /**\n  *@description Label for a group of JavaScript files\n  */\n  script: 'Script',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  timer: 'Timer',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  window: 'Window',\n  /**\n  *@description Title of the WebAudio tool\n  */\n  webaudio: 'WebAudio',\n  /**\n  *@description Text that appears on a button for the media resource type filter.\n  */\n  media: 'Media',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  pictureinpicture: 'Picture-in-Picture',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  clipboard: 'Clipboard',\n  /**\n   * @description Noun. Describes a group of DOM events (such as 'select' and 'submit') in this context.\n   */\n  control: 'Control',\n  /**\n  *@description Text that refers to device such as a phone\n  */\n  device: 'Device',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  domMutation: 'DOM Mutation',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  dragDrop: 'Drag / drop',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  keyboard: 'Keyboard',\n  /**\n  *@description Text to load something\n  */\n  load: 'Load',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  mouse: 'Mouse',\n  /**\n  *@description Text in DOMDebugger Model\n  */\n  pointer: 'Pointer',\n  /**\n  *@description Text for the touch type to simulate on a device\n  */\n  touch: 'Touch',\n  /**\n  *@description Text that appears on a button for the xhr resource type filter.\n  */\n  xhr: 'XHR',\n  /**\n  *@description Text in the Event Listener Breakpoints Panel of the JavaScript Debugger in the Sources Panel\n  *@example {setTimeout} PH1\n  */\n  setTimeoutOrIntervalFired: '{PH1} fired',\n  /**\n  *@description Text in the Event Listener Breakpoints Panel of the JavaScript Debugger in the Sources Panel\n  */\n  scriptFirstStatement: 'Script First Statement',\n  /**\n  *@description Text in the Event Listener Breakpoints Panel of the JavaScript Debugger in the Sources Panel\n  */\n  scriptBlockedByContentSecurity: 'Script Blocked by Content Security Policy',\n  /**\n  *@description Text for the request animation frame event\n  */\n  requestAnimationFrame: 'Request Animation Frame',\n  /**\n  *@description Text to cancel the animation frame\n  */\n  cancelAnimationFrame: 'Cancel Animation Frame',\n  /**\n  *@description Text for the event that an animation frame is fired\n  */\n  animationFrameFired: 'Animation Frame Fired',\n  /**\n  *@description Text in the Event Listener Breakpoints Panel of the JavaScript Debugger in the Sources Panel\n  */\n  webglErrorFired: 'WebGL Error Fired',\n  /**\n  *@description Text in the Event Listener Breakpoints Panel of the JavaScript Debugger in the Sources Panel\n  */\n  webglWarningFired: 'WebGL Warning Fired',\n  /**\n  *@description Text in the Event Listener Breakpoints Panel of the JavaScript Debugger in the Sources Panel\n  */\n  setInnerhtml: 'Set `innerHTML`',\n  /**\n  *@description Name of a breakpoint type in the Sources Panel.\n  */\n  createCanvasContext: 'Create canvas context',\n  /**\n  *@description Name of a breakpoint type in the Sources Panel.\n  */\n  createAudiocontext: 'Create `AudioContext`',\n  /**\n  *@description Name of a breakpoint type in the Sources Panel. Close is a verb.\n  */\n  closeAudiocontext: 'Close `AudioContext`',\n  /**\n  *@description Name of a breakpoint type in the Sources Panel. Resume is a verb.\n  */\n  resumeAudiocontext: 'Resume `AudioContext`',\n  /**\n  *@description Name of a breakpoint type in the Sources Panel.\n  */\n  suspendAudiocontext: 'Suspend `AudioContext`',\n  /**\n  *@description Error message text\n  *@example {Snag Error} PH1\n  */\n  webglErrorFiredS: 'WebGL Error Fired ({PH1})',\n  /**\n  *@description Text in DOMDebugger Model\n  *@example {\"script-src 'self'\"} PH1\n  */\n  scriptBlockedDueToContent: 'Script blocked due to Content Security Policy directive: {PH1}',\n  /**\n  *@description Text for the service worker type.\n  */\n  worker: 'Worker',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/DOMDebuggerModel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// Some instrumentation breakpoints have their titles adjusted to localized\n// versions, and some are merely renamed to more recognizable names.\n//\n// This function returns a table that links the breakpoint names and replacement\n// titles.\nfunction getInstrumentationBreakpointTitles(): [string, string|Common.UIString.LocalizedString][] {\n  return [\n    ['setTimeout.callback', i18nString(UIStrings.setTimeoutOrIntervalFired, {PH1: 'setTimeout'})],\n    ['setInterval.callback', i18nString(UIStrings.setTimeoutOrIntervalFired, {PH1: 'setInterval'})],\n    ['scriptFirstStatement', i18nString(UIStrings.scriptFirstStatement)],\n    ['scriptBlockedByCSP', i18nString(UIStrings.scriptBlockedByContentSecurity)],\n    ['requestAnimationFrame', i18nString(UIStrings.requestAnimationFrame)],\n    ['cancelAnimationFrame', i18nString(UIStrings.cancelAnimationFrame)],\n    ['requestAnimationFrame.callback', i18nString(UIStrings.animationFrameFired)],\n    ['webglErrorFired', i18nString(UIStrings.webglErrorFired)],\n    ['webglWarningFired', i18nString(UIStrings.webglWarningFired)],\n    ['Element.setInnerHTML', i18nString(UIStrings.setInnerhtml)],\n    ['canvasContextCreated', i18nString(UIStrings.createCanvasContext)],\n    ['Geolocation.getCurrentPosition', 'getCurrentPosition'],\n    ['Geolocation.watchPosition', 'watchPosition'],\n    ['Notification.requestPermission', 'requestPermission'],\n    ['DOMWindow.close', 'window.close'],\n    ['Document.write', 'document.write'],\n    ['audioContextCreated', i18nString(UIStrings.createAudiocontext)],\n    ['audioContextClosed', i18nString(UIStrings.closeAudiocontext)],\n    ['audioContextResumed', i18nString(UIStrings.resumeAudiocontext)],\n    ['audioContextSuspended', i18nString(UIStrings.suspendAudiocontext)],\n  ];\n}\n\nexport class DOMDebuggerModel extends SDKModel<EventTypes> {\n  readonly agent: ProtocolProxyApi.DOMDebuggerApi;\n  readonly #runtimeModelInternal: RuntimeModel;\n  #domModel: DOMModel;\n  #domBreakpointsInternal: DOMBreakpoint[];\n  readonly #domBreakpointsSetting: Common.Settings.Setting<{\n    url: Platform.DevToolsPath.UrlString,\n    path: string,\n    type: Protocol.DOMDebugger.DOMBreakpointType,\n    enabled: boolean,\n  }[]>;\n  suspended = false;\n\n  constructor(target: Target) {\n    super(target);\n    this.agent = target.domdebuggerAgent();\n    this.#runtimeModelInternal = (target.model(RuntimeModel) as RuntimeModel);\n    this.#domModel = (target.model(DOMModel) as DOMModel);\n    this.#domModel.addEventListener(DOMModelEvents.DocumentUpdated, this.documentUpdated, this);\n    this.#domModel.addEventListener(DOMModelEvents.NodeRemoved, this.nodeRemoved, this);\n\n    this.#domBreakpointsInternal = [];\n    this.#domBreakpointsSetting = Common.Settings.Settings.instance().createLocalSetting('domBreakpoints', []);\n    if (this.#domModel.existingDocument()) {\n      void this.documentUpdated();\n    }\n  }\n\n  runtimeModel(): RuntimeModel {\n    return this.#runtimeModelInternal;\n  }\n\n  async suspendModel(): Promise<void> {\n    this.suspended = true;\n  }\n\n  async resumeModel(): Promise<void> {\n    this.suspended = false;\n  }\n\n  async eventListeners(remoteObject: RemoteObject): Promise<EventListener[]> {\n    console.assert(remoteObject.runtimeModel() === this.#runtimeModelInternal);\n    if (!remoteObject.objectId) {\n      return [];\n    }\n\n    const listeners = await this.agent.invoke_getEventListeners({objectId: remoteObject.objectId});\n    const eventListeners = [];\n    for (const payload of listeners.listeners || []) {\n      const location = this.#runtimeModelInternal.debuggerModel().createRawLocationByScriptId(\n          payload.scriptId, payload.lineNumber, payload.columnNumber);\n      if (!location) {\n        continue;\n      }\n      eventListeners.push(new EventListener(\n          this, remoteObject, payload.type, payload.useCapture, payload.passive, payload.once,\n          payload.handler ? this.#runtimeModelInternal.createRemoteObject(payload.handler) : null,\n          payload.originalHandler ? this.#runtimeModelInternal.createRemoteObject(payload.originalHandler) : null,\n          location, null));\n    }\n    return eventListeners;\n  }\n\n  retrieveDOMBreakpoints(): void {\n    void this.#domModel.requestDocument();\n  }\n\n  domBreakpoints(): DOMBreakpoint[] {\n    return this.#domBreakpointsInternal.slice();\n  }\n\n  hasDOMBreakpoint(node: DOMNode, type: Protocol.DOMDebugger.DOMBreakpointType): boolean {\n    return this.#domBreakpointsInternal.some(breakpoint => (breakpoint.node === node && breakpoint.type === type));\n  }\n\n  setDOMBreakpoint(node: DOMNode, type: Protocol.DOMDebugger.DOMBreakpointType): DOMBreakpoint {\n    for (const breakpoint of this.#domBreakpointsInternal) {\n      if (breakpoint.node === node && breakpoint.type === type) {\n        this.toggleDOMBreakpoint(breakpoint, true);\n        return breakpoint;\n      }\n    }\n    const breakpoint = new DOMBreakpoint(this, node, type, true);\n    this.#domBreakpointsInternal.push(breakpoint);\n    this.saveDOMBreakpoints();\n    this.enableDOMBreakpoint(breakpoint);\n    this.dispatchEventToListeners(Events.DOMBreakpointAdded, breakpoint);\n    return breakpoint;\n  }\n\n  removeDOMBreakpoint(node: DOMNode, type: Protocol.DOMDebugger.DOMBreakpointType): void {\n    this.removeDOMBreakpoints(breakpoint => breakpoint.node === node && breakpoint.type === type);\n  }\n\n  removeAllDOMBreakpoints(): void {\n    this.removeDOMBreakpoints(_breakpoint => true);\n  }\n\n  toggleDOMBreakpoint(breakpoint: DOMBreakpoint, enabled: boolean): void {\n    if (enabled === breakpoint.enabled) {\n      return;\n    }\n    breakpoint.enabled = enabled;\n    if (enabled) {\n      this.enableDOMBreakpoint(breakpoint);\n    } else {\n      this.disableDOMBreakpoint(breakpoint);\n    }\n    this.dispatchEventToListeners(Events.DOMBreakpointToggled, breakpoint);\n  }\n\n  private enableDOMBreakpoint(breakpoint: DOMBreakpoint): void {\n    if (breakpoint.node.id) {\n      void this.agent.invoke_setDOMBreakpoint({nodeId: breakpoint.node.id, type: breakpoint.type});\n      breakpoint.node.setMarker(Marker, true);\n    }\n  }\n\n  private disableDOMBreakpoint(breakpoint: DOMBreakpoint): void {\n    if (breakpoint.node.id) {\n      void this.agent.invoke_removeDOMBreakpoint({nodeId: breakpoint.node.id, type: breakpoint.type});\n      breakpoint.node.setMarker(Marker, this.nodeHasBreakpoints(breakpoint.node) ? true : null);\n    }\n  }\n\n  private nodeHasBreakpoints(node: DOMNode): boolean {\n    for (const breakpoint of this.#domBreakpointsInternal) {\n      if (breakpoint.node === node && breakpoint.enabled) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  resolveDOMBreakpointData(auxData: {\n    type: Protocol.DOMDebugger.DOMBreakpointType,\n    nodeId: Protocol.DOM.NodeId,\n    targetNodeId: Protocol.DOM.NodeId,\n    insertion: boolean,\n  }): {\n    type: Protocol.DOMDebugger.DOMBreakpointType,\n    node: DOMNode,\n    targetNode: DOMNode|null,\n    insertion: boolean,\n  }|null {\n    const type = auxData['type'];\n    const node = this.#domModel.nodeForId(auxData['nodeId']);\n    if (!type || !node) {\n      return null;\n    }\n    let targetNode: (DOMNode|null)|null = null;\n    let insertion = false;\n    if (type === Protocol.DOMDebugger.DOMBreakpointType.SubtreeModified) {\n      insertion = auxData['insertion'] || false;\n      targetNode = this.#domModel.nodeForId(auxData['targetNodeId']);\n    }\n    return {type: type, node: node, targetNode: targetNode, insertion: insertion};\n  }\n\n  private currentURL(): Platform.DevToolsPath.UrlString {\n    const domDocument = this.#domModel.existingDocument();\n    return domDocument ? domDocument.documentURL : Platform.DevToolsPath.EmptyUrlString;\n  }\n\n  private async documentUpdated(): Promise<void> {\n    if (this.suspended) {\n      return;\n    }\n    const removed = this.#domBreakpointsInternal;\n    this.#domBreakpointsInternal = [];\n    this.dispatchEventToListeners(Events.DOMBreakpointsRemoved, removed);\n\n    // this.currentURL() is empty when the page is reloaded because the\n    // new document has not been requested yet and the old one has been\n    // removed. Therefore, we need to request the document and wait for it.\n    // Note that requestDocument() caches the document so that it is requested\n    // only once.\n    const document = await this.#domModel.requestDocument();\n    const currentURL = document ? document.documentURL : Platform.DevToolsPath.EmptyUrlString;\n    for (const breakpoint of this.#domBreakpointsSetting.get()) {\n      if (breakpoint.url === currentURL) {\n        void this.#domModel.pushNodeByPathToFrontend(breakpoint.path).then(appendBreakpoint.bind(this, breakpoint));\n      }\n    }\n\n    function appendBreakpoint(\n        this: DOMDebuggerModel, breakpoint: {\n          type: Protocol.DOMDebugger.DOMBreakpointType,\n          enabled: boolean,\n        },\n        nodeId: Protocol.DOM.NodeId|null): void {\n      const node = nodeId ? this.#domModel.nodeForId(nodeId) : null;\n      if (!node) {\n        return;\n      }\n      const domBreakpoint = new DOMBreakpoint(this, node, breakpoint.type, breakpoint.enabled);\n      this.#domBreakpointsInternal.push(domBreakpoint);\n      if (breakpoint.enabled) {\n        this.enableDOMBreakpoint(domBreakpoint);\n      }\n      this.dispatchEventToListeners(Events.DOMBreakpointAdded, domBreakpoint);\n    }\n  }\n\n  private removeDOMBreakpoints(filter: (arg0: DOMBreakpoint) => boolean): void {\n    const removed = [];\n    const left = [];\n    for (const breakpoint of this.#domBreakpointsInternal) {\n      if (filter(breakpoint)) {\n        removed.push(breakpoint);\n        if (breakpoint.enabled) {\n          breakpoint.enabled = false;\n          this.disableDOMBreakpoint(breakpoint);\n        }\n      } else {\n        left.push(breakpoint);\n      }\n    }\n\n    if (!removed.length) {\n      return;\n    }\n    this.#domBreakpointsInternal = left;\n    this.saveDOMBreakpoints();\n    this.dispatchEventToListeners(Events.DOMBreakpointsRemoved, removed);\n  }\n\n  private nodeRemoved(event: Common.EventTarget.EventTargetEvent<{node: DOMNode, parent: DOMNode}>): void {\n    if (this.suspended) {\n      return;\n    }\n    const {node} = event.data;\n    const children = node.children() || [];\n    this.removeDOMBreakpoints(breakpoint => breakpoint.node === node || children.indexOf(breakpoint.node) !== -1);\n  }\n\n  private saveDOMBreakpoints(): void {\n    const currentURL = this.currentURL();\n    const breakpoints = this.#domBreakpointsSetting.get().filter((breakpoint: {\n                                                                   url: Platform.DevToolsPath.UrlString,\n                                                                 }) => breakpoint.url !== currentURL);\n    for (const breakpoint of this.#domBreakpointsInternal) {\n      breakpoints.push(\n          {url: currentURL, path: breakpoint.node.path(), type: breakpoint.type, enabled: breakpoint.enabled});\n    }\n    this.#domBreakpointsSetting.set(breakpoints);\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  DOMBreakpointAdded = 'DOMBreakpointAdded',\n  DOMBreakpointToggled = 'DOMBreakpointToggled',\n  DOMBreakpointsRemoved = 'DOMBreakpointsRemoved',\n}\n\nexport type EventTypes = {\n  [Events.DOMBreakpointAdded]: DOMBreakpoint,\n  [Events.DOMBreakpointToggled]: DOMBreakpoint,\n  [Events.DOMBreakpointsRemoved]: DOMBreakpoint[],\n};\n\nconst Marker = 'breakpoint-marker';\n\nexport class DOMBreakpoint {\n  domDebuggerModel: DOMDebuggerModel;\n  node: DOMNode;\n  type: Protocol.DOMDebugger.DOMBreakpointType;\n  enabled: boolean;\n\n  constructor(\n      domDebuggerModel: DOMDebuggerModel, node: DOMNode, type: Protocol.DOMDebugger.DOMBreakpointType,\n      enabled: boolean) {\n    this.domDebuggerModel = domDebuggerModel;\n    this.node = node;\n    this.type = type;\n    this.enabled = enabled;\n  }\n}\n\nexport class EventListener {\n  readonly #domDebuggerModelInternal: DOMDebuggerModel;\n  readonly #eventTarget: RemoteObject;\n  readonly #typeInternal: string;\n  readonly #useCaptureInternal: boolean;\n  readonly #passiveInternal: boolean;\n  readonly #onceInternal: boolean;\n  readonly #handlerInternal: RemoteObject|null;\n  readonly #originalHandlerInternal: RemoteObject|null;\n  readonly #locationInternal: Location;\n  readonly #sourceURLInternal: Platform.DevToolsPath.UrlString;\n  readonly #customRemoveFunction: RemoteObject|null;\n  #originInternal: string;\n\n  constructor(\n      domDebuggerModel: DOMDebuggerModel, eventTarget: RemoteObject, type: string, useCapture: boolean,\n      passive: boolean, once: boolean, handler: RemoteObject|null, originalHandler: RemoteObject|null,\n      location: Location, customRemoveFunction: RemoteObject|null, origin?: string) {\n    this.#domDebuggerModelInternal = domDebuggerModel;\n    this.#eventTarget = eventTarget;\n    this.#typeInternal = type;\n    this.#useCaptureInternal = useCapture;\n    this.#passiveInternal = passive;\n    this.#onceInternal = once;\n    this.#handlerInternal = handler;\n    this.#originalHandlerInternal = originalHandler || handler;\n    this.#locationInternal = location;\n    const script = location.script();\n    this.#sourceURLInternal = script ? script.contentURL() : Platform.DevToolsPath.EmptyUrlString;\n    this.#customRemoveFunction = customRemoveFunction;\n    this.#originInternal = origin || EventListener.Origin.Raw;\n  }\n\n  domDebuggerModel(): DOMDebuggerModel {\n    return this.#domDebuggerModelInternal;\n  }\n\n  type(): string {\n    return this.#typeInternal;\n  }\n\n  useCapture(): boolean {\n    return this.#useCaptureInternal;\n  }\n\n  passive(): boolean {\n    return this.#passiveInternal;\n  }\n\n  once(): boolean {\n    return this.#onceInternal;\n  }\n\n  handler(): RemoteObject|null {\n    return this.#handlerInternal;\n  }\n\n  location(): Location {\n    return this.#locationInternal;\n  }\n\n  sourceURL(): Platform.DevToolsPath.UrlString {\n    return this.#sourceURLInternal;\n  }\n\n  originalHandler(): RemoteObject|null {\n    return this.#originalHandlerInternal;\n  }\n\n  canRemove(): boolean {\n    return Boolean(this.#customRemoveFunction) || this.#originInternal !== EventListener.Origin.FrameworkUser;\n  }\n\n  remove(): Promise<void> {\n    if (!this.canRemove()) {\n      return Promise.resolve(undefined);\n    }\n\n    if (this.#originInternal !== EventListener.Origin.FrameworkUser) {\n      function removeListener(\n          this: {\n            removeEventListener: (arg0: string, arg1: () => void, arg2: boolean) => void,\n          },\n          type: string, listener: () => void, useCapture: boolean): void {\n        this.removeEventListener(type, listener, useCapture);\n        // @ts-ignore:\n        if (this['on' + type]) {\n          // @ts-ignore:\n          this['on' + type] = undefined;\n        }\n      }\n\n      return this.#eventTarget\n                 .callFunction(\n                     // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n                     // @ts-expect-error\n                     removeListener,\n                     [\n                       RemoteObject.toCallArgument(this.#typeInternal),\n                       RemoteObject.toCallArgument(this.#originalHandlerInternal),\n                       RemoteObject.toCallArgument(this.#useCaptureInternal),\n                     ])\n                 .then(() => undefined) as Promise<undefined>;\n    }\n\n    if (this.#customRemoveFunction) {\n      function callCustomRemove(\n          this: (arg0: string, arg1: () => void, arg2: boolean, arg3: boolean) => void, type: string,\n          listener: () => void, useCapture: boolean, passive: boolean): void {\n        this.call(null, type, listener, useCapture, passive);\n      }\n\n      return this.#customRemoveFunction\n          .callFunction(\n              // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n              // @ts-expect-error\n              callCustomRemove,\n              [\n                RemoteObject.toCallArgument(this.#typeInternal),\n                RemoteObject.toCallArgument(this.#originalHandlerInternal),\n                RemoteObject.toCallArgument(this.#useCaptureInternal),\n                RemoteObject.toCallArgument(this.#passiveInternal),\n              ])\n          .then(() => undefined);\n    }\n    return Promise.resolve(undefined);\n  }\n\n  canTogglePassive(): boolean {\n    return this.#originInternal !== EventListener.Origin.FrameworkUser;\n  }\n\n  togglePassive(): Promise<undefined> {\n    return this.#eventTarget\n        .callFunction(\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // @ts-expect-error\n            callTogglePassive,\n            [\n              RemoteObject.toCallArgument(this.#typeInternal),\n              RemoteObject.toCallArgument(this.#originalHandlerInternal),\n              RemoteObject.toCallArgument(this.#useCaptureInternal),\n              RemoteObject.toCallArgument(this.#passiveInternal),\n            ])\n        .then(() => undefined);\n\n    function callTogglePassive(\n        this: {\n          addEventListener: (arg0: string, arg1: () => void, arg2: {\n            capture: boolean,\n            passive: boolean,\n          }) => void,\n          removeEventListener: (arg0: string, arg1: () => void, arg2: {\n            capture: boolean,\n          }) => void,\n        },\n        type: string, listener: () => void, useCapture: boolean, passive: boolean): void {\n      this.removeEventListener(type, listener, {capture: useCapture});\n      this.addEventListener(type, listener, {capture: useCapture, passive: !passive});\n    }\n  }\n\n  origin(): string {\n    return this.#originInternal;\n  }\n\n  markAsFramework(): void {\n    this.#originInternal = EventListener.Origin.Framework;\n  }\n\n  isScrollBlockingType(): boolean {\n    return this.#typeInternal === 'touchstart' || this.#typeInternal === 'touchmove' ||\n        this.#typeInternal === 'mousewheel' || this.#typeInternal === 'wheel';\n  }\n}\n\nexport namespace EventListener {\n  // TODO(crbug.com/1167717): Make this a const enum again\n  // eslint-disable-next-line rulesdir/const_enum\n  export enum Origin {\n    Raw = 'Raw',\n    Framework = 'Framework',\n    FrameworkUser = 'FrameworkUser',\n  }\n}\n\nexport class CSPViolationBreakpoint extends CategorizedBreakpoint {\n  readonly #typeInternal: Protocol.DOMDebugger.CSPViolationType;\n  constructor(category: string, title: string, type: Protocol.DOMDebugger.CSPViolationType) {\n    super(category, title);\n    this.#typeInternal = type;\n  }\n\n  type(): Protocol.DOMDebugger.CSPViolationType {\n    return this.#typeInternal;\n  }\n}\n\nexport class DOMEventListenerBreakpoint extends CategorizedBreakpoint {\n  readonly instrumentationName: string;\n  readonly eventName: string;\n  readonly eventTargetNames: string[];\n  constructor(\n      instrumentationName: string, eventName: string, eventTargetNames: string[], category: string, title: string) {\n    super(category, title);\n    this.instrumentationName = instrumentationName;\n    this.eventName = eventName;\n    this.eventTargetNames = eventTargetNames;\n  }\n\n  setEnabled(enabled: boolean): void {\n    if (this.enabled() === enabled) {\n      return;\n    }\n    super.setEnabled(enabled);\n    for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n      this.updateOnModel(model);\n    }\n  }\n\n  updateOnModel(model: DOMDebuggerModel): void {\n    if (this.instrumentationName) {\n      if (this.enabled()) {\n        void model.agent.invoke_setInstrumentationBreakpoint({eventName: this.instrumentationName});\n      } else {\n        void model.agent.invoke_removeInstrumentationBreakpoint({eventName: this.instrumentationName});\n      }\n    } else {\n      for (const eventTargetName of this.eventTargetNames) {\n        if (this.enabled()) {\n          void model.agent.invoke_setEventListenerBreakpoint({eventName: this.eventName, targetName: eventTargetName});\n        } else {\n          void model.agent.invoke_removeEventListenerBreakpoint(\n              {eventName: this.eventName, targetName: eventTargetName});\n        }\n      }\n    }\n  }\n\n  static readonly listener = 'listener:';\n  static readonly instrumentation = 'instrumentation:';\n}\n\nlet domDebuggerManagerInstance: DOMDebuggerManager;\n\nexport class DOMDebuggerManager implements SDKModelObserver<DOMDebuggerModel> {\n  readonly #xhrBreakpointsSetting: Common.Settings.Setting<{url: string, enabled: boolean}[]>;\n  readonly #xhrBreakpointsInternal: Map<string, boolean>;\n  readonly #cspViolationsToBreakOn: CSPViolationBreakpoint[];\n  readonly #eventListenerBreakpointsInternal: DOMEventListenerBreakpoint[];\n\n  constructor() {\n    this.#xhrBreakpointsSetting = Common.Settings.Settings.instance().createLocalSetting('xhrBreakpoints', []);\n    this.#xhrBreakpointsInternal = new Map();\n    for (const breakpoint of this.#xhrBreakpointsSetting.get()) {\n      this.#xhrBreakpointsInternal.set(breakpoint.url, breakpoint.enabled);\n    }\n\n    this.#cspViolationsToBreakOn = [];\n    this.#cspViolationsToBreakOn.push(new CSPViolationBreakpoint(\n        i18nString(UIStrings.trustedTypeViolations), i18nString(UIStrings.sinkViolations),\n        Protocol.DOMDebugger.CSPViolationType.TrustedtypeSinkViolation));\n    this.#cspViolationsToBreakOn.push(new CSPViolationBreakpoint(\n        i18nString(UIStrings.trustedTypeViolations), i18nString(UIStrings.policyViolations),\n        Protocol.DOMDebugger.CSPViolationType.TrustedtypePolicyViolation));\n\n    this.#eventListenerBreakpointsInternal = [];\n    this.createInstrumentationBreakpoints(\n        i18nString(UIStrings.animation),\n        ['requestAnimationFrame', 'cancelAnimationFrame', 'requestAnimationFrame.callback']);\n    this.createInstrumentationBreakpoints(\n        i18nString(UIStrings.canvas), ['canvasContextCreated', 'webglErrorFired', 'webglWarningFired']);\n    this.createInstrumentationBreakpoints(\n        i18nString(UIStrings.geolocation), ['Geolocation.getCurrentPosition', 'Geolocation.watchPosition']);\n    this.createInstrumentationBreakpoints(i18nString(UIStrings.notification), ['Notification.requestPermission']);\n    this.createInstrumentationBreakpoints(i18nString(UIStrings.parse), ['Element.setInnerHTML', 'Document.write']);\n    this.createInstrumentationBreakpoints(i18nString(UIStrings.script), ['scriptFirstStatement', 'scriptBlockedByCSP']);\n    this.createInstrumentationBreakpoints(\n        i18nString(UIStrings.timer),\n        ['setTimeout', 'clearTimeout', 'setInterval', 'clearInterval', 'setTimeout.callback', 'setInterval.callback']);\n    this.createInstrumentationBreakpoints(i18nString(UIStrings.window), ['DOMWindow.close']);\n    this.createInstrumentationBreakpoints(\n        i18nString(UIStrings.webaudio),\n        ['audioContextCreated', 'audioContextClosed', 'audioContextResumed', 'audioContextSuspended']);\n\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.media),\n        [\n          'play',      'pause',          'playing',    'canplay',    'canplaythrough', 'seeking',\n          'seeked',    'timeupdate',     'ended',      'ratechange', 'durationchange', 'volumechange',\n          'loadstart', 'progress',       'suspend',    'abort',      'error',          'emptied',\n          'stalled',   'loadedmetadata', 'loadeddata', 'waiting',\n        ],\n        ['audio', 'video']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.pictureinpicture), ['enterpictureinpicture', 'leavepictureinpicture'], ['video']);\n    this.createEventListenerBreakpoints(i18nString(UIStrings.pictureinpicture), ['resize'], ['PictureInPictureWindow']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.clipboard), ['copy', 'cut', 'paste', 'beforecopy', 'beforecut', 'beforepaste'], ['*']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.control),\n        ['resize', 'scroll', 'zoom', 'focus', 'blur', 'select', 'change', 'submit', 'reset'], ['*']);\n    this.createEventListenerBreakpoints(i18nString(UIStrings.device), ['deviceorientation', 'devicemotion'], ['*']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.domMutation),\n        [\n          'DOMActivate',\n          'DOMFocusIn',\n          'DOMFocusOut',\n          'DOMAttrModified',\n          'DOMCharacterDataModified',\n          'DOMNodeInserted',\n          'DOMNodeInsertedIntoDocument',\n          'DOMNodeRemoved',\n          'DOMNodeRemovedFromDocument',\n          'DOMSubtreeModified',\n          'DOMContentLoaded',\n        ],\n        ['*']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.dragDrop), ['drag', 'dragstart', 'dragend', 'dragenter', 'dragover', 'dragleave', 'drop'],\n        ['*']);\n\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.keyboard), ['keydown', 'keyup', 'keypress', 'input'], ['*']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.load),\n        [\n          'load',\n          'beforeunload',\n          'unload',\n          'abort',\n          'error',\n          'hashchange',\n          'popstate',\n          'navigate',\n          'navigatesuccess',\n          'navigateerror',\n          'currentchange',\n          'navigateto',\n          'navigatefrom',\n          'finish',\n          'dispose',\n        ],\n        ['*']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.mouse),\n        [\n          'auxclick',\n          'click',\n          'dblclick',\n          'mousedown',\n          'mouseup',\n          'mouseover',\n          'mousemove',\n          'mouseout',\n          'mouseenter',\n          'mouseleave',\n          'mousewheel',\n          'wheel',\n          'contextmenu',\n        ],\n        ['*']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.pointer),\n        [\n          'pointerover',\n          'pointerout',\n          'pointerenter',\n          'pointerleave',\n          'pointerdown',\n          'pointerup',\n          'pointermove',\n          'pointercancel',\n          'gotpointercapture',\n          'lostpointercapture',\n          'pointerrawupdate',\n        ],\n        ['*']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.touch), ['touchstart', 'touchmove', 'touchend', 'touchcancel'], ['*']);\n    this.createEventListenerBreakpoints(i18nString(UIStrings.worker), ['message', 'messageerror'], ['*']);\n    this.createEventListenerBreakpoints(\n        i18nString(UIStrings.xhr),\n        ['readystatechange', 'load', 'loadstart', 'loadend', 'abort', 'error', 'progress', 'timeout'],\n        ['xmlhttprequest', 'xmlhttprequestupload']);\n\n    for (const [name, newTitle] of getInstrumentationBreakpointTitles()) {\n      const breakpoint = this.resolveEventListenerBreakpointInternal('instrumentation:' + name);\n      if (breakpoint) {\n        breakpoint.setTitle(newTitle);\n      }\n    }\n\n    TargetManager.instance().observeModels(DOMDebuggerModel, this);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): DOMDebuggerManager {\n    const {forceNew} = opts;\n    if (!domDebuggerManagerInstance || forceNew) {\n      domDebuggerManagerInstance = new DOMDebuggerManager();\n    }\n\n    return domDebuggerManagerInstance;\n  }\n\n  cspViolationBreakpoints(): CSPViolationBreakpoint[] {\n    return this.#cspViolationsToBreakOn.slice();\n  }\n\n  private createInstrumentationBreakpoints(category: string, instrumentationNames: string[]): void {\n    for (const instrumentationName of instrumentationNames) {\n      this.#eventListenerBreakpointsInternal.push(\n          new DOMEventListenerBreakpoint(instrumentationName, '', [], category, instrumentationName));\n    }\n  }\n\n  private createEventListenerBreakpoints(category: string, eventNames: string[], eventTargetNames: string[]): void {\n    for (const eventName of eventNames) {\n      this.#eventListenerBreakpointsInternal.push(\n          new DOMEventListenerBreakpoint('', eventName, eventTargetNames, category, eventName));\n    }\n  }\n\n  private resolveEventListenerBreakpointInternal(eventName: string, eventTargetName?: string):\n      DOMEventListenerBreakpoint|null {\n    const instrumentationPrefix = 'instrumentation:';\n    const listenerPrefix = 'listener:';\n    let instrumentationName = '';\n    if (eventName.startsWith(instrumentationPrefix)) {\n      instrumentationName = eventName.substring(instrumentationPrefix.length);\n      eventName = '';\n    } else if (eventName.startsWith(listenerPrefix)) {\n      eventName = eventName.substring(listenerPrefix.length);\n    } else {\n      return null;\n    }\n    eventTargetName = (eventTargetName || '*').toLowerCase();\n    let result: DOMEventListenerBreakpoint|null = null;\n    for (const breakpoint of this.#eventListenerBreakpointsInternal) {\n      if (instrumentationName && breakpoint.instrumentationName === instrumentationName) {\n        result = breakpoint;\n      }\n      if (eventName && breakpoint.eventName === eventName &&\n          breakpoint.eventTargetNames.indexOf(eventTargetName) !== -1) {\n        result = breakpoint;\n      }\n      if (!result && eventName && breakpoint.eventName === eventName &&\n          breakpoint.eventTargetNames.indexOf('*') !== -1) {\n        result = breakpoint;\n      }\n    }\n    return result;\n  }\n\n  eventListenerBreakpoints(): DOMEventListenerBreakpoint[] {\n    return this.#eventListenerBreakpointsInternal.slice();\n  }\n\n  resolveEventListenerBreakpointTitle(auxData: {\n    eventName: string,\n    webglErrorName: string,\n    directiveText: string,\n    targetName: string,\n  }): string {\n    const id = auxData['eventName'];\n    if (id === 'instrumentation:webglErrorFired' && auxData['webglErrorName']) {\n      let errorName: string = auxData['webglErrorName'];\n      // If there is a hex code of the error, display only this.\n      errorName = errorName.replace(/^.*(0x[0-9a-f]+).*$/i, '$1');\n      return i18nString(UIStrings.webglErrorFiredS, {PH1: errorName});\n    }\n    if (id === 'instrumentation:scriptBlockedByCSP' && auxData['directiveText']) {\n      return i18nString(UIStrings.scriptBlockedDueToContent, {PH1: auxData['directiveText']});\n    }\n    const breakpoint = this.resolveEventListenerBreakpointInternal(id, auxData['targetName']);\n    if (!breakpoint) {\n      return '';\n    }\n    if (auxData['targetName']) {\n      return auxData['targetName'] + '.' + breakpoint.title();\n    }\n    return breakpoint.title();\n  }\n\n  resolveEventListenerBreakpoint(auxData: {\n    eventName: string,\n    targetName: string,\n  }): DOMEventListenerBreakpoint|null {\n    return this.resolveEventListenerBreakpointInternal(auxData['eventName'], auxData['targetName']);\n  }\n\n  updateCSPViolationBreakpoints(): void {\n    const violationTypes = this.#cspViolationsToBreakOn.filter(v => v.enabled()).map(v => v.type());\n    for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n      this.updateCSPViolationBreakpointsForModel(model, violationTypes);\n    }\n  }\n\n  private updateCSPViolationBreakpointsForModel(\n      model: DOMDebuggerModel, violationTypes: Protocol.DOMDebugger.CSPViolationType[]): void {\n    void model.agent.invoke_setBreakOnCSPViolation({violationTypes: violationTypes});\n  }\n\n  xhrBreakpoints(): Map<string, boolean> {\n    return this.#xhrBreakpointsInternal;\n  }\n\n  private saveXHRBreakpoints(): void {\n    const breakpoints = [];\n    for (const url of this.#xhrBreakpointsInternal.keys()) {\n      breakpoints.push({url: url, enabled: this.#xhrBreakpointsInternal.get(url) || false});\n    }\n    this.#xhrBreakpointsSetting.set(breakpoints);\n  }\n\n  addXHRBreakpoint(url: string, enabled: boolean): void {\n    this.#xhrBreakpointsInternal.set(url, enabled);\n    if (enabled) {\n      for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n        void model.agent.invoke_setXHRBreakpoint({url});\n      }\n    }\n    this.saveXHRBreakpoints();\n  }\n\n  removeXHRBreakpoint(url: string): void {\n    const enabled = this.#xhrBreakpointsInternal.get(url);\n    this.#xhrBreakpointsInternal.delete(url);\n    if (enabled) {\n      for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n        void model.agent.invoke_removeXHRBreakpoint({url});\n      }\n    }\n    this.saveXHRBreakpoints();\n  }\n\n  toggleXHRBreakpoint(url: string, enabled: boolean): void {\n    this.#xhrBreakpointsInternal.set(url, enabled);\n    for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n      if (enabled) {\n        void model.agent.invoke_setXHRBreakpoint({url});\n      } else {\n        void model.agent.invoke_removeXHRBreakpoint({url});\n      }\n    }\n    this.saveXHRBreakpoints();\n  }\n\n  modelAdded(domDebuggerModel: DOMDebuggerModel): void {\n    for (const url of this.#xhrBreakpointsInternal.keys()) {\n      if (this.#xhrBreakpointsInternal.get(url)) {\n        void domDebuggerModel.agent.invoke_setXHRBreakpoint({url: url});\n      }\n    }\n    for (const breakpoint of this.#eventListenerBreakpointsInternal) {\n      if (breakpoint.enabled()) {\n        breakpoint.updateOnModel(domDebuggerModel);\n      }\n    }\n    const violationTypes = this.#cspViolationsToBreakOn.filter(v => v.enabled()).map(v => v.type());\n    this.updateCSPViolationBreakpointsForModel(domDebuggerModel, violationTypes);\n  }\n\n  modelRemoved(_domDebuggerModel: DOMDebuggerModel): void {\n  }\n}\n\nSDKModel.register(DOMDebuggerModel, {capabilities: Capability.DOM, autostart: false});\n"]}