{"version":3,"file":"FilmStripModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/FilmStripModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\n\nimport type {Event, ObjectSnapshot} from './TracingModel.js';\nimport {TracingModel} from './TracingModel.js';\n\nexport class FilmStripModel {\n  #framesInternal: Frame[];\n  #zeroTimeInternal: number;\n  #spanTimeInternal: number;\n  constructor(tracingModel: TracingModel, zeroTime?: number) {\n    this.#framesInternal = [];\n    this.#zeroTimeInternal = 0;\n    this.#spanTimeInternal = 0;\n\n    this.reset(tracingModel, zeroTime);\n  }\n\n  reset(tracingModel: TracingModel, zeroTime?: number): void {\n    this.#zeroTimeInternal = zeroTime || tracingModel.minimumRecordTime();\n    this.#spanTimeInternal = tracingModel.maximumRecordTime() - this.#zeroTimeInternal;\n\n    this.#framesInternal = [];\n    const browserMain = TracingModel.browserMainThread(tracingModel);\n    if (!browserMain) {\n      return;\n    }\n\n    const events = browserMain.events();\n    for (let i = 0; i < events.length; ++i) {\n      const event = events[i];\n      if (event.startTime < this.#zeroTimeInternal) {\n        continue;\n      }\n      if (!event.hasCategory(category)) {\n        continue;\n      }\n      if (event.name === TraceEvents.CaptureFrame) {\n        const data = event.args['data'];\n        if (data) {\n          this.#framesInternal.push(Frame.fromEvent(this, event, this.#framesInternal.length));\n        }\n      } else if (event.name === TraceEvents.Screenshot) {\n        this.#framesInternal.push(Frame.fromSnapshot(this, (event as ObjectSnapshot), this.#framesInternal.length));\n      }\n    }\n  }\n\n  frames(): Frame[] {\n    return this.#framesInternal;\n  }\n\n  zeroTime(): number {\n    return this.#zeroTimeInternal;\n  }\n\n  spanTime(): number {\n    return this.#spanTimeInternal;\n  }\n\n  frameByTimestamp(timestamp: number): Frame|null {\n    const index = Platform.ArrayUtilities.upperBound(\n                      this.#framesInternal, timestamp, (timestamp, frame) => timestamp - frame.timestamp) -\n        1;\n    return index >= 0 ? this.#framesInternal[index] : null;\n  }\n}\n\nconst category = 'disabled-by-default-devtools.screenshot';\n\nconst TraceEvents = {\n  CaptureFrame: 'CaptureFrame',\n  Screenshot: 'Screenshot',\n};\n\nexport class Frame {\n  readonly #modelInternal: FilmStripModel;\n  timestamp: number;\n  index: number;\n  #imageData: string|null;\n  #snapshot: ObjectSnapshot|null;\n  constructor(model: FilmStripModel, timestamp: number, index: number) {\n    this.#modelInternal = model;\n    this.timestamp = timestamp;\n    this.index = index;\n    this.#imageData = null;\n    this.#snapshot = null;\n  }\n\n  static fromEvent(model: FilmStripModel, event: Event, index: number): Frame {\n    const frame = new Frame(model, event.startTime, index);\n    frame.#imageData = event.args['data'];\n    return frame;\n  }\n\n  static fromSnapshot(model: FilmStripModel, snapshot: ObjectSnapshot, index: number): Frame {\n    const frame = new Frame(model, snapshot.startTime, index);\n    frame.#snapshot = snapshot;\n    return frame;\n  }\n\n  model(): FilmStripModel {\n    return this.#modelInternal;\n  }\n\n  imageDataPromise(): Promise<string|null> {\n    if (this.#imageData || !this.#snapshot) {\n      return Promise.resolve(this.#imageData);\n    }\n\n    return this.#snapshot.objectPromise() as Promise<string|null>;\n  }\n}\n"]}