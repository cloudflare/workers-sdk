{"version":3,"file":"ExpandableList.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/expandable_list/ExpandableList.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,gBAAgB,MAAM,qCAAqC,CAAC;AACxE,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAC;AACtD,OAAO,oBAAoB,MAAM,yBAAyB,CAAC;AAM3D,MAAM,OAAO,cAAe,SAAQ,WAAW;IAC7C,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,0BAA0B,CAAC;IAE9D,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IACrD,SAAS,GAAG,KAAK,CAAC;IAClB,KAAK,GAA6B,EAAE,CAAC;IAErC,IAAI,IAAI,CAAC,IAAwB;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAC3D,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,OAAO;SACR;QAED,qDAAqD;QACrD,mBAAmB;QACnB,OAAO,CAAC,MAAM,CACV,OAAO,CAAC,IAAI,CAAA;;;YAGR,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvB,OAAO,CAAC,IAAI,CAAA;+BACO,GAAS,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;0CACrB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;;aAE7D;YACH,CAAC,CAAC,OAAO,CAAC,OAAO;;;YAGf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAA;cACtF,GAAG;WACN,CAAC;;;KAGP,EACG,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAChC,kBAAkB;IACpB,CAAC;;AAGH,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,0BAA0B,EAAE,cAAc,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport expandableListStyles from './expandableList.css.js';\n\nexport interface ExpandableListData {\n  rows: LitHtml.TemplateResult[];\n}\n\nexport class ExpandableList extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-expandable-list`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #expanded = false;\n  #rows: LitHtml.TemplateResult[] = [];\n\n  set data(data: ExpandableListData) {\n    this.#rows = data.rows;\n    this.#render();\n  }\n\n  #onArrowClick(): void {\n    this.#expanded = !this.#expanded;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [expandableListStyles];\n  }\n\n  #render(): void {\n    if (this.#rows.length < 1) {\n      return;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    LitHtml.render(\n        LitHtml.html`\n      <div class=\"expandable-list-container\">\n        <div>\n          ${this.#rows.length > 1 ?\n            LitHtml.html`\n              <button @click=${(): void => this.#onArrowClick()} class=\"arrow-icon-button\">\n                <span class=\"arrow-icon ${this.#expanded ? 'expanded' : ''}\"></span>\n              </button>\n            `\n          : LitHtml.nothing}\n        </div>\n        <div class=\"expandable-list-items\">\n          ${this.#rows.filter((_, index) => (this.#expanded || index === 0)).map(row => LitHtml.html`\n            ${row}\n          `)}\n        </div>\n      </div>\n    `,\n        this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-expandable-list', ExpandableList);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-expandable-list': ExpandableList;\n  }\n}\n"]}