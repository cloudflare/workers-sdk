{"version":3,"file":"LinearMemoryValueInterpreter.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/linear_memory_inspector/LinearMemoryValueInterpreter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\nimport * as IconButton from '../icon_button/icon_button.js';\nimport linearMemoryValueInterpreterStyles from './linearMemoryValueInterpreter.css.js';\n\nimport {ValueInterpreterDisplay} from './ValueInterpreterDisplay.js';\nimport {ValueInterpreterSettings} from './ValueInterpreterSettings.js';\n\nimport type {ValueDisplayData} from './ValueInterpreterDisplay.js';\nimport type {ValueType, ValueTypeMode} from './ValueInterpreterDisplayUtils.js';\nimport {Endianness} from './ValueInterpreterDisplayUtils.js';\nimport type {TypeToggleEvent, ValueInterpreterSettingsData} from './ValueInterpreterSettings.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\n\nconst UIStrings = {\n  /**\n  *@description Tooltip text that appears when hovering over the gear button to open and close settings in the Linear Memory Inspector. These settings\n  *             allow the user to change the value type to view, such as 32-bit Integer, or 32-bit Float.\n  */\n  toggleValueTypeSettings: 'Toggle value type settings',\n  /**\n  *@description Tooltip text that appears when hovering over the 'Little Endian' or 'Big Endian' setting in the Linear Memory Inspector.\n  */\n  changeEndianness: 'Change `Endianness`',\n};\nconst str_ =\n    i18n.i18n.registerUIStrings('ui/components/linear_memory_inspector/LinearMemoryValueInterpreter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = LitHtml;\n\nexport class EndiannessChangedEvent extends Event {\n  static readonly eventName = 'endiannesschanged';\n  data: Endianness;\n\n  constructor(endianness: Endianness) {\n    super(EndiannessChangedEvent.eventName);\n    this.data = endianness;\n  }\n}\n\nexport class ValueTypeToggledEvent extends Event {\n  static readonly eventName = 'valuetypetoggled';\n  data: {type: ValueType, checked: boolean};\n\n  constructor(type: ValueType, checked: boolean) {\n    super(ValueTypeToggledEvent.eventName);\n    this.data = {type, checked};\n  }\n}\n\nexport interface LinearMemoryValueInterpreterData {\n  value: ArrayBuffer;\n  valueTypes: Set<ValueType>;\n  endianness: Endianness;\n  valueTypeModes?: Map<ValueType, ValueTypeMode>;\n  memoryLength: number;\n}\n\nexport class LinearMemoryValueInterpreter extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-linear-memory-inspector-interpreter`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #endianness = Endianness.Little;\n  #buffer = new ArrayBuffer(0);\n  #valueTypes: Set<ValueType> = new Set();\n  #valueTypeModeConfig: Map<ValueType, ValueTypeMode> = new Map();\n  #memoryLength = 0;\n  #showSettings = false;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [linearMemoryValueInterpreterStyles];\n  }\n\n  set data(data: LinearMemoryValueInterpreterData) {\n    this.#endianness = data.endianness;\n    this.#buffer = data.value;\n    this.#valueTypes = data.valueTypes;\n    this.#valueTypeModeConfig = data.valueTypeModes || new Map();\n    this.#memoryLength = data.memoryLength;\n    this.#render();\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=\"value-interpreter\">\n        <div class=\"settings-toolbar\">\n          ${this.#renderEndiannessSetting()}\n          <button data-settings=\"true\" class=\"settings-toolbar-button ${this.#showSettings ? 'active' : ''}\" title=${i18nString(UIStrings.toggleValueTypeSettings)} @click=${this.#onSettingsToggle}>\n            <${IconButton.Icon.Icon.litTagName}\n              .data=${{ iconName: 'settings_14x14_icon', color: 'var(--color-text-secondary)', width: '14px' } as IconButton.Icon.IconWithName}>\n            </${IconButton.Icon.Icon.litTagName}>\n          </button>\n        </div>\n        <span class=\"divider\"></span>\n        <div>\n          ${this.#showSettings ?\n            html`\n              <${ValueInterpreterSettings.litTagName}\n                .data=${{ valueTypes: this.#valueTypes } as ValueInterpreterSettingsData}\n                @typetoggle=${this.#onTypeToggle}>\n              </${ValueInterpreterSettings.litTagName}>` :\n            html`\n              <${ValueInterpreterDisplay.litTagName}\n                .data=${{\n                  buffer: this.#buffer,\n                  valueTypes: this.#valueTypes,\n                  endianness: this.#endianness,\n                  valueTypeModes: this.#valueTypeModeConfig,\n                  memoryLength: this.#memoryLength,\n                } as ValueDisplayData}>\n              </${ValueInterpreterDisplay.litTagName}>`}\n        </div>\n      </div>\n    `,\n      this.#shadow, { host: this },\n    );\n    // clang-format on\n  }\n\n  #onEndiannessChange(event: Event): void {\n    event.preventDefault();\n    const select = event.target as HTMLInputElement;\n    const endianness = select.value as Endianness;\n    this.dispatchEvent(new EndiannessChangedEvent(endianness));\n  }\n\n  #renderEndiannessSetting(): LitHtml.TemplateResult {\n    const onEnumSettingChange = this.#onEndiannessChange.bind(this);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n    <label data-endianness-setting=\"true\" title=${i18nString(UIStrings.changeEndianness)}>\n      <select class=\"chrome-select\"\n        style=\"border: none; background-color: transparent; cursor: pointer;\"\n        data-endianness=\"true\" @change=${onEnumSettingChange}>\n        ${[Endianness.Little, Endianness.Big].map(endianness => {\n            return html`<option value=${endianness} .selected=${this.#endianness === endianness}>${\n                i18n.i18n.lockedString(endianness)}</option>`;\n        })}\n      </select>\n    </label>\n    `;\n    // clang-format on\n  }\n\n  #onSettingsToggle(): void {\n    this.#showSettings = !this.#showSettings;\n    this.#render();\n  }\n\n  #onTypeToggle(e: TypeToggleEvent): void {\n    this.dispatchEvent(new ValueTypeToggledEvent(e.data.type, e.data.checked));\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent(\n    'devtools-linear-memory-inspector-interpreter', LinearMemoryValueInterpreter);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-linear-memory-inspector-interpreter': LinearMemoryValueInterpreter;\n  }\n}\n"]}