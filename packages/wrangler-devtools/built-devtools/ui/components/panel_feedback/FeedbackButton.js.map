{"version":3,"file":"FeedbackButton.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/panel_feedback/FeedbackButton.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,KAAK,QAAQ,MAAM,oCAAoC,CAAC;AAC/D,OAAO,KAAK,gBAAgB,MAAM,qCAAqC,CAAC;AACxE,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAC;AACtD,OAAO,KAAK,OAAO,MAAM,uBAAuB,CAAC;AAEjD,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,QAAQ,EAAE,UAAU;CACrB,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,gDAAgD,EAAE,SAAS,CAAC,CAAC;AACtG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,eAAe,GAAG,IAAI,GAAG,CAAC,0CAA0C,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AAKxG,MAAM,OAAO,cAAe,SAAQ,WAAW;IAC7C,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,0BAA0B,CAAC;IAC9D,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAC5C,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEhD,MAAM,GAAuB;QAC3B,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,cAAc;KAClD,CAAC;IAEF,IAAI,IAAI,CAAC,IAAwB;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACjG,CAAC;IAED,OAAO;QACL,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;YAC7D,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QAED,mBAAmB;QACnB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;SACtB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU;mBACtB,IAAI,CAAC,gBAAgB;qBACnB,eAAe;qBACf,2BAAgC;SAC5C,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU;OACrE,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QACjC,kBAAkB;IACpB,CAAC;;AAGH,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,0BAA0B,EAAE,cAAc,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as Buttons from '../buttons/buttons.js';\n\nconst UIStrings = {\n  /**\n   * @description The title of the button that leads to the feedback form.\n   */\n  feedback: 'Feedback',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/panel_feedback/FeedbackButton.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst feedbackIconUrl = new URL('../../../Images/feedback_button_icon.svg', import.meta.url).toString();\n\nexport interface FeedbackButtonData {\n  feedbackUrl: Platform.DevToolsPath.UrlString;\n}\nexport class FeedbackButton extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-feedback-button`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n\n  #props: FeedbackButtonData = {\n    feedbackUrl: Platform.DevToolsPath.EmptyUrlString,\n  };\n\n  set data(data: FeedbackButtonData) {\n    this.#props = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #onFeedbackClick(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.#props.feedbackUrl);\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('FeedbackButton render was not scheduled');\n    }\n\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      <${Buttons.Button.Button.litTagName}\n          @click=${this.#onFeedbackClick}\n          .iconUrl=${feedbackIconUrl}\n          .variant=${Buttons.Button.Variant.SECONDARY}\n      >${i18nString(UIStrings.feedback)}</${Buttons.Button.Button.litTagName}>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-feedback-button', FeedbackButton);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-feedback-button': FeedbackButton;\n  }\n}\n"]}