{"version":3,"file":"DiffView.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/diff_view/DiffView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Diff from '../../../third_party/diff/diff.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as CodeHighlighter from '../code_highlighter/code_highlighter.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\n\nimport diffViewStyles from './diffView.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text prepended to a removed line in a diff in the Changes tool, viewable only by screen reader.\n  */\n  deletions: 'Deletion:',\n  /**\n  *@description Text prepended to a new line in a diff in the Changes tool, viewable only by screen reader.\n  */\n  additions: 'Addition:',\n  /**\n  *@description Screen-reader accessible name for the code editor in the Changes tool showing the user's changes.\n  */\n  changesDiffViewer: 'Changes diff viewer',\n  /**\n  *@description Text in Changes View of the Changes tab\n  *@example {2} PH1\n  */\n  SkippingDMatchingLines: '( … Skipping {PH1} matching lines … )',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/diff_view/DiffView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface Token {\n  text: string;\n  className: string;\n}\n\ninterface Row {\n  originalLineNumber: number;\n  currentLineNumber: number;\n  tokens: Token[];\n  type: RowType;\n}\n\nexport const enum RowType {\n  Deletion = 'deletion',\n  Addition = 'addition',\n  Equal = 'equal',\n  Spacer = 'spacer',\n}\n\nexport function buildDiffRows(diff: Diff.Diff.DiffArray): {\n  originalLines: readonly string[],\n  currentLines: readonly string[],\n  rows: readonly Row[],\n} {\n  let currentLineNumber = 0;\n  let originalLineNumber = 0;\n  const paddingLines = 3;\n\n  const originalLines: string[] = [];\n  const currentLines: string[] = [];\n  const rows: Row[] = [];\n\n  for (let i = 0; i < diff.length; ++i) {\n    const token = diff[i];\n    switch (token[0]) {\n      case Diff.Diff.Operation.Equal:\n        rows.push(...createEqualRows(token[1], i === 0, i === diff.length - 1));\n        originalLines.push(...token[1]);\n        currentLines.push(...token[1]);\n        break;\n      case Diff.Diff.Operation.Insert:\n        for (const line of token[1]) {\n          rows.push(createRow(line, RowType.Addition));\n        }\n        currentLines.push(...token[1]);\n        break;\n      case Diff.Diff.Operation.Delete:\n        originalLines.push(...token[1]);\n        if (diff[i + 1] && diff[i + 1][0] === Diff.Diff.Operation.Insert) {\n          i++;\n          rows.push(...createModifyRows(token[1].join('\\n'), diff[i][1].join('\\n')));\n          currentLines.push(...diff[i][1]);\n        } else {\n          for (const line of token[1]) {\n            rows.push(createRow(line, RowType.Deletion));\n          }\n        }\n        break;\n    }\n  }\n\n  return {originalLines, currentLines, rows};\n\n  function createEqualRows(lines: string[], atStart: boolean, atEnd: boolean): Row[] {\n    const equalRows = [];\n    if (!atStart) {\n      for (let i = 0; i < paddingLines && i < lines.length; i++) {\n        equalRows.push(createRow(lines[i], RowType.Equal));\n      }\n      if (lines.length > paddingLines * 2 + 1 && !atEnd) {\n        equalRows.push(createRow(\n            i18nString(UIStrings.SkippingDMatchingLines, {PH1: (lines.length - paddingLines * 2)}), RowType.Spacer));\n      }\n    }\n    if (!atEnd) {\n      const start = Math.max(lines.length - paddingLines - 1, atStart ? 0 : paddingLines);\n      let skip = lines.length - paddingLines - 1;\n      if (!atStart) {\n        skip -= paddingLines;\n      }\n      if (skip > 0) {\n        originalLineNumber += skip;\n        currentLineNumber += skip;\n      }\n\n      for (let i = start; i < lines.length; i++) {\n        equalRows.push(createRow(lines[i], RowType.Equal));\n      }\n    }\n    return equalRows;\n  }\n\n  function createModifyRows(before: string, after: string): Row[] {\n    const internalDiff = Diff.Diff.DiffWrapper.charDiff(before, after, true /* cleanup diff */);\n    const deletionRows = [createRow('', RowType.Deletion)];\n    const insertionRows = [createRow('', RowType.Addition)];\n\n    for (const token of internalDiff) {\n      const text = token[1];\n      const type = token[0];\n      const className = type === Diff.Diff.Operation.Equal ? '' : 'inner-diff';\n      const lines = text.split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        if (i > 0 && type !== Diff.Diff.Operation.Insert) {\n          deletionRows.push(createRow('', RowType.Deletion));\n        }\n        if (i > 0 && type !== Diff.Diff.Operation.Delete) {\n          insertionRows.push(createRow('', RowType.Addition));\n        }\n        if (!lines[i]) {\n          continue;\n        }\n        if (type !== Diff.Diff.Operation.Insert) {\n          deletionRows[deletionRows.length - 1].tokens.push({text: lines[i], className});\n        }\n        if (type !== Diff.Diff.Operation.Delete) {\n          insertionRows[insertionRows.length - 1].tokens.push({text: lines[i], className});\n        }\n      }\n    }\n    return deletionRows.concat(insertionRows);\n  }\n\n  function createRow(text: string, type: RowType): Row {\n    if (type === RowType.Addition) {\n      currentLineNumber++;\n    }\n    if (type === RowType.Deletion) {\n      originalLineNumber++;\n    }\n    if (type === RowType.Equal) {\n      originalLineNumber++;\n      currentLineNumber++;\n    }\n\n    return {originalLineNumber, currentLineNumber, tokens: text ? [{text, className: 'inner-diff'}] : [], type};\n  }\n}\n\nfunction documentMap(lines: readonly string[]): Map<number, number> {\n  const map = new Map<number, number>();\n  for (let pos = 0, lineNo = 0; lineNo < lines.length; lineNo++) {\n    map.set(lineNo + 1, pos);\n    pos += lines[lineNo].length + 1;\n  }\n  return map;\n}\n\nclass DiffRenderer {\n  private constructor(\n      readonly originalHighlighter: CodeHighlighter.CodeHighlighter.CodeHighlighter,\n      readonly originalMap: Map<number, number>,\n      readonly currentHighlighter: CodeHighlighter.CodeHighlighter.CodeHighlighter,\n      readonly currentMap: Map<number, number>,\n  ) {\n  }\n\n  #render(rows: readonly Row[]): LitHtml.TemplateResult {\n    return LitHtml.html`\n      <div class=\"diff-listing\" aria-label=${i18nString(UIStrings.changesDiffViewer)}>\n        ${rows.map(row => this.#renderRow(row))}\n      </div>`;\n  }\n\n  #renderRow(row: Row): LitHtml.TemplateResult {\n    const baseNumber =\n        row.type === RowType.Equal || row.type === RowType.Deletion ? String(row.originalLineNumber) : '';\n    const curNumber = row.type === RowType.Equal || row.type === RowType.Addition ? String(row.currentLineNumber) : '';\n    let marker = '', markerClass = 'diff-line-marker', screenReaderText = null;\n    if (row.type === RowType.Addition) {\n      marker = '+';\n      markerClass += ' diff-line-addition';\n      screenReaderText = LitHtml.html`<span class=\"diff-hidden-text\">${i18nString(UIStrings.additions)}</span>`;\n    } else if (row.type === RowType.Deletion) {\n      marker = '-';\n      markerClass += ' diff-line-deletion';\n      screenReaderText = LitHtml.html`<span class=\"diff-hidden-text\">${i18nString(UIStrings.deletions)}</span>`;\n    }\n    return LitHtml.html`\n      <div class=\"diff-line-number\" aria-hidden=\"true\">${baseNumber}</div>\n      <div class=\"diff-line-number\" aria-hidden=\"true\">${curNumber}</div>\n      <div class=${markerClass} aria-hidden=\"true\">${marker}</div>\n      <div class=\"diff-line-content diff-line-${row.type}\" data-line-number=${curNumber}>${screenReaderText}${\n        this.#renderRowContent(row)}</div>`;\n  }\n\n  #renderRowContent(row: Row): LitHtml.TemplateResult[] {\n    if (row.type === RowType.Spacer) {\n      return row.tokens.map(tok => LitHtml.html`${tok.text}`);\n    }\n    const [doc, startPos] = row.type === RowType.Deletion ?\n        [this.originalHighlighter, this.originalMap.get(row.originalLineNumber) as number] :\n        [this.currentHighlighter, this.currentMap.get(row.currentLineNumber) as number];\n    const content: LitHtml.TemplateResult[] = [];\n    let pos = startPos;\n    for (const token of row.tokens) {\n      const tokenContent: (LitHtml.TemplateResult|string)[] = [];\n      doc.highlightRange(pos, pos + token.text.length, (text, style) => {\n        tokenContent.push(style ? LitHtml.html`<span class=${style}>${text}</span>` : text);\n      });\n      content.push(\n          token.className ? LitHtml.html`<span class=${token.className}>${tokenContent}</span>` :\n                            LitHtml.html`${tokenContent}`);\n      pos += token.text.length;\n    }\n    return content;\n  }\n\n  static async render(diff: Diff.Diff.DiffArray, mimeType: string, parent: HTMLElement|DocumentFragment):\n      Promise<void> {\n    const {originalLines, currentLines, rows} = buildDiffRows(diff);\n    const renderer = new DiffRenderer(\n        await CodeHighlighter.CodeHighlighter.create(originalLines.join('\\n'), mimeType),\n        documentMap(originalLines),\n        await CodeHighlighter.CodeHighlighter.create(currentLines.join('\\n'), mimeType),\n        documentMap(currentLines),\n    );\n    LitHtml.render(renderer.#render(rows), parent, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-diff-view': DiffView;\n  }\n}\n\nexport type DiffViewData = {\n  diff: Diff.Diff.DiffArray,\n  mimeType: string,\n};\n\nexport class DiffView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-diff-view`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  loaded: Promise<void>;\n\n  constructor(data?: DiffViewData) {\n    super();\n    this.#shadow.adoptedStyleSheets = [diffViewStyles, CodeHighlighter.Style.default];\n    if (data) {\n      this.loaded = DiffRenderer.render(data.diff, data.mimeType, this.#shadow);\n    } else {\n      this.loaded = Promise.resolve();\n    }\n  }\n\n  set data(data: DiffViewData) {\n    this.loaded = DiffRenderer.render(data.diff, data.mimeType, this.#shadow);\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-diff-view', DiffView);\n"]}