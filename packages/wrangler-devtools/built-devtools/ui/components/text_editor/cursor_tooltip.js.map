{"version":3,"file":"cursor_tooltip.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/text_editor/cursor_tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\n\nexport type ArgumentHintsTooltip = [CodeMirror.StateField<CodeMirror.Tooltip|null>, CodeMirror.ViewPlugin<{}>];\nexport const closeTooltip = CodeMirror.StateEffect.define<null>();\n\nexport function cursorTooltip(\n    source: (state: CodeMirror.EditorState, pos: number) => Promise<(() => CodeMirror.TooltipView)|null>,\n    ): ArgumentHintsTooltip {\n  const openTooltip = CodeMirror.StateEffect.define<() => CodeMirror.TooltipView>();\n\n  const state = CodeMirror.StateField.define<null|CodeMirror.Tooltip>({\n    create() {\n      return null;\n    },\n    update(val, tr) {\n      if (tr.selection) {\n        val = null;\n      }\n      if (val && !tr.changes.empty) {\n        const newPos = tr.changes.mapPos(val.pos, -1, CodeMirror.MapMode.TrackDel);\n        val = newPos === null ? null : {pos: newPos, create: val.create, above: true};\n      }\n      for (const effect of tr.effects) {\n        if (effect.is(openTooltip)) {\n          val = {pos: tr.state.selection.main.from, create: effect.value, above: true};\n        } else if (effect.is(closeTooltip)) {\n          val = null;\n        }\n      }\n      return val;\n    },\n    provide: field => CodeMirror.showTooltip.from(field),\n  });\n\n  const plugin = CodeMirror.ViewPlugin.fromClass(class {\n    pending = -1;\n    updateID = 0;\n\n    update(update: CodeMirror.ViewUpdate): void {\n      this.updateID++;\n      if (update.transactions.some(tr => tr.selection) && update.state.selection.main.empty) {\n        this.#scheduleUpdate(update.view);\n      }\n    }\n\n    #scheduleUpdate(view: CodeMirror.EditorView): void {\n      if (this.pending > -1) {\n        clearTimeout(this.pending);\n      }\n      this.pending = window.setTimeout(() => this.#startUpdate(view), 50) as unknown as number;\n    }\n\n    #startUpdate(view: CodeMirror.EditorView): void {\n      this.pending = -1;\n      const {main} = view.state.selection;\n      if (main.empty) {\n        const {updateID} = this;\n        void source(view.state, main.from).then(tooltip => {\n          if (this.updateID !== updateID) {\n            if (this.pending < 0) {\n              this.#scheduleUpdate(view);\n            }\n          } else if (tooltip) {\n            view.dispatch({effects: openTooltip.of(tooltip)});\n          } else {\n            view.dispatch({effects: closeTooltip.of(null)});\n          }\n        });\n      }\n    }\n  });\n\n  return [state, plugin];\n}\n"]}