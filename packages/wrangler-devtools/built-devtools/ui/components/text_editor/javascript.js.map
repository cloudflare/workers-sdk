{"version":3,"file":"javascript.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/text_editor/javascript.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Formatter from '../../../models/formatter/formatter.js';\nimport * as JavaScriptMetaData from '../../../models/javascript_metadata/javascript_metadata.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\nimport * as UI from '../../legacy/legacy.js';\n\nimport {type ArgumentHintsTooltip, closeTooltip, cursorTooltip} from './cursor_tooltip.js';\n\nexport function completion(): CodeMirror.Extension {\n  return CodeMirror.javascript.javascriptLanguage.data.of({\n    autocomplete: javascriptCompletionSource,\n  });\n}\n\nexport async function completeInContext(\n    textBefore: string, query: string, force: boolean = false): Promise<UI.SuggestBox.Suggestions> {\n  const state = CodeMirror.EditorState.create({\n    doc: textBefore + query,\n    selection: {anchor: textBefore.length},\n    extensions: CodeMirror.javascript.javascriptLanguage,\n  });\n  const result = await javascriptCompletionSource(new CodeMirror.CompletionContext(state, state.doc.length, force));\n  return result ?\n      result.options.filter((o): boolean => o.label.startsWith(query)).map((o): UI.SuggestBox.Suggestion => ({\n                                                                             text: o.label,\n                                                                             priority: 100 + (o.boost || 0),\n                                                                             isSecondary: o.type === 'secondary',\n                                                                           })) :\n      [];\n}\n\nclass CompletionSet {\n  constructor(\n      readonly completions: CodeMirror.Completion[] = [],\n      readonly seen: Set<string> = new Set(),\n  ) {\n  }\n\n  add(completion: CodeMirror.Completion): void {\n    if (!this.seen.has(completion.label)) {\n      this.seen.add(completion.label);\n      this.completions.push(completion);\n    }\n  }\n\n  copy(): CompletionSet {\n    return new CompletionSet(this.completions.slice(), new Set(this.seen));\n  }\n}\n\nconst javascriptKeywords = [\n  'async',      'await', 'break',  'case',    'catch', 'class',   'const',  'continue', 'debugger', 'default', 'delete',\n  'do',         'else',  'export', 'extends', 'false', 'finally', 'for',    'function', 'if',       'import',  'in',\n  'instanceof', 'let',   'new',    'null',    'of',    'return',  'static', 'super',    'switch',   'this',    'throw',\n  'true',       'try',   'typeof', 'var',     'void',  'while',   'with',   'yield',\n];\nconst consoleBuiltinFunctions = [\n  'clear',\n  'copy',\n  'debug',\n  'dir',\n  'dirxml',\n  'getEventListeners',\n  'inspect',\n  'keys',\n  'monitor',\n  'monitorEvents',\n  'profile',\n  'profileEnd',\n  'queryObjects',\n  'table',\n  'undebug',\n  'unmonitor',\n  'unmonitorEvents',\n  'values',\n];\nconst consoleBuiltinVariables = ['$', '$$', '$x', '$0', '$_'];\n\nconst baseCompletions = new CompletionSet();\nfor (const kw of javascriptKeywords) {\n  baseCompletions.add({label: kw, type: 'keyword'});\n}\nfor (const builtin of consoleBuiltinFunctions) {\n  baseCompletions.add({label: builtin, type: 'function'});\n}\nfor (const varName of consoleBuiltinVariables) {\n  baseCompletions.add({label: varName, type: 'variable'});\n}\n\nconst dontCompleteIn = new Set([\n  'TemplateString',\n  'LineComment',\n  'BlockComment',\n  'TypeDefinition',\n  'VariableDefinition',\n  'PropertyDefinition',\n  'TypeName',\n]);\n\nexport const enum QueryType {\n  Expression = 0,\n  PropertyName = 1,\n  PropertyExpression = 2,\n  PotentiallyRetrievingFromMap = 3,\n}\n\nexport function getQueryType(tree: CodeMirror.Tree, pos: number, doc: CodeMirror.Text): {\n  type: QueryType,\n  from?: number,\n  relatedNode?: CodeMirror.SyntaxNode,\n}|null {\n  let node = tree.resolveInner(pos, -1);\n  const parent = node.parent;\n  if (dontCompleteIn.has(node.name)) {\n    return null;\n  }\n\n  if (node.name === 'PropertyName' || node.name === 'PrivatePropertyName') {\n    return parent?.name !== 'MemberExpression' ? null :\n                                                 {type: QueryType.PropertyName, from: node.from, relatedNode: parent};\n  }\n  if (node.name === 'VariableName' ||\n      // Treat alphabetic keywords as variables\n      !node.firstChild && node.to - node.from < 20 && !/[^a-z]/.test(doc.sliceString(node.from, node.to))) {\n    return {type: QueryType.Expression, from: node.from};\n  }\n  if (node.name === 'String') {\n    const parent = node.parent;\n    return parent?.name === 'MemberExpression' && parent.childBefore(node.from)?.name === '[' ?\n        {type: QueryType.PropertyExpression, from: node.from, relatedNode: parent} :\n        null;\n  }\n  // Enter unfinished nodes before the position.\n  node = node.enterUnfinishedNodesBefore(pos);\n  // Normalize to parent node when pointing after a child of a member expr.\n  if (node.to === pos && node.parent?.name === 'MemberExpression') {\n    node = node.parent;\n  }\n  if (node.name === 'MemberExpression') {\n    const before = node.childBefore(Math.min(pos, node.to));\n    if (before?.name === '[') {\n      return {type: QueryType.PropertyExpression, relatedNode: node};\n    }\n    if (before?.name === '.' || before?.name === '?.') {\n      return {type: QueryType.PropertyName, relatedNode: node};\n    }\n  }\n  if (node.name === '(') {\n    // map.get(<auto-complete>\n    if (parent?.name === 'ArgList' && parent?.parent?.name === 'CallExpression') {\n      // map.get\n      const callReceiver = parent?.parent?.firstChild;\n      if (callReceiver?.name === 'MemberExpression') {\n        // get\n        const propertyExpression = callReceiver?.lastChild;\n        if (propertyExpression && doc.sliceString(propertyExpression.from, propertyExpression.to) === 'get') {\n          // map\n          const potentiallyMapObject = callReceiver?.firstChild;\n          return {type: QueryType.PotentiallyRetrievingFromMap, relatedNode: potentiallyMapObject || undefined};\n        }\n      }\n    }\n  }\n  return {type: QueryType.Expression};\n}\n\nexport async function javascriptCompletionSource(cx: CodeMirror.CompletionContext):\n    Promise<CodeMirror.CompletionResult|null> {\n  const query = getQueryType(CodeMirror.syntaxTree(cx.state), cx.pos, cx.state.doc);\n  if (!query || query.from === undefined && !cx.explicit && query.type === QueryType.Expression) {\n    return null;\n  }\n\n  let result: CompletionSet;\n  let quote: string|undefined = undefined;\n  if (query.type === QueryType.Expression) {\n    const [scope, global] = await Promise.all([\n      completeExpressionInScope(),\n      completeExpressionGlobal(),\n    ]);\n    if (scope.completions.length) {\n      result = scope;\n      for (const r of global.completions) {\n        result.add(r);\n      }\n    } else {\n      result = global;\n    }\n  } else if (query.type === QueryType.PropertyName || query.type === QueryType.PropertyExpression) {\n    const objectExpr = (query.relatedNode as CodeMirror.SyntaxNode).getChild('Expression');\n    if (query.type === QueryType.PropertyExpression) {\n      quote = query.from === undefined ? '\\'' : cx.state.sliceDoc(query.from, query.from + 1);\n    }\n    if (!objectExpr) {\n      return null;\n    }\n    result = await completeProperties(\n        cx.state.sliceDoc(objectExpr.from, objectExpr.to), quote, cx.state.sliceDoc(cx.pos, cx.pos + 1) === ']');\n  } else if (query.type === QueryType.PotentiallyRetrievingFromMap) {\n    const potentialMapObject = query.relatedNode;\n    if (!potentialMapObject) {\n      return null;\n    }\n    result = await maybeCompleteKeysFromMap(cx.state.sliceDoc(potentialMapObject.from, potentialMapObject.to));\n  } else {\n    return null;\n  }\n  return {\n    from: query.from ?? cx.pos,\n    options: result.completions,\n    validFor: !quote ? SPAN_IDENT : quote === '\\'' ? SPAN_SINGLE_QUOTE : SPAN_DOUBLE_QUOTE,\n  };\n}\n\nconst SPAN_IDENT = /^#?(?:[$_\\p{ID_Start}])(?:[$_\\u200C\\u200D\\p{ID_Continue}])*$/u,\n      SPAN_SINGLE_QUOTE = /^\\'(\\\\.|[^\\\\'\\n])*'?$/, SPAN_DOUBLE_QUOTE = /^\"(\\\\.|[^\\\\\"\\n])*\"?$/;\n\nfunction getExecutionContext(): SDK.RuntimeModel.ExecutionContext|null {\n  return UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n}\n\nasync function evaluateExpression(\n    context: SDK.RuntimeModel.ExecutionContext,\n    expression: string,\n    group: string,\n    ): Promise<SDK.RemoteObject.RemoteObject|null> {\n  const result = await context.evaluate(\n      {\n        expression,\n        objectGroup: group,\n        includeCommandLineAPI: true,\n        silent: true,\n        returnByValue: false,\n        generatePreview: false,\n        throwOnSideEffect: true,\n        timeout: 500,\n      },\n      false, false);\n  if ('error' in result || result.exceptionDetails || !result.object) {\n    return null;\n  }\n  return result.object;\n}\n\nconst primitivePrototypes = new Map<string, string>([\n  ['string', 'String'],\n  ['symbol', 'Symbol'],\n  ['number', 'Number'],\n  ['boolean', 'Boolean'],\n  ['bigint', 'BigInt'],\n]);\n\nconst maxCacheAge = 30_000;\n\nlet cacheInstance: PropertyCache|null = null;\n\n// Store recent collections of property completions. The empty string\n// is used to store the set of global bindings.\nclass PropertyCache {\n  readonly #cache: Map<string, Promise<CompletionSet>> = new Map();\n\n  constructor() {\n    const clear = (): void => this.#cache.clear();\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(SDK.ConsoleModel.Events.CommandEvaluated, clear);\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.RuntimeModel.ExecutionContext, clear);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerResumed, clear);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerPaused, clear);\n  }\n\n  get(expression: string): Promise<CompletionSet>|undefined {\n    return this.#cache.get(expression);\n  }\n\n  set(expression: string, value: Promise<CompletionSet>): void {\n    this.#cache.set(expression, value);\n    window.setTimeout(() => {\n      if (this.#cache.get(expression) === value) {\n        this.#cache.delete(expression);\n      }\n    }, maxCacheAge);\n  }\n\n  static instance(): PropertyCache {\n    if (!cacheInstance) {\n      cacheInstance = new PropertyCache();\n    }\n    return cacheInstance;\n  }\n}\n\nasync function maybeCompleteKeysFromMap(objectVariable: string): Promise<CompletionSet> {\n  const result = new CompletionSet();\n  const context = getExecutionContext();\n  if (!context) {\n    return result;\n  }\n  const maybeRetrieveKeys =\n      await evaluateExpression(context, `[...Map.prototype.keys.call(${objectVariable})]`, 'completion');\n  if (!maybeRetrieveKeys) {\n    return result;\n  }\n  const properties = SDK.RemoteObject.RemoteArray.objectAsArray(maybeRetrieveKeys);\n  const numProperties = properties.length();\n  for (let i = 0; i < numProperties; i++) {\n    result.add({\n      label: `\"${(await properties.at(i)).value}\")`,\n      type: 'constant',\n      boost: i * -1,\n    });\n  }\n  return result;\n}\n\nasync function completeProperties(\n    expression: string,\n    quoted?: string,\n    hasBracket: boolean = false,\n    ): Promise<CompletionSet> {\n  const cache = PropertyCache.instance();\n  if (!quoted) {\n    const cached = cache.get(expression);\n    if (cached) {\n      return cached;\n    }\n  }\n  const context = getExecutionContext();\n  if (!context) {\n    return new CompletionSet();\n  }\n  const result = completePropertiesInner(expression, context, quoted, hasBracket);\n  if (!quoted) {\n    cache.set(expression, result);\n  }\n  return result;\n}\n\nasync function completePropertiesInner(\n    expression: string,\n    context: SDK.RuntimeModel.ExecutionContext,\n    quoted?: string,\n    hasBracket: boolean = false,\n    ): Promise<CompletionSet> {\n  const result = new CompletionSet();\n  if (!context) {\n    return result;\n  }\n  let object = await evaluateExpression(context, expression, 'completion');\n  if (!object) {\n    return result;\n  }\n\n  while (object.type === 'object' && object.subtype === 'proxy') {\n    const properties = await object.getOwnProperties(false);\n    const innerObject = properties.internalProperties?.find(p => p.name === '[[Target]]')?.value;\n    if (!innerObject) {\n      break;\n    }\n    object = innerObject as SDK.RemoteObject.RemoteObject;\n  }\n\n  const toPrototype = primitivePrototypes.get(object.type);\n  if (toPrototype) {\n    object = await evaluateExpression(context, toPrototype + '.prototype', 'completion');\n  }\n\n  const functionType = expression === 'globalThis' ? 'function' : 'method';\n  const otherType = expression === 'globalThis' ? 'variable' : 'property';\n  if (object && (object.type === 'object' || object.type === 'function')) {\n    const properties = await object.getAllProperties(\n        /* accessorPropertiesOnly */ false, /* generatePreview */ false, /* nonIndexedPropertiesOnly */ true);\n    const isFunction = object.type === 'function';\n    for (const prop of properties.properties || []) {\n      if (!prop.symbol && !(isFunction && (prop.name === 'arguments' || prop.name === 'caller')) &&\n          (!prop.private || expression === 'this') && (quoted || SPAN_IDENT.test(prop.name))) {\n        const label =\n            quoted ? quoted + prop.name.replaceAll('\\\\', '\\\\\\\\').replaceAll(quoted, '\\\\' + quoted) + quoted : prop.name;\n        const apply = (quoted && !hasBracket) ? `${label}]` : undefined;\n        const boost = 2 * Number(prop.isOwn) + 1 * Number(prop.enumerable);\n        const type = prop.value?.type === 'function' ? functionType : otherType;\n        result.add({apply, label, type, boost});\n      }\n    }\n  }\n  context.runtimeModel.releaseObjectGroup('completion');\n  return result;\n}\n\nasync function completeExpressionInScope(): Promise<CompletionSet> {\n  const result = new CompletionSet();\n  const selectedFrame = getExecutionContext()?.debuggerModel.selectedCallFrame();\n  if (!selectedFrame) {\n    return result;\n  }\n\n  const frames =\n      await Promise.all(selectedFrame.scopeChain().map(scope => scope.object().getAllProperties(false, false)));\n  for (const frame of frames) {\n    for (const property of frame.properties || []) {\n      result.add({\n        label: property.name,\n        type: property.value?.type === 'function' ? 'function' : 'variable',\n      });\n    }\n  }\n  return result;\n}\n\nasync function completeExpressionGlobal(): Promise<CompletionSet> {\n  const cache = PropertyCache.instance();\n  const cached = cache.get('');\n  if (cached) {\n    return cached;\n  }\n\n  const context = getExecutionContext();\n  if (!context) {\n    return baseCompletions;\n  }\n  const result = baseCompletions.copy();\n\n  const fetchNames = completePropertiesInner('globalThis', context).then(fromWindow => {\n    return context.globalLexicalScopeNames().then(globals => {\n      for (const option of fromWindow.completions) {\n        result.add(option);\n      }\n      for (const name of globals || []) {\n        result.add({label: name, type: 'variable'});\n      }\n      return result;\n    });\n  });\n  cache.set('', fetchNames);\n  return fetchNames;\n}\n\nexport async function isExpressionComplete(expression: string): Promise<boolean> {\n  const currentExecutionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n  if (!currentExecutionContext) {\n    return true;\n  }\n  const result =\n      await currentExecutionContext.runtimeModel.compileScript(expression, '', false, currentExecutionContext.id);\n  if (!result || !result.exceptionDetails || !result.exceptionDetails.exception) {\n    return true;\n  }\n  const description = result.exceptionDetails.exception.description;\n  if (description) {\n    return !description.startsWith('SyntaxError: Unexpected end of input') &&\n        !description.startsWith('SyntaxError: Unterminated template literal');\n  }\n  return false;\n}\n\nexport function argumentHints(): ArgumentHintsTooltip {\n  return cursorTooltip(getArgumentHints);\n}\n\nexport function closeArgumentsHintsTooltip(\n    view: CodeMirror.EditorView, tooltip: CodeMirror.StateField<CodeMirror.Tooltip|null>): boolean {\n  // If the tooltip is currently showing, the state will reflect its properties.\n  // If it isn't showing, the state is explicitly set to `null`.\n  if (view.state.field(tooltip) === null) {\n    return false;\n  }\n  view.dispatch({effects: closeTooltip.of(null)});\n  return true;\n}\n\nasync function getArgumentHints(\n    state: CodeMirror.EditorState, pos: number): Promise<(() => CodeMirror.TooltipView)|null> {\n  const node = CodeMirror.syntaxTree(state).resolveInner(pos).enterUnfinishedNodesBefore(pos);\n\n  if (node.name !== 'ArgList') {\n    return null;\n  }\n  const callee = node.parent?.getChild('Expression');\n  if (!callee) {\n    return null;\n  }\n  const argumentList = await getArgumentsForExpression(callee, state.doc);\n  if (!argumentList) {\n    return null;\n  }\n\n  let argumentIndex = 0;\n  for (let scanPos = pos;;) {\n    const before = node.childBefore(scanPos);\n    if (!before) {\n      break;\n    }\n    if (before.type.is('Expression')) {\n      argumentIndex++;\n    }\n    scanPos = before.from;\n  }\n  return (): {dom: HTMLElement} => tooltipBuilder(argumentList, argumentIndex);\n}\n\nasync function getArgumentsForExpression(\n    callee: CodeMirror.SyntaxNode, doc: CodeMirror.Text): Promise<string[][]|null> {\n  const context = getExecutionContext();\n  if (!context) {\n    return null;\n  }\n  const expression = doc.sliceString(callee.from, callee.to);\n  const result = await evaluateExpression(context, expression, 'argumentsHint');\n  if (!result || result.type !== 'function') {\n    return null;\n  }\n  const objGetter = async(): Promise<SDK.RemoteObject.RemoteObject|null> => {\n    const first = callee.firstChild;\n    if (!first || callee.name !== 'MemberExpression') {\n      return null;\n    }\n    return evaluateExpression(context, doc.sliceString(first.from, first.to), 'argumentsHint');\n  };\n  return getArgumentsForFunctionValue(result, objGetter, expression)\n      .finally(() => context.runtimeModel.releaseObjectGroup('argumentsHint'));\n}\n\nasync function getArgumentsForFunctionValue(\n    object: SDK.RemoteObject.RemoteObject,\n    receiverObjGetter: () => Promise<SDK.RemoteObject.RemoteObject|null>,\n    functionName?: string,\n    ): Promise<string[][]|null> {\n  const description = object.description;\n  if (!description) {\n    return null;\n  }\n  if (!description.endsWith('{ [native code] }')) {\n    return [await Formatter.FormatterWorkerPool.formatterWorkerPool().argumentsList(description)];\n  }\n\n  // Check if this is a bound function.\n  if (description === 'function () { [native code] }') {\n    const fromBound = await getArgumentsForBoundFunction(object);\n    if (fromBound) {\n      return fromBound;\n    }\n  }\n\n  const javaScriptMetadata = JavaScriptMetaData.JavaScriptMetadata.JavaScriptMetadataImpl.instance();\n\n  const descriptionRegexResult = /^function ([^(]*)\\(/.exec(description);\n  const name = descriptionRegexResult && descriptionRegexResult[1] || functionName;\n  if (!name) {\n    return null;\n  }\n  const uniqueSignatures = javaScriptMetadata.signaturesForNativeFunction(name);\n  if (uniqueSignatures) {\n    return uniqueSignatures;\n  }\n  const receiverObj = await receiverObjGetter();\n  if (!receiverObj) {\n    return null;\n  }\n  const className = receiverObj.className;\n  if (className) {\n    const instanceMethods = javaScriptMetadata.signaturesForInstanceMethod(name, className);\n    if (instanceMethods) {\n      return instanceMethods;\n    }\n  }\n\n  // Check for static methods on a constructor.\n  if (receiverObj.description && receiverObj.type === 'function' &&\n      receiverObj.description.endsWith('{ [native code] }')) {\n    const receiverDescriptionRegexResult = /^function ([^(]*)\\(/.exec(receiverObj.description);\n    if (receiverDescriptionRegexResult) {\n      const receiverName = receiverDescriptionRegexResult[1];\n      const staticSignatures = javaScriptMetadata.signaturesForStaticMethod(name, receiverName);\n      if (staticSignatures) {\n        return staticSignatures;\n      }\n    }\n  }\n\n  for (const proto of await prototypesFromObject(receiverObj)) {\n    const instanceSignatures = javaScriptMetadata.signaturesForInstanceMethod(name, proto);\n    if (instanceSignatures) {\n      return instanceSignatures;\n    }\n  }\n  return null;\n}\n\nasync function prototypesFromObject(object: SDK.RemoteObject.RemoteObject): Promise<string[]> {\n  if (object.type === 'number') {\n    return ['Number', 'Object'];\n  }\n  if (object.type === 'string') {\n    return ['String', 'Object'];\n  }\n  if (object.type === 'symbol') {\n    return ['Symbol', 'Object'];\n  }\n  if (object.type === 'bigint') {\n    return ['BigInt', 'Object'];\n  }\n  if (object.type === 'boolean') {\n    return ['Boolean', 'Object'];\n  }\n  if (object.type === 'undefined' || object.subtype === 'null') {\n    return [];\n  }\n  return await object.callFunctionJSON(function() {\n    const result = [];\n    for (let object: Object = this; object; object = Object.getPrototypeOf(object)) {\n      if (typeof object === 'object' && object.constructor && object.constructor.name) {\n        result[result.length] = object.constructor.name;\n      }\n    }\n    return result;\n  }, []);\n}\n\n// Given a function object that is probably a bound function, try to\n// retrieve the argument list from its target function.\nasync function getArgumentsForBoundFunction(object: SDK.RemoteObject.RemoteObject): Promise<string[][]|null> {\n  const {internalProperties} = await object.getOwnProperties(false);\n  if (!internalProperties) {\n    return null;\n  }\n  const target = internalProperties.find(p => p.name === '[[TargetFunction]]')?.value;\n  const args = internalProperties.find(p => p.name === '[[BoundArgs]]')?.value;\n  const thisValue = internalProperties.find(p => p.name === '[[BoundThis]]')?.value;\n  if (!thisValue || !target || !args) {\n    return null;\n  }\n  const originalSignatures = await getArgumentsForFunctionValue(target, () => Promise.resolve(thisValue));\n  const boundArgsLength = SDK.RemoteObject.RemoteObject.arrayLength(args);\n  if (!originalSignatures) {\n    return null;\n  }\n  return originalSignatures.map(signature => {\n    const restIndex = signature.findIndex(arg => arg.startsWith('...'));\n    return restIndex > -1 && restIndex < boundArgsLength ? signature.slice(restIndex) :\n                                                           signature.slice(boundArgsLength);\n  });\n}\n\nfunction tooltipBuilder(signatures: string[][], currentIndex: number): {dom: HTMLElement} {\n  const tooltip = document.createElement('div');\n  tooltip.className = 'cm-argumentHints';\n  for (const args of signatures) {\n    const argumentsElement = document.createElement('span');\n    for (let i = 0; i < args.length; i++) {\n      if (i === currentIndex || (i < currentIndex && args[i].startsWith('...'))) {\n        const argElement = argumentsElement.appendChild(document.createElement('b'));\n        argElement.appendChild(document.createTextNode(args[i]));\n      } else {\n        argumentsElement.appendChild(document.createTextNode(args[i]));\n      }\n      if (i < args.length - 1) {\n        argumentsElement.appendChild(document.createTextNode(', '));\n      }\n    }\n    const signatureElement = tooltip.appendChild(document.createElement('div'));\n    signatureElement.className = 'source-code';\n    signatureElement.appendChild(document.createTextNode('\\u0192('));\n    signatureElement.appendChild(argumentsElement);\n    signatureElement.appendChild(document.createTextNode(')'));\n  }\n  return {dom: tooltip};\n}\n"]}