{"version":3,"file":"IssueCounter.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/issue_counter/IssueCounter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as IssuesManager from '../../../models/issues_manager/issues_manager.js';\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport type * as IconButton from '../icon_button/icon_button.js';\nimport issueCounterStyles from './issueCounter.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for link to Issues tab, specifying how many issues there are.\n  */\n  pageErrors: '{issueCount, plural, =1 {# page error} other {# page errors}}',\n  /**\n *@description Label for link to Issues tab, specifying how many issues there are.\n */\n  breakingChanges: '{issueCount, plural, =1 {# breaking change} other {# breaking changes}}',\n  /**\n *@description Label for link to Issues tab, specifying how many issues there are.\n */\n  possibleImprovements: '{issueCount, plural, =1 {# possible improvement} other {# possible improvements}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/issue_counter/IssueCounter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function getIssueKindIconData(issueKind: IssuesManager.Issue.IssueKind): IconButton.Icon.IconWithName {\n  switch (issueKind) {\n    case IssuesManager.Issue.IssueKind.PageError:\n      return {iconName: 'issue-cross-icon', color: 'var(--issue-color-red)', width: '16px', height: '16px'};\n    case IssuesManager.Issue.IssueKind.BreakingChange:\n      return {iconName: 'issue-exclamation-icon', color: 'var(--issue-color-yellow)', width: '16px', height: '16px'};\n    case IssuesManager.Issue.IssueKind.Improvement:\n      return {iconName: 'issue-text-icon', color: 'var(--issue-color-blue)', width: '16px', height: '16px'};\n  }\n}\n\nfunction toIconGroup({iconName, color, width, height}: IconButton.Icon.IconWithName, sizeOverride?: string):\n    IconButton.IconButton.IconWithTextData {\n  if (sizeOverride) {\n    return {iconName, iconColor: color, iconWidth: sizeOverride, iconHeight: sizeOverride};\n  }\n  return {iconName, iconColor: color, iconWidth: width, iconHeight: height};\n}\n\nexport const enum DisplayMode {\n  OmitEmpty = 'OmitEmpty',\n  ShowAlways = 'ShowAlways',\n  OnlyMostImportant = 'OnlyMostImportant',\n}\n\nexport interface IssueCounterData {\n  clickHandler?: () => void;\n  tooltipCallback?: () => void;\n  leadingText?: string;\n  displayMode?: DisplayMode;\n  issuesManager: IssuesManager.IssuesManager.IssuesManager;\n  throttlerTimeout?: number;\n  accessibleName?: string;\n  compact?: boolean;\n}\n\n// @ts-ignore Remove this comment once Intl.ListFormat is in type defs.\nconst listFormat = new Intl.ListFormat(navigator.language, {type: 'unit', style: 'short'});\n\nexport function getIssueCountsEnumeration(\n    issuesManager: IssuesManager.IssuesManager.IssuesManager, omitEmpty: boolean = true): string {\n  const counts: [number, number, number] = [\n    issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.PageError),\n    issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.BreakingChange),\n    issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.Improvement),\n  ];\n  const phrases = [\n    i18nString(UIStrings.pageErrors, {issueCount: counts[0]}),\n    i18nString(UIStrings.breakingChanges, {issueCount: counts[1]}),\n    i18nString(UIStrings.possibleImprovements, {issueCount: counts[2]}),\n  ];\n  return listFormat.format(phrases.filter((_, i) => omitEmpty ? counts[i] > 0 : true));\n}\n\nexport class IssueCounter extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`issue-counter`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #clickHandler: undefined|(() => void) = undefined;\n  #tooltipCallback: undefined|(() => void) = undefined;\n  #leadingText: string = '';\n  #throttler: undefined|Common.Throttler.Throttler;\n  #counts: [number, number, number] = [0, 0, 0];\n  #displayMode: DisplayMode = DisplayMode.OmitEmpty;\n  #issuesManager: IssuesManager.IssuesManager.IssuesManager|undefined = undefined;\n  #accessibleName: string|undefined = undefined;\n  #throttlerTimeout: number|undefined;\n  #compact = false;\n\n  scheduleUpdate(): void {\n    if (this.#throttler) {\n      void this.#throttler.schedule(async () => this.#render());\n    } else {\n      this.#render();\n    }\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [issueCounterStyles];\n  }\n\n  set data(data: IssueCounterData) {\n    this.#clickHandler = data.clickHandler;\n    this.#leadingText = data.leadingText ?? '';\n    this.#tooltipCallback = data.tooltipCallback;\n    this.#displayMode = data.displayMode ?? DisplayMode.OmitEmpty;\n    this.#accessibleName = data.accessibleName;\n    this.#throttlerTimeout = data.throttlerTimeout;\n    this.#compact = Boolean(data.compact);\n    if (this.#issuesManager !== data.issuesManager) {\n      this.#issuesManager?.removeEventListener(\n          IssuesManager.IssuesManager.Events.IssuesCountUpdated, this.scheduleUpdate, this);\n      this.#issuesManager = data.issuesManager;\n      this.#issuesManager.addEventListener(\n          IssuesManager.IssuesManager.Events.IssuesCountUpdated, this.scheduleUpdate, this);\n    }\n    if (data.throttlerTimeout !== 0) {\n      this.#throttler = new Common.Throttler.Throttler(data.throttlerTimeout ?? 100);\n    } else {\n      this.#throttler = undefined;\n    }\n    this.scheduleUpdate();\n  }\n\n  get data(): IssueCounterData {\n    return {\n      clickHandler: this.#clickHandler,\n      leadingText: this.#leadingText,\n      tooltipCallback: this.#tooltipCallback,\n      displayMode: this.#displayMode,\n      accessibleName: this.#accessibleName,\n      throttlerTimeout: this.#throttlerTimeout,\n      compact: this.#compact,\n      issuesManager: this.#issuesManager as IssuesManager.IssuesManager.IssuesManager,\n    };\n  }\n\n  #render(): void {\n    if (!this.#issuesManager) {\n      return;\n    }\n    this.#counts = [\n      this.#issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.PageError),\n      this.#issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.BreakingChange),\n      this.#issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.Improvement),\n    ];\n    const importance = [\n      IssuesManager.Issue.IssueKind.PageError,\n      IssuesManager.Issue.IssueKind.BreakingChange,\n      IssuesManager.Issue.IssueKind.Improvement,\n    ];\n    const mostImportant = importance[this.#counts.findIndex(x => x > 0) ?? 2];\n\n    const countToString = (kind: IssuesManager.Issue.IssueKind, count: number): string|undefined => {\n      switch (this.#displayMode) {\n        case DisplayMode.OmitEmpty:\n          return count > 0 ? `${count}` : undefined;\n        case DisplayMode.ShowAlways:\n          return `${count}`;\n        case DisplayMode.OnlyMostImportant:\n          return kind === mostImportant ? `${count}` : undefined;\n      }\n    };\n    const iconSize = '2ex';\n    const data: IconButton.IconButton.IconButtonData = {\n      groups: [\n        {\n          ...toIconGroup(getIssueKindIconData(IssuesManager.Issue.IssueKind.PageError), iconSize),\n          text: countToString(IssuesManager.Issue.IssueKind.PageError, this.#counts[0]),\n        },\n        {\n          ...toIconGroup(getIssueKindIconData(IssuesManager.Issue.IssueKind.BreakingChange), iconSize),\n          text: countToString(IssuesManager.Issue.IssueKind.BreakingChange, this.#counts[1]),\n        },\n        {\n          ...toIconGroup(getIssueKindIconData(IssuesManager.Issue.IssueKind.Improvement), iconSize),\n          text: countToString(IssuesManager.Issue.IssueKind.Improvement, this.#counts[2]),\n        },\n      ],\n      clickHandler: this.#clickHandler,\n      leadingText: this.#leadingText,\n      accessibleName: this.#accessibleName,\n      compact: this.#compact,\n    };\n    LitHtml.render(\n        LitHtml.html`\n        <icon-button .data=${data as IconButton.IconButton.IconButtonData} .accessibleName=${\n            this.#accessibleName}></icon-button>\n        `,\n        this.#shadow, {host: this});\n    this.#tooltipCallback?.();\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('issue-counter', IssueCounter);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'issue-counter': IssueCounter;\n  }\n}\n"]}