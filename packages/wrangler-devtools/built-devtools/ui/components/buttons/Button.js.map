{"version":3,"file":"Button.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/buttons/Button.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\nimport * as IconButton from '../icon_button/icon_button.js';\n\nimport buttonStyles from './button.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-button': Button;\n  }\n}\n\nexport const enum Variant {\n  PRIMARY = 'primary',\n  SECONDARY = 'secondary',\n  TOOLBAR = 'toolbar',\n  ROUND = 'round',\n}\n\nexport const enum Size {\n  SMALL = 'SMALL',\n  MEDIUM = 'MEDIUM',\n}\n\ntype ButtonType = 'button'|'submit'|'reset';\n\ninterface ButtonState {\n  iconUrl?: string;\n  variant?: Variant;\n  size?: Size;\n  disabled: boolean;\n  active: boolean;\n  spinner?: boolean;\n  type: ButtonType;\n  value?: string;\n  title?: string;\n}\n\nexport type ButtonData = {\n  variant: Variant.TOOLBAR|Variant.ROUND,\n  iconUrl: string,\n  size?: Size,\n  disabled?: boolean,\n  active?: boolean,\n  spinner?: boolean,\n  type?: ButtonType,\n  value?: string,\n  title?: string,\n}|{\n  variant: Variant.PRIMARY | Variant.SECONDARY,\n  iconUrl?: string,\n  size?: Size,\n  disabled?: boolean,\n  active?: boolean,\n  spinner?: boolean,\n  type?: ButtonType,\n  value?: string,\n  title?: string,\n};\n\ninterface ButtonElementInternals extends ElementInternals {\n  readonly form?: HTMLFormElement;\n  readonly validity: ValidityState;\n  readonly willValidate: boolean;\n  readonly validationMessage: string;\n  checkValidity(): void;\n  reportValidity(): void;\n}\n\nexport class Button extends HTMLElement {\n  static formAssociated = true;\n  static readonly litTagName = LitHtml.literal`devtools-button`;\n  readonly #shadow = this.attachShadow({mode: 'open', delegatesFocus: true});\n  readonly #boundRender = this.#render.bind(this);\n  readonly #boundOnClick = this.#onClick.bind(this);\n  readonly #props: ButtonState = {\n    size: Size.MEDIUM,\n    disabled: false,\n    active: false,\n    spinner: false,\n    type: 'button',\n  };\n  #isEmpty = true;\n  #internals = this.attachInternals() as ButtonElementInternals;\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'presentation');\n    this.addEventListener('click', this.#boundOnClick, true);\n  }\n\n  /**\n   * Perfer using the .data= setter instead of setting the individual properties\n   * for increased type-safety.\n   */\n  set data(data: ButtonData) {\n    this.#props.variant = data.variant;\n    this.#props.iconUrl = data.iconUrl;\n    this.#props.size = data.size || Size.MEDIUM;\n    this.#props.active = Boolean(data.active);\n    this.#props.spinner = Boolean(data.spinner);\n    this.#props.type = data.type || 'button';\n    this.#setDisabledProperty(data.disabled || false);\n    this.#props.title = data.title;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set iconUrl(iconUrl: string|undefined) {\n    this.#props.iconUrl = iconUrl;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set variant(variant: Variant) {\n    this.#props.variant = variant;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set size(size: Size) {\n    this.#props.size = size;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set type(type: ButtonType) {\n    this.#props.type = type;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set title(title: string) {\n    this.#props.title = title;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set disabled(disabled: boolean) {\n    this.#setDisabledProperty(disabled);\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set active(active: boolean) {\n    this.#props.active = active;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set spinner(spinner: boolean) {\n    this.#props.spinner = spinner;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #setDisabledProperty(disabled: boolean): void {\n    this.#props.disabled = disabled;\n    this.toggleAttribute('disabled', disabled);\n  }\n\n  focus(): void {\n    this.#shadow.querySelector('button')?.focus();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [buttonStyles];\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #onClick(event: Event): void {\n    if (this.#props.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    if (this.form && this.#props.type === 'submit') {\n      event.preventDefault();\n      this.form.dispatchEvent(new SubmitEvent('submit', {\n        submitter: this,\n      }));\n    }\n    if (this.form && this.#props.type === 'reset') {\n      event.preventDefault();\n      this.form.reset();\n    }\n  }\n\n  #onSlotChange(event: Event): void {\n    const slot = event.target as HTMLSlotElement | undefined;\n    const nodes = slot?.assignedNodes();\n    this.#isEmpty = !nodes || !Boolean(nodes.length);\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #render(): void {\n    if (!this.#props.variant) {\n      throw new Error('Button requires a variant to be defined');\n    }\n    if (this.#props.variant === Variant.TOOLBAR) {\n      if (!this.#props.iconUrl) {\n        throw new Error('Toolbar button requires an icon');\n      }\n      if (!this.#isEmpty) {\n        throw new Error('Tooblar button does not accept children');\n      }\n    }\n    if (this.#props.variant === Variant.ROUND) {\n      if (!this.#props.iconUrl) {\n        throw new Error('Round button requires an icon');\n      }\n      if (!this.#isEmpty) {\n        throw new Error('Round button does not accept children');\n      }\n    }\n    const classes = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      secondary: this.#props.variant === Variant.SECONDARY,\n      toolbar: this.#props.variant === Variant.TOOLBAR,\n      round: this.#props.variant === Variant.ROUND,\n      'text-with-icon': Boolean(this.#props.iconUrl) && !this.#isEmpty,\n      'only-icon': Boolean(this.#props.iconUrl) && this.#isEmpty,\n      small: Boolean(this.#props.size === Size.SMALL),\n      active: this.#props.active,\n    };\n    const spinnerClasses = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      secondary: this.#props.variant === Variant.SECONDARY,\n      disabled: Boolean(this.#props.disabled),\n      'spinner-component': true,\n    };\n    // clang-format off\n    LitHtml.render(\n      LitHtml.html`\n        <button title=${LitHtml.Directives.ifDefined(this.#props.title)} .disabled=${this.#props.disabled} class=${LitHtml.Directives.classMap(classes)}>\n          ${this.#props.iconUrl ? LitHtml.html`<${IconButton.Icon.Icon.litTagName}\n            .data=${{\n              iconPath: this.#props.iconUrl,\n              color: 'var(--color-background)',\n            } as IconButton.Icon.IconData}\n          >\n          </${IconButton.Icon.Icon.litTagName}>` : ''}\n          ${this.#props.spinner ? LitHtml.html`<span class=${LitHtml.Directives.classMap(spinnerClasses)}></span>` : ''}\n          <slot @slotchange=${this.#onSlotChange}></slot>\n        </button>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  // Based on https://web.dev/more-capable-form-controls/ to make custom elements form-friendly.\n  // Form controls usually expose a \"value\" property.\n  get value(): string {\n    return this.#props.value || '';\n  }\n  set value(value: string) {\n    this.#props.value = value;\n  }\n\n  // The following properties and methods aren't strictly required,\n  // but browser-level form controls provide them. Providing them helps\n  // ensure consistency with browser-provided controls.\n  get form(): HTMLFormElement|undefined {\n    return this.#internals.form;\n  }\n  get name(): string|null {\n    return this.getAttribute('name');\n  }\n  get type(): ButtonType {\n    return this.#props.type;\n  }\n  get validity(): ValidityState {\n    return this.#internals.validity;\n  }\n  get validationMessage(): string {\n    return this.#internals.validationMessage;\n  }\n  get willValidate(): boolean {\n    return this.#internals.willValidate;\n  }\n  checkValidity(): void {\n    return this.#internals.checkValidity();\n  }\n  reportValidity(): void {\n    return this.#internals.reportValidity();\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-button', Button);\n"]}