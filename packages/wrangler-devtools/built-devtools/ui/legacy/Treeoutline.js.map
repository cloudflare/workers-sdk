{"version":3,"file":"Treeoutline.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/Treeoutline.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport * as ThemeSupport from './theme_support/theme_support.js';\nimport * as Utils from './utils/utils.js';\n\nimport type * as IconButton from '../components/icon_button/icon_button.js';\nimport type {Icon} from './Icon.js';\nimport type {Config} from './InplaceEditor.js';\nimport {InplaceEditor} from './InplaceEditor.js';\nimport {Keys} from './KeyboardShortcut.js';\nimport {Tooltip} from './Tooltip.js';\nimport {deepElementFromPoint, enclosingNodeOrSelfWithNodeNameInArray, isEditing} from './UIUtils.js';\nimport treeoutlineStyles from './treeoutline.css.legacy.js';\n\ntype AnyIcon = Icon|IconButton.Icon.Icon;\n\nconst nodeToParentTreeElementMap = new WeakMap<Node, TreeElement>();\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  ElementAttached = 'ElementAttached',\n  ElementsDetached = 'ElementsDetached',\n  ElementExpanded = 'ElementExpanded',\n  ElementCollapsed = 'ElementCollapsed',\n  ElementSelected = 'ElementSelected',\n}\n\nexport type EventTypes = {\n  [Events.ElementAttached]: TreeElement,\n  [Events.ElementsDetached]: void,\n  [Events.ElementExpanded]: TreeElement,\n  [Events.ElementCollapsed]: TreeElement,\n  [Events.ElementSelected]: TreeElement,\n};\n\nexport class TreeOutline extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  readonly rootElementInternal: TreeElement;\n  renderSelection: boolean;\n  selectedTreeElement: TreeElement|null;\n  expandTreeElementsWhenArrowing: boolean;\n  comparator: ((arg0: TreeElement, arg1: TreeElement) => number)|null;\n  contentElement: HTMLOListElement;\n  preventTabOrder: boolean;\n  showSelectionOnKeyboardFocus: boolean;\n  private focusable: boolean;\n  element: HTMLElement;\n  private useLightSelectionColor: boolean;\n  private treeElementToScrollIntoView: TreeElement|null;\n  private centerUponScrollIntoView: boolean;\n\n  constructor() {\n    super();\n    this.rootElementInternal = this.createRootElement();\n    this.renderSelection = false;\n\n    this.selectedTreeElement = null;\n    this.expandTreeElementsWhenArrowing = false;\n    this.comparator = null;\n\n    this.contentElement = this.rootElementInternal.childrenListNode;\n    this.contentElement.addEventListener('keydown', this.treeKeyDown.bind(this), false);\n\n    this.preventTabOrder = false;\n    this.showSelectionOnKeyboardFocus = false;\n    this.focusable = true;\n    this.setFocusable(true);\n    this.element = this.contentElement;\n    ARIAUtils.markAsTree(this.element);\n    this.useLightSelectionColor = false;\n    this.treeElementToScrollIntoView = null;\n    this.centerUponScrollIntoView = false;\n  }\n\n  setShowSelectionOnKeyboardFocus(show: boolean, preventTabOrder?: boolean): void {\n    this.contentElement.classList.toggle('hide-selection-when-blurred', show);\n    this.preventTabOrder = Boolean(preventTabOrder);\n    if (this.focusable) {\n      this.contentElement.tabIndex = Boolean(preventTabOrder) ? -1 : 0;\n    }\n    this.showSelectionOnKeyboardFocus = show;\n  }\n\n  private createRootElement(): TreeElement {\n    const rootElement = new TreeElement();\n    rootElement.treeOutline = this;\n    rootElement.root = true;\n    rootElement.selectable = false;\n    rootElement.expanded = true;\n    rootElement.childrenListNode.classList.remove('children');\n    return rootElement;\n  }\n\n  rootElement(): TreeElement {\n    return this.rootElementInternal;\n  }\n\n  firstChild(): TreeElement|null {\n    return this.rootElementInternal.firstChild();\n  }\n\n  private lastDescendent(): TreeElement|null {\n    let last = this.rootElementInternal.lastChild();\n    while (last && last.expanded && last.childCount()) {\n      last = last.lastChild();\n    }\n    return last;\n  }\n\n  appendChild(child: TreeElement, comparator?: ((arg0: TreeElement, arg1: TreeElement) => number)): void {\n    this.rootElementInternal.appendChild(child, comparator);\n  }\n\n  insertChild(child: TreeElement, index: number): void {\n    this.rootElementInternal.insertChild(child, index);\n  }\n\n  removeChild(child: TreeElement): void {\n    this.rootElementInternal.removeChild(child);\n  }\n\n  removeChildren(): void {\n    this.rootElementInternal.removeChildren();\n  }\n\n  treeElementFromPoint(x: number, y: number): TreeElement|null {\n    const node = deepElementFromPoint(this.contentElement.ownerDocument, x, y);\n    if (!node) {\n      return null;\n    }\n\n    const listNode = enclosingNodeOrSelfWithNodeNameInArray(node, ['ol', 'li']);\n    if (listNode) {\n      return nodeToParentTreeElementMap.get(listNode) || treeElementBylistItemNode.get(listNode) || null;\n    }\n    return null;\n  }\n\n  treeElementFromEvent(event: MouseEvent|null): TreeElement|null {\n    return event ? this.treeElementFromPoint(event.pageX, event.pageY) : null;\n  }\n\n  setComparator(comparator: ((arg0: TreeElement, arg1: TreeElement) => number)|null): void {\n    this.comparator = comparator;\n  }\n\n  setFocusable(focusable: boolean): void {\n    this.focusable = focusable;\n    this.updateFocusable();\n  }\n\n  updateFocusable(): void {\n    if (this.focusable) {\n      this.contentElement.tabIndex = (this.preventTabOrder || Boolean(this.selectedTreeElement)) ? -1 : 0;\n      if (this.selectedTreeElement) {\n        this.selectedTreeElement.setFocusable(true);\n      }\n    } else {\n      this.contentElement.removeAttribute('tabIndex');\n      if (this.selectedTreeElement) {\n        this.selectedTreeElement.setFocusable(false);\n      }\n    }\n  }\n\n  focus(): void {\n    if (this.selectedTreeElement) {\n      this.selectedTreeElement.listItemElement.focus();\n    } else {\n      this.contentElement.focus();\n    }\n  }\n\n  setUseLightSelectionColor(flag: boolean): void {\n    this.useLightSelectionColor = flag;\n  }\n\n  getUseLightSelectionColor(): boolean {\n    return this.useLightSelectionColor;\n  }\n\n  bindTreeElement(element: TreeElement): void {\n    if (element.treeOutline) {\n      console.error('Binding element for the second time: ' + new Error().stack);\n    }\n    element.treeOutline = this;\n    element.onbind();\n  }\n\n  unbindTreeElement(element: TreeElement): void {\n    if (!element.treeOutline) {\n      console.error('Unbinding element that was not bound: ' + new Error().stack);\n    }\n\n    element.deselect();\n    element.onunbind();\n    element.treeOutline = null;\n  }\n\n  selectPrevious(): boolean {\n    let nextSelectedElement: (TreeElement|null) =\n        this.selectedTreeElement && this.selectedTreeElement.traversePreviousTreeElement(true);\n    while (nextSelectedElement && !nextSelectedElement.selectable) {\n      nextSelectedElement = nextSelectedElement.traversePreviousTreeElement(!this.expandTreeElementsWhenArrowing);\n    }\n    if (!nextSelectedElement) {\n      return false;\n    }\n    nextSelectedElement.select(false, true);\n    return true;\n  }\n\n  selectNext(): boolean {\n    let nextSelectedElement: (TreeElement|null) =\n        this.selectedTreeElement && this.selectedTreeElement.traverseNextTreeElement(true);\n    while (nextSelectedElement && !nextSelectedElement.selectable) {\n      nextSelectedElement = nextSelectedElement.traverseNextTreeElement(!this.expandTreeElementsWhenArrowing);\n    }\n    if (!nextSelectedElement) {\n      return false;\n    }\n    nextSelectedElement.select(false, true);\n    return true;\n  }\n\n  forceSelect(omitFocus: boolean|undefined = false, selectedByUser: boolean|undefined = true): void {\n    if (this.selectedTreeElement) {\n      this.selectedTreeElement.deselect();\n    }\n    this.selectFirst(omitFocus, selectedByUser);\n  }\n\n  private selectFirst(omitFocus: boolean|undefined = false, selectedByUser: boolean|undefined = true): boolean {\n    let first = this.firstChild();\n    while (first && !first.selectable) {\n      first = first.traverseNextTreeElement(true);\n    }\n    if (!first) {\n      return false;\n    }\n    first.select(omitFocus, selectedByUser);\n    return true;\n  }\n\n  private selectLast(): boolean {\n    let last = this.lastDescendent();\n    while (last && !last.selectable) {\n      last = last.traversePreviousTreeElement(true);\n    }\n    if (!last) {\n      return false;\n    }\n    last.select(false, true);\n    return true;\n  }\n\n  private treeKeyDown(event: KeyboardEvent): void {\n    if (event.shiftKey || event.metaKey || event.ctrlKey || isEditing()) {\n      return;\n    }\n\n    let handled = false;\n    if (!this.selectedTreeElement) {\n      if (event.key === 'ArrowUp' && !event.altKey) {\n        handled = this.selectLast();\n      } else if (event.key === 'ArrowDown' && !event.altKey) {\n        handled = this.selectFirst();\n      }\n    } else if (event.key === 'ArrowUp' && !event.altKey) {\n      handled = this.selectPrevious();\n    } else if (event.key === 'ArrowDown' && !event.altKey) {\n      handled = this.selectNext();\n    } else if (event.key === 'ArrowLeft') {\n      handled = this.selectedTreeElement.collapseOrAscend(event.altKey);\n    } else if (event.key === 'ArrowRight') {\n      if (!this.selectedTreeElement.revealed()) {\n        this.selectedTreeElement.reveal();\n        handled = true;\n      } else {\n        handled = this.selectedTreeElement.descendOrExpand(event.altKey);\n      }\n    } else if (event.keyCode === 8 /* Backspace */ || event.keyCode === 46 /* Delete */) {\n      handled = this.selectedTreeElement.ondelete();\n    } else if (event.key === 'Enter') {\n      handled = this.selectedTreeElement.onenter();\n    } else if (event.keyCode === Keys.Space.code) {\n      handled = this.selectedTreeElement.onspace();\n    } else if (event.key === 'Home') {\n      handled = this.selectFirst();\n    } else if (event.key === 'End') {\n      handled = this.selectLast();\n    }\n\n    if (handled) {\n      event.consume(true);\n    }\n  }\n\n  deferredScrollIntoView(treeElement: TreeElement, center: boolean): void {\n    const deferredScrollIntoView = (): void => {\n      if (!this.treeElementToScrollIntoView) {\n        return;\n      }\n\n      // This function doesn't use scrollIntoViewIfNeeded because it always\n      // scrolls in both directions even if only one is necessary to bring the\n      // item into view.\n      const itemRect = this.treeElementToScrollIntoView.listItemElement.getBoundingClientRect();\n      const treeRect = this.contentElement.getBoundingClientRect();\n\n      // Usually, this.element is the tree container that scrolls. But sometimes\n      // (i.e. in the Elements panel), its parent is.\n      let scrollParentElement: HTMLElement = this.element;\n      while (getComputedStyle(scrollParentElement).overflow === 'visible' && scrollParentElement.parentElement) {\n        scrollParentElement = scrollParentElement.parentElement;\n      }\n\n      const viewRect = scrollParentElement.getBoundingClientRect();\n\n      const currentScrollX = viewRect.left - treeRect.left;\n      const currentScrollY = viewRect.top - treeRect.top + this.contentElement.offsetTop;\n\n      // Only scroll into view on each axis if the item is not visible at all\n      // but if we do scroll and centerUponScrollIntoView is true\n      // then we center the top left corner of the item in view.\n      let deltaLeft: number = itemRect.left - treeRect.left;\n      if (deltaLeft > currentScrollX && deltaLeft < currentScrollX + viewRect.width) {\n        deltaLeft = currentScrollX;\n      } else if (this.centerUponScrollIntoView) {\n        deltaLeft = deltaLeft - viewRect.width / 2;\n      }\n      let deltaTop: number = itemRect.top - treeRect.top;\n      if (deltaTop > currentScrollY && deltaTop < currentScrollY + viewRect.height) {\n        deltaTop = currentScrollY;\n      } else if (this.centerUponScrollIntoView) {\n        deltaTop = deltaTop - viewRect.height / 2;\n      }\n      scrollParentElement.scrollTo(deltaLeft, deltaTop);\n      this.treeElementToScrollIntoView = null;\n    };\n\n    if (!this.treeElementToScrollIntoView) {\n      this.element.window().requestAnimationFrame(deferredScrollIntoView);\n    }\n    this.treeElementToScrollIntoView = treeElement;\n    this.centerUponScrollIntoView = center;\n  }\n\n  onStartedEditingTitle(_treeElement: TreeElement): void {\n  }\n}\n\nexport class TreeOutlineInShadow extends TreeOutline {\n  element: HTMLElement;\n  shadowRoot: ShadowRoot;\n  private readonly disclosureElement: Element;\n  renderSelection: boolean;\n  constructor() {\n    super();\n    this.contentElement.classList.add('tree-outline');\n    this.element = document.createElement('div');\n    this.shadowRoot =\n        Utils.createShadowRootWithCoreStyles(this.element, {cssFile: treeoutlineStyles, delegatesFocus: undefined});\n    this.disclosureElement = this.shadowRoot.createChild('div', 'tree-outline-disclosure');\n    this.disclosureElement.appendChild(this.contentElement);\n    this.renderSelection = true;\n  }\n\n  registerRequiredCSS(cssFile: {cssContent: string}): void {\n    ThemeSupport.ThemeSupport.instance().appendStyle(this.shadowRoot, cssFile);\n  }\n\n  registerCSSFiles(cssFiles: CSSStyleSheet[]): void {\n    this.shadowRoot.adoptedStyleSheets = this.shadowRoot.adoptedStyleSheets.concat(cssFiles);\n  }\n\n  hideOverflow(): void {\n    this.disclosureElement.classList.add('tree-outline-disclosure-hide-overflow');\n  }\n\n  makeDense(): void {\n    this.contentElement.classList.add('tree-outline-dense');\n  }\n\n  onStartedEditingTitle(treeElement: TreeElement): void {\n    const selection = this.shadowRoot.getSelection();\n    if (selection) {\n      selection.selectAllChildren(treeElement.titleElement);\n    }\n  }\n}\n\nexport const treeElementBylistItemNode = new WeakMap<Node, TreeElement>();\nexport class TreeElement {\n  treeOutline: TreeOutline|null;\n  parent: TreeElement|null;\n  previousSibling: TreeElement|null;\n  nextSibling: TreeElement|null;\n  private readonly boundOnFocus: () => void;\n  private readonly boundOnBlur: () => void;\n  readonly listItemNode: HTMLLIElement;\n  titleElement: Node;\n  titleInternal: string|Node;\n  private childrenInternal: TreeElement[]|null;\n  childrenListNode: HTMLOListElement;\n  private hiddenInternal: boolean;\n  private selectableInternal: boolean;\n  expanded: boolean;\n  selected: boolean;\n  private expandable!: boolean;\n  #expandRecursively: boolean = true;\n  private collapsible: boolean;\n  toggleOnClick: boolean;\n  button: HTMLButtonElement|null;\n  root: boolean;\n  private tooltipInternal: string;\n  private leadingIconsElement: HTMLElement|null;\n  private trailingIconsElement: HTMLElement|null;\n  protected selectionElementInternal: HTMLElement|null;\n  private disableSelectFocus: boolean;\n  constructor(title?: string|Node, expandable?: boolean) {\n    this.treeOutline = null;\n    this.parent = null;\n    this.previousSibling = null;\n    this.nextSibling = null;\n    this.boundOnFocus = this.onFocus.bind(this);\n    this.boundOnBlur = this.onBlur.bind(this);\n    this.listItemNode = document.createElement('li');\n\n    this.titleElement = this.listItemNode.createChild('span', 'tree-element-title');\n    treeElementBylistItemNode.set(this.listItemNode, this);\n    this.titleInternal = '';\n    if (title) {\n      this.title = title;\n    }\n    this.listItemNode.addEventListener('mousedown', (this.handleMouseDown.bind(this) as EventListener), false);\n    this.listItemNode.addEventListener('click', (this.treeElementToggled.bind(this) as EventListener), false);\n    this.listItemNode.addEventListener('dblclick', this.handleDoubleClick.bind(this), false);\n    ARIAUtils.markAsTreeitem(this.listItemNode);\n\n    this.childrenInternal = null;\n    this.childrenListNode = document.createElement('ol');\n    nodeToParentTreeElementMap.set(this.childrenListNode, this);\n    this.childrenListNode.classList.add('children');\n    ARIAUtils.markAsGroup(this.childrenListNode);\n\n    this.hiddenInternal = false;\n    this.selectableInternal = true;\n    this.expanded = false;\n    this.selected = false;\n    this.setExpandable(expandable || false);\n    this.collapsible = true;\n    this.toggleOnClick = false;\n    this.button = null;\n    this.root = false;\n    this.tooltipInternal = '';\n    this.leadingIconsElement = null;\n    this.trailingIconsElement = null;\n    this.selectionElementInternal = null;\n    this.disableSelectFocus = false;\n  }\n\n  static getTreeElementBylistItemNode(node: Node): TreeElement|undefined {\n    return treeElementBylistItemNode.get(node);\n  }\n\n  hasAncestor(ancestor: TreeElement|null): boolean {\n    if (!ancestor) {\n      return false;\n    }\n\n    let currentNode: (TreeElement|null) = this.parent;\n    while (currentNode) {\n      if (ancestor === currentNode) {\n        return true;\n      }\n      currentNode = currentNode.parent;\n    }\n\n    return false;\n  }\n\n  hasAncestorOrSelf(ancestor: TreeElement|null): boolean {\n    return this === ancestor || this.hasAncestor(ancestor);\n  }\n\n  isHidden(): boolean {\n    if (this.hidden) {\n      return true;\n    }\n\n    let currentNode: (TreeElement|null) = this.parent;\n    while (currentNode) {\n      if (currentNode.hidden) {\n        return true;\n      }\n      currentNode = currentNode.parent;\n    }\n\n    return false;\n  }\n\n  children(): TreeElement[] {\n    return this.childrenInternal || [];\n  }\n\n  childCount(): number {\n    return this.childrenInternal ? this.childrenInternal.length : 0;\n  }\n\n  firstChild(): TreeElement|null {\n    return this.childrenInternal ? this.childrenInternal[0] : null;\n  }\n\n  lastChild(): TreeElement|null {\n    return this.childrenInternal ? this.childrenInternal[this.childrenInternal.length - 1] : null;\n  }\n\n  childAt(index: number): TreeElement|null {\n    return this.childrenInternal ? this.childrenInternal[index] : null;\n  }\n\n  indexOfChild(child: TreeElement): number {\n    return this.childrenInternal ? this.childrenInternal.indexOf(child) : -1;\n  }\n\n  appendChild(child: TreeElement, comparator?: ((arg0: TreeElement, arg1: TreeElement) => number)): void {\n    if (!this.childrenInternal) {\n      this.childrenInternal = [];\n    }\n\n    let insertionIndex;\n    if (comparator) {\n      insertionIndex = Platform.ArrayUtilities.lowerBound(this.childrenInternal, child, comparator);\n    } else if (this.treeOutline && this.treeOutline.comparator) {\n      insertionIndex = Platform.ArrayUtilities.lowerBound(this.childrenInternal, child, this.treeOutline.comparator);\n    } else {\n      insertionIndex = this.childrenInternal.length;\n    }\n    this.insertChild(child, insertionIndex);\n  }\n\n  insertChild(child: TreeElement, index: number): void {\n    if (!this.childrenInternal) {\n      this.childrenInternal = [];\n    }\n\n    if (!child) {\n      throw 'child can\\'t be undefined or null';\n    }\n\n    console.assert(\n        !child.parent, 'Attempting to insert a child that is already in the tree, reparenting is not supported.');\n\n    const previousChild = (index > 0 ? this.childrenInternal[index - 1] : null);\n    if (previousChild) {\n      previousChild.nextSibling = child;\n      child.previousSibling = previousChild;\n    } else {\n      child.previousSibling = null;\n    }\n\n    const nextChild = this.childrenInternal[index];\n    if (nextChild) {\n      nextChild.previousSibling = child;\n      child.nextSibling = nextChild;\n    } else {\n      child.nextSibling = null;\n    }\n\n    this.childrenInternal.splice(index, 0, child);\n\n    this.setExpandable(true);\n    child.parent = this;\n\n    if (this.treeOutline) {\n      this.treeOutline.bindTreeElement(child);\n    }\n    for (let current = child.firstChild(); this.treeOutline && current;\n         current = current.traverseNextTreeElement(false, child, true)) {\n      this.treeOutline.bindTreeElement(current);\n    }\n    child.onattach();\n    child.ensureSelection();\n    if (this.treeOutline) {\n      this.treeOutline.dispatchEventToListeners(Events.ElementAttached, child);\n    }\n    const nextSibling = child.nextSibling ? child.nextSibling.listItemNode : null;\n    this.childrenListNode.insertBefore(child.listItemNode, nextSibling);\n    this.childrenListNode.insertBefore(child.childrenListNode, nextSibling);\n    if (child.selected) {\n      child.select();\n    }\n    if (child.expanded) {\n      child.expand();\n    }\n  }\n\n  removeChildAtIndex(childIndex: number): void {\n    if (!this.childrenInternal || childIndex < 0 || childIndex >= this.childrenInternal.length) {\n      throw 'childIndex out of range';\n    }\n\n    const child = this.childrenInternal[childIndex];\n    this.childrenInternal.splice(childIndex, 1);\n\n    const parent = child.parent;\n    if (this.treeOutline && this.treeOutline.selectedTreeElement &&\n        this.treeOutline.selectedTreeElement.hasAncestorOrSelf(child)) {\n      if (child.nextSibling) {\n        child.nextSibling.select(true);\n      } else if (child.previousSibling) {\n        child.previousSibling.select(true);\n      } else if (parent) {\n        parent.select(true);\n      }\n    }\n\n    if (child.previousSibling) {\n      child.previousSibling.nextSibling = child.nextSibling;\n    }\n    if (child.nextSibling) {\n      child.nextSibling.previousSibling = child.previousSibling;\n    }\n    child.parent = null;\n\n    if (this.treeOutline) {\n      this.treeOutline.unbindTreeElement(child);\n    }\n    for (let current = child.firstChild(); this.treeOutline && current;\n         current = current.traverseNextTreeElement(false, child, true)) {\n      this.treeOutline.unbindTreeElement(current);\n    }\n\n    child.detach();\n    if (this.treeOutline) {\n      this.treeOutline.dispatchEventToListeners(Events.ElementsDetached);\n    }\n  }\n\n  removeChild(child: TreeElement): void {\n    if (!child) {\n      throw 'child can\\'t be undefined or null';\n    }\n    if (child.parent !== this) {\n      return;\n    }\n\n    const childIndex = this.childrenInternal ? this.childrenInternal.indexOf(child) : -1;\n    if (childIndex === -1) {\n      throw 'child not found in this node\\'s children';\n    }\n\n    this.removeChildAtIndex(childIndex);\n  }\n\n  removeChildren(): void {\n    if (!this.root && this.treeOutline && this.treeOutline.selectedTreeElement &&\n        this.treeOutline.selectedTreeElement.hasAncestorOrSelf(this)) {\n      this.select(true);\n    }\n\n    if (this.childrenInternal) {\n      for (const child of this.childrenInternal) {\n        child.previousSibling = null;\n        child.nextSibling = null;\n        child.parent = null;\n\n        if (this.treeOutline) {\n          this.treeOutline.unbindTreeElement(child);\n        }\n        for (let current = child.firstChild(); this.treeOutline && current;\n             current = current.traverseNextTreeElement(false, child, true)) {\n          this.treeOutline.unbindTreeElement(current);\n        }\n        child.detach();\n      }\n    }\n    this.childrenInternal = [];\n    if (this.treeOutline) {\n      this.treeOutline.dispatchEventToListeners(Events.ElementsDetached);\n    }\n  }\n\n  get selectable(): boolean {\n    if (this.isHidden()) {\n      return false;\n    }\n    return this.selectableInternal;\n  }\n\n  set selectable(x: boolean) {\n    this.selectableInternal = x;\n  }\n\n  get listItemElement(): HTMLLIElement {\n    return this.listItemNode;\n  }\n\n  get childrenListElement(): HTMLOListElement {\n    return this.childrenListNode;\n  }\n\n  get title(): string|Node {\n    return this.titleInternal;\n  }\n\n  set title(x: string|Node) {\n    if (this.titleInternal === x) {\n      return;\n    }\n    this.titleInternal = x;\n\n    if (typeof x === 'string') {\n      this.titleElement.textContent = x;\n      this.tooltip = x;\n    } else {\n      this.titleElement = x;\n      this.tooltip = '';\n    }\n\n    this.listItemNode.removeChildren();\n    if (this.leadingIconsElement) {\n      this.listItemNode.appendChild(this.leadingIconsElement);\n    }\n    this.listItemNode.appendChild(this.titleElement);\n    if (this.trailingIconsElement) {\n      this.listItemNode.appendChild(this.trailingIconsElement);\n    }\n    this.ensureSelection();\n  }\n\n  titleAsText(): string {\n    if (!this.titleInternal) {\n      return '';\n    }\n    if (typeof this.titleInternal === 'string') {\n      return this.titleInternal;\n    }\n    return this.titleInternal.textContent || '';\n  }\n\n  startEditingTitle<T>(editingConfig: Config<T>): void {\n    InplaceEditor.startEditing((this.titleElement as Element), editingConfig);\n    if (this.treeOutline) {\n      this.treeOutline.onStartedEditingTitle(this);\n    }\n  }\n\n  setLeadingIcons(icons: AnyIcon[]): void {\n    if (!this.leadingIconsElement && !icons.length) {\n      return;\n    }\n    if (!this.leadingIconsElement) {\n      this.leadingIconsElement = document.createElement('div');\n      this.leadingIconsElement.classList.add('leading-icons');\n      this.leadingIconsElement.classList.add('icons-container');\n      this.listItemNode.insertBefore(this.leadingIconsElement, this.titleElement);\n      this.ensureSelection();\n    }\n    this.leadingIconsElement.removeChildren();\n    for (const icon of icons) {\n      this.leadingIconsElement.appendChild(icon);\n    }\n  }\n\n  setTrailingIcons(icons: AnyIcon[]): void {\n    if (!this.trailingIconsElement && !icons.length) {\n      return;\n    }\n    if (!this.trailingIconsElement) {\n      this.trailingIconsElement = document.createElement('div');\n      this.trailingIconsElement.classList.add('trailing-icons');\n      this.trailingIconsElement.classList.add('icons-container');\n      this.listItemNode.appendChild(this.trailingIconsElement);\n      this.ensureSelection();\n    }\n    this.trailingIconsElement.removeChildren();\n    for (const icon of icons) {\n      this.trailingIconsElement.appendChild(icon);\n    }\n  }\n\n  get tooltip(): string {\n    return this.tooltipInternal;\n  }\n\n  set tooltip(x: string) {\n    if (this.tooltipInternal === x) {\n      return;\n    }\n    this.tooltipInternal = x;\n    Tooltip.install(this.listItemNode, x);\n  }\n\n  isExpandable(): boolean {\n    return this.expandable;\n  }\n\n  setExpandable(expandable: boolean): void {\n    if (this.expandable === expandable) {\n      return;\n    }\n\n    this.expandable = expandable;\n\n    this.listItemNode.classList.toggle('parent', expandable);\n    if (!expandable) {\n      this.collapse();\n      ARIAUtils.unsetExpandable(this.listItemNode);\n    } else {\n      ARIAUtils.setExpanded(this.listItemNode, false);\n    }\n  }\n\n  isExpandRecursively(): boolean {\n    return this.#expandRecursively;\n  }\n\n  setExpandRecursively(expandRecursively: boolean): void {\n    this.#expandRecursively = expandRecursively;\n  }\n\n  isCollapsible(): boolean {\n    return this.collapsible;\n  }\n\n  setCollapsible(collapsible: boolean): void {\n    if (this.collapsible === collapsible) {\n      return;\n    }\n\n    this.collapsible = collapsible;\n\n    this.listItemNode.classList.toggle('always-parent', !collapsible);\n    if (!collapsible) {\n      this.expand();\n    }\n  }\n\n  get hidden(): boolean {\n    return this.hiddenInternal;\n  }\n\n  set hidden(x: boolean) {\n    if (this.hiddenInternal === x) {\n      return;\n    }\n\n    this.hiddenInternal = x;\n\n    this.listItemNode.classList.toggle('hidden', x);\n    this.childrenListNode.classList.toggle('hidden', x);\n\n    if (x && this.treeOutline && this.treeOutline.selectedTreeElement &&\n        this.treeOutline.selectedTreeElement.hasAncestorOrSelf(this)) {\n      const hadFocus = this.treeOutline.selectedTreeElement.listItemElement.hasFocus();\n      this.treeOutline.forceSelect(!hadFocus, /* selectedByUser */ false);\n    }\n  }\n\n  invalidateChildren(): void {\n    if (this.childrenInternal) {\n      this.removeChildren();\n      this.childrenInternal = null;\n    }\n  }\n\n  private ensureSelection(): void {\n    if (!this.treeOutline || !this.treeOutline.renderSelection) {\n      return;\n    }\n    if (!this.selectionElementInternal) {\n      this.selectionElementInternal = document.createElement('div');\n      this.selectionElementInternal.classList.add('selection');\n      this.selectionElementInternal.classList.add('fill');\n    }\n    this.listItemNode.insertBefore(this.selectionElementInternal, this.listItemElement.firstChild);\n  }\n\n  private treeElementToggled(event: MouseEvent): void {\n    const element = (event.currentTarget as Node | null);\n    if (!element || treeElementBylistItemNode.get(element) !== this || element.hasSelection()) {\n      return;\n    }\n\n    console.assert(Boolean(this.treeOutline));\n    const showSelectionOnKeyboardFocus = this.treeOutline ? this.treeOutline.showSelectionOnKeyboardFocus : false;\n    const toggleOnClick = this.toggleOnClick && (showSelectionOnKeyboardFocus || !this.selectable);\n    const isInTriangle = this.isEventWithinDisclosureTriangle(event);\n    if (!toggleOnClick && !isInTriangle) {\n      return;\n    }\n\n    if (this.expanded) {\n      if (event.altKey) {\n        this.collapseRecursively();\n      } else {\n        this.collapse();\n      }\n    } else {\n      if (event.altKey) {\n        void this.expandRecursively();\n      } else {\n        this.expand();\n      }\n    }\n    event.consume();\n  }\n\n  private handleMouseDown(event: MouseEvent): void {\n    const element = (event.currentTarget as Node | null);\n    if (!element) {\n      return;\n    }\n    if (!this.selectable) {\n      return;\n    }\n    if (treeElementBylistItemNode.get(element) !== this) {\n      return;\n    }\n\n    if (this.isEventWithinDisclosureTriangle(event)) {\n      return;\n    }\n\n    this.selectOnMouseDown(event);\n  }\n\n  private handleDoubleClick(event: Event): void {\n    const element = (event.currentTarget as Node | null);\n    if (!element || treeElementBylistItemNode.get(element) !== this) {\n      return;\n    }\n\n    const handled = this.ondblclick(event);\n    if (handled) {\n      return;\n    }\n    if (this.expandable && !this.expanded) {\n      this.expand();\n    }\n  }\n\n  private detach(): void {\n    this.listItemNode.remove();\n    this.childrenListNode.remove();\n  }\n\n  collapse(): void {\n    if (!this.expanded || !this.collapsible) {\n      return;\n    }\n    this.listItemNode.classList.remove('expanded');\n    this.childrenListNode.classList.remove('expanded');\n    ARIAUtils.setExpanded(this.listItemNode, false);\n    this.expanded = false;\n    this.oncollapse();\n    if (this.treeOutline) {\n      this.treeOutline.dispatchEventToListeners(Events.ElementCollapsed, this);\n    }\n\n    const selectedTreeElement = this.treeOutline && this.treeOutline.selectedTreeElement;\n    if (selectedTreeElement && selectedTreeElement.hasAncestor(this)) {\n      this.select(/* omitFocus */ true, /* selectedByUser */ true);\n    }\n  }\n\n  collapseRecursively(): void {\n    let item: (TreeElement|null)|this = this;\n    while (item) {\n      if (item.expanded) {\n        item.collapse();\n      }\n      item = item.traverseNextTreeElement(false, this, true);\n    }\n  }\n\n  collapseChildren(): void {\n    if (!this.childrenInternal) {\n      return;\n    }\n    for (const child of this.childrenInternal) {\n      child.collapseRecursively();\n    }\n  }\n\n  expand(): void {\n    if (!this.expandable || (this.expanded && this.childrenInternal)) {\n      return;\n    }\n\n    // Set this before onpopulate. Since onpopulate can add elements, this makes\n    // sure the expanded flag is true before calling those functions. This prevents the possibility\n    // of an infinite loop if onpopulate were to call expand.\n\n    this.expanded = true;\n\n    void this.populateIfNeeded();\n    this.listItemNode.classList.add('expanded');\n    this.childrenListNode.classList.add('expanded');\n    ARIAUtils.setExpanded(this.listItemNode, true);\n\n    if (this.treeOutline) {\n      this.onexpand();\n      this.treeOutline.dispatchEventToListeners(Events.ElementExpanded, this);\n    }\n  }\n\n  async expandRecursively(maxDepth?: number): Promise<void> {\n    let item: (TreeElement|null)|this = this;\n    const info = {depthChange: 0};\n    let depth = 0;\n\n    // The Inspector uses TreeOutlines to represents object properties, so recursive expansion\n    // in some case can be infinite, since JavaScript objects can hold circular references.\n    // So default to a recursion cap of 3 levels, since that gives fairly good results.\n    if (maxDepth === undefined || isNaN(maxDepth)) {\n      maxDepth = 3;\n    }\n\n    do {\n      if (item.isExpandRecursively()) {\n        await item.populateIfNeeded();\n\n        if (depth < maxDepth) {\n          item.expand();\n        }\n      }\n      item = item.traverseNextTreeElement(!item.isExpandRecursively(), this, true, info);\n      depth += info.depthChange;\n    } while (item !== null);\n  }\n\n  collapseOrAscend(altKey: boolean): boolean {\n    if (this.expanded && this.collapsible) {\n      if (altKey) {\n        this.collapseRecursively();\n      } else {\n        this.collapse();\n      }\n      return true;\n    }\n\n    if (!this.parent || this.parent.root) {\n      return false;\n    }\n\n    if (!this.parent.selectable) {\n      this.parent.collapse();\n      return true;\n    }\n\n    let nextSelectedElement: (TreeElement|null)|TreeElement = this.parent;\n    while (nextSelectedElement && !nextSelectedElement.selectable) {\n      nextSelectedElement = nextSelectedElement.parent;\n    }\n\n    if (!nextSelectedElement) {\n      return false;\n    }\n    nextSelectedElement.select(false, true);\n    return true;\n  }\n\n  descendOrExpand(altKey: boolean): boolean {\n    if (!this.expandable) {\n      return false;\n    }\n\n    if (!this.expanded) {\n      if (altKey) {\n        void this.expandRecursively();\n      } else {\n        this.expand();\n      }\n      return true;\n    }\n\n    let nextSelectedElement = this.firstChild();\n    while (nextSelectedElement && !nextSelectedElement.selectable) {\n      nextSelectedElement = nextSelectedElement.nextSibling;\n    }\n\n    if (!nextSelectedElement) {\n      return false;\n    }\n    nextSelectedElement.select(false, true);\n    return true;\n  }\n\n  reveal(center?: boolean): void {\n    let currentAncestor: (TreeElement|null) = this.parent;\n    while (currentAncestor && !currentAncestor.root) {\n      if (!currentAncestor.expanded) {\n        currentAncestor.expand();\n      }\n      currentAncestor = currentAncestor.parent;\n    }\n\n    if (this.treeOutline) {\n      this.treeOutline.deferredScrollIntoView(this, Boolean(center));\n    }\n  }\n\n  revealed(): boolean {\n    let currentAncestor: (TreeElement|null) = this.parent;\n    while (currentAncestor && !currentAncestor.root) {\n      if (!currentAncestor.expanded) {\n        return false;\n      }\n      currentAncestor = currentAncestor.parent;\n    }\n\n    return true;\n  }\n\n  selectOnMouseDown(event: MouseEvent): void {\n    if (this.select(false, true)) {\n      event.consume(true);\n    }\n\n    if (this.listItemNode.draggable && this.selectionElementInternal && this.treeOutline) {\n      const marginLeft = this.treeOutline.element.getBoundingClientRect().left -\n          this.listItemNode.getBoundingClientRect().left - this.treeOutline.element.scrollLeft;\n      // By default the left margin extends far off screen. This is not a problem except when dragging an element.\n      // Setting the margin once here should be fine, because we believe the left margin should never change.\n      this.selectionElementInternal.style.setProperty('margin-left', marginLeft + 'px');\n    }\n  }\n\n  select(omitFocus?: boolean, selectedByUser?: boolean): boolean {\n    omitFocus = omitFocus || this.disableSelectFocus;\n    if (!this.treeOutline || !this.selectable || this.selected) {\n      if (!omitFocus) {\n        this.listItemElement.focus();\n      }\n      return false;\n    }\n    // Wait to deselect this element so that focus only changes once\n    const lastSelected = this.treeOutline.selectedTreeElement;\n    this.treeOutline.selectedTreeElement = null;\n\n    if (this.treeOutline.rootElementInternal === this) {\n      if (lastSelected) {\n        lastSelected.deselect();\n      }\n      if (!omitFocus) {\n        this.listItemElement.focus();\n      }\n      return false;\n    }\n\n    this.selected = true;\n\n    this.treeOutline.selectedTreeElement = this;\n    this.treeOutline.updateFocusable();\n    if (!omitFocus || this.treeOutline.contentElement.hasFocus()) {\n      this.listItemElement.focus();\n    }\n\n    this.listItemNode.classList.add('selected');\n    ARIAUtils.setSelected(this.listItemNode, true);\n    this.treeOutline.dispatchEventToListeners(Events.ElementSelected, this);\n    if (lastSelected) {\n      lastSelected.deselect();\n    }\n    return this.onselect(selectedByUser);\n  }\n\n  setFocusable(focusable: boolean): void {\n    if (focusable) {\n      this.listItemNode.setAttribute('tabIndex', (this.treeOutline && this.treeOutline.preventTabOrder) ? '-1' : '0');\n      this.listItemNode.addEventListener('focus', this.boundOnFocus, false);\n      this.listItemNode.addEventListener('blur', this.boundOnBlur, false);\n    } else {\n      this.listItemNode.removeAttribute('tabIndex');\n      this.listItemNode.removeEventListener('focus', this.boundOnFocus, false);\n      this.listItemNode.removeEventListener('blur', this.boundOnBlur, false);\n    }\n  }\n\n  private onFocus(): void {\n    if (!this.treeOutline || this.treeOutline.getUseLightSelectionColor()) {\n      return;\n    }\n    if (!this.treeOutline.contentElement.classList.contains('hide-selection-when-blurred')) {\n      this.listItemNode.classList.add('force-white-icons');\n    }\n  }\n\n  private onBlur(): void {\n    if (!this.treeOutline || this.treeOutline.getUseLightSelectionColor()) {\n      return;\n    }\n    if (!this.treeOutline.contentElement.classList.contains('hide-selection-when-blurred')) {\n      this.listItemNode.classList.remove('force-white-icons');\n    }\n  }\n\n  revealAndSelect(omitFocus?: boolean): void {\n    this.reveal(true);\n    this.select(omitFocus);\n  }\n\n  deselect(): void {\n    const hadFocus = this.listItemNode.hasFocus();\n    this.selected = false;\n    this.listItemNode.classList.remove('selected');\n    ARIAUtils.clearSelected(this.listItemNode);\n    this.setFocusable(false);\n\n    if (this.treeOutline && this.treeOutline.selectedTreeElement === this) {\n      this.treeOutline.selectedTreeElement = null;\n      this.treeOutline.updateFocusable();\n      if (hadFocus) {\n        this.treeOutline.focus();\n      }\n    }\n  }\n\n  private async populateIfNeeded(): Promise<void> {\n    if (this.treeOutline && this.expandable && !this.childrenInternal) {\n      this.childrenInternal = [];\n      await this.onpopulate();\n    }\n  }\n\n  async onpopulate(): Promise<void> {\n    // Overridden by subclasses.\n  }\n\n  onenter(): boolean {\n    return false;\n  }\n\n  ondelete(): boolean {\n    return false;\n  }\n\n  onspace(): boolean {\n    return false;\n  }\n\n  onbind(): void {\n  }\n\n  onunbind(): void {\n  }\n\n  onattach(): void {\n  }\n\n  onexpand(): void {\n  }\n\n  oncollapse(): void {\n  }\n\n  ondblclick(_e: Event): boolean {\n    return false;\n  }\n\n  onselect(_selectedByUser?: boolean): boolean {\n    return false;\n  }\n\n  traverseNextTreeElement(skipUnrevealed: boolean, stayWithin?: TreeElement|null, dontPopulate?: boolean, info?: {\n    depthChange: number,\n  }): TreeElement|null {\n    if (!dontPopulate) {\n      void this.populateIfNeeded();\n    }\n\n    if (info) {\n      info.depthChange = 0;\n    }\n\n    let element: (TreeElement|null)|this =\n        skipUnrevealed ? (this.revealed() ? this.firstChild() : null) : this.firstChild();\n    if (element && (!skipUnrevealed || (skipUnrevealed && this.expanded))) {\n      if (info) {\n        info.depthChange = 1;\n      }\n      return element;\n    }\n\n    if (this === stayWithin) {\n      return null;\n    }\n\n    element = skipUnrevealed ? (this.revealed() ? this.nextSibling : null) : this.nextSibling;\n    if (element) {\n      return element;\n    }\n\n    element = this;\n    while (element && !element.root &&\n           !(skipUnrevealed ? (element.revealed() ? element.nextSibling : null) : element.nextSibling) &&\n           element.parent !== stayWithin) {\n      if (info) {\n        info.depthChange -= 1;\n      }\n      element = element.parent;\n    }\n\n    if (!element || element.root) {\n      return null;\n    }\n\n    return (skipUnrevealed ? (element.revealed() ? element.nextSibling : null) : element.nextSibling);\n  }\n\n  traversePreviousTreeElement(skipUnrevealed: boolean, dontPopulate?: boolean): TreeElement|null {\n    let element: (TreeElement|null) =\n        skipUnrevealed ? (this.revealed() ? this.previousSibling : null) : this.previousSibling;\n    if (!dontPopulate && element) {\n      void element.populateIfNeeded();\n    }\n\n    while (element &&\n           (skipUnrevealed ? (element.revealed() && element.expanded ? element.lastChild() : null) :\n                             element.lastChild())) {\n      if (!dontPopulate) {\n        void element.populateIfNeeded();\n      }\n      element =\n          (skipUnrevealed ? (element.revealed() && element.expanded ? element.lastChild() : null) :\n                            element.lastChild());\n    }\n\n    if (element) {\n      return element;\n    }\n\n    if (!this.parent || this.parent.root) {\n      return null;\n    }\n\n    return this.parent;\n  }\n\n  isEventWithinDisclosureTriangle(event: MouseEvent): boolean {\n    const arrowToggleWidth = 10;\n    // FIXME: We should not use getComputedStyle(). For that we need to get rid of using ::before for disclosure triangle. (http://webk.it/74446)\n    const paddingLeftValue = window.getComputedStyle(this.listItemNode).paddingLeft;\n    console.assert(paddingLeftValue.endsWith('px'));\n    const computedLeftPadding = parseFloat(paddingLeftValue);\n    const left = this.listItemNode.totalOffsetLeft() + computedLeftPadding;\n    return event.pageX >= left && event.pageX <= left + arrowToggleWidth && this.expandable;\n  }\n\n  setDisableSelectFocus(toggle: boolean): void {\n    this.disableSelectFocus = toggle;\n  }\n}\n"]}