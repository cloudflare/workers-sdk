{"version":3,"file":"HistoryInput.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/HistoryInput.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {Keys} from './KeyboardShortcut.js';\nimport * as Utils from './utils/utils.js';\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _constructor: (() => Element)|null = null;\n\nexport class HistoryInput extends HTMLInputElement {\n  private history: string[];\n  private historyPosition: number;\n\n  constructor() {\n    super();\n    this.history = [''];\n    this.historyPosition = 0;\n    this.addEventListener('keydown', this.onKeyDown.bind(this), false);\n    this.addEventListener('input', this.onInput.bind(this), false);\n  }\n\n  static create(): HistoryInput {\n    if (!_constructor) {\n      _constructor = Utils.registerCustomElement('input', 'history-input', HistoryInput);\n    }\n\n    return _constructor() as HistoryInput;\n  }\n\n  private onInput(_event: Event): void {\n    if (this.history.length === this.historyPosition + 1) {\n      this.history[this.history.length - 1] = this.value;\n    }\n  }\n\n  private onKeyDown(ev: Event): void {\n    const event = (ev as KeyboardEvent);\n    if (event.keyCode === Keys.Up.code) {\n      this.historyPosition = Math.max(this.historyPosition - 1, 0);\n      this.value = this.history[this.historyPosition];\n      this.dispatchEvent(new Event('input', {'bubbles': true, 'cancelable': true}));\n      event.consume(true);\n    } else if (event.keyCode === Keys.Down.code) {\n      this.historyPosition = Math.min(this.historyPosition + 1, this.history.length - 1);\n      this.value = this.history[this.historyPosition];\n      this.dispatchEvent(new Event('input', {'bubbles': true, 'cancelable': true}));\n      event.consume(true);\n    } else if (event.keyCode === Keys.Enter.code) {\n      this.saveToHistory();\n    }\n  }\n\n  private saveToHistory(): void {\n    if (this.history.length > 1 && this.history[this.history.length - 2] === this.value) {\n      return;\n    }\n    this.history[this.history.length - 1] = this.value;\n    this.historyPosition = this.history.length - 1;\n    this.history.push('');\n  }\n}\n"]}