{"version":3,"file":"CSSLengthUtils.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/inline_editor/CSSLengthUtils.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAqB7B,MAAM,CAAC,MAAM,YAAY,GAAG;;;;;;;;;;;;;;CAclB,CAAC;AAEX,MAAM,CAAC,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,sCAAsC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAO1G,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,IAAY,EAAe,EAAE;IACrD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;IAC1C,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;QAC7B,OAAO,IAAI,CAAC;KACb;IAED,OAAO;QACL,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QAClC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,IAAkB;KACvC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport const enum LengthUnit {\n  // absolute units\n  PIXEL = 'px',\n  CENTIMETER = 'cm',\n  MILLIMETER = 'mm',\n  INCH = 'in',\n  PICA = 'pc',\n  POINT = 'pt',\n\n  // relative units\n  CH = 'ch',\n  EM = 'em',\n  REM = 'rem',\n  VH = 'vh',\n  VW = 'vw',\n  VMIN = 'vmin',\n  VMAX = 'vmax',\n}\n\nexport const LENGTH_UNITS = [\n  LengthUnit.PIXEL,\n  LengthUnit.CENTIMETER,\n  LengthUnit.MILLIMETER,\n  LengthUnit.INCH,\n  LengthUnit.PICA,\n  LengthUnit.POINT,\n  LengthUnit.CH,\n  LengthUnit.EM,\n  LengthUnit.REM,\n  LengthUnit.VH,\n  LengthUnit.VW,\n  LengthUnit.VMIN,\n  LengthUnit.VMAX,\n] as const;\n\nexport const CSSLengthRegex = new RegExp(`(?<value>[+-]?\\\\d*\\\\.?\\\\d+)(?<unit>${LENGTH_UNITS.join('|')})`);\n\nexport interface Length {\n  value: number;\n  unit: LengthUnit;\n}\n\nexport const parseText = (text: string): Length|null => {\n  const result = text.match(CSSLengthRegex);\n  if (!result || !result.groups) {\n    return null;\n  }\n\n  return {\n    value: Number(result.groups.value),\n    unit: result.groups.unit as LengthUnit,\n  };\n};\n"]}