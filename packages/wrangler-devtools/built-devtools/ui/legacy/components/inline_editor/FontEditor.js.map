{"version":3,"file":"FontEditor.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/inline_editor/FontEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as UI from '../../legacy.js';\n\nimport fontEditorStyles from './fontEditor.css.js';\nimport * as FontEditorUnitConverter from './FontEditorUnitConverter.js';\nimport * as FontEditorUtils from './FontEditorUtils.js';\n\nconst UIStrings = {\n  /**\n  *@description Font editor label for font family selector\n  */\n  fontFamily: 'Font Family',\n  /**\n  *@description Section header for CSS property inputs\n  */\n  cssProperties: 'CSS Properties',\n  /**\n  *@description Font size slider label for Font Editor\n  */\n  fontSize: 'Font Size',\n  /**\n  *@description Line height slider label for Font Editor\n  */\n  lineHeight: 'Line Height',\n  /**\n  *@description Font weight slider label for Font Editor\n  */\n  fontWeight: 'Font Weight',\n  /**\n  *@description Label for letter-spacing labels\n  */\n  spacing: 'Spacing',\n  /**\n  *@description Label for numbered fallback selectors\n  *@example {2} PH1\n  */\n  fallbackS: 'Fallback {PH1}',\n  /**\n  *@description Announcement for deleting an empty font family selector in the Font Editor\n  *@example {2} PH1\n  */\n  thereIsNoValueToDeleteAtIndexS: 'There is no value to delete at index: {PH1}',\n  /**\n  *@description Announcement when deleting a font selector in the Font Editor\n  *@example {2} PH1\n  */\n  fontSelectorDeletedAtIndexS: 'Font Selector deleted at index: {PH1}',\n  /**\n  *@description Label for Font Editor button to delete font family/fallback selectors\n  *@example {Fallback 1} PH1\n  */\n  deleteS: 'Delete {PH1}',\n  /**\n  * @description Warning message for Font Editor invalid text input. The placeholder is the name of\n  * the CSS attribute that is incorrect.\n  * @example {font-size} PH1\n  */\n  PleaseEnterAValidValueForSText: '* Please enter a valid value for {PH1} text input',\n  /**\n  *@description Error text in Font Editor\n  *@example {font-size} PH1\n  */\n  thisPropertyIsSetToContainUnits:\n      'This property is set to contain units but does not have a defined corresponding unitsArray: {PH1}',\n  /**\n  *@description Label for slider input in the Font Editor.\n  *@example {font-size} PH1\n  */\n  sSliderInput: '{PH1} Slider Input',\n  /**\n  *@description Accessible label for a text input for a property in the Font Editor.\n  *@example {font-size} PH1\n  */\n  sTextInput: '{PH1} Text Input',\n  /**\n  *@description Font Editor units text box label\n  */\n  units: 'Units',\n  /**\n  * @description Accessible name for Font Editor unit input. The placeholder is the name of the font\n  * property that this UI input controls. e.g. font-size, line-height, line-weight.\n  * @example {font-size} PH1\n  */\n  sUnitInput: '{PH1} Unit Input',\n  /**\n  *@description Text used in the Font Editor for the key values selector\n  *@example {font-size} PH1\n  */\n  sKeyValueSelector: '{PH1} Key Value Selector',\n  /**\n  * @description Label for Font Editor toggle input type button. The placeholder is the name of the\n  * font property that this UI input controls. e.g. font-size, line-height, line-weight. Tooltip for\n  * a button next to the text input which allows the user to change the input type. When they click\n  * this button, the UI changes to allow the user to choose from a list of pre-selected font\n  * categories.\n  * @example {font-size} PH1\n  */\n  sToggleInputType: '{PH1} toggle input type',\n  /**\n  *@description Label for Font Editor alert in CSS Properties section when toggling inputs\n  */\n  selectorInputMode: 'Selector Input Mode',\n  /**\n  *@description Label for Font Editor alert in CSS Properties section when toggling inputs\n  */\n  sliderInputMode: 'Slider Input Mode',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/inline_editor/FontEditor.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class FontEditor extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  private readonly selectedNode: SDK.DOMModel.DOMNode|null;\n  private readonly propertyMap: Map<string, string>;\n  private readonly fontSelectorSection: HTMLElement;\n  private fontSelectors: FontEditor.FontSelectorObject[];\n  private fontsList: Map<string, string[]>[]|null;\n\n  constructor(propertyMap: Map<string, string>) {\n    super(true);\n    this.selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n\n    this.propertyMap = propertyMap;\n    this.contentElement.tabIndex = 0;\n    this.setDefaultFocusedElement(this.contentElement);\n\n    // Font Selector Section\n    this.fontSelectorSection = this.contentElement.createChild('div', 'font-selector-section');\n    this.fontSelectorSection.createChild('h2', 'font-section-header').textContent = i18nString(UIStrings.fontFamily);\n\n    this.fontSelectors = [];\n\n    this.fontsList = null;\n\n    const propertyValue: string|undefined = this.propertyMap.get('font-family');\n\n    void this.createFontSelectorSection(propertyValue);\n\n    //  CSS Font Property Section\n    const cssPropertySection = this.contentElement.createChild('div', 'font-section');\n    cssPropertySection.createChild('h2', 'font-section-header').textContent = i18nString(UIStrings.cssProperties);\n\n    // The regexes only handle valid property values as invalid values are not passed into the property map.\n    const fontSizePropertyInfo = this.getPropertyInfo('font-size', FontEditorUtils.FontSizeStaticParams.regex);\n\n    const lineHeightPropertyInfo = this.getPropertyInfo('line-height', FontEditorUtils.LineHeightStaticParams.regex);\n\n    const fontWeightPropertyInfo = this.getPropertyInfo('font-weight', FontEditorUtils.FontWeightStaticParams.regex);\n\n    const letterSpacingPropertyInfo =\n        this.getPropertyInfo('letter-spacing', FontEditorUtils.LetterSpacingStaticParams.regex);\n\n    new FontPropertyInputs(\n        'font-size', i18nString(UIStrings.fontSize), cssPropertySection, fontSizePropertyInfo,\n        FontEditorUtils.FontSizeStaticParams, this.updatePropertyValue.bind(this), this.resizePopout.bind(this),\n        /** hasUnits= */ true);\n    new FontPropertyInputs(\n        'line-height', i18nString(UIStrings.lineHeight), cssPropertySection, lineHeightPropertyInfo,\n        FontEditorUtils.LineHeightStaticParams, this.updatePropertyValue.bind(this), this.resizePopout.bind(this),\n        /** hasUnits= */ true);\n    new FontPropertyInputs(\n        'font-weight', i18nString(UIStrings.fontWeight), cssPropertySection, fontWeightPropertyInfo,\n        FontEditorUtils.FontWeightStaticParams, this.updatePropertyValue.bind(this), this.resizePopout.bind(this),\n        /** hasUnits= */ false);\n    new FontPropertyInputs(\n        'letter-spacing', i18nString(UIStrings.spacing), cssPropertySection, letterSpacingPropertyInfo,\n        FontEditorUtils.LetterSpacingStaticParams, this.updatePropertyValue.bind(this), this.resizePopout.bind(this),\n        /** hasUnits= */ true);\n  }\n\n  wasShown(): void {\n    this.registerCSSFiles([fontEditorStyles]);\n  }\n\n  private async createFontSelectorSection(propertyValue?: string): Promise<void> {\n    if (propertyValue) {\n      // FIXME(crbug.com/1148434): propertyValue will not be split correctly for font family names that contain commas.\n      // e.g. font-family: \"Name,with,commas\"\n      const splitValue = propertyValue.split(',');\n      await this.createFontSelector(splitValue[0], /* isPrimary= */ true);\n      if (!FontEditorUtils.GlobalValues.includes(splitValue[0])) {\n        // We add one to the splitValue length so that we have an additional empty fallback selector\n        for (let i = 1; i < splitValue.length + 1; i++) {\n          void this.createFontSelector(splitValue[i]);\n        }\n      }\n    } else {\n      void this.createFontSelector('', true);\n    }\n    this.resizePopout();\n  }\n\n  private async createFontsList(): Promise<Map<string, string[]>[]> {\n    const computedFontArray = await FontEditorUtils.generateComputedFontArray();\n    const computedMap = new Map<string, string[]>();\n    const splicedArray = this.splitComputedFontArray(computedFontArray);\n\n    computedMap.set('Computed Fonts', splicedArray);\n    const systemMap = new Map<string, string[]>();\n    systemMap.set('System Fonts', FontEditorUtils.SystemFonts);\n    systemMap.set('Generic Families', FontEditorUtils.GenericFonts);\n\n    const fontList = [];\n    fontList.push(computedMap);\n    fontList.push(systemMap);\n    return fontList;\n  }\n\n  private splitComputedFontArray(computedFontArray: string[]): string[] {\n    const array: string[] = [];\n    for (const fontFamilyValue of computedFontArray) {\n      if (fontFamilyValue.includes(',')) {\n        const fonts = fontFamilyValue.split(',');\n        fonts.forEach(element => {\n          if (array.findIndex(item => item.toLowerCase() === element.trim().toLowerCase().replace(/\"/g, '\\'')) === -1) {\n            array.push(element.trim().replace(/\"/g, ''));\n          }\n        });\n      } else if (\n          array.findIndex(item => item.toLowerCase() === fontFamilyValue.toLowerCase().replace('\"', '\\'')) === -1) {\n        array.push(fontFamilyValue.replace(/\"/g, ''));\n      }\n    }\n    return array as string[];\n  }\n\n  private async createFontSelector(value: string, isPrimary?: boolean): Promise<void> {\n    // FIXME(crbug.com/1148434): Custom font family names that use single/double quotes in the font family name will not be handled correctly.\n    // e.g. font-family: \"FontWith\\\"DoubleQuotes\"\n    value = value ? value.trim() : '';\n    if (value) {\n      const firstChar = value.charAt(0);\n      if (firstChar === '\\'') {\n        value = value.replace(/'/g, '');\n      } else if (firstChar === '\"') {\n        value = value.replace(/\"/g, '');\n      }\n    }\n    const selectorField = this.fontSelectorSection.createChild('div', 'shadow-editor-field shadow-editor-flex-field');\n    if (!this.fontsList) {\n      this.fontsList = await this.createFontsList();\n    }\n    let label;\n    if (isPrimary) {\n      label = i18nString(UIStrings.fontFamily);\n      const globalValuesMap = new Map([['Global Values', FontEditorUtils.GlobalValues]]);\n      const primaryFontList = [...this.fontsList];\n      primaryFontList.push(globalValuesMap);\n      this.createSelector(selectorField, label, primaryFontList, value.trim());\n    } else {\n      label = i18nString(UIStrings.fallbackS, {PH1: this.fontSelectors.length});\n      this.createSelector(selectorField, label, this.fontsList, value.trim());\n    }\n  }\n\n  private deleteFontSelector(index: number, isGlobalValue?: boolean): void {\n    let fontSelectorObject: FontEditor.FontSelectorObject = this.fontSelectors[index];\n    const isPrimary = index === 0;\n    if (fontSelectorObject.input.value === '' && !isGlobalValue) {\n      UI.ARIAUtils.alert(i18nString(UIStrings.thereIsNoValueToDeleteAtIndexS, {PH1: index}));\n      return;\n    }\n    if (isPrimary) {\n      // When deleting the primary font selector, we overwrite the value of the primary selector\n      // with the value of the secondary selector and delete the secondary selector.\n      const secondarySelector = this.fontSelectors[1];\n      let newPrimarySelectorValue = '';\n      if (secondarySelector) {\n        newPrimarySelectorValue = secondarySelector.input.value;\n        fontSelectorObject = secondarySelector;\n      }\n      const primarySelector = this.fontSelectors[0].input;\n      primarySelector.value = newPrimarySelectorValue;\n      index = 1;\n    }\n    if (fontSelectorObject.input.parentNode) {\n      const hasSecondarySelector = this.fontSelectors.length > 1;\n      if (!isPrimary || hasSecondarySelector) {\n        const selectorElement = fontSelectorObject.input.parentElement;\n        if (selectorElement) {\n          selectorElement.remove();\n          this.fontSelectors.splice(index, 1);\n          this.updateFontSelectorList();\n        }\n      }\n      UI.ARIAUtils.alert(i18nString(UIStrings.fontSelectorDeletedAtIndexS, {PH1: index}));\n    }\n    this.onFontSelectorChanged();\n    this.resizePopout();\n    const focusIndex = isPrimary ? 0 : index - 1;\n    this.fontSelectors[focusIndex].input.focus();\n  }\n\n  private updateFontSelectorList(): void {\n    for (let i = 0; i < this.fontSelectors.length; i++) {\n      const fontSelectorObject = this.fontSelectors[i];\n      let label;\n      if (i === 0) {\n        label = i18nString(UIStrings.fontFamily);\n      } else {\n        label = i18nString(UIStrings.fallbackS, {PH1: i});\n      }\n      fontSelectorObject.label.textContent = label;\n      UI.ARIAUtils.setAccessibleName(fontSelectorObject.input, label);\n      fontSelectorObject.deleteButton.setTitle(i18nString(UIStrings.deleteS, {PH1: label}));\n      fontSelectorObject.index = i;\n    }\n  }\n\n  private getPropertyInfo(name: string, regex: RegExp): FontEditor.PropertyInfo {\n    const value = this.propertyMap.get(name);\n    if (value) {\n      const valueString = value;\n      const match = valueString.match(regex);\n      if (match) {\n        const retValue = match[1].charAt(0) === '+' ? match[1].substr(1) : match[1];\n        const retUnits = match[2] ? match[2] : '';\n        return {value: retValue, units: retUnits};\n      }\n      return {value: valueString, units: null};\n    }\n    return {value: null, units: null};\n  }\n\n  private createSelector(field: Element, label: string, options: Map<string, string[]>[], currentValue: string): void {\n    const index = this.fontSelectors.length;\n    const selectInput = (UI.UIUtils.createSelect(label, options) as HTMLSelectElement);\n    selectInput.value = currentValue;\n    const selectLabel = UI.UIUtils.createLabel(label, 'shadow-editor-label', selectInput);\n    selectInput.addEventListener('input', this.onFontSelectorChanged.bind(this), false);\n    // We want to prevent the Enter key from propagating to the SwatchPopoverHelper which will close the editor.\n    selectInput.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        event.consume();\n      }\n    }, false);\n    field.appendChild(selectLabel);\n    field.appendChild(selectInput);\n\n    const deleteToolbar = new UI.Toolbar.Toolbar('', field);\n    const deleteButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.deleteS, {PH1: label}), 'largeicon-trash-bin');\n    deleteToolbar.appendToolbarItem(deleteButton);\n    const fontSelectorObject = {label: selectLabel, input: selectInput, deleteButton, index};\n    deleteButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      this.deleteFontSelector(fontSelectorObject.index);\n    });\n    deleteButton.element.addEventListener('keydown', (event: Event) => {\n      if (isEnterOrSpaceKey(event)) {\n        this.deleteFontSelector(fontSelectorObject.index);\n        event.consume();\n      }\n    }, false);\n    this.fontSelectors.push(fontSelectorObject);\n  }\n\n  private onFontSelectorChanged(): void {\n    let value = '';\n    const isGlobalValue = FontEditorUtils.GlobalValues.includes(this.fontSelectors[0].input.value);\n\n    if (isGlobalValue) {\n      for (let i = 1; i < this.fontSelectors.length; i++) {\n        this.deleteFontSelector(i, /** isGlobalValue= */ true);\n      }\n    }\n    for (const fontSelector of this.fontSelectors) {\n      const fontSelectorInput = fontSelector.input;\n      if (fontSelectorInput.value !== '') {\n        if (value === '') {\n          value = this.fontSelectors[0].input.value;\n        } else {\n          value += ', ' + fontSelectorInput.value;\n        }\n      }\n    }\n    // Add an extra blank selector as long as the last selector doesn't have an empty value, the primary\n    // selector's value is not a global value and if the list of selectors has not exceeded 10.\n    if (this.fontSelectors[this.fontSelectors.length - 1].input.value !== '' && !isGlobalValue &&\n        this.fontSelectors.length < 10) {\n      void this.createFontSelector(/** value= */ '');\n      this.resizePopout();\n    }\n    this.updatePropertyValue('font-family', value);\n  }\n\n  private updatePropertyValue(propertyName: string, value: string): void {\n    this.dispatchEventToListeners(Events.FontChanged, {propertyName, value});\n  }\n\n  private resizePopout(): void {\n    this.dispatchEventToListeners(Events.FontEditorResized);\n  }\n}\n\nnamespace FontEditor {\n  export interface PropertyInfo {\n    value: string|null;\n    units: string|null;\n  }\n\n  export interface FontSelectorObject {\n    label: Element;\n    input: HTMLSelectElement;\n    deleteButton: UI.Toolbar.ToolbarButton;\n    index: number;\n  }\n\n  export interface PropertyRange {\n    min: number;\n    max: number;\n    step: number;\n  }\n\n  export interface FontPropertyInputStaticParams {\n    regex: RegExp;\n    units: Set<string>|null;\n    keyValues: Set<string>;\n    rangeMap: Map<string, FontEditor.PropertyRange>;\n    defaultUnit: string|null;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  FontChanged = 'FontChanged',\n  FontEditorResized = 'FontEditorResized',\n}\n\nexport interface FontChangedEvent {\n  propertyName: string;\n  value: string;\n}\n\nexport type EventTypes = {\n  [Events.FontChanged]: FontChangedEvent,\n  [Events.FontEditorResized]: void,\n};\n\nclass FontPropertyInputs {\n  private showSliderMode: boolean;\n  private errorText: HTMLElement;\n  private propertyInfo: FontEditor.PropertyInfo;\n  private readonly propertyName: string;\n  private readonly staticParams: FontEditor.FontPropertyInputStaticParams;\n  private readonly hasUnits: boolean|undefined;\n  private units: string;\n  private readonly addedUnit: boolean|undefined;\n  private initialRange: FontEditor.PropertyRange;\n  private readonly boundUpdateCallback: (arg0: string, arg1: string) => void;\n  private readonly boundResizeCallback: () => void;\n  private readonly selectedNode: SDK.DOMModel.DOMNode|null;\n  private sliderInput: UI.UIUtils.DevToolsSlider;\n  private textBoxInput: HTMLInputElement;\n  private unitInput: HTMLSelectElement;\n  private selectorInput: HTMLSelectElement;\n  private applyNextInput: boolean;\n\n  constructor(\n      propertyName: string, label: string, field: Element, propertyInfo: FontEditor.PropertyInfo,\n      staticParams: FontEditor.FontPropertyInputStaticParams, updateCallback: (arg0: string, arg1: string) => void,\n      resizeCallback: () => void, hasUnits?: boolean) {\n    this.showSliderMode = true;\n    const propertyField = field.createChild('div', 'shadow-editor-field shadow-editor-flex-field');\n    this.errorText = (field.createChild('div', 'error-text') as HTMLElement);\n    this.errorText.textContent = i18nString(UIStrings.PleaseEnterAValidValueForSText, {PH1: propertyName});\n    this.errorText.hidden = true;\n    UI.ARIAUtils.markAsAlert(this.errorText);\n    this.propertyInfo = propertyInfo;\n    this.propertyName = propertyName;\n    this.staticParams = staticParams;\n\n    // Unit handling\n    this.hasUnits = hasUnits;\n    if (this.hasUnits && this.staticParams.units && this.staticParams.defaultUnit !== null) {\n      const defaultUnits = this.staticParams.defaultUnit;\n      this.units = propertyInfo.units !== null ? propertyInfo.units : defaultUnits;\n      this.addedUnit = !this.staticParams.units.has(this.units);\n    } else if (this.hasUnits) {\n      throw new Error(i18nString(UIStrings.thisPropertyIsSetToContainUnits, {PH1: propertyName}));\n    } else {\n      this.units = '';\n    }\n    this.initialRange = this.getUnitRange();\n\n    this.boundUpdateCallback = updateCallback;\n    this.boundResizeCallback = resizeCallback;\n    this.selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    const propertyLabel = UI.UIUtils.createLabel(label, 'shadow-editor-label');\n    propertyField.append(propertyLabel);\n    this.sliderInput = this.createSliderInput(propertyField, label);\n    this.textBoxInput = this.createTextBoxInput(propertyField);\n    UI.ARIAUtils.bindLabelToControl(propertyLabel, this.textBoxInput);\n    this.unitInput = this.createUnitInput(propertyField);\n    this.selectorInput = this.createSelectorInput(propertyField);\n    this.createTypeToggle(propertyField);\n    this.checkSelectorValueAndToggle();\n    this.applyNextInput = false;\n  }\n\n  private setInvalidTextBoxInput(invalid: boolean): void {\n    if (invalid) {\n      if (this.errorText.hidden) {\n        this.errorText.hidden = false;\n        this.textBoxInput.classList.add('error-input');\n        this.boundResizeCallback();\n      }\n    } else {\n      if (!this.errorText.hidden) {\n        this.errorText.hidden = true;\n        this.textBoxInput.classList.remove('error-input');\n        this.boundResizeCallback();\n      }\n    }\n  }\n\n  private checkSelectorValueAndToggle(): boolean {\n    if (this.staticParams.keyValues && this.propertyInfo.value !== null &&\n        (this.staticParams.keyValues.has(this.propertyInfo.value))) {\n      this.toggleInputType();\n      return true;\n    }\n    return false;\n  }\n\n  private getUnitRange(): FontEditor.PropertyRange {\n    let min = 0;\n    let max = 100;\n    let step = 1;\n    if (this.propertyInfo.value !== null && /\\d/.test(this.propertyInfo.value)) {\n      if (this.staticParams.rangeMap.get(this.units)) {\n        const unitRangeMap = this.staticParams.rangeMap.get(this.units);\n        if (unitRangeMap) {\n          min = Math.min(unitRangeMap.min, parseFloat(this.propertyInfo.value));\n          max = Math.max(unitRangeMap.max, parseFloat(this.propertyInfo.value));\n          step = unitRangeMap.step;\n        }\n      } else {\n        const unitRangeMap = this.staticParams.rangeMap.get('px');\n        if (unitRangeMap) {\n          min = Math.min(unitRangeMap.min, parseFloat(this.propertyInfo.value));\n          max = Math.max(unitRangeMap.max, parseFloat(this.propertyInfo.value));\n          step = unitRangeMap.step;\n        }\n      }\n    } else {\n      const unitRangeMap = this.staticParams.rangeMap.get(this.units);\n      if (unitRangeMap) {\n        min = unitRangeMap.min;\n        max = unitRangeMap.max;\n        step = unitRangeMap.step;\n      }\n    }\n    return {min, max, step};\n  }\n\n  private createSliderInput(field: Element, _label: string): UI.UIUtils.DevToolsSlider {\n    const min = this.initialRange.min;\n    const max = this.initialRange.max;\n    const step = this.initialRange.step;\n\n    const slider = (UI.UIUtils.createSlider(min, max, -1) as UI.UIUtils.DevToolsSlider);\n    slider.sliderElement.step = step.toString();\n    slider.sliderElement.tabIndex = 0;\n    if (this.propertyInfo.value) {\n      slider.value = parseFloat(this.propertyInfo.value);\n    } else {\n      const newValue = (min + max) / 2;\n      slider.value = newValue;\n    }\n    slider.addEventListener('input', event => {\n      this.onSliderInput(event, /** apply= */ false);\n    });\n\n    slider.addEventListener('mouseup', event => {\n      this.onSliderInput(event, /** apply= */ true);\n    });\n    slider.addEventListener('keydown', event => {\n      if (event.key === 'ArrowUp' || event.key === 'ArrowDown' || event.key === 'ArrowLeft' ||\n          event.key === 'ArrowRight') {\n        // Pressing an arrow key will trigger two events for the slider: A keyboard event and an input event\n        // The keyboard event will come before the slider value has changed and the subsequent input event will cause\n        // the value to change.  We use the applyNextInput boolean to tell onSliderInput that the next input event\n        // is coming because of the keyboard event and that it should be applied to the section.\n        this.applyNextInput = true;\n      }\n    });\n    field.appendChild(slider);\n    UI.ARIAUtils.setAccessibleName(slider.sliderElement, i18nString(UIStrings.sSliderInput, {PH1: this.propertyName}));\n    return slider;\n  }\n\n  private createTextBoxInput(field: Element): HTMLInputElement {\n    const textBoxInput: HTMLInputElement = UI.UIUtils.createInput('shadow-editor-text-input', 'number');\n\n    textBoxInput.step = this.initialRange.step.toString();\n    textBoxInput.classList.add('font-editor-text-input');\n    if (this.propertyInfo.value !== null) {\n      if (this.propertyInfo.value.charAt(0) === '+') {\n        this.propertyInfo.value = this.propertyInfo.value.substr(1);\n      }\n      textBoxInput.value = this.propertyInfo.value;\n    }\n    textBoxInput.step = 'any';\n    textBoxInput.addEventListener('input', this.onTextBoxInput.bind(this), false);\n    field.appendChild(textBoxInput);\n    UI.ARIAUtils.setAccessibleName(textBoxInput, i18nString(UIStrings.sTextInput, {PH1: this.propertyName}));\n    return textBoxInput;\n  }\n\n  private createUnitInput(field: Element): HTMLSelectElement {\n    let unitInput;\n    if (this.hasUnits && this.staticParams.units) {\n      const currentValue = this.propertyInfo.units;\n      const options = this.staticParams.units;\n      unitInput = UI.UIUtils.createSelect(i18nString(UIStrings.units), options);\n      unitInput.classList.add('font-editor-select');\n      if (this.addedUnit && currentValue) {\n        unitInput.add(new Option(currentValue, currentValue));\n      }\n      if (currentValue) {\n        unitInput.value = currentValue;\n      }\n      unitInput.addEventListener('change', this.onUnitInput.bind(this), false);\n    } else {\n      unitInput = UI.UIUtils.createSelect(i18nString(UIStrings.units), []);\n      unitInput.classList.add('font-editor-select');\n      unitInput.disabled = true;\n    }\n    // We want to prevent the Enter key from propagating to the SwatchPopoverHelper which will close the editor.\n    unitInput.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        event.consume();\n      }\n    }, false);\n    field.appendChild(unitInput);\n    UI.ARIAUtils.setAccessibleName(unitInput, i18nString(UIStrings.sUnitInput, {PH1: this.propertyName}));\n\n    return unitInput;\n  }\n\n  private createSelectorInput(field: Element): HTMLSelectElement {\n    const selectInput: HTMLSelectElement = UI.UIUtils.createSelect(\n        i18nString(UIStrings.sKeyValueSelector, {PH1: this.propertyName}), this.staticParams.keyValues);\n    selectInput.classList.add('font-selector-input');\n    if (this.propertyInfo.value) {\n      selectInput.value = this.propertyInfo.value;\n    }\n    selectInput.addEventListener('input', this.onSelectorInput.bind(this), false);\n    // We want to prevent the Enter key from propagating to the SwatchPopoverHelper which will close the editor.\n    selectInput.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        event.consume();\n      }\n    }, false);\n    field.appendChild(selectInput);\n    selectInput.hidden = true;\n    return selectInput;\n  }\n\n  private onSelectorInput(event: Event): void {\n    if (event.currentTarget) {\n      const value = (event.currentTarget as HTMLInputElement).value;\n      this.textBoxInput.value = '';\n      const newValue =\n          (parseFloat(this.sliderInput.sliderElement.min) + parseFloat(this.sliderInput.sliderElement.max)) / 2;\n      this.sliderInput.value = newValue;\n      this.setInvalidTextBoxInput(false);\n      this.boundUpdateCallback(this.propertyName, value);\n    }\n  }\n\n  private onSliderInput(event: Event, apply: boolean): void {\n    const target = (event.currentTarget as HTMLInputElement);\n    if (target) {\n      const value = target.value;\n      this.textBoxInput.value = value;\n      this.selectorInput.value = '';\n      const valueString = this.hasUnits ? value + this.unitInput.value : value.toString();\n      this.setInvalidTextBoxInput(false);\n      if (apply || this.applyNextInput) {\n        this.boundUpdateCallback(this.propertyName, valueString);\n        this.applyNextInput = false;\n      }\n    }\n  }\n\n  private onTextBoxInput(event: Event): void {\n    const target = (event.currentTarget as HTMLInputElement);\n    if (target) {\n      const value = target.value;\n      const units = value === '' ? '' : this.unitInput.value;\n      const valueString = value + units;\n      if (this.staticParams.regex.test(valueString) || (value === '' && !target.validationMessage.length)) {\n        if (parseFloat(value) > parseFloat(this.sliderInput.sliderElement.max)) {\n          this.sliderInput.sliderElement.max = value;\n        } else if (parseFloat(value) < parseFloat(this.sliderInput.sliderElement.min)) {\n          this.sliderInput.sliderElement.min = value;\n        }\n        this.sliderInput.value = parseFloat(value);\n        this.selectorInput.value = '';\n        this.setInvalidTextBoxInput(false);\n        this.boundUpdateCallback(this.propertyName, valueString);\n      } else {\n        this.setInvalidTextBoxInput(true);\n      }\n    }\n  }\n\n  private async onUnitInput(event: Event): Promise<void> {\n    const unitInput = (event.currentTarget as HTMLInputElement);\n    const hasFocus = unitInput.hasFocus();\n    const newUnit = unitInput.value;\n    unitInput.disabled = true;\n    const prevUnit = this.units;\n    const conversionMultiplier =\n        await FontEditorUnitConverter.getUnitConversionMultiplier(prevUnit, newUnit, this.propertyName === 'font-size');\n    this.setInputUnits(conversionMultiplier, newUnit);\n    if (this.textBoxInput.value) {\n      this.boundUpdateCallback(this.propertyName, this.textBoxInput.value + newUnit);\n    }\n    this.units = newUnit;\n    unitInput.disabled = false;\n    if (hasFocus) {\n      unitInput.focus();\n    }\n  }\n\n  private createTypeToggle(field: Element): void {\n    const displaySwitcher = field.createChild('div', 'spectrum-switcher') as HTMLDivElement;\n    const icon = new IconButton.Icon.Icon();\n    icon.data = {iconName: 'switcherIcon', color: 'var(--color-text-primary)', width: '16px', height: '16px'};\n    displaySwitcher.appendChild(icon);\n    UI.UIUtils.setTitle(displaySwitcher, i18nString(UIStrings.sToggleInputType, {PH1: this.propertyName}));\n    displaySwitcher.tabIndex = 0;\n    self.onInvokeElement(displaySwitcher, this.toggleInputType.bind(this));\n    UI.ARIAUtils.markAsButton(displaySwitcher);\n  }\n\n  private toggleInputType(event?: Event): void {\n    if (event && (event as KeyboardEvent).key === 'Enter') {\n      event.consume();\n    }\n    if (this.showSliderMode) {\n      // Show selector input type\n      this.sliderInput.hidden = true;\n      this.textBoxInput.hidden = true;\n      this.unitInput.hidden = true;\n      this.selectorInput.hidden = false;\n      this.showSliderMode = false;\n      UI.ARIAUtils.alert(i18nString(UIStrings.selectorInputMode));\n    } else {\n      // Show sliderinput type\n      this.sliderInput.hidden = false;\n      this.textBoxInput.hidden = false;\n      this.unitInput.hidden = false;\n      this.selectorInput.hidden = true;\n      this.showSliderMode = true;\n      UI.ARIAUtils.alert(i18nString(UIStrings.sliderInputMode));\n    }\n  }\n\n  private setInputUnits(multiplier: number, newUnit: string): void {\n    const newRangeMap = this.staticParams.rangeMap.get(newUnit);\n    let newMin, newMax, newStep;\n    if (newRangeMap) {\n      newMin = newRangeMap.min;\n      newMax = newRangeMap.max;\n      newStep = newRangeMap.step;\n    } else {\n      newMin = 0;\n      newMax = 100;\n      newStep = 1;\n    }\n    let hasValue = false;\n    const roundingPrecision = FontEditorUtils.getRoundingPrecision(newStep);\n    let newValue: number = (newMin + newMax) / 2;\n    if (this.textBoxInput.value) {\n      hasValue = true;\n      newValue = parseFloat((parseFloat(this.textBoxInput.value) * multiplier).toFixed(roundingPrecision));\n    }\n    this.sliderInput.sliderElement.min = Math.min(newValue, newMin).toString();\n    this.sliderInput.sliderElement.max = Math.max(newValue, newMax).toString();\n    this.sliderInput.sliderElement.step = newStep.toString();\n    this.textBoxInput.step = newStep.toString();\n    if (hasValue) {\n      this.textBoxInput.value = newValue.toString();\n    }\n    this.sliderInput.value = newValue;\n  }\n}\n"]}