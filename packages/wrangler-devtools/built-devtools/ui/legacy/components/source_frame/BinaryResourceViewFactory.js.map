{"version":3,"file":"BinaryResourceViewFactory.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/source_frame/BinaryResourceViewFactory.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../../../core/common/common.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\n\nimport {ResourceSourceFrame} from './ResourceSourceFrame.js';\n\nexport class BinaryResourceViewFactory {\n  private base64content: string;\n  private readonly contentUrl: Platform.DevToolsPath.UrlString;\n  private readonly resourceType: Common.ResourceType.ResourceType;\n  private arrayPromise: Promise<Uint8Array>|null;\n  private hexPromise: Promise<TextUtils.ContentProvider.DeferredContent>|null;\n  private utf8Promise: Promise<TextUtils.ContentProvider.DeferredContent>|null;\n  constructor(\n      base64content: string, contentUrl: Platform.DevToolsPath.UrlString,\n      resourceType: Common.ResourceType.ResourceType) {\n    this.base64content = base64content;\n    this.contentUrl = contentUrl;\n    this.resourceType = resourceType;\n    this.arrayPromise = null;\n    this.hexPromise = null;\n    this.utf8Promise = null;\n  }\n\n  private async fetchContentAsArray(): Promise<Uint8Array> {\n    if (!this.arrayPromise) {\n      this.arrayPromise = new Promise(async resolve => {\n        const fetchResponse = await fetch('data:;base64,' + this.base64content);\n        resolve(new Uint8Array(await fetchResponse.arrayBuffer()));\n      });\n    }\n    return await this.arrayPromise;\n  }\n\n  async hex(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    if (!this.hexPromise) {\n      const content = await this.fetchContentAsArray();\n      const hexString = BinaryResourceViewFactory.uint8ArrayToHexString(content);\n      return {content: hexString, isEncoded: false};\n    }\n\n    return this.hexPromise;\n  }\n\n  async base64(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    return {content: this.base64content, isEncoded: true};\n  }\n\n  async utf8(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    if (!this.utf8Promise) {\n      this.utf8Promise = new Promise(async resolve => {\n        const content = await this.fetchContentAsArray();\n        const utf8String = new TextDecoder('utf8').decode(content);\n        resolve({content: utf8String, isEncoded: false});\n      });\n    }\n\n    return this.utf8Promise;\n  }\n\n  createBase64View(): ResourceSourceFrame {\n    return new ResourceSourceFrame(\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n            this.contentUrl, this.resourceType, this.base64content),\n        this.resourceType.canonicalMimeType(), {lineNumbers: false, lineWrapping: true});\n  }\n\n  createHexView(): ResourceSourceFrame {\n    const hexViewerContentProvider =\n        new TextUtils.StaticContentProvider.StaticContentProvider(this.contentUrl, this.resourceType, async () => {\n          const contentAsArray = await this.fetchContentAsArray();\n          const content = BinaryResourceViewFactory.uint8ArrayToHexViewer(contentAsArray);\n          return {content, isEncoded: false};\n        });\n    return new ResourceSourceFrame(\n        hexViewerContentProvider, this.resourceType.canonicalMimeType(), {lineNumbers: false, lineWrapping: false});\n  }\n\n  createUtf8View(): ResourceSourceFrame {\n    const utf8fn = this.utf8.bind(this);\n    const utf8ContentProvider =\n        new TextUtils.StaticContentProvider.StaticContentProvider(this.contentUrl, this.resourceType, utf8fn);\n    return new ResourceSourceFrame(\n        utf8ContentProvider, this.resourceType.canonicalMimeType(), {lineNumbers: true, lineWrapping: true});\n  }\n\n  static uint8ArrayToHexString(uint8Array: Uint8Array): string {\n    let output = '';\n    for (let i = 0; i < uint8Array.length; i++) {\n      output += BinaryResourceViewFactory.numberToHex(uint8Array[i], 2);\n    }\n    return output;\n  }\n\n  static numberToHex(number: number, padding: number): string {\n    let hex = number.toString(16);\n    while (hex.length < padding) {\n      hex = '0' + hex;\n    }\n    return hex;\n  }\n\n  static uint8ArrayToHexViewer(array: Uint8Array): string {\n    let output = '';\n    let line = 0;\n\n    while ((line * 16) < array.length) {\n      const lineArray = array.slice(line * 16, (line + 1) * 16);\n\n      // line number\n      output += BinaryResourceViewFactory.numberToHex(line, 8) + ':';\n\n      // hex\n      let hexColsPrinted = 0;\n      for (let i = 0; i < lineArray.length; i++) {\n        if (i % 2 === 0) {\n          output += ' ';\n          hexColsPrinted++;\n        }\n        output += BinaryResourceViewFactory.numberToHex(lineArray[i], 2);\n        hexColsPrinted += 2;\n      }\n\n      // hex-ascii padding\n      while (hexColsPrinted < 42) {\n        output += ' ';\n        hexColsPrinted++;\n      }\n\n      // ascii\n      for (let i = 0; i < lineArray.length; i++) {\n        const code = lineArray[i];\n        if (code >= 32 && code <= 126) {\n          // printable ascii character\n          output += String.fromCharCode(code);\n        } else {\n          // non-printable\n          output += '.';\n        }\n      }\n\n      output += '\\n';\n      line++;\n    }\n    return output;\n  }\n}\n"]}