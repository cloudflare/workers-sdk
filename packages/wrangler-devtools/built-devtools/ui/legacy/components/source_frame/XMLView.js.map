{"version":3,"file":"XMLView.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/source_frame/XMLView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\n\nimport xmlTreeStyles from './xmlTree.css.legacy.js';\nimport xmlViewStyles from './xmlView.css.legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to find an item\n  */\n  find: 'Find',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/XMLView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class XMLView extends UI.Widget.Widget implements UI.SearchableView.Searchable {\n  private readonly treeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  private searchableView!: UI.SearchableView.SearchableView|null;\n  private currentSearchFocusIndex: number;\n  private currentSearchTreeElements: XMLViewNode[];\n  private searchConfig!: UI.SearchableView.SearchConfig|null;\n\n  constructor(parsedXML: Document) {\n    super(true);\n    this.registerRequiredCSS(xmlViewStyles);\n    this.contentElement.classList.add('shadow-xml-view', 'source-code');\n    this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this.treeOutline.registerRequiredCSS(xmlTreeStyles);\n    this.contentElement.appendChild(this.treeOutline.element);\n    this.currentSearchFocusIndex = 0;\n    this.currentSearchTreeElements = [];\n\n    XMLViewNode.populate(this.treeOutline, parsedXML, this);\n    const firstChild = this.treeOutline.firstChild();\n    if (firstChild) {\n      firstChild.select(true /* omitFocus */, false /* selectedByUser */);\n    }\n  }\n\n  static createSearchableView(parsedXML: Document): UI.SearchableView.SearchableView {\n    const xmlView = new XMLView(parsedXML);\n    const searchableView = new UI.SearchableView.SearchableView(xmlView, null);\n    searchableView.setPlaceholder(i18nString(UIStrings.find));\n    xmlView.searchableView = searchableView;\n    xmlView.show(searchableView.element);\n    return searchableView;\n  }\n\n  static parseXML(text: string, mimeType: string): Document|null {\n    let parsedXML;\n    try {\n      switch (mimeType) {\n        case 'application/xhtml+xml':\n        case 'application/xml':\n        case 'image/svg+xml':\n        case 'text/html':\n        case 'text/xml':\n          parsedXML = (new DOMParser()).parseFromString(text, mimeType);\n      }\n    } catch (e) {\n      return null;\n    }\n    if (!parsedXML || parsedXML.body) {\n      return null;\n    }\n    return parsedXML;\n  }\n\n  private jumpToMatch(index: number, shouldJump: boolean): void {\n    if (!this.searchConfig) {\n      return;\n    }\n    const {regex} = this.searchConfig.toSearchRegex(true);\n    const previousFocusElement = this.currentSearchTreeElements[this.currentSearchFocusIndex];\n    if (previousFocusElement) {\n      previousFocusElement.setSearchRegex(regex);\n    }\n\n    const newFocusElement = this.currentSearchTreeElements[index];\n    if (newFocusElement) {\n      this.updateSearchIndex(index);\n      if (shouldJump) {\n        newFocusElement.reveal(true);\n      }\n      newFocusElement.setSearchRegex(regex, UI.UIUtils.highlightedCurrentSearchResultClassName);\n    } else {\n      this.updateSearchIndex(0);\n    }\n  }\n\n  private updateSearchCount(count: number): void {\n    if (!this.searchableView) {\n      return;\n    }\n    this.searchableView.updateSearchMatchesCount(count);\n  }\n\n  private updateSearchIndex(index: number): void {\n    this.currentSearchFocusIndex = index;\n    if (!this.searchableView) {\n      return;\n    }\n    this.searchableView.updateCurrentMatchIndex(index);\n  }\n\n  innerPerformSearch(shouldJump: boolean, jumpBackwards?: boolean): void {\n    if (!this.searchConfig) {\n      return;\n    }\n    let newIndex: number = this.currentSearchFocusIndex;\n    const previousSearchFocusElement = this.currentSearchTreeElements[newIndex];\n    this.innerSearchCanceled();\n    this.currentSearchTreeElements = [];\n    const {regex} = this.searchConfig.toSearchRegex(true);\n\n    for (let element: (UI.TreeOutline.TreeElement|null) =\n             (this.treeOutline.rootElement() as UI.TreeOutline.TreeElement | null);\n         element; element = element.traverseNextTreeElement(false)) {\n      if (!(element instanceof XMLViewNode)) {\n        continue;\n      }\n      const hasMatch = element.setSearchRegex(regex);\n      if (hasMatch) {\n        this.currentSearchTreeElements.push(element);\n      }\n      if (previousSearchFocusElement === element) {\n        const currentIndex = this.currentSearchTreeElements.length - 1;\n        if (hasMatch || jumpBackwards) {\n          newIndex = currentIndex;\n        } else {\n          newIndex = currentIndex + 1;\n        }\n      }\n    }\n    this.updateSearchCount(this.currentSearchTreeElements.length);\n\n    if (!this.currentSearchTreeElements.length) {\n      this.updateSearchIndex(0);\n      return;\n    }\n    newIndex = Platform.NumberUtilities.mod(newIndex, this.currentSearchTreeElements.length);\n\n    this.jumpToMatch(newIndex, shouldJump);\n  }\n\n  private innerSearchCanceled(): void {\n    for (let element: (UI.TreeOutline.TreeElement|null) =\n             (this.treeOutline.rootElement() as UI.TreeOutline.TreeElement | null);\n         element; element = element.traverseNextTreeElement(false)) {\n      if (!(element instanceof XMLViewNode)) {\n        continue;\n      }\n      element.revertHighlightChanges();\n    }\n    this.updateSearchCount(0);\n    this.updateSearchIndex(0);\n  }\n\n  searchCanceled(): void {\n    this.searchConfig = null;\n    this.currentSearchTreeElements = [];\n    this.innerSearchCanceled();\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    this.searchConfig = searchConfig;\n    this.innerPerformSearch(shouldJump, jumpBackwards);\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this.currentSearchTreeElements.length) {\n      return;\n    }\n\n    const newIndex =\n        Platform.NumberUtilities.mod(this.currentSearchFocusIndex + 1, this.currentSearchTreeElements.length);\n    this.jumpToMatch(newIndex, true);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this.currentSearchTreeElements.length) {\n      return;\n    }\n\n    const newIndex =\n        Platform.NumberUtilities.mod(this.currentSearchFocusIndex - 1, this.currentSearchTreeElements.length);\n    this.jumpToMatch(newIndex, true);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n}\n\nexport class XMLViewNode extends UI.TreeOutline.TreeElement {\n  private readonly node: Node|ParentNode;\n  private readonly closeTag: boolean;\n  private highlightChanges: UI.UIUtils.HighlightChange[];\n  private readonly xmlView: XMLView;\n\n  constructor(node: Node|ParentNode, closeTag: boolean, xmlView: XMLView) {\n    super('', !closeTag && 'childElementCount' in node && Boolean(node.childElementCount));\n    this.node = node;\n    this.closeTag = closeTag;\n    this.selectable = true;\n    this.highlightChanges = [];\n    this.xmlView = xmlView;\n    this.updateTitle();\n  }\n\n  static populate(\n      root: UI.TreeOutline.TreeOutline|UI.TreeOutline.TreeElement, xmlNode: Node|ParentNode, xmlView: XMLView): void {\n    if (!(xmlNode instanceof Node)) {\n      return;\n    }\n    let node: (ChildNode|null) = xmlNode.firstChild;\n    while (node) {\n      const currentNode = node;\n      node = node.nextSibling;\n      const nodeType = currentNode.nodeType;\n      // ignore empty TEXT\n      if (nodeType === 3 && currentNode.nodeValue && currentNode.nodeValue.match(/\\s+/)) {\n        continue;\n      }\n      // ignore ATTRIBUTE, ENTITY_REFERENCE, ENTITY, DOCUMENT, DOCUMENT_TYPE, DOCUMENT_FRAGMENT, NOTATION\n      if ((nodeType !== 1) && (nodeType !== 3) && (nodeType !== 4) && (nodeType !== 7) && (nodeType !== 8)) {\n        continue;\n      }\n      root.appendChild(new XMLViewNode(currentNode, false, xmlView));\n    }\n  }\n\n  setSearchRegex(regex: RegExp|null, additionalCssClassName?: string): boolean {\n    this.revertHighlightChanges();\n    if (!regex) {\n      return false;\n    }\n    if (this.closeTag && this.parent && !this.parent.expanded) {\n      return false;\n    }\n    regex.lastIndex = 0;\n    let cssClasses = UI.UIUtils.highlightedSearchResultClassName;\n    if (additionalCssClassName) {\n      cssClasses += ' ' + additionalCssClassName;\n    }\n    if (!this.listItemElement.textContent) {\n      return false;\n    }\n    const content = this.listItemElement.textContent.replace(/\\xA0/g, ' ');\n    let match = regex.exec(content);\n    const ranges = [];\n    while (match) {\n      ranges.push(new TextUtils.TextRange.SourceRange(match.index, match[0].length));\n      match = regex.exec(content);\n    }\n    if (ranges.length) {\n      UI.UIUtils.highlightRangesWithStyleClass(this.listItemElement, ranges, cssClasses, this.highlightChanges);\n    }\n    return Boolean(this.highlightChanges.length);\n  }\n\n  revertHighlightChanges(): void {\n    UI.UIUtils.revertDomChanges(this.highlightChanges);\n    this.highlightChanges = [];\n  }\n\n  private updateTitle(): void {\n    const node = this.node;\n    if (!('nodeType' in node)) {\n      return;\n    }\n    switch (node.nodeType) {\n      case 1: {  // ELEMENT\n        if (node instanceof Element) {\n          const tag = node.tagName;\n          if (this.closeTag) {\n            this.setTitle(['</' + tag + '>', 'shadow-xml-view-tag']);\n            return;\n          }\n          const titleItems = ['<' + tag, 'shadow-xml-view-tag'];\n          const attributes = node.attributes;\n          for (let i = 0; i < attributes.length; ++i) {\n            const attributeNode = attributes.item(i);\n            if (!attributeNode) {\n              return;\n            }\n            titleItems.push(\n                '\\xA0', 'shadow-xml-view-tag', attributeNode.name, 'shadow-xml-view-attribute-name', '=\"',\n                'shadow-xml-view-tag', attributeNode.value, 'shadow-xml-view-attribute-value', '\"',\n                'shadow-xml-view-tag');\n          }\n          if (!this.expanded) {\n            if (node.childElementCount) {\n              titleItems.push(\n                  '>', 'shadow-xml-view-tag', '…', 'shadow-xml-view-comment', '</' + tag, 'shadow-xml-view-tag');\n            } else if (node.textContent) {\n              titleItems.push(\n                  '>', 'shadow-xml-view-tag', node.textContent, 'shadow-xml-view-text', '</' + tag,\n                  'shadow-xml-view-tag');\n            } else {\n              titleItems.push(' /', 'shadow-xml-view-tag');\n            }\n          }\n          titleItems.push('>', 'shadow-xml-view-tag');\n          this.setTitle(titleItems);\n          return;\n        }\n        return;\n      }\n      case 3: {  // TEXT\n        if (node.nodeValue) {\n          this.setTitle([node.nodeValue, 'shadow-xml-view-text']);\n        }\n        return;\n      }\n      case 4: {  // CDATA\n        if (node.nodeValue) {\n          this.setTitle([\n            '<![CDATA[',\n            'shadow-xml-view-cdata',\n            node.nodeValue,\n            'shadow-xml-view-text',\n            ']]>',\n            'shadow-xml-view-cdata',\n          ]);\n        }\n        return;\n      }\n      case 7: {  // PROCESSING_INSTRUCTION\n        if (node.nodeValue) {\n          this.setTitle(['<?' + node.nodeName + ' ' + node.nodeValue + '?>', 'shadow-xml-view-processing-instruction']);\n        }\n        return;\n      }\n      case 8: {  // COMMENT\n        this.setTitle(['<!--' + node.nodeValue + '-->', 'shadow-xml-view-comment']);\n        return;\n      }\n    }\n  }\n\n  private setTitle(items: string[]): void {\n    const titleFragment = document.createDocumentFragment();\n    for (let i = 0; i < items.length; i += 2) {\n      titleFragment.createChild('span', items[i + 1]).textContent = items[i];\n    }\n    this.title = titleFragment;\n    this.xmlView.innerPerformSearch(false, false);\n  }\n\n  onattach(): void {\n    this.listItemElement.classList.toggle('shadow-xml-view-close-tag', this.closeTag);\n  }\n\n  onexpand(): void {\n    this.updateTitle();\n  }\n\n  oncollapse(): void {\n    this.updateTitle();\n  }\n\n  async onpopulate(): Promise<void> {\n    XMLViewNode.populate(this, this.node, this.xmlView);\n    this.appendChild(new XMLViewNode(this.node, true, this.xmlView));\n  }\n}\n"]}