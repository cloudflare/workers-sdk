{"version":3,"file":"TimelineGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/perf_ui/TimelineGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2009 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Host from '../../../../core/host/host.js';\nimport * as ThemeSupport from '../../theme_support/theme_support.js';\n\nimport timelineGridStyles from './timelineGrid.css.legacy.js';\n\nconst labelMap = new Map<HTMLDivElement|HTMLElement, HTMLDivElement>();\n\nexport class TimelineGrid {\n  element: HTMLDivElement;\n  private readonly dividersElementInternal: HTMLElement;\n  private readonly gridHeaderElement: HTMLDivElement;\n  private eventDividersElement: HTMLElement;\n  private dividersLabelBarElementInternal: HTMLElement;\n\n  constructor() {\n    this.element = document.createElement('div');\n    ThemeSupport.ThemeSupport.instance().appendStyle(this.element, timelineGridStyles);\n\n    this.dividersElementInternal = this.element.createChild('div', 'resources-dividers');\n\n    this.gridHeaderElement = document.createElement('div');\n    this.gridHeaderElement.classList.add('timeline-grid-header');\n    this.eventDividersElement = this.gridHeaderElement.createChild('div', 'resources-event-dividers');\n    this.dividersLabelBarElementInternal = this.gridHeaderElement.createChild('div', 'resources-dividers-label-bar');\n    this.element.appendChild(this.gridHeaderElement);\n  }\n\n  static calculateGridOffsets(calculator: Calculator, freeZoneAtLeft?: number): DividersData {\n    /** @const */ const minGridSlicePx = 64;  // minimal distance between grid lines.\n\n    const clientWidth = calculator.computePosition(calculator.maximumBoundary());\n    let dividersCount: number|0 = clientWidth / minGridSlicePx;\n    let gridSliceTime: number = calculator.boundarySpan() / dividersCount;\n    const pixelsPerTime = clientWidth / calculator.boundarySpan();\n\n    // Align gridSliceTime to a nearest round value.\n    // We allow spans that fit into the formula: span = (1|2|5)x10^n,\n    // e.g.: ...  .1  .2  .5  1  2  5  10  20  50  ...\n    // After a span has been chosen make grid lines at multiples of the span.\n\n    const logGridSliceTime = Math.ceil(Math.log(gridSliceTime) / Math.LN10);\n    gridSliceTime = Math.pow(10, logGridSliceTime);\n    if (gridSliceTime * pixelsPerTime >= 5 * minGridSlicePx) {\n      gridSliceTime = gridSliceTime / 5;\n    }\n    if (gridSliceTime * pixelsPerTime >= 2 * minGridSlicePx) {\n      gridSliceTime = gridSliceTime / 2;\n    }\n\n    const firstDividerTime =\n        Math.ceil((calculator.minimumBoundary() - calculator.zeroTime()) / gridSliceTime) * gridSliceTime +\n        calculator.zeroTime();\n    let lastDividerTime = calculator.maximumBoundary();\n    // Add some extra space past the right boundary as the rightmost divider label text\n    // may be partially shown rather than just pop up when a new rightmost divider gets into the view.\n    lastDividerTime += minGridSlicePx / pixelsPerTime;\n    dividersCount = Math.ceil((lastDividerTime - firstDividerTime) / gridSliceTime);\n\n    if (!gridSliceTime) {\n      dividersCount = 0;\n    }\n\n    const offsets = [];\n    for (let i = 0; i < dividersCount; ++i) {\n      const time = firstDividerTime + gridSliceTime * i;\n      if (calculator.computePosition(time) < (freeZoneAtLeft || 0)) {\n        continue;\n      }\n      offsets.push({position: Math.floor(calculator.computePosition(time)), time: time});\n    }\n\n    return {offsets: offsets, precision: Math.max(0, -Math.floor(Math.log(gridSliceTime * 1.01) / Math.LN10))};\n  }\n\n  static drawCanvasGrid(context: CanvasRenderingContext2D, dividersData: DividersData): void {\n    context.save();\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    const height = Math.floor(context.canvas.height / window.devicePixelRatio);\n    context.strokeStyle = getComputedStyle(document.body).getPropertyValue('--divider-line');\n    context.lineWidth = 1;\n\n    context.translate(0.5, 0.5);\n    context.beginPath();\n    for (const offsetInfo of dividersData.offsets) {\n      context.moveTo(offsetInfo.position, 0);\n      context.lineTo(offsetInfo.position, height);\n    }\n    context.stroke();\n    context.restore();\n  }\n\n  static drawCanvasHeaders(\n      context: CanvasRenderingContext2D, dividersData: DividersData, formatTimeFunction: (arg0: number) => string,\n      paddingTop: number, headerHeight: number, freeZoneAtLeft?: number): void {\n    context.save();\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    const width = Math.ceil(context.canvas.width / window.devicePixelRatio);\n\n    context.beginPath();\n    context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-opacity-50');\n    context.fillRect(0, 0, width, headerHeight);\n\n    context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-text-primary');\n    context.textBaseline = 'hanging';\n    context.font = '11px ' + Host.Platform.fontFamily();\n\n    const paddingRight = 4;\n    for (const offsetInfo of dividersData.offsets) {\n      const text = formatTimeFunction(offsetInfo.time);\n      const textWidth = context.measureText(text).width;\n      const textPosition = offsetInfo.position - textWidth - paddingRight;\n      if (!freeZoneAtLeft || freeZoneAtLeft < textPosition) {\n        context.fillText(text, textPosition, paddingTop);\n      }\n    }\n    context.restore();\n  }\n\n  get dividersElement(): HTMLElement {\n    return this.dividersElementInternal;\n  }\n\n  get dividersLabelBarElement(): HTMLElement {\n    return this.dividersLabelBarElementInternal;\n  }\n\n  removeDividers(): void {\n    this.dividersElementInternal.removeChildren();\n    this.dividersLabelBarElementInternal.removeChildren();\n  }\n\n  updateDividers(calculator: Calculator, freeZoneAtLeft?: number): boolean {\n    const dividersData = TimelineGrid.calculateGridOffsets(calculator, freeZoneAtLeft);\n    const dividerOffsets = dividersData.offsets;\n    const precision = dividersData.precision;\n\n    const dividersElementClientWidth = this.dividersElementInternal.clientWidth;\n\n    // Reuse divider elements and labels.\n    let divider = (this.dividersElementInternal.firstChild as HTMLElement | null);\n    let dividerLabelBar = (this.dividersLabelBarElementInternal.firstChild as HTMLElement | null);\n\n    for (let i = 0; i < dividerOffsets.length; ++i) {\n      if (!divider) {\n        divider = document.createElement('div');\n        divider.className = 'resources-divider';\n        this.dividersElementInternal.appendChild(divider);\n\n        dividerLabelBar = document.createElement('div');\n        dividerLabelBar.className = 'resources-divider';\n        const label = document.createElement('div');\n        label.className = 'resources-divider-label';\n        labelMap.set(dividerLabelBar, label);\n        dividerLabelBar.appendChild(label);\n        this.dividersLabelBarElementInternal.appendChild(dividerLabelBar);\n      }\n\n      const time = dividerOffsets[i].time;\n      const position = dividerOffsets[i].position;\n      if (dividerLabelBar) {\n        const label = labelMap.get(dividerLabelBar);\n        if (label) {\n          label.textContent = calculator.formatValue(time, precision);\n        }\n      }\n\n      const percentLeft = 100 * position / dividersElementClientWidth;\n      divider.style.left = percentLeft + '%';\n      if (dividerLabelBar) {\n        dividerLabelBar.style.left = percentLeft + '%';\n      }\n      divider = (divider.nextSibling as HTMLElement | null);\n      if (dividerLabelBar) {\n        dividerLabelBar = (dividerLabelBar.nextSibling as HTMLElement | null);\n      }\n    }\n\n    // Remove extras.\n    while (divider) {\n      const nextDivider = divider.nextSibling;\n      this.dividersElementInternal.removeChild(divider);\n      if (nextDivider) {\n        divider = (nextDivider as HTMLElement);\n      } else {\n        break;\n      }\n    }\n    while (dividerLabelBar) {\n      const nextDivider = dividerLabelBar.nextSibling;\n      this.dividersLabelBarElementInternal.removeChild(dividerLabelBar);\n      if (nextDivider) {\n        dividerLabelBar = (nextDivider as HTMLElement);\n      } else {\n        break;\n      }\n    }\n    return true;\n  }\n\n  addEventDivider(divider: Element): void {\n    this.eventDividersElement.appendChild(divider);\n  }\n\n  addEventDividers(dividers: Element[]): void {\n    this.gridHeaderElement.removeChild(this.eventDividersElement);\n    for (const divider of dividers) {\n      this.eventDividersElement.appendChild(divider);\n    }\n    this.gridHeaderElement.appendChild(this.eventDividersElement);\n  }\n\n  removeEventDividers(): void {\n    this.eventDividersElement.removeChildren();\n  }\n\n  hideEventDividers(): void {\n    this.eventDividersElement.classList.add('hidden');\n  }\n\n  showEventDividers(): void {\n    this.eventDividersElement.classList.remove('hidden');\n  }\n\n  hideDividers(): void {\n    this.dividersElementInternal.classList.add('hidden');\n  }\n\n  showDividers(): void {\n    this.dividersElementInternal.classList.remove('hidden');\n  }\n\n  setScrollTop(scrollTop: number): void {\n    this.dividersLabelBarElementInternal.style.top = scrollTop + 'px';\n    this.eventDividersElement.style.top = scrollTop + 'px';\n  }\n}\n\nexport interface Calculator {\n  computePosition(time: number): number;\n  formatValue(time: number, precision?: number): string;\n  minimumBoundary(): number;\n  zeroTime(): number;\n  maximumBoundary(): number;\n  boundarySpan(): number;\n}\n\nexport interface DividersData {\n  offsets: {\n    position: number,\n    time: number,\n  }[];\n  precision: number;\n}\n"]}