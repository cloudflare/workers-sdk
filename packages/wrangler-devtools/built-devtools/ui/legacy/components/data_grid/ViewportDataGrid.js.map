{"version":3,"file":"ViewportDataGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/data_grid/ViewportDataGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as UI from '../../legacy.js';\n\nimport type {DataGridData, Parameters} from './DataGrid.js';\nimport {DataGridImpl, DataGridNode} from './DataGrid.js';\n\nconst UIStrings = {\n  /**\n  *@description accessible name for expandible nodes in datagrids\n  */\n  collapsed: 'collapsed',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/data_grid/ViewportDataGrid.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ViewportDataGrid<T> extends Common.ObjectWrapper.eventMixin<EventTypes, typeof DataGridImpl>(\n    DataGridImpl)<ViewportDataGridNode<T>> {\n  private readonly onScrollBound: (event: Event|null) => void;\n  private visibleNodes: ViewportDataGridNode<T>[];\n  stickToBottom: boolean;\n  private updateIsFromUser: boolean;\n  private lastScrollTop: number;\n  private firstVisibleIsStriped: boolean;\n  private isStriped: boolean;\n  private updateAnimationFrameId?: number;\n\n  constructor(dataGridParameters: Parameters) {\n    super(dataGridParameters);\n\n    this.onScrollBound = this.onScroll.bind(this);\n    this.scrollContainer.addEventListener('scroll', this.onScrollBound, true);\n\n    this.visibleNodes = [];\n    this.inline = false;\n\n    this.stickToBottom = false;\n    this.updateIsFromUser = false;\n    this.lastScrollTop = 0;\n    this.firstVisibleIsStriped = false;\n    this.isStriped = false;\n\n    this.setRootNode(new ViewportDataGridNode());\n  }\n\n  setStriped(striped: boolean): void {\n    this.isStriped = striped;\n    let startsWithOdd = true;\n    if (this.visibleNodes.length) {\n      const allChildren = (this.rootNode() as ViewportDataGridNode<T>).flatChildren();\n      startsWithOdd = Boolean(allChildren.indexOf(this.visibleNodes[0]));\n    }\n    this.updateStripesClass(startsWithOdd);\n  }\n\n  private updateStripesClass(startsWithOdd: boolean): void {\n    this.element.classList.toggle('striped-data-grid', !startsWithOdd && this.isStriped);\n    this.element.classList.toggle('striped-data-grid-starts-with-odd', startsWithOdd && this.isStriped);\n  }\n\n  setScrollContainer(scrollContainer: HTMLElement): void {\n    this.scrollContainer.removeEventListener('scroll', this.onScrollBound, true);\n    this.scrollContainerInternal = scrollContainer;\n    this.scrollContainer.addEventListener('scroll', this.onScrollBound, true);\n  }\n\n  onResize(): void {\n    if (this.stickToBottom) {\n      this.scrollContainer.scrollTop = this.scrollContainer.scrollHeight - this.scrollContainer.clientHeight;\n    }\n    this.scheduleUpdate();\n    super.onResize();\n  }\n\n  setStickToBottom(stick: boolean): void {\n    this.stickToBottom = stick;\n  }\n\n  private onScroll(_event: Event|null): void {\n    this.stickToBottom = UI.UIUtils.isScrolledToBottom(this.scrollContainer);\n    if (this.lastScrollTop !== this.scrollContainer.scrollTop) {\n      this.scheduleUpdate(true);\n    }\n  }\n\n  scheduleUpdateStructure(): void {\n    this.scheduleUpdate();\n  }\n\n  scheduleUpdate(isFromUser?: boolean): void {\n    if (this.stickToBottom && isFromUser) {\n      this.stickToBottom = UI.UIUtils.isScrolledToBottom(this.scrollContainer);\n    }\n    this.updateIsFromUser = this.updateIsFromUser || Boolean(isFromUser);\n    if (this.updateAnimationFrameId) {\n      return;\n    }\n    this.updateAnimationFrameId = this.element.window().requestAnimationFrame(this.update.bind(this));\n  }\n\n  // TODO(allada) This should be fixed to never be needed. It is needed right now for network because removing\n  // elements happens followed by a scheduleRefresh() which causes white space to be visible, but the waterfall\n  // updates instantly.\n  updateInstantly(): void {\n    this.update();\n  }\n\n  renderInline(): void {\n    this.inline = true;\n    super.renderInline();\n    this.update();\n  }\n\n  private calculateVisibleNodes(clientHeight: number, scrollTop: number): {\n    topPadding: number,\n    bottomPadding: number,\n    contentHeight: number,\n    visibleNodes: Array<ViewportDataGridNode<T>>,\n    offset: number,\n  } {\n    const nodes = (this.rootNode() as ViewportDataGridNode<T>).flatChildren();\n    if (this.inline) {\n      return {topPadding: 0, bottomPadding: 0, contentHeight: 0, visibleNodes: nodes, offset: 0};\n    }\n\n    const size = nodes.length;\n    let i = 0;\n    let y = 0;\n\n    for (; i < size && y + nodes[i].nodeSelfHeight() < scrollTop; ++i) {\n      y += nodes[i].nodeSelfHeight();\n    }\n    const start = i;\n    const topPadding = y;\n\n    for (; i < size && y < scrollTop + clientHeight; ++i) {\n      y += nodes[i].nodeSelfHeight();\n    }\n    const end = i;\n\n    let bottomPadding = 0;\n    for (; i < size; ++i) {\n      bottomPadding += nodes[i].nodeSelfHeight();\n    }\n\n    return {\n      topPadding: topPadding,\n      bottomPadding: bottomPadding,\n      contentHeight: y - topPadding,\n      visibleNodes: nodes.slice(start, end),\n      offset: start,\n    };\n  }\n\n  private contentHeight(): number {\n    const nodes = (this.rootNode() as ViewportDataGridNode<T>).flatChildren();\n    let result = 0;\n    for (let i = 0, size = nodes.length; i < size; ++i) {\n      result += nodes[i].nodeSelfHeight();\n    }\n    return result;\n  }\n\n  private update(): void {\n    if (this.updateAnimationFrameId) {\n      this.element.window().cancelAnimationFrame(this.updateAnimationFrameId);\n      delete this.updateAnimationFrameId;\n    }\n\n    const clientHeight = this.scrollContainer.clientHeight - this.headerHeightInScroller();\n    let scrollTop: number = this.scrollContainer.scrollTop;\n    const currentScrollTop = scrollTop;\n    const maxScrollTop = Math.max(0, this.contentHeight() - clientHeight);\n    if (!this.updateIsFromUser && this.stickToBottom) {\n      scrollTop = maxScrollTop;\n    }\n    this.updateIsFromUser = false;\n    scrollTop = Math.min(maxScrollTop, scrollTop);\n\n    const viewportState = this.calculateVisibleNodes(clientHeight, scrollTop);\n    const visibleNodes = viewportState.visibleNodes;\n    const visibleNodesSet = new Set<ViewportDataGridNode<T>>(visibleNodes);\n\n    for (let i = 0; i < this.visibleNodes.length; ++i) {\n      const oldNode = this.visibleNodes[i];\n      if (!visibleNodesSet.has(oldNode) && oldNode.attached()) {\n        const element = oldNode.existingElement();\n        if (element) {\n          element.remove();\n        }\n      }\n    }\n\n    let previousElement = this.topFillerRowElement();\n    const tBody = this.dataTableBody;\n    let offset = viewportState.offset;\n\n    if (visibleNodes.length) {\n      const nodes = (this.rootNode() as ViewportDataGridNode<T>).flatChildren();\n      const index = nodes.indexOf(visibleNodes[0]);\n      this.updateStripesClass(Boolean(index % 2));\n      if (this.stickToBottom && index !== -1 && Boolean(index % 2) !== this.firstVisibleIsStriped) {\n        offset += 1;\n      }\n    }\n\n    this.firstVisibleIsStriped = Boolean(offset % 2);\n\n    for (let i = 0; i < visibleNodes.length; ++i) {\n      const node = visibleNodes[i];\n      const element = (node.element() as HTMLElement);\n      node.setStriped((offset + i) % 2 === 0);\n      if (element !== previousElement.nextSibling) {\n        tBody.insertBefore(element, previousElement.nextSibling);\n      }\n      node.revealed = true;\n      previousElement = element;\n    }\n\n    this.setVerticalPadding(viewportState.topPadding, viewportState.bottomPadding);\n    this.lastScrollTop = scrollTop;\n    if (scrollTop !== currentScrollTop) {\n      this.scrollContainer.scrollTop = scrollTop;\n    }\n    const contentFits =\n        viewportState.contentHeight <= clientHeight && viewportState.topPadding + viewportState.bottomPadding === 0;\n    if (contentFits !== this.element.classList.contains('data-grid-fits-viewport')) {\n      this.element.classList.toggle('data-grid-fits-viewport', contentFits);\n      this.updateWidths();\n    }\n    this.visibleNodes = visibleNodes;\n    this.dispatchEventToListeners(Events.ViewportCalculated);\n  }\n\n  revealViewportNode(node: ViewportDataGridNode<T>): void {\n    const nodes = (this.rootNode() as ViewportDataGridNode<T>).flatChildren();\n    const index = nodes.indexOf(node);\n    if (index === -1) {\n      return;\n    }\n    let fromY = 0;\n    for (let i = 0; i < index; ++i) {\n      fromY += nodes[i].nodeSelfHeight();\n    }\n    const toY = fromY + node.nodeSelfHeight();\n    let scrollTop: number = this.scrollContainer.scrollTop;\n    const visibleHeight = this.scrollContainer.offsetHeight - this.headerHeightInScroller();\n    if (scrollTop > fromY) {\n      scrollTop = fromY;\n      this.stickToBottom = false;\n    } else if (scrollTop + visibleHeight < toY) {\n      scrollTop = toY - visibleHeight;\n    }\n    this.scrollContainer.scrollTop = scrollTop;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  ViewportCalculated = 'ViewportCalculated',\n}\n\nexport type EventTypes = {\n  [Events.ViewportCalculated]: void,\n};\n\nexport class ViewportDataGridNode<T> extends DataGridNode<ViewportDataGridNode<T>> {\n  private stale: boolean;\n  private flatNodes: ViewportDataGridNode<T>[]|null;\n  private isStripedInternal: boolean;\n\n  constructor(data?: DataGridData|null, hasChildren?: boolean) {\n    super(data, hasChildren);\n    this.stale = false;\n    this.flatNodes = null;\n    this.isStripedInternal = false;\n  }\n\n  element(): Element {\n    const existingElement = this.existingElement();\n    const element = existingElement || this.createElement();\n    if (!existingElement || this.stale) {\n      this.createCells(element);\n      this.stale = false;\n    }\n    return element;\n  }\n\n  setStriped(isStriped: boolean): void {\n    this.isStripedInternal = isStriped;\n    this.element().classList.toggle('odd', isStriped);\n  }\n\n  isStriped(): boolean {\n    return this.isStripedInternal;\n  }\n\n  clearFlatNodes(): void {\n    this.flatNodes = null;\n    const parent = (this.parent as ViewportDataGridNode<T>);\n    if (parent) {\n      parent.clearFlatNodes();\n    }\n  }\n\n  flatChildren(): ViewportDataGridNode<T>[] {\n    if (this.flatNodes) {\n      return this.flatNodes;\n    }\n    const flatNodes: ViewportDataGridNode<T>[] = [];\n    const children = ([this.children] as ViewportDataGridNode<T>[][]);\n    const counters: number[] = [0];\n    let depth = 0;\n    while (depth >= 0) {\n      if (children[depth].length <= counters[depth]) {\n        depth--;\n        continue;\n      }\n      const node = children[depth][counters[depth]++];\n      flatNodes.push(node);\n      if (node.expanded && node.children.length) {\n        depth++;\n        children[depth] = (node.children as ViewportDataGridNode<T>[]);\n        counters[depth] = 0;\n      }\n    }\n\n    this.flatNodes = flatNodes;\n    return flatNodes;\n  }\n\n  insertChild(child: DataGridNode<ViewportDataGridNode<T>>, index: number): void {\n    this.clearFlatNodes();\n    if (child.parent === this) {\n      const currentIndex = this.children.indexOf(child);\n      if (currentIndex < 0) {\n        console.assert(false, 'Inconsistent DataGrid state');\n      }\n      if (currentIndex === index) {\n        return;\n      }\n      if (currentIndex < index) {\n        --index;\n      }\n    }\n    child.remove();\n    child.parent = this;\n    child.dataGrid = this.dataGrid;\n    if (!this.children.length) {\n      this.setHasChildren(true);\n    }\n    this.children.splice(index, 0, child);\n    child.recalculateSiblings(index);\n    if (this.expanded && this.dataGrid) {\n      (this.dataGrid as ViewportDataGrid<T>).scheduleUpdateStructure();\n    }\n  }\n\n  removeChild(child: DataGridNode<ViewportDataGridNode<T>>): void {\n    this.clearFlatNodes();\n    if (this.dataGrid) {\n      this.dataGrid.updateSelectionBeforeRemoval(child, false);\n    }\n    if (child.previousSibling) {\n      child.previousSibling.nextSibling = child.nextSibling;\n    }\n    if (child.nextSibling) {\n      child.nextSibling.previousSibling = child.previousSibling;\n    }\n    if (child.parent !== this) {\n      throw 'removeChild: Node is not a child of this node.';\n    }\n\n    Platform.ArrayUtilities.removeElement(this.children, child, true);\n    (child as ViewportDataGridNode<T>).unlink();\n\n    if (!this.children.length) {\n      this.setHasChildren(false);\n    }\n    if (this.expanded && this.dataGrid) {\n      (this.dataGrid as ViewportDataGrid<T>).scheduleUpdateStructure();\n    }\n  }\n\n  removeChildren(): void {\n    this.clearFlatNodes();\n    if (this.dataGrid) {\n      this.dataGrid.updateSelectionBeforeRemoval(this, true);\n    }\n    for (let i = 0; i < this.children.length; ++i) {\n      (this.children[i] as ViewportDataGridNode<T>).unlink();\n    }\n    this.children = ([] as ViewportDataGridNode<T>[]);\n\n    if (this.expanded && this.dataGrid) {\n      (this.dataGrid as ViewportDataGrid<T>).scheduleUpdateStructure();\n    }\n  }\n\n  private unlink(): void {\n    const existingElement = this.existingElement();\n    if (this.attached() && existingElement) {\n      existingElement.remove();\n    }\n    this.resetNode();\n  }\n\n  collapse(): void {\n    if (!this.expanded) {\n      return;\n    }\n    this.clearFlatNodes();\n    this.expandedInternal = false;\n    const existingElement = this.existingElement();\n    if (existingElement) {\n      existingElement.classList.remove('expanded');\n    }\n    if (this.selected) {\n      (this.dataGrid as ViewportDataGrid<T>).updateGridAccessibleName(i18nString(UIStrings.collapsed));\n    }\n    (this.dataGrid as ViewportDataGrid<T>).scheduleUpdateStructure();\n  }\n\n  expand(): void {\n    if (this.expanded) {\n      return;\n    }\n    (this.dataGrid as ViewportDataGrid<T>).stickToBottom = false;\n    this.clearFlatNodes();\n    super.expand();\n    (this.dataGrid as ViewportDataGrid<T>).scheduleUpdateStructure();\n  }\n\n  attached(): boolean {\n    const existingElement = this.existingElement();\n    return Boolean(this.dataGrid && existingElement && existingElement.parentElement);\n  }\n\n  refresh(): void {\n    if (this.attached()) {\n      this.stale = true;\n      (this.dataGrid as ViewportDataGrid<T>).scheduleUpdate();\n    } else {\n      this.resetElement();\n    }\n  }\n\n  reveal(): void {\n    (this.dataGrid as ViewportDataGrid<T>).revealViewportNode(this);\n  }\n\n  recalculateSiblings(index: number): void {\n    this.clearFlatNodes();\n    super.recalculateSiblings(index);\n  }\n}\n"]}