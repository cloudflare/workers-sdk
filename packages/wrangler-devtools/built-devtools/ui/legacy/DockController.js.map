{"version":3,"file":"DockController.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/DockController.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\n\nimport type {ActionDelegate} from './ActionRegistration.js';\nimport type {Context} from './Context.js';\nimport type {Provider, ToolbarItem} from './Toolbar.js';\nimport {ToolbarButton} from './Toolbar.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to close something\n  */\n  close: 'Close',\n  /**\n  *@description Text to dock the DevTools to the right of the browser tab\n  */\n  dockToRight: 'Dock to right',\n  /**\n  *@description Text to dock the DevTools to the bottom of the browser tab\n  */\n  dockToBottom: 'Dock to bottom',\n  /**\n  *@description Text to dock the DevTools to the left of the browser tab\n  */\n  dockToLeft: 'Dock to left',\n  /**\n  *@description Text to undock the DevTools\n  */\n  undockIntoSeparateWindow: 'Undock into separate window',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/DockController.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet dockControllerInstance: DockController;\n\nexport class DockController extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private canDockInternal: boolean;\n  readonly closeButton: ToolbarButton;\n  private readonly currentDockStateSetting: Common.Settings.Setting<DockState>;\n  private readonly lastDockStateSetting: Common.Settings.Setting<DockState>;\n  private dockSideInternal: DockState|undefined = undefined;\n  private titles?: Common.UIString.LocalizedString[];\n  private savedFocus?: Element|null;\n\n  constructor(canDock: boolean) {\n    super();\n    this.canDockInternal = canDock;\n\n    this.closeButton = new ToolbarButton(i18nString(UIStrings.close), 'largeicon-delete');\n    this.closeButton.element.classList.add('close-devtools');\n    this.closeButton.addEventListener(\n        ToolbarButton.Events.Click,\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.closeWindow.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance));\n\n    this.currentDockStateSetting = Common.Settings.Settings.instance().moduleSetting('currentDockState');\n    this.lastDockStateSetting = Common.Settings.Settings.instance().createSetting('lastDockState', DockState.BOTTOM);\n\n    if (!canDock) {\n      this.dockSideInternal = DockState.UNDOCKED;\n      this.closeButton.setVisible(false);\n      return;\n    }\n\n    this.currentDockStateSetting.addChangeListener(this.dockSideChanged, this);\n    if (states.indexOf(this.currentDockStateSetting.get()) === -1) {\n      this.currentDockStateSetting.set(DockState.RIGHT);\n    }\n    if (states.indexOf(this.lastDockStateSetting.get()) === -1) {\n      this.currentDockStateSetting.set(DockState.BOTTOM);\n    }\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    canDock: boolean,\n  } = {forceNew: null, canDock: false}): DockController {\n    const {forceNew, canDock} = opts;\n    if (!dockControllerInstance || forceNew) {\n      dockControllerInstance = new DockController(canDock);\n    }\n\n    return dockControllerInstance;\n  }\n\n  initialize(): void {\n    if (!this.canDockInternal) {\n      return;\n    }\n\n    this.titles = [\n      i18nString(UIStrings.dockToRight),\n      i18nString(UIStrings.dockToBottom),\n      i18nString(UIStrings.dockToLeft),\n      i18nString(UIStrings.undockIntoSeparateWindow),\n    ];\n    this.dockSideChanged();\n  }\n\n  private dockSideChanged(): void {\n    this.setDockSide(this.currentDockStateSetting.get());\n  }\n\n  dockSide(): DockState|undefined {\n    return this.dockSideInternal;\n  }\n\n  canDock(): boolean {\n    return this.canDockInternal;\n  }\n\n  isVertical(): boolean {\n    return this.dockSideInternal === DockState.RIGHT || this.dockSideInternal === DockState.LEFT;\n  }\n\n  setDockSide(dockSide: DockState): void {\n    if (states.indexOf(dockSide) === -1) {\n      // If the side is invalid, default to a valid one\n      dockSide = states[0];\n    }\n\n    if (this.dockSideInternal === dockSide) {\n      return;\n    }\n\n    if (this.dockSideInternal !== undefined) {\n      document.body.classList.remove(this.dockSideInternal);\n    }\n    document.body.classList.add(dockSide);\n\n    if (this.dockSideInternal) {\n      this.lastDockStateSetting.set(this.dockSideInternal);\n    }\n\n    this.savedFocus = Platform.DOMUtilities.deepActiveElement(document);\n    const eventData = {from: this.dockSideInternal, to: dockSide};\n    this.dispatchEventToListeners(Events.BeforeDockSideChanged, eventData);\n    console.timeStamp('DockController.setIsDocked');\n    this.dockSideInternal = dockSide;\n    this.currentDockStateSetting.set(dockSide);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setIsDocked(\n        dockSide !== DockState.UNDOCKED, this.setIsDockedResponse.bind(this, eventData));\n    this.closeButton.setVisible(this.dockSideInternal !== DockState.UNDOCKED);\n    this.dispatchEventToListeners(Events.DockSideChanged, eventData);\n  }\n\n  private setIsDockedResponse(eventData: ChangeEvent): void {\n    this.dispatchEventToListeners(Events.AfterDockSideChanged, eventData);\n    if (this.savedFocus) {\n      (this.savedFocus as HTMLElement).focus();\n      this.savedFocus = null;\n    }\n  }\n\n  toggleDockSide(): void {\n    if (this.lastDockStateSetting.get() === this.currentDockStateSetting.get()) {\n      const index = states.indexOf(this.currentDockStateSetting.get()) || 0;\n      this.lastDockStateSetting.set(states[(index + 1) % states.length]);\n    }\n    this.setDockSide(this.lastDockStateSetting.get());\n  }\n}\n\nexport const enum DockState {\n  BOTTOM = 'bottom',\n  RIGHT = 'right',\n  LEFT = 'left',\n  UNDOCKED = 'undocked',\n}\n\nconst states = [DockState.RIGHT, DockState.BOTTOM, DockState.LEFT, DockState.UNDOCKED];\n\n// Use BeforeDockSideChanged to do something before all the UI bits are updated,\n// DockSideChanged to update UI, and AfterDockSideChanged to perform actions\n// after frontend is docked/undocked in the browser.\n\nexport const enum Events {\n  BeforeDockSideChanged = 'BeforeDockSideChanged',\n  DockSideChanged = 'DockSideChanged',\n  AfterDockSideChanged = 'AfterDockSideChanged',\n}\n\nexport interface ChangeEvent {\n  from: DockState|undefined;\n  to: DockState;\n}\n\nexport type EventTypes = {\n  [Events.BeforeDockSideChanged]: ChangeEvent,\n  [Events.DockSideChanged]: ChangeEvent,\n  [Events.AfterDockSideChanged]: ChangeEvent,\n};\n\nlet toggleDockActionDelegateInstance: ToggleDockActionDelegate;\n\nexport class ToggleDockActionDelegate implements ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ToggleDockActionDelegate {\n    const {forceNew} = opts;\n    if (!toggleDockActionDelegateInstance || forceNew) {\n      toggleDockActionDelegateInstance = new ToggleDockActionDelegate();\n    }\n\n    return toggleDockActionDelegateInstance;\n  }\n\n  handleAction(_context: Context, _actionId: string): boolean {\n    DockController.instance().toggleDockSide();\n    return true;\n  }\n}\n\nlet closeButtonProviderInstance: CloseButtonProvider;\n\nexport class CloseButtonProvider implements Provider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): CloseButtonProvider {\n    const {forceNew} = opts;\n    if (!closeButtonProviderInstance || forceNew) {\n      closeButtonProviderInstance = new CloseButtonProvider();\n    }\n\n    return closeButtonProviderInstance;\n  }\n\n  item(): ToolbarItem|null {\n    return DockController.instance().closeButton;\n  }\n}\n"]}