{"version":3,"file":"FilterBar.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/FilterBar.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {Icon} from './Icon.js';\nimport {KeyboardShortcut, Modifiers} from './KeyboardShortcut.js';\nimport {bindCheckbox} from './SettingsUI.js';\nimport type {Suggestions} from './SuggestBox.js';\nimport {Events, TextPrompt} from './TextPrompt.js';\nimport type {ToolbarButton} from './Toolbar.js';\nimport {ToolbarSettingToggle} from './Toolbar.js';\nimport {Tooltip} from './Tooltip.js';\nimport {CheckboxLabel, createTextChild} from './UIUtils.js';\nimport {HBox} from './Widget.js';\nimport filterStyles from './filter.css.legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  *@description Text that appears when hover over the filter bar in the Network tool\n  */\n  egSmalldUrlacomb: 'e.g. `/small[\\d]+/ url:a.com/b`',\n  /**\n  *@description Text that appears when hover over the All button in the Network tool\n  *@example {Ctrl + } PH1\n  */\n  sclickToSelectMultipleTypes: '{PH1}Click to select multiple types',\n  /**\n  *@description Text for everything\n  */\n  allStrings: 'All',\n  /**\n   * @description Hover text for button to clear the filter that is applied\n   */\n  clearFilter: 'Clear input',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/FilterBar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class FilterBar extends Common.ObjectWrapper.eventMixin<FilterBarEventTypes, typeof HBox>(HBox) {\n  private enabled: boolean;\n  private readonly stateSetting: Common.Settings.Setting<boolean>;\n  private readonly filterButtonInternal: ToolbarSettingToggle;\n  private filters: FilterUI[];\n  private alwaysShowFilters?: boolean;\n  private showingWidget?: boolean;\n\n  constructor(name: string, visibleByDefault?: boolean) {\n    super();\n    this.registerRequiredCSS(filterStyles);\n    this.enabled = true;\n    this.element.classList.add('filter-bar');\n\n    this.stateSetting =\n        Common.Settings.Settings.instance().createSetting('filterBar-' + name + '-toggled', Boolean(visibleByDefault));\n    this.filterButtonInternal =\n        new ToolbarSettingToggle(this.stateSetting, 'largeicon-filter', i18nString(UIStrings.filter));\n\n    this.filters = [];\n\n    this.updateFilterBar();\n    this.stateSetting.addChangeListener(this.updateFilterBar.bind(this));\n  }\n\n  filterButton(): ToolbarButton {\n    return this.filterButtonInternal;\n  }\n\n  addFilter(filter: FilterUI): void {\n    this.filters.push(filter);\n    this.element.appendChild(filter.element());\n    filter.addEventListener(FilterUIEvents.FilterChanged, this.filterChanged, this);\n    this.updateFilterButton();\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.enabled = enabled;\n    this.filterButtonInternal.setEnabled(enabled);\n    this.updateFilterBar();\n  }\n\n  forceShowFilterBar(): void {\n    this.alwaysShowFilters = true;\n    this.updateFilterBar();\n  }\n\n  showOnce(): void {\n    this.stateSetting.set(true);\n  }\n\n  private filterChanged(): void {\n    this.updateFilterButton();\n    this.dispatchEventToListeners(FilterBarEvents.Changed);\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.updateFilterBar();\n  }\n\n  private updateFilterBar(): void {\n    if (!this.parentWidget() || this.showingWidget) {\n      return;\n    }\n    if (this.visible()) {\n      this.showingWidget = true;\n      this.showWidget();\n      this.showingWidget = false;\n    } else {\n      this.hideWidget();\n    }\n  }\n\n  focus(): void {\n    for (let i = 0; i < this.filters.length; ++i) {\n      if (this.filters[i] instanceof TextFilterUI) {\n        const textFilterUI = (this.filters[i] as TextFilterUI);\n        textFilterUI.focus();\n        break;\n      }\n    }\n  }\n\n  private updateFilterButton(): void {\n    let isActive = false;\n    for (const filter of this.filters) {\n      isActive = isActive || filter.isActive();\n    }\n    this.filterButtonInternal.setDefaultWithRedColor(isActive);\n    this.filterButtonInternal.setToggleWithRedColor(isActive);\n  }\n\n  clear(): void {\n    this.element.removeChildren();\n    this.filters = [];\n    this.updateFilterButton();\n  }\n\n  setting(): Common.Settings.Setting<boolean> {\n    return this.stateSetting;\n  }\n\n  visible(): boolean {\n    return this.alwaysShowFilters || (this.stateSetting.get() && this.enabled);\n  }\n}\n\nexport const enum FilterBarEvents {\n  Changed = 'Changed',\n}\n\nexport type FilterBarEventTypes = {\n  [FilterBarEvents.Changed]: void,\n};\n\nexport interface FilterUI extends Common.EventTarget.EventTarget<FilterUIEventTypes> {\n  isActive(): boolean;\n  element(): Element;\n}\n\nexport const enum FilterUIEvents {\n  FilterChanged = 'FilterChanged',\n}\n\nexport type FilterUIEventTypes = {\n  [FilterUIEvents.FilterChanged]: void,\n};\n\nexport class TextFilterUI extends Common.ObjectWrapper.ObjectWrapper<FilterUIEventTypes> implements FilterUI {\n  private readonly filterElement: HTMLDivElement;\n  private readonly filterInputElement: HTMLElement;\n  private prompt: TextPrompt;\n  private readonly proxyElement: HTMLElement;\n  private suggestionProvider: ((arg0: string, arg1: string, arg2?: boolean|undefined) => Promise<Suggestions>)|null;\n  constructor() {\n    super();\n    this.filterElement = document.createElement('div');\n    this.filterElement.className = 'filter-text-filter';\n\n    const container = this.filterElement.createChild('div', 'filter-input-container');\n    this.filterInputElement = container.createChild('span', 'filter-input-field');\n\n    this.prompt = new TextPrompt();\n    this.prompt.initialize(this.completions.bind(this), ' ', true);\n    this.proxyElement = (this.prompt.attach(this.filterInputElement) as HTMLElement);\n    Tooltip.install(this.proxyElement, i18nString(UIStrings.egSmalldUrlacomb));\n    this.prompt.setPlaceholder(i18nString(UIStrings.filter));\n    this.prompt.addEventListener(Events.TextChanged, this.valueChanged.bind(this));\n\n    this.suggestionProvider = null;\n\n    const clearButton = container.createChild('div', 'filter-input-clear-button');\n    Tooltip.install(clearButton, i18nString(UIStrings.clearFilter));\n    clearButton.appendChild(Icon.create('mediumicon-gray-cross-active', 'filter-cancel-button'));\n    clearButton.addEventListener('click', () => {\n      this.clear();\n      this.focus();\n    });\n    this.updateEmptyStyles();\n  }\n\n  private completions(expression: string, prefix: string, force?: boolean): Promise<Suggestions> {\n    if (this.suggestionProvider) {\n      return this.suggestionProvider(expression, prefix, force);\n    }\n    return Promise.resolve([]);\n  }\n  isActive(): boolean {\n    return Boolean(this.prompt.text());\n  }\n\n  element(): Element {\n    return this.filterElement;\n  }\n\n  value(): string {\n    return this.prompt.textWithCurrentSuggestion();\n  }\n\n  setValue(value: string): void {\n    this.prompt.setText(value);\n    this.valueChanged();\n  }\n\n  focus(): void {\n    this.filterInputElement.focus();\n  }\n\n  setSuggestionProvider(\n      suggestionProvider: (arg0: string, arg1: string, arg2?: boolean|undefined) => Promise<Suggestions>): void {\n    this.prompt.clearAutocomplete();\n    this.suggestionProvider = suggestionProvider;\n  }\n\n  private valueChanged(): void {\n    this.dispatchEventToListeners(FilterUIEvents.FilterChanged);\n    this.updateEmptyStyles();\n  }\n\n  private updateEmptyStyles(): void {\n    this.filterElement.classList.toggle('filter-text-empty', !this.prompt.text());\n  }\n\n  clear(): void {\n    this.setValue('');\n  }\n}\n\nexport class NamedBitSetFilterUI extends Common.ObjectWrapper.ObjectWrapper<FilterUIEventTypes> implements FilterUI {\n  private readonly filtersElement: HTMLDivElement;\n  private readonly typeFilterElementTypeNames: WeakMap<HTMLElement, string>;\n  private allowedTypes: Set<string>;\n  private readonly typeFilterElements: HTMLElement[];\n  private readonly setting: Common.Settings.Setting<{[key: string]: boolean}>|undefined;\n\n  constructor(items: Item[], setting?: Common.Settings.Setting<{[key: string]: boolean}>) {\n    super();\n    this.filtersElement = document.createElement('div');\n    this.filtersElement.classList.add('filter-bitset-filter');\n    ARIAUtils.markAsListBox(this.filtersElement);\n    ARIAUtils.markAsMultiSelectable(this.filtersElement);\n    Tooltip.install(this.filtersElement, i18nString(UIStrings.sclickToSelectMultipleTypes, {\n                      PH1: KeyboardShortcut.shortcutToString('', Modifiers.CtrlOrMeta),\n                    }));\n\n    this.typeFilterElementTypeNames = new WeakMap();\n    this.allowedTypes = new Set();\n    this.typeFilterElements = [];\n    this.addBit(NamedBitSetFilterUI.ALL_TYPES, i18nString(UIStrings.allStrings));\n    this.typeFilterElements[0].tabIndex = 0;\n    this.filtersElement.createChild('div', 'filter-bitset-filter-divider');\n\n    for (let i = 0; i < items.length; ++i) {\n      this.addBit(items[i].name, items[i].label(), items[i].title);\n    }\n\n    if (setting) {\n      this.setting = setting;\n      setting.addChangeListener(this.settingChanged.bind(this));\n      this.settingChanged();\n    } else {\n      this.toggleTypeFilter(NamedBitSetFilterUI.ALL_TYPES, false /* allowMultiSelect */);\n    }\n  }\n\n  reset(): void {\n    this.toggleTypeFilter(NamedBitSetFilterUI.ALL_TYPES, false /* allowMultiSelect */);\n  }\n\n  isActive(): boolean {\n    return !this.allowedTypes.has(NamedBitSetFilterUI.ALL_TYPES);\n  }\n\n  element(): Element {\n    return this.filtersElement;\n  }\n\n  accept(typeName: string): boolean {\n    return this.allowedTypes.has(NamedBitSetFilterUI.ALL_TYPES) || this.allowedTypes.has(typeName);\n  }\n\n  private settingChanged(): void {\n    const allowedTypesFromSetting = (this.setting as Common.Settings.Setting<{[key: string]: boolean}>).get();\n    this.allowedTypes = new Set();\n    for (const element of this.typeFilterElements) {\n      const typeName = this.typeFilterElementTypeNames.get(element);\n      if (typeName && allowedTypesFromSetting[typeName]) {\n        this.allowedTypes.add(typeName);\n      }\n    }\n    this.update();\n  }\n\n  private update(): void {\n    if (this.allowedTypes.size === 0 || this.allowedTypes.has(NamedBitSetFilterUI.ALL_TYPES)) {\n      this.allowedTypes = new Set();\n      this.allowedTypes.add(NamedBitSetFilterUI.ALL_TYPES);\n    }\n    for (const element of this.typeFilterElements) {\n      const typeName = this.typeFilterElementTypeNames.get(element);\n      const active = this.allowedTypes.has(typeName || '');\n      element.classList.toggle('selected', active);\n      ARIAUtils.setSelected(element, active);\n    }\n    this.dispatchEventToListeners(FilterUIEvents.FilterChanged);\n  }\n\n  private addBit(name: string, label: string, title?: string): void {\n    const typeFilterElement = (this.filtersElement.createChild('span', name) as HTMLElement);\n    typeFilterElement.tabIndex = -1;\n    this.typeFilterElementTypeNames.set(typeFilterElement, name);\n    createTextChild(typeFilterElement, label);\n    ARIAUtils.markAsOption(typeFilterElement);\n    if (title) {\n      typeFilterElement.title = title;\n    }\n    typeFilterElement.addEventListener('click', this.onTypeFilterClicked.bind(this), false);\n    typeFilterElement.addEventListener('keydown', this.onTypeFilterKeydown.bind(this), false);\n    this.typeFilterElements.push(typeFilterElement);\n  }\n\n  private onTypeFilterClicked(event: Event): void {\n    const e = (event as KeyboardEvent);\n    let toggle;\n    if (Host.Platform.isMac()) {\n      toggle = e.metaKey && !e.ctrlKey && !e.altKey && !e.shiftKey;\n    } else {\n      toggle = e.ctrlKey && !e.metaKey && !e.altKey && !e.shiftKey;\n    }\n    if (e.target) {\n      const element = (e.target as HTMLElement);\n      const typeName = (this.typeFilterElementTypeNames.get(element) as string);\n      this.toggleTypeFilter(typeName, toggle);\n    }\n  }\n\n  private onTypeFilterKeydown(ev: Event): void {\n    const event = (ev as KeyboardEvent);\n    const element = (event.target as HTMLElement | null);\n    if (!element) {\n      return;\n    }\n\n    if (event.key === 'ArrowLeft' || event.key === 'ArrowUp') {\n      if (this.keyFocusNextBit(element, true /* selectPrevious */)) {\n        event.consume(true);\n      }\n    } else if (event.key === 'ArrowRight' || event.key === 'ArrowDown') {\n      if (this.keyFocusNextBit(element, false /* selectPrevious */)) {\n        event.consume(true);\n      }\n    } else if (isEnterOrSpaceKey(event)) {\n      this.onTypeFilterClicked(event);\n    }\n  }\n\n  private keyFocusNextBit(target: HTMLElement, selectPrevious: boolean): boolean {\n    const index = this.typeFilterElements.indexOf(target);\n    if (index === -1) {\n      return false;\n    }\n    const nextIndex = selectPrevious ? index - 1 : index + 1;\n    if (nextIndex < 0 || nextIndex >= this.typeFilterElements.length) {\n      return false;\n    }\n\n    const nextElement = this.typeFilterElements[nextIndex];\n    nextElement.tabIndex = 0;\n    target.tabIndex = -1;\n    nextElement.focus();\n    return true;\n  }\n\n  private toggleTypeFilter(typeName: string, allowMultiSelect: boolean): void {\n    if (allowMultiSelect && typeName !== NamedBitSetFilterUI.ALL_TYPES) {\n      this.allowedTypes.delete(NamedBitSetFilterUI.ALL_TYPES);\n    } else {\n      this.allowedTypes = new Set();\n    }\n\n    if (this.allowedTypes.has(typeName)) {\n      this.allowedTypes.delete(typeName);\n    } else {\n      this.allowedTypes.add(typeName);\n    }\n\n    if (this.setting) {\n      // Settings do not support `Sets` so convert it back to the Map-like object.\n      const updatedSetting = ({} as {[key: string]: boolean});\n      for (const type of this.allowedTypes) {\n        updatedSetting[type] = true;\n      }\n      this.setting.set(updatedSetting);\n    } else {\n      this.update();\n    }\n  }\n\n  static readonly ALL_TYPES = 'all';\n}\n\nexport class CheckboxFilterUI extends Common.ObjectWrapper.ObjectWrapper<FilterUIEventTypes> implements FilterUI {\n  private readonly filterElement: HTMLDivElement;\n  private readonly activeWhenChecked: boolean;\n  private label: CheckboxLabel;\n  private checkboxElement: HTMLInputElement;\n  constructor(\n      className: string, title: string, activeWhenChecked?: boolean, setting?: Common.Settings.Setting<boolean>) {\n    super();\n    this.filterElement = document.createElement('div');\n    this.filterElement.classList.add('filter-checkbox-filter');\n    this.activeWhenChecked = Boolean(activeWhenChecked);\n    this.label = CheckboxLabel.create(title);\n    this.filterElement.appendChild(this.label);\n    this.checkboxElement = this.label.checkboxElement;\n    if (setting) {\n      bindCheckbox(this.checkboxElement, setting);\n    } else {\n      this.checkboxElement.checked = true;\n    }\n    this.checkboxElement.addEventListener('change', this.fireUpdated.bind(this), false);\n  }\n\n  isActive(): boolean {\n    return this.activeWhenChecked === this.checkboxElement.checked;\n  }\n\n  checked(): boolean {\n    return this.checkboxElement.checked;\n  }\n\n  setChecked(checked: boolean): void {\n    this.checkboxElement.checked = checked;\n  }\n\n  element(): HTMLDivElement {\n    return this.filterElement;\n  }\n\n  labelElement(): Element {\n    return this.label;\n  }\n\n  private fireUpdated(): void {\n    this.dispatchEventToListeners(FilterUIEvents.FilterChanged);\n  }\n\n  setColor(backgroundColor: string, borderColor: string): void {\n    this.label.backgroundColor = backgroundColor;\n    this.label.borderColor = borderColor;\n  }\n}\nexport interface Item {\n  name: string;\n  label: () => string;\n  title?: string;\n}\n"]}