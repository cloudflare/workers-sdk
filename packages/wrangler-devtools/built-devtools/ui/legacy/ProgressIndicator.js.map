{"version":3,"file":"ProgressIndicator.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ProgressIndicator.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAGH,OAAO,KAAK,KAAK,MAAM,kBAAkB,CAAC;AAC1C,OAAO,uBAAuB,MAAM,mCAAmC,CAAC;AAExE,MAAM,OAAO,iBAAiB;IAC5B,OAAO,CAAiB;IACP,UAAU,CAAa;IACvB,cAAc,CAAU;IACjC,YAAY,CAAU;IACtB,eAAe,CAAsB;IAC5B,UAAU,CAAU;IAC7B,kBAAkB,CAAU;IAC5B,MAAM,CAAS;IACf,MAAM,CAAW;IAEzB;QACE,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,8BAA8B,CAClD,IAAI,CAAC,OAAO,EAAE,EAAC,OAAO,EAAE,uBAAuB,EAAE,cAAc,EAAE,SAAS,EAAC,CAAC,CAAC;QACjF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,qCAAqC,CAAC,CAAC;QAEhG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACpE,IAAI,CAAC,eAAe,GAAI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,UAAU,CAAyB,CAAC;QAC5F,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,EAAE,uCAAuC,CAAC,CAAC;QACrG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAElE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,CAAC;IAED,IAAI,CAAC,MAAe;QAClB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO;SACR;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,KAAK,CAAC;IACxC,CAAC;IAED,YAAY,CAAC,SAAiB;QAC5B,IAAI,CAAC,eAAe,CAAC,GAAG,GAAG,SAAS,CAAC;IACvC,CAAC;IAED,SAAS,CAAC,MAAc,EAAE,KAAc;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,MAAM,CAAC;QACpC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC;IAED,eAAe,CAAC,MAAe;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;CACF","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Utils from './utils/utils.js';\nimport progressIndicatorStyles from './progressIndicator.css.legacy.js';\n\nexport class ProgressIndicator implements Common.Progress.Progress {\n  element: HTMLDivElement;\n  private readonly shadowRoot: ShadowRoot;\n  private readonly contentElement: Element;\n  private labelElement: Element;\n  private progressElement: HTMLProgressElement;\n  private readonly stopButton: Element;\n  private isCanceledInternal: boolean;\n  private worked: number;\n  private isDone?: boolean;\n\n  constructor() {\n    this.element = document.createElement('div');\n    this.element.classList.add('progress-indicator');\n    this.shadowRoot = Utils.createShadowRootWithCoreStyles(\n        this.element, {cssFile: progressIndicatorStyles, delegatesFocus: undefined});\n    this.contentElement = this.shadowRoot.createChild('div', 'progress-indicator-shadow-container');\n\n    this.labelElement = this.contentElement.createChild('div', 'title');\n    this.progressElement = (this.contentElement.createChild('progress') as HTMLProgressElement);\n    this.progressElement.value = 0;\n    this.stopButton = this.contentElement.createChild('button', 'progress-indicator-shadow-stop-button');\n    this.stopButton.addEventListener('click', this.cancel.bind(this));\n\n    this.isCanceledInternal = false;\n    this.worked = 0;\n  }\n\n  show(parent: Element): void {\n    parent.appendChild(this.element);\n  }\n\n  done(): void {\n    if (this.isDone) {\n      return;\n    }\n    this.isDone = true;\n    this.element.remove();\n  }\n\n  cancel(): void {\n    this.isCanceledInternal = true;\n  }\n\n  isCanceled(): boolean {\n    return this.isCanceledInternal;\n  }\n\n  setTitle(title: string): void {\n    this.labelElement.textContent = title;\n  }\n\n  setTotalWork(totalWork: number): void {\n    this.progressElement.max = totalWork;\n  }\n\n  setWorked(worked: number, title?: string): void {\n    this.worked = worked;\n    this.progressElement.value = worked;\n    if (title) {\n      this.setTitle(title);\n    }\n  }\n\n  incrementWorked(worked?: number): void {\n    this.setWorked(this.worked + (worked || 1));\n  }\n}\n"]}