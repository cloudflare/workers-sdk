{"version":3,"file":"DropTarget.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/DropTarget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport dropTargetStyles from './dropTarget.css.legacy.js';\nimport * as Utils from './utils/utils.js';\n\nexport class DropTarget {\n  private element: Element;\n  private readonly transferTypes: {\n    kind: string,\n    type: RegExp,\n  }[];\n  private messageText: string;\n  private readonly handleDrop: (arg0: DataTransfer) => void;\n  private enabled: boolean;\n  private dragMaskElement: Element|null;\n\n  constructor(\n      element: Element, transferTypes: {\n        kind: string,\n        type: RegExp,\n      }[],\n      messageText: string, handleDrop: (arg0: DataTransfer) => void) {\n    element.addEventListener('dragenter', this.onDragEnter.bind(this), true);\n    element.addEventListener('dragover', this.onDragOver.bind(this), true);\n    this.element = element;\n    this.transferTypes = transferTypes;\n    this.messageText = messageText;\n    this.handleDrop = handleDrop;\n    this.enabled = true;\n    this.dragMaskElement = null;\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.enabled = enabled;\n  }\n\n  private onDragEnter(event: Event): void {\n    if (this.enabled && this.hasMatchingType(event)) {\n      event.consume(true);\n    }\n  }\n\n  private hasMatchingType(ev: Event): boolean {\n    const event = (ev as DragEvent);\n    if (!event.dataTransfer) {\n      return false;\n    }\n    for (const transferType of this.transferTypes) {\n      const found = Array.from(event.dataTransfer.items).find(item => {\n        return transferType.kind === item.kind && Boolean(transferType.type.exec(item.type));\n      });\n      if (found) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private onDragOver(ev: Event): void {\n    const event = (ev as DragEvent);\n    if (!this.enabled || !this.hasMatchingType(event)) {\n      return;\n    }\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    event.consume(true);\n    if (this.dragMaskElement) {\n      return;\n    }\n    this.dragMaskElement = this.element.createChild('div', '');\n    const shadowRoot = Utils.createShadowRootWithCoreStyles(\n        this.dragMaskElement, {cssFile: dropTargetStyles, delegatesFocus: undefined});\n    shadowRoot.createChild('div', 'drop-target-message').textContent = this.messageText;\n    this.dragMaskElement.addEventListener('drop', this.onDrop.bind(this), true);\n    this.dragMaskElement.addEventListener('dragleave', this.onDragLeave.bind(this), true);\n  }\n\n  private onDrop(ev: Event): void {\n    const event = (ev as DragEvent);\n    event.consume(true);\n    this.removeMask();\n    if (this.enabled && event.dataTransfer) {\n      this.handleDrop(event.dataTransfer);\n    }\n  }\n\n  private onDragLeave(event: Event): void {\n    event.consume(true);\n    this.removeMask();\n  }\n\n  private removeMask(): void {\n    if (this.dragMaskElement) {\n      this.dragMaskElement.remove();\n      this.dragMaskElement = null;\n    }\n  }\n}\n\nexport const Type = {\n  URI: {kind: 'string', type: /text\\/uri-list/},\n  Folder: {kind: 'file', type: /$^/},\n  File: {kind: 'file', type: /.*/},\n  WebFile: {kind: 'file', type: /[\\w]+/},\n  ImageFile: {kind: 'file', type: /image\\/.*/},\n};\n"]}