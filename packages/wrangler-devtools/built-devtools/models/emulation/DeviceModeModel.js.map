{"version":3,"file":"DeviceModeModel.js","sourceRoot":"","sources":["../../../../../../front_end/models/emulation/DeviceModeModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {EmulatedDevice, Mode} from './EmulatedDevices.js';\nimport {Horizontal, HorizontalSpanned, Vertical, VerticalSpanned} from './EmulatedDevices.js';\n\nconst UIStrings = {\n  /**\n  * @description Error message shown in the Devices settings pane when the user enters an invalid\n  * width for a custom device.\n  */\n  widthMustBeANumber: 'Width must be a number.',\n  /**\n  * @description Error message shown in the Devices settings pane when the user has entered a width\n  * for a custom device that is too large.\n  * @example {9999} PH1\n  */\n  widthMustBeLessThanOrEqualToS: 'Width must be less than or equal to {PH1}.',\n  /**\n  * @description Error message shown in the Devices settings pane when the user has entered a width\n  * for a custom device that is too small.\n  * @example {50} PH1\n  */\n  widthMustBeGreaterThanOrEqualToS: 'Width must be greater than or equal to {PH1}.',\n  /**\n  * @description Error message shown in the Devices settings pane when the user enters an invalid\n  * height for a custom device.\n  */\n  heightMustBeANumber: 'Height must be a number.',\n  /**\n  * @description Error message shown in the Devices settings pane when the user has entered a height\n  * for a custom device that is too large.\n  * @example {9999} PH1\n  */\n  heightMustBeLessThanOrEqualToS: 'Height must be less than or equal to {PH1}.',\n  /**\n  * @description Error message shown in the Devices settings pane when the user has entered a height\n  * for a custom device that is too small.\n  * @example {50} PH1\n  */\n  heightMustBeGreaterThanOrEqualTo: 'Height must be greater than or equal to {PH1}.',\n  /**\n  * @description Error message shown in the Devices settings pane when the user enters an invalid\n  * device pixel ratio for a custom device.\n  */\n  devicePixelRatioMustBeANumberOr: 'Device pixel ratio must be a number or blank.',\n  /**\n  * @description Error message shown in the Devices settings pane when the user enters a device\n  * pixel ratio for a custom device that is too large.\n  * @example {10} PH1\n  */\n  devicePixelRatioMustBeLessThanOr: 'Device pixel ratio must be less than or equal to {PH1}.',\n  /**\n  * @description Error message shown in the Devices settings pane when the user enters a device\n  * pixel ratio for a custom device that is too small.\n  * @example {0} PH1\n  */\n  devicePixelRatioMustBeGreater: 'Device pixel ratio must be greater than or equal to {PH1}.',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/emulation/DeviceModeModel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet deviceModeModelInstance: DeviceModeModel;\n\nexport class DeviceModeModel extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    SDK.TargetManager.SDKModelObserver<SDK.EmulationModel.EmulationModel> {\n  #screenRectInternal: Rect;\n  #visiblePageRectInternal: Rect;\n  #availableSize: UI.Geometry.Size;\n  #preferredSize: UI.Geometry.Size;\n  #initialized: boolean;\n  #appliedDeviceSizeInternal: UI.Geometry.Size;\n  #appliedDeviceScaleFactorInternal: number;\n  #appliedUserAgentTypeInternal: UA;\n  readonly #experimentDualScreenSupport: boolean;\n  readonly #webPlatformExperimentalFeaturesEnabledInternal: boolean;\n  readonly #scaleSettingInternal: Common.Settings.Setting<number>;\n  #scaleInternal: number;\n  #widthSetting: Common.Settings.Setting<number>;\n  #heightSetting: Common.Settings.Setting<number>;\n  #uaSettingInternal: Common.Settings.Setting<UA>;\n  readonly #deviceScaleFactorSettingInternal: Common.Settings.Setting<number>;\n  readonly #deviceOutlineSettingInternal: Common.Settings.Setting<boolean>;\n  readonly #toolbarControlsEnabledSettingInternal: Common.Settings.Setting<boolean>;\n  #typeInternal: Type;\n  #deviceInternal: EmulatedDevice|null;\n  #modeInternal: Mode|null;\n  #fitScaleInternal: number;\n  #touchEnabled: boolean;\n  #touchMobile: boolean;\n  #emulationModel: SDK.EmulationModel.EmulationModel|null;\n  #onModelAvailable: (() => void)|null;\n  #outlineRectInternal?: Rect;\n\n  private constructor() {\n    super();\n    this.#screenRectInternal = new Rect(0, 0, 1, 1);\n    this.#visiblePageRectInternal = new Rect(0, 0, 1, 1);\n    this.#availableSize = new UI.Geometry.Size(1, 1);\n    this.#preferredSize = new UI.Geometry.Size(1, 1);\n    this.#initialized = false;\n    this.#appliedDeviceSizeInternal = new UI.Geometry.Size(1, 1);\n    this.#appliedDeviceScaleFactorInternal = window.devicePixelRatio;\n    this.#appliedUserAgentTypeInternal = UA.Desktop;\n    this.#experimentDualScreenSupport = Root.Runtime.experiments.isEnabled('dualScreenSupport');\n    this.#webPlatformExperimentalFeaturesEnabledInternal = 'segments' in window.visualViewport;\n\n    this.#scaleSettingInternal = Common.Settings.Settings.instance().createSetting('emulation.deviceScale', 1);\n    // We've used to allow zero before.\n    if (!this.#scaleSettingInternal.get()) {\n      this.#scaleSettingInternal.set(1);\n    }\n    this.#scaleSettingInternal.addChangeListener(this.scaleSettingChanged, this);\n    this.#scaleInternal = 1;\n\n    this.#widthSetting = Common.Settings.Settings.instance().createSetting('emulation.deviceWidth', 400);\n    if (this.#widthSetting.get() < MinDeviceSize) {\n      this.#widthSetting.set(MinDeviceSize);\n    }\n    if (this.#widthSetting.get() > MaxDeviceSize) {\n      this.#widthSetting.set(MaxDeviceSize);\n    }\n    this.#widthSetting.addChangeListener(this.widthSettingChanged, this);\n\n    this.#heightSetting = Common.Settings.Settings.instance().createSetting('emulation.deviceHeight', 0);\n    if (this.#heightSetting.get() && this.#heightSetting.get() < MinDeviceSize) {\n      this.#heightSetting.set(MinDeviceSize);\n    }\n    if (this.#heightSetting.get() > MaxDeviceSize) {\n      this.#heightSetting.set(MaxDeviceSize);\n    }\n    this.#heightSetting.addChangeListener(this.heightSettingChanged, this);\n\n    this.#uaSettingInternal = Common.Settings.Settings.instance().createSetting('emulation.deviceUA', UA.Mobile);\n    this.#uaSettingInternal.addChangeListener(this.uaSettingChanged, this);\n    this.#deviceScaleFactorSettingInternal =\n        Common.Settings.Settings.instance().createSetting('emulation.deviceScaleFactor', 0);\n    this.#deviceScaleFactorSettingInternal.addChangeListener(this.deviceScaleFactorSettingChanged, this);\n\n    this.#deviceOutlineSettingInternal =\n        Common.Settings.Settings.instance().moduleSetting('emulation.showDeviceOutline');\n    this.#deviceOutlineSettingInternal.addChangeListener(this.deviceOutlineSettingChanged, this);\n\n    this.#toolbarControlsEnabledSettingInternal = Common.Settings.Settings.instance().createSetting(\n        'emulation.toolbarControlsEnabled', true, Common.Settings.SettingStorageType.Session);\n\n    this.#typeInternal = Type.None;\n    this.#deviceInternal = null;\n    this.#modeInternal = null;\n    this.#fitScaleInternal = 1;\n    this.#touchEnabled = false;\n    this.#touchMobile = false;\n\n    this.#emulationModel = null;\n    this.#onModelAvailable = null;\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.EmulationModel.EmulationModel, this);\n  }\n\n  static instance(opts: {\n    forceNew: null,\n  } = {forceNew: null}): DeviceModeModel {\n    if (!deviceModeModelInstance || opts.forceNew) {\n      deviceModeModelInstance = new DeviceModeModel();\n    }\n\n    return deviceModeModelInstance;\n  }\n\n  static widthValidator(value: string): {\n    valid: boolean,\n    errorMessage: (string|undefined),\n  } {\n    let valid = false;\n    let errorMessage;\n\n    if (!/^[\\d]+$/.test(value)) {\n      errorMessage = i18nString(UIStrings.widthMustBeANumber);\n    } else if (Number(value) > MaxDeviceSize) {\n      errorMessage = i18nString(UIStrings.widthMustBeLessThanOrEqualToS, {PH1: MaxDeviceSize});\n    } else if (Number(value) < MinDeviceSize) {\n      errorMessage = i18nString(UIStrings.widthMustBeGreaterThanOrEqualToS, {PH1: MinDeviceSize});\n    } else {\n      valid = true;\n    }\n\n    return {valid, errorMessage};\n  }\n\n  static heightValidator(value: string): {\n    valid: boolean,\n    errorMessage: (string|undefined),\n  } {\n    let valid = false;\n    let errorMessage;\n\n    if (!/^[\\d]+$/.test(value)) {\n      errorMessage = i18nString(UIStrings.heightMustBeANumber);\n    } else if (Number(value) > MaxDeviceSize) {\n      errorMessage = i18nString(UIStrings.heightMustBeLessThanOrEqualToS, {PH1: MaxDeviceSize});\n    } else if (Number(value) < MinDeviceSize) {\n      errorMessage = i18nString(UIStrings.heightMustBeGreaterThanOrEqualTo, {PH1: MinDeviceSize});\n    } else {\n      valid = true;\n    }\n\n    return {valid, errorMessage};\n  }\n\n  static scaleValidator(value: string): {\n    valid: boolean,\n    errorMessage: (string|undefined),\n  } {\n    let valid = false;\n    let errorMessage;\n    const parsedValue = Number(value.trim());\n\n    if (!value) {\n      valid = true;\n    } else if (Number.isNaN(parsedValue)) {\n      errorMessage = i18nString(UIStrings.devicePixelRatioMustBeANumberOr);\n    } else if (Number(value) > MaxDeviceScaleFactor) {\n      errorMessage = i18nString(UIStrings.devicePixelRatioMustBeLessThanOr, {PH1: MaxDeviceScaleFactor});\n    } else if (Number(value) < MinDeviceScaleFactor) {\n      errorMessage = i18nString(UIStrings.devicePixelRatioMustBeGreater, {PH1: MinDeviceScaleFactor});\n    } else {\n      valid = true;\n    }\n\n    return {valid, errorMessage};\n  }\n\n  get scaleSettingInternal(): Common.Settings.Setting<number> {\n    return this.#scaleSettingInternal;\n  }\n\n  setAvailableSize(availableSize: UI.Geometry.Size, preferredSize: UI.Geometry.Size): void {\n    this.#availableSize = availableSize;\n    this.#preferredSize = preferredSize;\n    this.#initialized = true;\n    this.calculateAndEmulate(false);\n  }\n\n  emulate(type: Type, device: EmulatedDevice|null, mode: Mode|null, scale?: number): void {\n    const resetPageScaleFactor =\n        this.#typeInternal !== type || this.#deviceInternal !== device || this.#modeInternal !== mode;\n    this.#typeInternal = type;\n\n    if (type === Type.Device && device && mode) {\n      console.assert(Boolean(device) && Boolean(mode), 'Must pass device and mode for device emulation');\n      this.#modeInternal = mode;\n      this.#deviceInternal = device;\n      if (this.#initialized) {\n        const orientation = device.orientationByName(mode.orientation);\n        this.#scaleSettingInternal.set(\n            scale ||\n            this.calculateFitScale(orientation.width, orientation.height, this.currentOutline(), this.currentInsets()));\n      }\n    } else {\n      this.#deviceInternal = null;\n      this.#modeInternal = null;\n    }\n\n    if (type !== Type.None) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.DeviceModeEnabled);\n    }\n    this.calculateAndEmulate(resetPageScaleFactor);\n  }\n\n  setWidth(width: number): void {\n    const max = Math.min(MaxDeviceSize, this.preferredScaledWidth());\n    width = Math.max(Math.min(width, max), 1);\n    this.#widthSetting.set(width);\n  }\n\n  setWidthAndScaleToFit(width: number): void {\n    width = Math.max(Math.min(width, MaxDeviceSize), 1);\n    this.#scaleSettingInternal.set(this.calculateFitScale(width, this.#heightSetting.get()));\n    this.#widthSetting.set(width);\n  }\n\n  setHeight(height: number): void {\n    const max = Math.min(MaxDeviceSize, this.preferredScaledHeight());\n    height = Math.max(Math.min(height, max), 0);\n    if (height === this.preferredScaledHeight()) {\n      height = 0;\n    }\n    this.#heightSetting.set(height);\n  }\n\n  setHeightAndScaleToFit(height: number): void {\n    height = Math.max(Math.min(height, MaxDeviceSize), 0);\n    this.#scaleSettingInternal.set(this.calculateFitScale(this.#widthSetting.get(), height));\n    this.#heightSetting.set(height);\n  }\n\n  setScale(scale: number): void {\n    this.#scaleSettingInternal.set(scale);\n  }\n\n  device(): EmulatedDevice|null {\n    return this.#deviceInternal;\n  }\n\n  mode(): Mode|null {\n    return this.#modeInternal;\n  }\n\n  type(): Type {\n    return this.#typeInternal;\n  }\n\n  screenImage(): string {\n    return (this.#deviceInternal && this.#modeInternal) ? this.#deviceInternal.modeImage(this.#modeInternal) : '';\n  }\n\n  outlineImage(): string {\n    return (this.#deviceInternal && this.#modeInternal && this.#deviceOutlineSettingInternal.get()) ?\n        this.#deviceInternal.outlineImage(this.#modeInternal) :\n        '';\n  }\n\n  outlineRect(): Rect|null {\n    return this.#outlineRectInternal || null;\n  }\n\n  screenRect(): Rect {\n    return this.#screenRectInternal;\n  }\n\n  visiblePageRect(): Rect {\n    return this.#visiblePageRectInternal;\n  }\n\n  scale(): number {\n    return this.#scaleInternal;\n  }\n\n  fitScale(): number {\n    return this.#fitScaleInternal;\n  }\n\n  appliedDeviceSize(): UI.Geometry.Size {\n    return this.#appliedDeviceSizeInternal;\n  }\n\n  appliedDeviceScaleFactor(): number {\n    return this.#appliedDeviceScaleFactorInternal;\n  }\n\n  appliedUserAgentType(): UA {\n    return this.#appliedUserAgentTypeInternal;\n  }\n\n  isFullHeight(): boolean {\n    return !this.#heightSetting.get();\n  }\n\n  private isMobile(): boolean {\n    switch (this.#typeInternal) {\n      case Type.Device:\n        return this.#deviceInternal ? this.#deviceInternal.mobile() : false;\n      case Type.None:\n        return false;\n      case Type.Responsive:\n        return this.#uaSettingInternal.get() === UA.Mobile || this.#uaSettingInternal.get() === UA.MobileNoTouch;\n    }\n    return false;\n  }\n\n  enabledSetting(): Common.Settings.Setting<boolean> {\n    return Common.Settings.Settings.instance().createSetting('emulation.showDeviceMode', false);\n  }\n\n  scaleSetting(): Common.Settings.Setting<number> {\n    return this.#scaleSettingInternal;\n  }\n\n  uaSetting(): Common.Settings.Setting<UA> {\n    return this.#uaSettingInternal;\n  }\n\n  deviceScaleFactorSetting(): Common.Settings.Setting<number> {\n    return this.#deviceScaleFactorSettingInternal;\n  }\n\n  deviceOutlineSetting(): Common.Settings.Setting<boolean> {\n    return this.#deviceOutlineSettingInternal;\n  }\n\n  toolbarControlsEnabledSetting(): Common.Settings.Setting<boolean> {\n    return this.#toolbarControlsEnabledSettingInternal;\n  }\n\n  reset(): void {\n    this.#deviceScaleFactorSettingInternal.set(0);\n    this.#scaleSettingInternal.set(1);\n    this.setWidth(400);\n    this.setHeight(0);\n    this.#uaSettingInternal.set(UA.Mobile);\n  }\n\n  modelAdded(emulationModel: SDK.EmulationModel.EmulationModel): void {\n    if (!this.#emulationModel && emulationModel.supportsDeviceEmulation()) {\n      this.#emulationModel = emulationModel;\n      if (this.#onModelAvailable) {\n        const callback = this.#onModelAvailable;\n        this.#onModelAvailable = null;\n        callback();\n      }\n      const resourceTreeModel = emulationModel.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n      if (resourceTreeModel) {\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameResized, this.onFrameChange, this);\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, this.onFrameChange, this);\n      }\n    } else {\n      void emulationModel.emulateTouch(this.#touchEnabled, this.#touchMobile);\n    }\n  }\n\n  modelRemoved(emulationModel: SDK.EmulationModel.EmulationModel): void {\n    if (this.#emulationModel === emulationModel) {\n      this.#emulationModel = null;\n    }\n  }\n\n  inspectedURL(): string|null {\n    return this.#emulationModel ? this.#emulationModel.target().inspectedURL() : null;\n  }\n\n  private onFrameChange(): void {\n    const overlayModel = this.#emulationModel ? this.#emulationModel.overlayModel() : null;\n    if (!overlayModel) {\n      return;\n    }\n\n    this.showHingeIfApplicable(overlayModel);\n  }\n\n  private scaleSettingChanged(): void {\n    this.calculateAndEmulate(false);\n  }\n\n  private widthSettingChanged(): void {\n    this.calculateAndEmulate(false);\n  }\n\n  private heightSettingChanged(): void {\n    this.calculateAndEmulate(false);\n  }\n\n  private uaSettingChanged(): void {\n    this.calculateAndEmulate(true);\n  }\n\n  private deviceScaleFactorSettingChanged(): void {\n    this.calculateAndEmulate(false);\n  }\n\n  private deviceOutlineSettingChanged(): void {\n    this.calculateAndEmulate(false);\n  }\n\n  private preferredScaledWidth(): number {\n    return Math.floor(this.#preferredSize.width / (this.#scaleSettingInternal.get() || 1));\n  }\n\n  private preferredScaledHeight(): number {\n    return Math.floor(this.#preferredSize.height / (this.#scaleSettingInternal.get() || 1));\n  }\n\n  private currentOutline(): Insets {\n    let outline: Insets = new Insets(0, 0, 0, 0);\n    if (this.#typeInternal !== Type.Device || !this.#deviceInternal || !this.#modeInternal) {\n      return outline;\n    }\n    const orientation = this.#deviceInternal.orientationByName(this.#modeInternal.orientation);\n    if (this.#deviceOutlineSettingInternal.get()) {\n      outline = orientation.outlineInsets || outline;\n    }\n    return outline;\n  }\n\n  private currentInsets(): Insets {\n    if (this.#typeInternal !== Type.Device || !this.#modeInternal) {\n      return new Insets(0, 0, 0, 0);\n    }\n    return this.#modeInternal.insets;\n  }\n\n  private getScreenOrientationType(): Protocol.Emulation.ScreenOrientationType {\n    if (!this.#modeInternal) {\n      throw new Error('Mode required to get orientation type.');\n    }\n    switch (this.#modeInternal.orientation) {\n      case VerticalSpanned:\n      case Vertical:\n        return Protocol.Emulation.ScreenOrientationType.PortraitPrimary;\n      case HorizontalSpanned:\n      case Horizontal:\n      default:\n        return Protocol.Emulation.ScreenOrientationType.LandscapePrimary;\n    }\n  }\n\n  private calculateAndEmulate(resetPageScaleFactor: boolean): void {\n    if (!this.#emulationModel) {\n      this.#onModelAvailable = this.calculateAndEmulate.bind(this, resetPageScaleFactor);\n    }\n    const mobile = this.isMobile();\n    const overlayModel = this.#emulationModel ? this.#emulationModel.overlayModel() : null;\n    if (overlayModel) {\n      this.showHingeIfApplicable(overlayModel);\n    }\n    if (this.#typeInternal === Type.Device && this.#deviceInternal && this.#modeInternal) {\n      const orientation = this.#deviceInternal.orientationByName(this.#modeInternal.orientation);\n      const outline = this.currentOutline();\n      const insets = this.currentInsets();\n      this.#fitScaleInternal = this.calculateFitScale(orientation.width, orientation.height, outline, insets);\n      if (mobile) {\n        this.#appliedUserAgentTypeInternal = this.#deviceInternal.touch() ? UA.Mobile : UA.MobileNoTouch;\n      } else {\n        this.#appliedUserAgentTypeInternal = this.#deviceInternal.touch() ? UA.DesktopTouch : UA.Desktop;\n      }\n      this.applyDeviceMetrics(\n          new UI.Geometry.Size(orientation.width, orientation.height), insets, outline,\n          this.#scaleSettingInternal.get(), this.#deviceInternal.deviceScaleFactor, mobile,\n          this.getScreenOrientationType(), resetPageScaleFactor, this.#webPlatformExperimentalFeaturesEnabledInternal);\n      this.applyUserAgent(this.#deviceInternal.userAgent, this.#deviceInternal.userAgentMetadata);\n      this.applyTouch(this.#deviceInternal.touch(), mobile);\n    } else if (this.#typeInternal === Type.None) {\n      this.#fitScaleInternal = this.calculateFitScale(this.#availableSize.width, this.#availableSize.height);\n      this.#appliedUserAgentTypeInternal = UA.Desktop;\n      this.applyDeviceMetrics(\n          this.#availableSize, new Insets(0, 0, 0, 0), new Insets(0, 0, 0, 0), 1, 0, mobile, null,\n          resetPageScaleFactor);\n      this.applyUserAgent('', null);\n      this.applyTouch(false, false);\n    } else if (this.#typeInternal === Type.Responsive) {\n      let screenWidth = this.#widthSetting.get();\n      if (!screenWidth || screenWidth > this.preferredScaledWidth()) {\n        screenWidth = this.preferredScaledWidth();\n      }\n      let screenHeight = this.#heightSetting.get();\n      if (!screenHeight || screenHeight > this.preferredScaledHeight()) {\n        screenHeight = this.preferredScaledHeight();\n      }\n      const defaultDeviceScaleFactor = mobile ? defaultMobileScaleFactor : 0;\n      this.#fitScaleInternal = this.calculateFitScale(this.#widthSetting.get(), this.#heightSetting.get());\n      this.#appliedUserAgentTypeInternal = this.#uaSettingInternal.get();\n      this.applyDeviceMetrics(\n          new UI.Geometry.Size(screenWidth, screenHeight), new Insets(0, 0, 0, 0), new Insets(0, 0, 0, 0),\n          this.#scaleSettingInternal.get(), this.#deviceScaleFactorSettingInternal.get() || defaultDeviceScaleFactor,\n          mobile,\n          screenHeight >= screenWidth ? Protocol.Emulation.ScreenOrientationType.PortraitPrimary :\n                                        Protocol.Emulation.ScreenOrientationType.LandscapePrimary,\n          resetPageScaleFactor);\n      this.applyUserAgent(mobile ? defaultMobileUserAgent : '', mobile ? defaultMobileUserAgentMetadata : null);\n      this.applyTouch(\n          this.#uaSettingInternal.get() === UA.DesktopTouch || this.#uaSettingInternal.get() === UA.Mobile,\n          this.#uaSettingInternal.get() === UA.Mobile);\n    }\n\n    if (overlayModel) {\n      overlayModel.setShowViewportSizeOnResize(this.#typeInternal === Type.None);\n    }\n    this.dispatchEventToListeners(Events.Updated);\n  }\n\n  private calculateFitScale(screenWidth: number, screenHeight: number, outline?: Insets, insets?: Insets): number {\n    const outlineWidth = outline ? outline.left + outline.right : 0;\n    const outlineHeight = outline ? outline.top + outline.bottom : 0;\n    const insetsWidth = insets ? insets.left + insets.right : 0;\n    const insetsHeight = insets ? insets.top + insets.bottom : 0;\n    let scale = Math.min(\n        screenWidth ? this.#preferredSize.width / (screenWidth + outlineWidth) : 1,\n        screenHeight ? this.#preferredSize.height / (screenHeight + outlineHeight) : 1);\n    scale = Math.min(Math.floor(scale * 100), 100);\n\n    let sharpScale = scale;\n    while (sharpScale > scale * 0.7) {\n      let sharp = true;\n      if (screenWidth) {\n        sharp = sharp && Number.isInteger((screenWidth - insetsWidth) * sharpScale / 100);\n      }\n      if (screenHeight) {\n        sharp = sharp && Number.isInteger((screenHeight - insetsHeight) * sharpScale / 100);\n      }\n      if (sharp) {\n        return sharpScale / 100;\n      }\n      sharpScale -= 1;\n    }\n    return scale / 100;\n  }\n\n  setSizeAndScaleToFit(width: number, height: number): void {\n    this.#scaleSettingInternal.set(this.calculateFitScale(width, height));\n    this.setWidth(width);\n    this.setHeight(height);\n  }\n\n  private applyUserAgent(userAgent: string, userAgentMetadata: Protocol.Emulation.UserAgentMetadata|null): void {\n    SDK.NetworkManager.MultitargetNetworkManager.instance().setUserAgentOverride(userAgent, userAgentMetadata);\n  }\n\n  private applyDeviceMetrics(\n      screenSize: UI.Geometry.Size, insets: Insets, outline: Insets, scale: number, deviceScaleFactor: number,\n      mobile: boolean, screenOrientation: Protocol.Emulation.ScreenOrientationType|null, resetPageScaleFactor: boolean,\n      forceMetricsOverride: boolean|undefined = false): void {\n    screenSize.width = Math.max(1, Math.floor(screenSize.width));\n    screenSize.height = Math.max(1, Math.floor(screenSize.height));\n\n    let pageWidth: 0|number = screenSize.width - insets.left - insets.right;\n    let pageHeight: 0|number = screenSize.height - insets.top - insets.bottom;\n\n    const positionX = insets.left;\n    const positionY = insets.top;\n    const screenOrientationAngle =\n        screenOrientation === Protocol.Emulation.ScreenOrientationType.LandscapePrimary ? 90 : 0;\n\n    this.#appliedDeviceSizeInternal = screenSize;\n    this.#appliedDeviceScaleFactorInternal = deviceScaleFactor || window.devicePixelRatio;\n    this.#screenRectInternal = new Rect(\n        Math.max(0, (this.#availableSize.width - screenSize.width * scale) / 2), outline.top * scale,\n        screenSize.width * scale, screenSize.height * scale);\n    this.#outlineRectInternal = new Rect(\n        this.#screenRectInternal.left - outline.left * scale, 0,\n        (outline.left + screenSize.width + outline.right) * scale,\n        (outline.top + screenSize.height + outline.bottom) * scale);\n    this.#visiblePageRectInternal = new Rect(\n        positionX * scale, positionY * scale,\n        Math.min(pageWidth * scale, this.#availableSize.width - this.#screenRectInternal.left - positionX * scale),\n        Math.min(pageHeight * scale, this.#availableSize.height - this.#screenRectInternal.top - positionY * scale));\n    this.#scaleInternal = scale;\n    if (!forceMetricsOverride) {\n      // When sending displayFeature, we cannot use the optimization below due to backend restrictions.\n      if (scale === 1 && this.#availableSize.width >= screenSize.width &&\n          this.#availableSize.height >= screenSize.height) {\n        // When we have enough space, no page size override is required. This will speed things up and remove lag.\n        pageWidth = 0;\n        pageHeight = 0;\n      }\n      if (this.#visiblePageRectInternal.width === pageWidth * scale &&\n          this.#visiblePageRectInternal.height === pageHeight * scale && Number.isInteger(pageWidth * scale) &&\n          Number.isInteger(pageHeight * scale)) {\n        // When we only have to apply scale, do not resize the page. This will speed things up and remove lag.\n        pageWidth = 0;\n        pageHeight = 0;\n      }\n    }\n\n    if (!this.#emulationModel) {\n      return;\n    }\n\n    if (resetPageScaleFactor) {\n      void this.#emulationModel.resetPageScaleFactor();\n    }\n    if (pageWidth || pageHeight || mobile || deviceScaleFactor || scale !== 1 || screenOrientation ||\n        forceMetricsOverride) {\n      const metrics: Protocol.Emulation.SetDeviceMetricsOverrideRequest = {\n        width: pageWidth,\n        height: pageHeight,\n        deviceScaleFactor: deviceScaleFactor,\n        mobile: mobile,\n        scale: scale,\n        screenWidth: screenSize.width,\n        screenHeight: screenSize.height,\n        positionX: positionX,\n        positionY: positionY,\n        dontSetVisibleSize: true,\n        displayFeature: undefined,\n        screenOrientation: undefined,\n      };\n      const displayFeature = this.getDisplayFeature();\n      if (displayFeature) {\n        metrics.displayFeature = displayFeature;\n      }\n      if (screenOrientation) {\n        metrics.screenOrientation = {type: screenOrientation, angle: screenOrientationAngle};\n      }\n      void this.#emulationModel.emulateDevice(metrics);\n    } else {\n      void this.#emulationModel.emulateDevice(null);\n    }\n  }\n\n  exitHingeMode(): void {\n    const overlayModel = this.#emulationModel ? this.#emulationModel.overlayModel() : null;\n    if (overlayModel) {\n      overlayModel.showHingeForDualScreen(null);\n    }\n  }\n\n  webPlatformExperimentalFeaturesEnabled(): boolean {\n    return this.#webPlatformExperimentalFeaturesEnabledInternal;\n  }\n\n  shouldReportDisplayFeature(): boolean {\n    return this.#webPlatformExperimentalFeaturesEnabledInternal && this.#experimentDualScreenSupport;\n  }\n\n  async captureScreenshot(fullSize: boolean, clip?: Protocol.Page.Viewport): Promise<string|null> {\n    const screenCaptureModel =\n        this.#emulationModel ? this.#emulationModel.target().model(SDK.ScreenCaptureModel.ScreenCaptureModel) : null;\n    if (!screenCaptureModel) {\n      return null;\n    }\n\n    const overlayModel = this.#emulationModel ? this.#emulationModel.overlayModel() : null;\n    if (overlayModel) {\n      overlayModel.setShowViewportSizeOnResize(false);\n    }\n\n    // Define the right clipping area for fullsize screenshots.\n    if (fullSize) {\n      const metrics = await screenCaptureModel.fetchLayoutMetrics();\n      if (!metrics) {\n        return null;\n      }\n\n      // Cap the height to not hit the GPU limit.\n      const contentHeight = Math.min((1 << 14), metrics.contentHeight);\n      clip = {x: 0, y: 0, width: Math.floor(metrics.contentWidth), height: Math.floor(contentHeight), scale: 1};\n    }\n    const screenshot =\n        await screenCaptureModel.captureScreenshot(Protocol.Page.CaptureScreenshotRequestFormat.Png, 100, clip);\n\n    const deviceMetrics: Protocol.Page.SetDeviceMetricsOverrideRequest = {\n      width: 0,\n      height: 0,\n      deviceScaleFactor: 0,\n      mobile: false,\n    };\n    if (fullSize && this.#emulationModel) {\n      if (this.#deviceInternal && this.#modeInternal) {\n        const orientation = this.#deviceInternal.orientationByName(this.#modeInternal.orientation);\n        deviceMetrics.width = orientation.width;\n        deviceMetrics.height = orientation.height;\n        const dispFeature = this.getDisplayFeature();\n        if (dispFeature) {\n          // @ts-ignore: displayFeature isn't in protocol.d.ts but is an\n          // experimental flag:\n          // https://chromedevtools.github.io/devtools-protocol/tot/Emulation/#method-setDeviceMetricsOverride\n          deviceMetrics.displayFeature = dispFeature;\n        }\n      } else {\n        deviceMetrics.width = 0;\n        deviceMetrics.height = 0;\n      }\n      await this.#emulationModel.emulateDevice(deviceMetrics);\n    }\n    this.calculateAndEmulate(false);\n    return screenshot;\n  }\n\n  private applyTouch(touchEnabled: boolean, mobile: boolean): void {\n    this.#touchEnabled = touchEnabled;\n    this.#touchMobile = mobile;\n    for (const emulationModel of SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)) {\n      void emulationModel.emulateTouch(touchEnabled, mobile);\n    }\n  }\n\n  private showHingeIfApplicable(overlayModel: SDK.OverlayModel.OverlayModel): void {\n    const orientation = (this.#deviceInternal && this.#modeInternal) ?\n        this.#deviceInternal.orientationByName(this.#modeInternal.orientation) :\n        null;\n    if (this.#experimentDualScreenSupport && orientation && orientation.hinge) {\n      overlayModel.showHingeForDualScreen(orientation.hinge);\n      return;\n    }\n\n    overlayModel.showHingeForDualScreen(null);\n  }\n\n  private getDisplayFeatureOrientation(): Protocol.Emulation.DisplayFeatureOrientation {\n    if (!this.#modeInternal) {\n      throw new Error('Mode required to get display feature orientation.');\n    }\n    switch (this.#modeInternal.orientation) {\n      case VerticalSpanned:\n      case Vertical:\n        return Protocol.Emulation.DisplayFeatureOrientation.Vertical;\n      case HorizontalSpanned:\n      case Horizontal:\n      default:\n        return Protocol.Emulation.DisplayFeatureOrientation.Horizontal;\n    }\n  }\n\n  private getDisplayFeature(): Protocol.Emulation.DisplayFeature|null {\n    if (!this.shouldReportDisplayFeature()) {\n      return null;\n    }\n\n    if (!this.#deviceInternal || !this.#modeInternal ||\n        (this.#modeInternal.orientation !== VerticalSpanned && this.#modeInternal.orientation !== HorizontalSpanned)) {\n      return null;\n    }\n\n    const orientation = this.#deviceInternal.orientationByName(this.#modeInternal.orientation);\n    if (!orientation || !orientation.hinge) {\n      return null;\n    }\n\n    const hinge = orientation.hinge;\n    return {\n      orientation: this.getDisplayFeatureOrientation(),\n      offset: (this.#modeInternal.orientation === VerticalSpanned) ? hinge.x : hinge.y,\n      maskLength: (this.#modeInternal.orientation === VerticalSpanned) ? hinge.width : hinge.height,\n    };\n  }\n}\n\nexport class Insets {\n  constructor(public left: number, public top: number, public right: number, public bottom: number) {\n  }\n\n  isEqual(insets: Insets|null): boolean {\n    return insets !== null && this.left === insets.left && this.top === insets.top && this.right === insets.right &&\n        this.bottom === insets.bottom;\n  }\n}\n\nexport class Rect {\n  constructor(public left: number, public top: number, public width: number, public height: number) {\n  }\n\n  isEqual(rect: Rect|null): boolean {\n    return rect !== null && this.left === rect.left && this.top === rect.top && this.width === rect.width &&\n        this.height === rect.height;\n  }\n\n  scale(scale: number): Rect {\n    return new Rect(this.left * scale, this.top * scale, this.width * scale, this.height * scale);\n  }\n\n  relativeTo(origin: Rect): Rect {\n    return new Rect(this.left - origin.left, this.top - origin.top, this.width, this.height);\n  }\n\n  rebaseTo(origin: Rect): Rect {\n    return new Rect(this.left + origin.left, this.top + origin.top, this.width, this.height);\n  }\n}\n\nexport const enum Events {\n  Updated = 'Updated',\n}\n\nexport type EventTypes = {\n  [Events.Updated]: void,\n};\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Type {\n  None = 'None',\n  Responsive = 'Responsive',\n  Device = 'Device',\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum UA {\n  // TODO(crbug.com/1136655): This enum is used for both display and code functionality.\n  // we should refactor this so localization of these strings only happens for user display.\n  Mobile = 'Mobile',\n  MobileNoTouch = 'Mobile (no touch)',\n  Desktop = 'Desktop',\n  DesktopTouch = 'Desktop (touch)',\n}\n\nexport const MinDeviceSize = 50;\nexport const MaxDeviceSize = 9999;\nexport const MinDeviceScaleFactor = 0;\nexport const MaxDeviceScaleFactor = 10;\nexport const MaxDeviceNameLength = 50;\n\nconst mobileUserAgent =\n    'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Mobile Safari/537.36';\nconst defaultMobileUserAgent =\n    SDK.NetworkManager.MultitargetNetworkManager.patchUserAgentWithChromeVersion(mobileUserAgent);\n\nconst defaultMobileUserAgentMetadata = {\n  platform: 'Android',\n  platformVersion: '6.0',\n  architecture: '',\n  model: 'Nexus 5',\n  mobile: true,\n};\nexport const defaultMobileScaleFactor = 2;\n"]}