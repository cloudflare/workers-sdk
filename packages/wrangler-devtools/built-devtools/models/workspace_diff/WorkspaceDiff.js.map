{"version":3,"file":"WorkspaceDiff.js","sourceRoot":"","sources":["../../../../../../front_end/models/workspace_diff/WorkspaceDiff.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Diff from '../../third_party/diff/diff.js';\nimport * as FormatterModule from '../formatter/formatter.js';\nimport * as Persistence from '../persistence/persistence.js';\nimport * as Workspace from '../workspace/workspace.js';\n\ninterface DiffRequestOptions {\n  shouldFormatDiff: boolean;\n}\n\ninterface DiffResponse {\n  diff: Diff.Diff.DiffArray;\n  formattedCurrentMapping?: FormatterModule.ScriptFormatter.FormatterSourceMapping;\n}\n\nexport class WorkspaceDiffImpl extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private readonly uiSourceCodeDiffs: WeakMap<Workspace.UISourceCode.UISourceCode, UISourceCodeDiff>;\n  private readonly loadingUISourceCodes:\n      Map<Workspace.UISourceCode.UISourceCode, Promise<[string | null, string|null]>>;\n  private readonly modifiedUISourceCodesInternal: Set<Workspace.UISourceCode.UISourceCode>;\n\n  constructor(workspace: Workspace.Workspace.WorkspaceImpl) {\n    super();\n    this.uiSourceCodeDiffs = new WeakMap();\n\n    this.loadingUISourceCodes = new Map();\n\n    this.modifiedUISourceCodesInternal = new Set();\n    workspace.addEventListener(Workspace.Workspace.Events.WorkingCopyChanged, this.uiSourceCodeChanged, this);\n    workspace.addEventListener(Workspace.Workspace.Events.WorkingCopyCommitted, this.uiSourceCodeChanged, this);\n    workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded, this.uiSourceCodeAdded, this);\n    workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeRemoved, this.uiSourceCodeRemoved, this);\n    workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, this.projectRemoved, this);\n    workspace.uiSourceCodes().forEach(this.updateModifiedState.bind(this));\n  }\n\n  requestDiff(uiSourceCode: Workspace.UISourceCode.UISourceCode, diffRequestOptions: DiffRequestOptions):\n      Promise<DiffResponse|null> {\n    return this.uiSourceCodeDiff(uiSourceCode).requestDiff(diffRequestOptions);\n  }\n\n  subscribeToDiffChange(uiSourceCode: Workspace.UISourceCode.UISourceCode, callback: () => void, thisObj?: Object):\n      void {\n    this.uiSourceCodeDiff(uiSourceCode).addEventListener(UISourceCodeDiffEvents.DiffChanged, callback, thisObj);\n  }\n\n  unsubscribeFromDiffChange(uiSourceCode: Workspace.UISourceCode.UISourceCode, callback: () => void, thisObj?: Object):\n      void {\n    this.uiSourceCodeDiff(uiSourceCode).removeEventListener(UISourceCodeDiffEvents.DiffChanged, callback, thisObj);\n  }\n\n  modifiedUISourceCodes(): Workspace.UISourceCode.UISourceCode[] {\n    return Array.from(this.modifiedUISourceCodesInternal);\n  }\n\n  isUISourceCodeModified(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return this.modifiedUISourceCodesInternal.has(uiSourceCode) || this.loadingUISourceCodes.has(uiSourceCode);\n  }\n\n  private uiSourceCodeDiff(uiSourceCode: Workspace.UISourceCode.UISourceCode): UISourceCodeDiff {\n    let diff = this.uiSourceCodeDiffs.get(uiSourceCode);\n    if (!diff) {\n      diff = new UISourceCodeDiff(uiSourceCode);\n      this.uiSourceCodeDiffs.set(uiSourceCode, diff);\n    }\n    return diff;\n  }\n\n  private uiSourceCodeChanged(\n      event: Common.EventTarget.EventTargetEvent<{uiSourceCode: Workspace.UISourceCode.UISourceCode}>): void {\n    const uiSourceCode = event.data.uiSourceCode;\n    void this.updateModifiedState(uiSourceCode);\n  }\n\n  private uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    void this.updateModifiedState(uiSourceCode);\n  }\n\n  private uiSourceCodeRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.removeUISourceCode(uiSourceCode);\n  }\n\n  private projectRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.Project>): void {\n    const project = event.data;\n    for (const uiSourceCode of project.uiSourceCodes()) {\n      this.removeUISourceCode(uiSourceCode);\n    }\n  }\n\n  private removeUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this.loadingUISourceCodes.delete(uiSourceCode);\n    const uiSourceCodeDiff = this.uiSourceCodeDiffs.get(uiSourceCode);\n    if (uiSourceCodeDiff) {\n      uiSourceCodeDiff.dispose = true;\n    }\n    this.markAsUnmodified(uiSourceCode);\n  }\n\n  private markAsUnmodified(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this.uiSourceCodeProcessedForTest();\n    if (this.modifiedUISourceCodesInternal.delete(uiSourceCode)) {\n      this.dispatchEventToListeners(Events.ModifiedStatusChanged, {uiSourceCode, isModified: false});\n    }\n  }\n\n  private markAsModified(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this.uiSourceCodeProcessedForTest();\n    if (this.modifiedUISourceCodesInternal.has(uiSourceCode)) {\n      return;\n    }\n    this.modifiedUISourceCodesInternal.add(uiSourceCode);\n    this.dispatchEventToListeners(Events.ModifiedStatusChanged, {uiSourceCode, isModified: true});\n  }\n\n  private uiSourceCodeProcessedForTest(): void {\n  }\n\n  private async updateModifiedState(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    this.loadingUISourceCodes.delete(uiSourceCode);\n\n    if (uiSourceCode.project().type() !== Workspace.Workspace.projectTypes.Network) {\n      this.markAsUnmodified(uiSourceCode);\n      return;\n    }\n    if (uiSourceCode.isDirty()) {\n      this.markAsModified(uiSourceCode);\n      return;\n    }\n    if (!uiSourceCode.hasCommits()) {\n      this.markAsUnmodified(uiSourceCode);\n      return;\n    }\n\n    const contentsPromise = Promise.all([\n      this.requestOriginalContentForUISourceCode(uiSourceCode),\n      uiSourceCode.requestContent().then(deferredContent => deferredContent.content),\n    ]);\n\n    this.loadingUISourceCodes.set(uiSourceCode, contentsPromise);\n    const contents = await contentsPromise;\n    if (this.loadingUISourceCodes.get(uiSourceCode) !== contentsPromise) {\n      return;\n    }\n    this.loadingUISourceCodes.delete(uiSourceCode);\n\n    if (contents[0] !== null && contents[1] !== null && contents[0] !== contents[1]) {\n      this.markAsModified(uiSourceCode);\n    } else {\n      this.markAsUnmodified(uiSourceCode);\n    }\n  }\n\n  requestOriginalContentForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<string|null> {\n    return this.uiSourceCodeDiff(uiSourceCode).originalContent();\n  }\n\n  revertToOriginal(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    function callback(content: string|null): void {\n      if (typeof content !== 'string') {\n        return;\n      }\n\n      uiSourceCode.addRevision(content);\n    }\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.RevisionApplied);\n    return this.requestOriginalContentForUISourceCode(uiSourceCode).then(callback);\n  }\n}\n\nexport const enum Events {\n  ModifiedStatusChanged = 'ModifiedStatusChanged',\n}\n\nexport interface ModifiedStatusChangedEvent {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  isModified: boolean;\n}\n\nexport type EventTypes = {\n  [Events.ModifiedStatusChanged]: ModifiedStatusChangedEvent,\n};\n\nexport class UISourceCodeDiff extends Common.ObjectWrapper.ObjectWrapper<UISourceCodeDiffEventTypes> {\n  private uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  private requestDiffPromise: Promise<DiffResponse|null>|null;\n  private pendingChanges: number|null;\n  dispose: boolean;\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super();\n    this.uiSourceCode = uiSourceCode;\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.uiSourceCodeChanged, this);\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.uiSourceCodeChanged, this);\n    this.requestDiffPromise = null;\n    this.pendingChanges = null;\n    this.dispose = false;\n  }\n\n  private uiSourceCodeChanged(): void {\n    if (this.pendingChanges) {\n      clearTimeout(this.pendingChanges);\n      this.pendingChanges = null;\n    }\n    this.requestDiffPromise = null;\n\n    const content = this.uiSourceCode.content();\n    const delay = (!content || content.length < 65536) ? 0 : UpdateTimeout;\n    this.pendingChanges = window.setTimeout(emitDiffChanged.bind(this), delay);\n\n    function emitDiffChanged(this: UISourceCodeDiff): void {\n      if (this.dispose) {\n        return;\n      }\n      this.dispatchEventToListeners(UISourceCodeDiffEvents.DiffChanged);\n      this.pendingChanges = null;\n    }\n  }\n\n  requestDiff(diffRequestOptions: DiffRequestOptions): Promise<DiffResponse|null> {\n    if (!this.requestDiffPromise) {\n      this.requestDiffPromise = this.innerRequestDiff(diffRequestOptions);\n    }\n    return this.requestDiffPromise;\n  }\n\n  async originalContent(): Promise<string|null> {\n    const originalNetworkContent =\n        Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().originalContentForUISourceCode(\n            this.uiSourceCode);\n    if (originalNetworkContent) {\n      return originalNetworkContent;\n    }\n\n    const content = await this.uiSourceCode.project().requestFileContent(this.uiSourceCode);\n    return content.content || ('error' in content && content.error) || '';\n  }\n\n  private async innerRequestDiff({shouldFormatDiff}: DiffRequestOptions): Promise<DiffResponse|null> {\n    if (this.dispose) {\n      return null;\n    }\n\n    let baseline = await this.originalContent();\n    if (baseline === null) {\n      return null;\n    }\n    if (baseline.length > 1024 * 1024) {\n      return null;\n    }\n    // ------------ ASYNC ------------\n    if (this.dispose) {\n      return null;\n    }\n\n    let current = this.uiSourceCode.workingCopy();\n    if (!current && !this.uiSourceCode.contentLoaded()) {\n      current = ((await this.uiSourceCode.requestContent()).content as string);\n    }\n\n    if (current.length > 1024 * 1024) {\n      return null;\n    }\n\n    if (this.dispose) {\n      return null;\n    }\n\n    if (current === null || baseline === null) {\n      return null;\n    }\n    let formattedCurrentMapping;\n    if (shouldFormatDiff) {\n      baseline = (await FormatterModule.ScriptFormatter.format(\n                      this.uiSourceCode.contentType(), this.uiSourceCode.mimeType(), baseline))\n                     .formattedContent;\n      const formatCurrentResult = await FormatterModule.ScriptFormatter.format(\n          this.uiSourceCode.contentType(), this.uiSourceCode.mimeType(), current);\n      current = formatCurrentResult.formattedContent;\n      formattedCurrentMapping = formatCurrentResult.formattedMapping;\n    }\n    const reNewline = /\\r\\n?|\\n/;\n    const diff = Diff.Diff.DiffWrapper.lineDiff(baseline.split(reNewline), current.split(reNewline));\n    return {\n      diff,\n      formattedCurrentMapping,\n    };\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum UISourceCodeDiffEvents {\n  DiffChanged = 'DiffChanged',\n}\n\nexport type UISourceCodeDiffEventTypes = {\n  [UISourceCodeDiffEvents.DiffChanged]: void,\n};\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _instance: WorkspaceDiffImpl|null = null;\n\nexport function workspaceDiff(): WorkspaceDiffImpl {\n  if (!_instance) {\n    _instance = new WorkspaceDiffImpl(Workspace.Workspace.WorkspaceImpl.instance());\n  }\n  return _instance;\n}\n\nexport class DiffUILocation {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    this.uiSourceCode = uiSourceCode;\n  }\n}\n\nexport const UpdateTimeout = 200;\n"]}