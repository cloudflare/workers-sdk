{"version":3,"file":"TextCursor.js","sourceRoot":"","sources":["../../../../../../front_end/models/text_utils/TextCursor.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,QAAQ,MAAM,iCAAiC,CAAC;AAE5D,MAAM,OAAO,UAAU;IACb,WAAW,CAAW;IACtB,cAAc,CAAS;IACvB,kBAAkB,CAAS;IAC3B,oBAAoB,CAAS;IAErC,YAAY,WAAqB;QAC/B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,OAAO,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM;YACjD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE;YACtE,EAAE,IAAI,CAAC,kBAAkB,CAAC;SAC3B;QACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACjD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,kBAAkB;YACnB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;QAC7G,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACjD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,cAAc,CAAC;IAC1B,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC;CACF","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nexport class TextCursor {\n  private lineEndings: number[];\n  private offsetInternal: number;\n  private lineNumberInternal: number;\n  private columnNumberInternal: number;\n\n  constructor(lineEndings: number[]) {\n    this.lineEndings = lineEndings;\n    this.offsetInternal = 0;\n    this.lineNumberInternal = 0;\n    this.columnNumberInternal = 0;\n  }\n\n  advance(offset: number): void {\n    this.offsetInternal = offset;\n    while (this.lineNumberInternal < this.lineEndings.length &&\n           this.lineEndings[this.lineNumberInternal] < this.offsetInternal) {\n      ++this.lineNumberInternal;\n    }\n    this.columnNumberInternal = this.lineNumberInternal ?\n        this.offsetInternal - this.lineEndings[this.lineNumberInternal - 1] - 1 :\n        this.offsetInternal;\n  }\n\n  offset(): number {\n    return this.offsetInternal;\n  }\n\n  resetTo(offset: number): void {\n    this.offsetInternal = offset;\n    this.lineNumberInternal =\n        Platform.ArrayUtilities.lowerBound(this.lineEndings, offset, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    this.columnNumberInternal = this.lineNumberInternal ?\n        this.offsetInternal - this.lineEndings[this.lineNumberInternal - 1] - 1 :\n        this.offsetInternal;\n  }\n\n  lineNumber(): number {\n    return this.lineNumberInternal;\n  }\n\n  columnNumber(): number {\n    return this.columnNumberInternal;\n  }\n}\n"]}