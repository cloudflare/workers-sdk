{"version":3,"file":"TimelineFrameModel.js","sourceRoot":"","sources":["../../../../../../front_end/models/timeline_model/TimelineFrameModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {RecordType, TimelineData} from './TimelineModel.js';\nimport type {TracingLayerPayload, TracingLayerTile} from './TracingLayerTree.js';\nimport {TracingLayerTree} from './TracingLayerTree.js';\n\nexport class TimelineFrameModel {\n  private readonly categoryMapper: (arg0: SDK.TracingModel.Event) => string;\n  private frames!: TimelineFrame[];\n  private frameById!: {\n    [x: number]: TimelineFrame,\n  };\n  private beginFrameQueue!: TimelineFrameBeginFrameQueue;\n  private minimumRecordTime!: number;\n  private lastFrame!: TimelineFrame|null;\n  private mainFrameCommitted!: boolean;\n  private mainFrameRequested!: boolean;\n  private lastLayerTree!: TracingFrameLayerTree|null;\n  private framePendingActivation!: PendingFrame|null;\n  private currentTaskTimeByCategory!: {\n    [x: string]: number,\n  };\n  private target!: SDK.Target.Target|null;\n  private framePendingCommit?: PendingFrame|null;\n  private lastBeginFrame?: number|null;\n  private lastDroppedFrame?: number|null;\n  private lastNeedsBeginFrame?: number|null;\n  private lastTaskBeginTime?: number|null;\n  private layerTreeId?: number|null;\n  private currentProcessMainThread?: SDK.TracingModel.Thread|null;\n\n  constructor(categoryMapper: (arg0: SDK.TracingModel.Event) => string) {\n    this.categoryMapper = categoryMapper;\n\n    this.reset();\n  }\n\n  getFrames(): TimelineFrame[] {\n    return this.frames;\n  }\n\n  getFramesWithinWindow(startTime: number, endTime: number): TimelineFrame[] {\n    const firstFrame =\n        Platform.ArrayUtilities.lowerBound(this.frames, startTime || 0, (time, frame) => time - frame.endTime);\n    const lastFrame =\n        Platform.ArrayUtilities.lowerBound(this.frames, endTime || Infinity, (time, frame) => time - frame.startTime);\n    return this.frames.slice(firstFrame, lastFrame);\n  }\n\n  hasRasterTile(rasterTask: SDK.TracingModel.Event): boolean {\n    const data = rasterTask.args['tileData'];\n    if (!data) {\n      return false;\n    }\n    const frameId = data['sourceFrameNumber'];\n    const frame = frameId && this.frameById[frameId];\n    if (!frame || !frame.layerTree) {\n      return false;\n    }\n    return true;\n  }\n\n  rasterTilePromise(rasterTask: SDK.TracingModel.Event): Promise<{\n    rect: Protocol.DOM.Rect,\n    snapshot: SDK.PaintProfiler.PaintProfilerSnapshot,\n  }|null> {\n    if (!this.target) {\n      return Promise.resolve(null);\n    }\n    const data = rasterTask.args['tileData'];\n    const frameId = (data['sourceFrameNumber'] as number);\n    const tileId = data['tileId'] && data['tileId']['id_ref'];\n    const frame = frameId && this.frameById[frameId];\n    if (!frame || !frame.layerTree || !tileId) {\n      return Promise.resolve(null);\n    }\n\n    return frame.layerTree.layerTreePromise().then(layerTree => layerTree && layerTree.pictureForRasterTile(tileId));\n  }\n\n  reset(): void {\n    this.minimumRecordTime = Infinity;\n    this.frames = [];\n    this.frameById = {};\n    this.beginFrameQueue = new TimelineFrameBeginFrameQueue();\n    this.lastFrame = null;\n    this.lastLayerTree = null;\n    this.mainFrameCommitted = false;\n    this.mainFrameRequested = false;\n    this.framePendingCommit = null;\n    this.lastBeginFrame = null;\n    this.lastDroppedFrame = null;\n    this.lastNeedsBeginFrame = null;\n    this.framePendingActivation = null;\n    this.lastTaskBeginTime = null;\n    this.target = null;\n    this.layerTreeId = null;\n    this.currentTaskTimeByCategory = {};\n  }\n\n  handleBeginFrame(startTime: number, seqId: number): void {\n    if (!this.lastFrame) {\n      this.startFrame(startTime);\n    }\n    this.lastBeginFrame = startTime;\n\n    this.beginFrameQueue.addFrameIfNotExists(seqId, startTime, false, false);\n  }\n\n  handleDroppedFrame(startTime: number, seqId: number, isPartial: boolean): void {\n    if (!this.lastFrame) {\n      this.startFrame(startTime);\n    }\n\n    // This line handles the case where no BeginFrame event is issued for\n    // the dropped frame. In this situation, add a BeginFrame to the queue\n    // as if it actually occurred.\n    this.beginFrameQueue.addFrameIfNotExists(seqId, startTime, true, isPartial);\n    this.beginFrameQueue.setDropped(seqId, true);\n    this.beginFrameQueue.setPartial(seqId, isPartial);\n  }\n\n  handleDrawFrame(startTime: number, seqId: number): void {\n    if (!this.lastFrame) {\n      this.startFrame(startTime);\n      return;\n    }\n\n    // - if it wasn't drawn, it didn't happen!\n    // - only show frames that either did not wait for the main thread frame or had one committed.\n    if (this.mainFrameCommitted || !this.mainFrameRequested) {\n      if (this.lastNeedsBeginFrame) {\n        const idleTimeEnd = this.framePendingActivation ? this.framePendingActivation.triggerTime :\n                                                          (this.lastBeginFrame || this.lastNeedsBeginFrame);\n        if (idleTimeEnd > this.lastFrame.startTime) {\n          this.lastFrame.idle = true;\n          this.lastBeginFrame = null;\n        }\n        this.lastNeedsBeginFrame = null;\n      }\n\n      const framesToVisualize = this.beginFrameQueue.processPendingBeginFramesOnDrawFrame(seqId);\n\n      // Visualize the current frame and all pending frames before it.\n      for (const frame of framesToVisualize) {\n        const isLastFrameIdle = this.lastFrame.idle;\n\n        // If |frame| is the first frame after an idle period, the CPU time\n        // will be logged (\"committed\") under |frame| if applicable.\n        this.startFrame(frame.startTime);\n        if (isLastFrameIdle && this.framePendingActivation) {\n          this.commitPendingFrame();\n        }\n        if (frame.isDropped) {\n          this.lastFrame.dropped = true;\n        }\n        if (frame.isPartial) {\n          this.lastFrame.isPartial = true;\n        }\n      }\n    }\n    this.mainFrameCommitted = false;\n  }\n\n  handleActivateLayerTree(): void {\n    if (!this.lastFrame) {\n      return;\n    }\n    if (this.framePendingActivation && !this.lastNeedsBeginFrame) {\n      this.commitPendingFrame();\n    }\n  }\n\n  handleRequestMainThreadFrame(): void {\n    if (!this.lastFrame) {\n      return;\n    }\n    this.mainFrameRequested = true;\n  }\n\n  handleCompositeLayers(): void {\n    if (!this.framePendingCommit) {\n      return;\n    }\n    this.framePendingActivation = this.framePendingCommit;\n    this.framePendingCommit = null;\n    this.mainFrameRequested = false;\n    this.mainFrameCommitted = true;\n  }\n\n  handleLayerTreeSnapshot(layerTree: TracingFrameLayerTree): void {\n    this.lastLayerTree = layerTree;\n  }\n\n  handleNeedFrameChanged(startTime: number, needsBeginFrame: boolean): void {\n    if (needsBeginFrame) {\n      this.lastNeedsBeginFrame = startTime;\n    }\n  }\n\n  private startFrame(startTime: number): void {\n    if (this.lastFrame) {\n      this.flushFrame(this.lastFrame, startTime);\n    }\n    this.lastFrame = new TimelineFrame(startTime, startTime - this.minimumRecordTime);\n  }\n\n  private flushFrame(frame: TimelineFrame, endTime: number): void {\n    frame.setLayerTree(this.lastLayerTree);\n    frame.setEndTime(endTime);\n    if (this.lastLayerTree) {\n      this.lastLayerTree.setPaints(frame.paints);\n    }\n    const lastFrame = this.frames[this.frames.length - 1];\n    if (this.frames.length && lastFrame && (frame.startTime !== lastFrame.endTime || frame.startTime > frame.endTime)) {\n      console.assert(\n          false, `Inconsistent frame time for frame ${this.frames.length} (${frame.startTime} - ${frame.endTime})`);\n    }\n    this.frames.push(frame);\n    if (typeof frame.mainFrameId === 'number') {\n      this.frameById[frame.mainFrameId] = frame;\n    }\n  }\n\n  private commitPendingFrame(): void {\n    if (!this.framePendingActivation || !this.lastFrame) {\n      return;\n    }\n\n    this.lastFrame.addTimeForCategories(this.framePendingActivation.timeByCategory);\n    this.lastFrame.paints = this.framePendingActivation.paints;\n    this.lastFrame.mainFrameId = this.framePendingActivation.mainFrameId;\n    this.framePendingActivation = null;\n  }\n\n  addTraceEvents(target: SDK.Target.Target|null, events: SDK.TracingModel.Event[], threadData: {\n    thread: SDK.TracingModel.Thread,\n    time: number,\n  }[]): void {\n    this.target = target;\n    let j = 0;\n    this.currentProcessMainThread = threadData.length && threadData[0].thread || null;\n    for (let i = 0; i < events.length; ++i) {\n      while (j + 1 < threadData.length && threadData[j + 1].time <= events[i].startTime) {\n        this.currentProcessMainThread = threadData[++j].thread;\n      }\n      this.addTraceEvent(events[i]);\n    }\n    this.currentProcessMainThread = null;\n  }\n\n  private addTraceEvent(event: SDK.TracingModel.Event): void {\n    if (event.startTime && event.startTime < this.minimumRecordTime) {\n      this.minimumRecordTime = event.startTime;\n    }\n\n    if (event.name === RecordType.SetLayerTreeId) {\n      this.layerTreeId = event.args['layerTreeId'] || event.args['data']['layerTreeId'];\n    } else if (\n        event.id && event.phase === SDK.TracingModel.Phase.SnapshotObject &&\n        event.name === RecordType.LayerTreeHostImplSnapshot && Number(event.id) === this.layerTreeId && this.target) {\n      const snapshot = (event as SDK.TracingModel.ObjectSnapshot);\n      this.handleLayerTreeSnapshot(new TracingFrameLayerTree(this.target, snapshot));\n    } else {\n      this.processCompositorEvents(event);\n      if (event.thread === this.currentProcessMainThread) {\n        this.addMainThreadTraceEvent(event);\n      } else if (this.lastFrame && event.selfTime && !SDK.TracingModel.TracingModel.isTopLevelEvent(event)) {\n        this.lastFrame.addTimeForCategory(this.categoryMapper(event), event.selfTime);\n      }\n    }\n  }\n\n  private processCompositorEvents(event: SDK.TracingModel.Event): void {\n    if (event.args['layerTreeId'] !== this.layerTreeId) {\n      return;\n    }\n\n    const timestamp = event.startTime;\n    if (event.name === RecordType.BeginFrame) {\n      this.handleBeginFrame(timestamp, event.args['frameSeqId']);\n    } else if (event.name === RecordType.DrawFrame) {\n      this.handleDrawFrame(timestamp, event.args['frameSeqId']);\n    } else if (event.name === RecordType.ActivateLayerTree) {\n      this.handleActivateLayerTree();\n    } else if (event.name === RecordType.RequestMainThreadFrame) {\n      this.handleRequestMainThreadFrame();\n    } else if (event.name === RecordType.NeedsBeginFrameChanged) {\n      this.handleNeedFrameChanged(timestamp, event.args['data'] && event.args['data']['needsBeginFrame']);\n    } else if (event.name === RecordType.DroppedFrame) {\n      this.handleDroppedFrame(timestamp, event.args['frameSeqId'], event.args['hasPartialUpdate']);\n    }\n  }\n\n  private addMainThreadTraceEvent(event: SDK.TracingModel.Event): void {\n    if (SDK.TracingModel.TracingModel.isTopLevelEvent(event)) {\n      this.currentTaskTimeByCategory = {};\n      this.lastTaskBeginTime = event.startTime;\n    }\n    if (!this.framePendingCommit && TimelineFrameModel.mainFrameMarkers.indexOf(event.name as RecordType) >= 0) {\n      this.framePendingCommit =\n          new PendingFrame(this.lastTaskBeginTime || event.startTime, this.currentTaskTimeByCategory);\n    }\n    if (!this.framePendingCommit) {\n      this.addTimeForCategory(this.currentTaskTimeByCategory, event);\n      return;\n    }\n    this.addTimeForCategory(this.framePendingCommit.timeByCategory, event);\n\n    if (event.name === RecordType.BeginMainThreadFrame && event.args['data'] && event.args['data']['frameId']) {\n      this.framePendingCommit.mainFrameId = event.args['data']['frameId'];\n    }\n    if (event.name === RecordType.Paint && event.args['data']['layerId'] && TimelineData.forEvent(event).picture &&\n        this.target) {\n      this.framePendingCommit.paints.push(new LayerPaintEvent(event, this.target));\n    }\n    if (event.name === RecordType.CompositeLayers && event.args['layerTreeId'] === this.layerTreeId) {\n      this.handleCompositeLayers();\n    }\n  }\n\n  private addTimeForCategory(\n      timeByCategory: {\n        [x: string]: number,\n      },\n      event: SDK.TracingModel.Event): void {\n    if (!event.selfTime) {\n      return;\n    }\n    const categoryName = this.categoryMapper(event);\n    timeByCategory[categoryName] = (timeByCategory[categoryName] || 0) + event.selfTime;\n  }\n\n  private static readonly mainFrameMarkers: RecordType[] = [\n    RecordType.ScheduleStyleRecalculation,\n    RecordType.InvalidateLayout,\n    RecordType.BeginMainThreadFrame,\n    RecordType.ScrollLayer,\n  ];\n}\n\nexport class TracingFrameLayerTree {\n  private readonly target: SDK.Target.Target;\n  private readonly snapshot: SDK.TracingModel.ObjectSnapshot;\n  private paintsInternal!: LayerPaintEvent[]|undefined;\n\n  constructor(target: SDK.Target.Target, snapshot: SDK.TracingModel.ObjectSnapshot) {\n    this.target = target;\n    this.snapshot = snapshot;\n  }\n\n  async layerTreePromise(): Promise<TracingLayerTree|null> {\n    const result = (await this.snapshot.objectPromise() as unknown as {\n      active_tiles: TracingLayerTile[],\n      device_viewport_size: {\n        width: number,\n        height: number,\n      },\n      active_tree: {\n        root_layer: TracingLayerPayload,\n        layers: TracingLayerPayload[],\n      },\n    });\n    if (!result) {\n      return null;\n    }\n    const viewport = result['device_viewport_size'];\n    const tiles = result['active_tiles'];\n    const rootLayer = result['active_tree']['root_layer'];\n    const layers = result['active_tree']['layers'];\n    const layerTree = new TracingLayerTree(this.target);\n    layerTree.setViewportSize(viewport);\n    layerTree.setTiles(tiles);\n\n    await layerTree.setLayers(rootLayer, layers, this.paintsInternal || []);\n    return layerTree;\n  }\n\n  paints(): LayerPaintEvent[] {\n    return this.paintsInternal || [];\n  }\n\n  setPaints(paints: LayerPaintEvent[]): void {\n    this.paintsInternal = paints;\n  }\n}\n\nexport class TimelineFrame {\n  startTime: number;\n  startTimeOffset: number;\n  endTime: number;\n  duration: number;\n  timeByCategory: {\n    [x: string]: number,\n  };\n  cpuTime: number;\n  idle: boolean;\n  dropped: boolean;\n  isPartial: boolean;\n  layerTree: TracingFrameLayerTree|null;\n  paints: LayerPaintEvent[];\n  mainFrameId: number|undefined;\n\n  constructor(startTime: number, startTimeOffset: number) {\n    this.startTime = startTime;\n    this.startTimeOffset = startTimeOffset;\n    this.endTime = this.startTime;\n    this.duration = 0;\n    this.timeByCategory = {};\n    this.cpuTime = 0;\n    this.idle = false;\n    this.dropped = false;\n    this.isPartial = false;\n    this.layerTree = null;\n    this.paints = [];\n    this.mainFrameId = undefined;\n  }\n\n  hasWarnings(): boolean {\n    return false;\n  }\n\n  setEndTime(endTime: number): void {\n    this.endTime = endTime;\n    this.duration = this.endTime - this.startTime;\n  }\n\n  setLayerTree(layerTree: TracingFrameLayerTree|null): void {\n    this.layerTree = layerTree;\n  }\n\n  addTimeForCategories(timeByCategory: {\n    [x: string]: number,\n  }): void {\n    for (const category in timeByCategory) {\n      this.addTimeForCategory(category, timeByCategory[category]);\n    }\n  }\n\n  addTimeForCategory(category: string, time: number): void {\n    this.timeByCategory[category] = (this.timeByCategory[category] || 0) + time;\n    this.cpuTime += time;\n  }\n}\n\nexport class LayerPaintEvent {\n  private readonly eventInternal: SDK.TracingModel.Event;\n  private readonly target: SDK.Target.Target|null;\n\n  constructor(event: SDK.TracingModel.Event, target: SDK.Target.Target|null) {\n    this.eventInternal = event;\n    this.target = target;\n  }\n\n  layerId(): string {\n    return this.eventInternal.args['data']['layerId'];\n  }\n\n  event(): SDK.TracingModel.Event {\n    return this.eventInternal;\n  }\n\n  picturePromise(): Promise<{\n    rect: Array<number>,\n    serializedPicture: string,\n  }|null> {\n    const picture = TimelineData.forEvent(this.eventInternal).picture;\n    if (!picture) {\n      return Promise.resolve(null);\n    }\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return picture.objectPromise().then((result: any) => {\n      if (!result) {\n        return null;\n      }\n      const rect = result['params'] && result['params']['layer_rect'];\n      const picture = result['skp64'];\n      return rect && picture ? {rect: rect, serializedPicture: picture} : null;\n    });\n  }\n\n  async snapshotPromise(): Promise<{\n    rect: Array<number>,\n    snapshot: SDK.PaintProfiler.PaintProfilerSnapshot,\n  }|null> {\n    const paintProfilerModel = this.target && this.target.model(SDK.PaintProfiler.PaintProfilerModel);\n    const picture = await this.picturePromise();\n    if (!picture || !paintProfilerModel) {\n      return null;\n    }\n    const snapshot = await paintProfilerModel.loadSnapshot(picture.serializedPicture);\n    return snapshot ? {rect: picture.rect, snapshot: snapshot} : null;\n  }\n}\n\nexport class PendingFrame {\n  timeByCategory: {\n    [x: string]: number,\n  };\n  paints: LayerPaintEvent[];\n  mainFrameId: number|undefined;\n  triggerTime: number;\n  constructor(triggerTime: number, timeByCategory: {\n    [x: string]: number,\n  }) {\n    this.timeByCategory = timeByCategory;\n    this.paints = [];\n    this.mainFrameId = undefined;\n    this.triggerTime = triggerTime;\n  }\n}\n\n// The parameters of an impl-side BeginFrame.\nclass BeginFrameInfo {\n  seqId: number;\n  startTime: number;\n  isDropped: boolean;\n  isPartial: boolean;\n  constructor(seqId: number, startTime: number, isDropped: boolean, isPartial: boolean) {\n    this.seqId = seqId;\n    this.startTime = startTime;\n    this.isDropped = isDropped;\n    this.isPartial = isPartial;\n  }\n}\n\n// A queue of BeginFrames pending visualization.\n// BeginFrames are added into this queue as they occur; later when their\n// corresponding DrawFrames occur (or lack thereof), the BeginFrames are removed\n// from the queue and their timestamps are used for visualization.\nexport class TimelineFrameBeginFrameQueue {\n  private queueFrames!: number[];\n\n  // Maps frameSeqId to BeginFrameInfo.\n  private mapFrames!: {\n    [x: number]: BeginFrameInfo,\n  };\n\n  constructor() {\n    this.queueFrames = [];\n    this.mapFrames = {};\n  }\n\n  // Add a BeginFrame to the queue, if it does not already exit.\n  addFrameIfNotExists(seqId: number, startTime: number, isDropped: boolean, isPartial: boolean): void {\n    if (!(seqId in this.mapFrames)) {\n      this.mapFrames[seqId] = new BeginFrameInfo(seqId, startTime, isDropped, isPartial);\n      this.queueFrames.push(seqId);\n    }\n  }\n\n  // Set a BeginFrame in queue as dropped.\n  setDropped(seqId: number, isDropped: boolean): void {\n    if (seqId in this.mapFrames) {\n      this.mapFrames[seqId].isDropped = isDropped;\n    }\n  }\n\n  setPartial(seqId: number, isPartial: boolean): void {\n    if (seqId in this.mapFrames) {\n      this.mapFrames[seqId].isPartial = isPartial;\n    }\n  }\n\n  processPendingBeginFramesOnDrawFrame(seqId: number): BeginFrameInfo[] {\n    const framesToVisualize: BeginFrameInfo[] = [];\n\n    // Do not visualize this frame in the rare case where the current DrawFrame\n    // does not have a corresponding BeginFrame.\n    if (seqId in this.mapFrames) {\n      // Pop all BeginFrames before the current frame, and add only the dropped\n      // ones in |frames_to_visualize|.\n      // Non-dropped frames popped here are BeginFrames that are never\n      // drawn (but not considered dropped either for some reason).\n      // Those frames do not require an proactive visualization effort and will\n      // be naturally presented as continuationss of other frames.\n      while (this.queueFrames[0] !== seqId) {\n        const currentSeqId = this.queueFrames[0];\n        if (this.mapFrames[currentSeqId].isDropped) {\n          framesToVisualize.push(this.mapFrames[currentSeqId]);\n        }\n\n        delete this.mapFrames[currentSeqId];\n        this.queueFrames.shift();\n      }\n\n      // Pop the BeginFrame associated with the current DrawFrame.\n      framesToVisualize.push(this.mapFrames[seqId]);\n      delete this.mapFrames[seqId];\n      this.queueFrames.shift();\n    }\n    return framesToVisualize;\n  }\n}\n"]}