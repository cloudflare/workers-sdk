{"version":3,"file":"NetworkPersistenceManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/NetworkPersistenceManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport type {FileSystem} from './FileSystemWorkspaceBinding.js';\nimport {FileSystemWorkspaceBinding} from './FileSystemWorkspaceBinding.js';\nimport {PersistenceBinding, PersistenceImpl} from './PersistenceImpl.js';\n\nlet networkPersistenceManagerInstance: NetworkPersistenceManager|null;\n\nexport class NetworkPersistenceManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    SDK.TargetManager.Observer {\n  private bindings: WeakMap<Workspace.UISourceCode.UISourceCode, PersistenceBinding>;\n  private readonly originalResponseContentPromises: WeakMap<Workspace.UISourceCode.UISourceCode, Promise<string|null>>;\n  private savingForOverrides: WeakSet<Workspace.UISourceCode.UISourceCode>;\n  private readonly savingSymbol: symbol;\n  private enabledSetting: Common.Settings.Setting<boolean>;\n  private readonly workspace: Workspace.Workspace.WorkspaceImpl;\n  private readonly networkUISourceCodeForEncodedPath:\n      Map<Platform.DevToolsPath.EncodedPathString, Workspace.UISourceCode.UISourceCode>;\n  private readonly interceptionHandlerBound:\n      (interceptedRequest: SDK.NetworkManager.InterceptedRequest) => Promise<void>;\n  private readonly updateInterceptionThrottler: Common.Throttler.Throttler;\n  private projectInternal: Workspace.Workspace.Project|null;\n  private readonly activeProject: Workspace.Workspace.Project|null;\n  private activeInternal: boolean;\n  private enabled: boolean;\n  private eventDescriptors: Common.EventTarget.EventDescriptor[];\n  #headerOverridesMap: Map<Platform.DevToolsPath.EncodedPathString, HeaderOverrideWithRegex[]> = new Map();\n  readonly #sourceCodeToBindProcessMutex = new WeakMap<Workspace.UISourceCode.UISourceCode, Common.Mutex.Mutex>();\n\n  private constructor(workspace: Workspace.Workspace.WorkspaceImpl) {\n    super();\n    this.bindings = new WeakMap();\n    this.originalResponseContentPromises = new WeakMap();\n    this.savingForOverrides = new WeakSet();\n    this.savingSymbol = Symbol('SavingForOverrides');\n\n    this.enabledSetting = Common.Settings.Settings.instance().moduleSetting('persistenceNetworkOverridesEnabled');\n    this.enabledSetting.addChangeListener(this.enabledChanged, this);\n\n    this.workspace = workspace;\n\n    this.networkUISourceCodeForEncodedPath = new Map();\n    this.interceptionHandlerBound = this.interceptionHandler.bind(this);\n    this.updateInterceptionThrottler = new Common.Throttler.Throttler(50);\n\n    this.projectInternal = null;\n    this.activeProject = null;\n\n    this.activeInternal = false;\n    this.enabled = false;\n\n    this.workspace.addEventListener(Workspace.Workspace.Events.ProjectAdded, event => {\n      void this.onProjectAdded(event.data);\n    });\n    this.workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, event => {\n      void this.onProjectRemoved(event.data);\n    });\n\n    PersistenceImpl.instance().addNetworkInterceptor(this.canHandleNetworkUISourceCode.bind(this));\n    Bindings.BreakpointManager.BreakpointManager.instance().addUpdateBindingsCallback(\n        this.networkUISourceCodeAdded.bind(this));\n\n    this.eventDescriptors = [];\n    void this.enabledChanged();\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n  }\n\n  targetAdded(): void {\n    void this.updateActiveProject();\n  }\n  targetRemoved(): void {\n    void this.updateActiveProject();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    workspace: Workspace.Workspace.WorkspaceImpl|null,\n  } = {forceNew: null, workspace: null}): NetworkPersistenceManager {\n    const {forceNew, workspace} = opts;\n    if (!networkPersistenceManagerInstance || forceNew) {\n      if (!workspace) {\n        throw new Error('Missing workspace for NetworkPersistenceManager');\n      }\n      networkPersistenceManagerInstance = new NetworkPersistenceManager(workspace);\n    }\n\n    return networkPersistenceManagerInstance;\n  }\n\n  active(): boolean {\n    return this.activeInternal;\n  }\n\n  project(): Workspace.Workspace.Project|null {\n    return this.projectInternal;\n  }\n\n  originalContentForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<string|null>|null {\n    const binding = this.bindings.get(uiSourceCode);\n    if (!binding) {\n      return null;\n    }\n    const fileSystemUISourceCode = binding.fileSystem;\n    return this.originalResponseContentPromises.get(fileSystemUISourceCode) || null;\n  }\n\n  private async enabledChanged(): Promise<void> {\n    if (this.enabled === this.enabledSetting.get()) {\n      return;\n    }\n    this.enabled = this.enabledSetting.get();\n    if (this.enabled) {\n      this.eventDescriptors = [\n        Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n            Workspace.Workspace.Events.UISourceCodeRenamed,\n            event => {\n              void this.uiSourceCodeRenamedListener(event);\n            }),\n        Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n            Workspace.Workspace.Events.UISourceCodeAdded,\n            event => {\n              void this.uiSourceCodeAdded(event);\n            }),\n        Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n            Workspace.Workspace.Events.UISourceCodeRemoved,\n            event => {\n              void this.uiSourceCodeRemovedListener(event);\n            }),\n        Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n            Workspace.Workspace.Events.WorkingCopyCommitted,\n            event => this.onUISourceCodeWorkingCopyCommitted(event.data.uiSourceCode)),\n      ];\n      await this.updateActiveProject();\n    } else {\n      Common.EventTarget.removeEventListeners(this.eventDescriptors);\n      await this.updateActiveProject();\n    }\n  }\n\n  private async uiSourceCodeRenamedListener(\n      event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.UISourceCodeRenamedEvent>): Promise<void> {\n    const uiSourceCode = event.data.uiSourceCode;\n    await this.onUISourceCodeRemoved(uiSourceCode);\n    await this.onUISourceCodeAdded(uiSourceCode);\n  }\n\n  private async uiSourceCodeRemovedListener(\n      event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): Promise<void> {\n    await this.onUISourceCodeRemoved(event.data);\n  }\n\n  private async uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>):\n      Promise<void> {\n    await this.onUISourceCodeAdded(event.data);\n  }\n\n  private async updateActiveProject(): Promise<void> {\n    const wasActive = this.activeInternal;\n    this.activeInternal = Boolean(\n        this.enabledSetting.get() && SDK.TargetManager.TargetManager.instance().mainTarget() && this.projectInternal);\n    if (this.activeInternal === wasActive) {\n      return;\n    }\n\n    if (this.activeInternal && this.projectInternal) {\n      await Promise.all(\n          this.projectInternal.uiSourceCodes().map(uiSourceCode => this.filesystemUISourceCodeAdded(uiSourceCode)));\n\n      const networkProjects = this.workspace.projectsForType(Workspace.Workspace.projectTypes.Network);\n      for (const networkProject of networkProjects) {\n        await Promise.all(\n            networkProject.uiSourceCodes().map(uiSourceCode => this.networkUISourceCodeAdded(uiSourceCode)));\n      }\n    } else if (this.projectInternal) {\n      await Promise.all(\n          this.projectInternal.uiSourceCodes().map(uiSourceCode => this.filesystemUISourceCodeRemoved(uiSourceCode)));\n      this.networkUISourceCodeForEncodedPath.clear();\n    }\n    PersistenceImpl.instance().refreshAutomapping();\n  }\n\n  encodedPathFromUrl(url: Platform.DevToolsPath.UrlString, ignoreInactive?: boolean):\n      Platform.DevToolsPath.EncodedPathString {\n    return Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(this.rawPathFromUrl(url, ignoreInactive));\n  }\n\n  rawPathFromUrl(url: Platform.DevToolsPath.UrlString, ignoreInactive?: boolean): Platform.DevToolsPath.RawPathString {\n    if ((!this.activeInternal && !ignoreInactive) || !this.projectInternal) {\n      return Platform.DevToolsPath.EmptyRawPathString;\n    }\n    let initialEncodedPath = Common.ParsedURL.ParsedURL.urlWithoutHash(url.replace(/^https?:\\/\\//, '')) as\n        Platform.DevToolsPath.EncodedPathString;\n    if (initialEncodedPath.endsWith('/') && initialEncodedPath.indexOf('?') === -1) {\n      initialEncodedPath = Common.ParsedURL.ParsedURL.concatenate(initialEncodedPath, 'index.html');\n    }\n    let encodedPathParts = encodeEncodedPathToLocalPathParts(initialEncodedPath);\n    const projectPath =\n        FileSystemWorkspaceBinding.fileSystemPath(this.projectInternal.id() as Platform.DevToolsPath.UrlString);\n    const encodedPath = encodedPathParts.join('/');\n    if (projectPath.length + encodedPath.length > 200) {\n      const domain = encodedPathParts[0];\n      const encodedFileName = encodedPathParts[encodedPathParts.length - 1];\n      const shortFileName = encodedFileName ? encodedFileName.substr(0, 10) + '-' : '';\n      const extension = Common.ParsedURL.ParsedURL.extractExtension(initialEncodedPath);\n      const extensionPart = extension ? '.' + extension.substr(0, 10) : '';\n      encodedPathParts = [\n        domain,\n        'longurls',\n        shortFileName + Platform.StringUtilities.hashCode(encodedPath).toString(16) + extensionPart,\n      ];\n    }\n    return Common.ParsedURL.ParsedURL.join(encodedPathParts as Platform.DevToolsPath.RawPathString[], '/');\n\n    function encodeEncodedPathToLocalPathParts(encodedPath: Platform.DevToolsPath.EncodedPathString): string[] {\n      const encodedParts = [];\n      for (const pathPart of fileNamePartsFromEncodedPath(encodedPath)) {\n        if (!pathPart) {\n          continue;\n        }\n        // encodeURI() escapes all the unsafe filename characters except '/' and '*'\n        let encodedName =\n            encodeURI(pathPart).replace(/[\\/\\*]/g, match => '%' + match[0].charCodeAt(0).toString(16).toUpperCase());\n        if (Host.Platform.isWin()) {\n          // Windows does not allow ':' and '?' in filenames\n          encodedName = encodedName.replace(/[:\\?]/g, match => '%' + match[0].charCodeAt(0).toString(16).toUpperCase());\n          // Windows does not allow a small set of filenames.\n          if (RESERVED_FILENAMES.has(encodedName.toLowerCase())) {\n            encodedName =\n                encodedName.split('').map(char => '%' + char.charCodeAt(0).toString(16).toUpperCase()).join('');\n          }\n          // Windows does not allow the file to end in a space or dot (space should already be encoded).\n          const lastChar = encodedName.charAt(encodedName.length - 1);\n          if (lastChar === '.') {\n            encodedName = encodedName.substr(0, encodedName.length - 1) + '%2E';\n          }\n        }\n        encodedParts.push(encodedName);\n      }\n      return encodedParts;\n    }\n\n    function fileNamePartsFromEncodedPath(encodedPath: Platform.DevToolsPath.EncodedPathString): string[] {\n      encodedPath = Common.ParsedURL.ParsedURL.urlWithoutHash(encodedPath) as Platform.DevToolsPath.EncodedPathString;\n      const queryIndex = encodedPath.indexOf('?');\n      if (queryIndex === -1) {\n        return encodedPath.split('/');\n      }\n      if (queryIndex === 0) {\n        return [encodedPath];\n      }\n      const endSection = encodedPath.substr(queryIndex);\n      const parts = encodedPath.substr(0, encodedPath.length - endSection.length).split('/');\n      parts[parts.length - 1] += endSection;\n      return parts;\n    }\n  }\n\n  fileUrlFromNetworkUrl(url: Platform.DevToolsPath.UrlString, ignoreInactive?: boolean):\n      Platform.DevToolsPath.UrlString {\n    if (!this.projectInternal) {\n      return Platform.DevToolsPath.EmptyUrlString;\n    }\n    return Common.ParsedURL.ParsedURL.concatenate(\n        (this.projectInternal as FileSystem).fileSystemPath(), '/', this.encodedPathFromUrl(url, ignoreInactive));\n  }\n\n  private getHeadersUISourceCodeFromUrl(url: Platform.DevToolsPath.UrlString): Workspace.UISourceCode.UISourceCode\n      |null {\n    const fileUrlFromRequest = this.fileUrlFromNetworkUrl(url, /* ignoreNoActive */ true);\n    const folderUrlFromRequest =\n        Common.ParsedURL.ParsedURL.substring(fileUrlFromRequest, 0, fileUrlFromRequest.lastIndexOf('/'));\n    const headersFileUrl = Common.ParsedURL.ParsedURL.concatenate(folderUrlFromRequest, '/', HEADERS_FILENAME);\n    return Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(headersFileUrl);\n  }\n\n  async getOrCreateHeadersUISourceCodeFromUrl(url: Platform.DevToolsPath.UrlString):\n      Promise<Workspace.UISourceCode.UISourceCode|null> {\n    let uiSourceCode = this.getHeadersUISourceCodeFromUrl(url);\n    if (!uiSourceCode && this.projectInternal) {\n      const encodedFilePath = this.encodedPathFromUrl(url, /* ignoreNoActive */ true);\n      const encodedPath = Common.ParsedURL.ParsedURL.substring(encodedFilePath, 0, encodedFilePath.lastIndexOf('/'));\n      uiSourceCode = await this.projectInternal.createFile(encodedPath, HEADERS_FILENAME, '');\n    }\n    return uiSourceCode;\n  }\n\n  private decodeLocalPathToUrlPath(path: string): string {\n    try {\n      return unescape(path);\n    } catch (e) {\n      console.error(e);\n    }\n    return path;\n  }\n\n  async #unbind(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const binding = this.bindings.get(uiSourceCode);\n    if (binding) {\n      const mutex = this.#getOrCreateMutex(binding.network);\n      const release = await mutex.acquire();\n      try {\n        await this.#innerUnbind(binding);\n      } finally {\n        release();\n      }\n    }\n  }\n\n  async #unbindUnguarded(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const binding = this.bindings.get(uiSourceCode);\n    if (binding) {\n      await this.#innerUnbind(binding);\n    }\n  }\n\n  #innerUnbind(binding: PersistenceBinding): Promise<void> {\n    this.bindings.delete(binding.network);\n    this.bindings.delete(binding.fileSystem);\n    return PersistenceImpl.instance().removeBinding(binding);\n  }\n\n  async #bind(\n      networkUISourceCode: Workspace.UISourceCode.UISourceCode,\n      fileSystemUISourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const mutex = this.#getOrCreateMutex(networkUISourceCode);\n    const release = await mutex.acquire();\n    try {\n      const existingBinding = this.bindings.get(networkUISourceCode);\n      if (existingBinding) {\n        const {network, fileSystem} = existingBinding;\n        if (networkUISourceCode === network && fileSystemUISourceCode === fileSystem) {\n          return;\n        }\n        await this.#unbindUnguarded(networkUISourceCode);\n        await this.#unbindUnguarded(fileSystemUISourceCode);\n      }\n\n      await this.#innerAddBinding(networkUISourceCode, fileSystemUISourceCode);\n    } finally {\n      release();\n    }\n  }\n\n  #getOrCreateMutex(networkUISourceCode: Workspace.UISourceCode.UISourceCode): Common.Mutex.Mutex {\n    let mutex = this.#sourceCodeToBindProcessMutex.get(networkUISourceCode);\n    if (!mutex) {\n      mutex = new Common.Mutex.Mutex();\n      this.#sourceCodeToBindProcessMutex.set(networkUISourceCode, mutex);\n    }\n    return mutex;\n  }\n\n  async #innerAddBinding(\n      networkUISourceCode: Workspace.UISourceCode.UISourceCode,\n      fileSystemUISourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const binding = new PersistenceBinding(networkUISourceCode, fileSystemUISourceCode);\n    this.bindings.set(networkUISourceCode, binding);\n    this.bindings.set(fileSystemUISourceCode, binding);\n    await PersistenceImpl.instance().addBinding(binding);\n    const uiSourceCodeOfTruth =\n        this.savingForOverrides.has(networkUISourceCode) ? networkUISourceCode : fileSystemUISourceCode;\n    const [{content}, encoded] =\n        await Promise.all([uiSourceCodeOfTruth.requestContent(), uiSourceCodeOfTruth.contentEncoded()]);\n    PersistenceImpl.instance().syncContent(uiSourceCodeOfTruth, content || '', encoded);\n  }\n\n  private onUISourceCodeWorkingCopyCommitted(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    void this.saveUISourceCodeForOverrides(uiSourceCode);\n  }\n\n  canSaveUISourceCodeForOverrides(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return this.activeInternal && uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Network &&\n        !this.bindings.has(uiSourceCode) && !this.savingForOverrides.has(uiSourceCode);\n  }\n\n  async saveUISourceCodeForOverrides(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (!this.canSaveUISourceCodeForOverrides(uiSourceCode)) {\n      return;\n    }\n    this.savingForOverrides.add(uiSourceCode);\n    let encodedPath = this.encodedPathFromUrl(uiSourceCode.url());\n    const content = (await uiSourceCode.requestContent()).content || '';\n    const encoded = await uiSourceCode.contentEncoded();\n    const lastIndexOfSlash = encodedPath.lastIndexOf('/');\n    const encodedFileName = Common.ParsedURL.ParsedURL.substring(encodedPath, lastIndexOfSlash + 1);\n    const rawFileName = Common.ParsedURL.ParsedURL.encodedPathToRawPathString(encodedFileName);\n    encodedPath = Common.ParsedURL.ParsedURL.substr(encodedPath, 0, lastIndexOfSlash);\n    if (this.projectInternal) {\n      await this.projectInternal.createFile(encodedPath, rawFileName, content, encoded);\n    }\n    this.fileCreatedForTest(encodedPath, rawFileName);\n    this.savingForOverrides.delete(uiSourceCode);\n  }\n\n  private fileCreatedForTest(_path: Platform.DevToolsPath.EncodedPathString, _fileName: string): void {\n  }\n\n  private patternForFileSystemUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    const relativePathParts = FileSystemWorkspaceBinding.relativePath(uiSourceCode);\n    if (relativePathParts.length < 2) {\n      return '';\n    }\n    if (relativePathParts[1] === 'longurls' && relativePathParts.length !== 2) {\n      return 'http?://' + relativePathParts[0] + '/*';\n    }\n    // 'relativePath' returns an encoded string of the local file name which itself is already encoded.\n    // We therefore need to decode twice to get the raw path.\n    return 'http?://' + this.decodeLocalPathToUrlPath(this.decodeLocalPathToUrlPath(relativePathParts.join('/')));\n  }\n\n  private async onUISourceCodeAdded(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    await this.networkUISourceCodeAdded(uiSourceCode);\n    await this.filesystemUISourceCodeAdded(uiSourceCode);\n  }\n\n  private canHandleNetworkUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return this.activeInternal && !uiSourceCode.url().startsWith('snippet://');\n  }\n\n  private async networkUISourceCodeAdded(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (uiSourceCode.project().type() !== Workspace.Workspace.projectTypes.Network ||\n        !this.canHandleNetworkUISourceCode(uiSourceCode)) {\n      return;\n    }\n    const url = Common.ParsedURL.ParsedURL.urlWithoutHash(uiSourceCode.url()) as Platform.DevToolsPath.UrlString;\n    this.networkUISourceCodeForEncodedPath.set(this.encodedPathFromUrl(url), uiSourceCode);\n\n    const project = this.projectInternal as FileSystem;\n    const fileSystemUISourceCode = project.uiSourceCodeForURL(this.fileUrlFromNetworkUrl(url));\n    if (fileSystemUISourceCode) {\n      await this.#bind(uiSourceCode, fileSystemUISourceCode);\n    }\n  }\n\n  private async filesystemUISourceCodeAdded(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (!this.activeInternal || uiSourceCode.project() !== this.projectInternal) {\n      return;\n    }\n    this.updateInterceptionPatterns();\n\n    const relativePath = FileSystemWorkspaceBinding.relativePath(uiSourceCode);\n    const networkUISourceCode =\n        this.networkUISourceCodeForEncodedPath.get(Common.ParsedURL.ParsedURL.join(relativePath, '/'));\n    if (networkUISourceCode) {\n      await this.#bind(networkUISourceCode, uiSourceCode);\n    }\n  }\n\n  async generateHeaderPatterns(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<{\n    headerPatterns: Set<string>,\n    path: Platform.DevToolsPath.EncodedPathString,\n    overridesWithRegex: HeaderOverrideWithRegex[],\n  }> {\n    const headerPatterns = new Set<string>();\n    const content = (await uiSourceCode.requestContent()).content || '[]';\n    let headerOverrides: HeaderOverride[] = [];\n    try {\n      headerOverrides = JSON.parse(content) as HeaderOverride[];\n      if (!headerOverrides.every(isHeaderOverride)) {\n        throw 'Type mismatch after parsing';\n      }\n    } catch (e) {\n      console.error('Failed to parse', uiSourceCode.url(), 'for locally overriding headers.');\n      return {headerPatterns, path: Platform.DevToolsPath.EmptyEncodedPathString, overridesWithRegex: []};\n    }\n    const relativePath = FileSystemWorkspaceBinding.relativePath(uiSourceCode).join('/');\n    // 'relativePath' returns an encoded string of the local file name which itself is already encoded.\n    // e.g. relativePath: 'www.example.com%253A443/path/.headers '\n    // singlyDecodedPath: 'www.example.com%3A443/path/'\n    // decodedPath: 'www.example.com:443/path'\n    const singlyDecodedPath = this.decodeLocalPathToUrlPath(relativePath).slice(0, -HEADERS_FILENAME.length) as\n        Platform.DevToolsPath.EncodedPathString;\n    const decodedPath = this.decodeLocalPathToUrlPath(singlyDecodedPath) as Platform.DevToolsPath.RawPathString;\n\n    const overridesWithRegex: HeaderOverrideWithRegex[] = [];\n    for (const headerOverride of headerOverrides) {\n      headerPatterns.add('http?://' + decodedPath + headerOverride.applyTo);\n\n      // Most servers have the concept of a \"directory index\", which is a\n      // default resource name for a request targeting a \"directory\", e. g.\n      // requesting \"example.com/path/\" would result in the same response as\n      // requesting \"example.com/path/index.html\". To match this behavior we\n      // generate an additional pattern without \"index.html\" as the longer\n      // pattern would not match against a shorter request.\n      const {head, tail} = extractDirectoryIndex(headerOverride.applyTo);\n      if (tail) {\n        headerPatterns.add('http?://' + decodedPath + head);\n\n        const pattern = escapeRegex(decodedPath + head) + '(' + escapeRegex(tail) + ')?';\n        const regex = new RegExp('^https?:\\/\\/' + pattern + '$');\n        overridesWithRegex.push({\n          applyToRegex: regex,\n          headers: headerOverride.headers,\n        });\n      } else {\n        const regex = new RegExp('^https?:\\/\\/' + escapeRegex(decodedPath + headerOverride.applyTo) + '$');\n        overridesWithRegex.push({\n          applyToRegex: regex,\n          headers: headerOverride.headers,\n        });\n      }\n    }\n    return {headerPatterns, path: singlyDecodedPath, overridesWithRegex};\n  }\n\n  async updateInterceptionPatternsForTests(): Promise<void> {\n    await this.#innerUpdateInterceptionPatterns();\n  }\n\n  updateInterceptionPatterns(): void {\n    void this.updateInterceptionThrottler.schedule(this.#innerUpdateInterceptionPatterns.bind(this));\n  }\n\n  async #innerUpdateInterceptionPatterns(): Promise<void> {\n    this.#headerOverridesMap.clear();\n    if (!this.activeInternal || !this.projectInternal) {\n      return SDK.NetworkManager.MultitargetNetworkManager.instance().setInterceptionHandlerForPatterns(\n          [], this.interceptionHandlerBound);\n    }\n    let patterns = new Set<string>();\n    for (const uiSourceCode of this.projectInternal.uiSourceCodes()) {\n      const pattern = this.patternForFileSystemUISourceCode(uiSourceCode);\n      if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.HEADER_OVERRIDES) &&\n          uiSourceCode.name() === HEADERS_FILENAME) {\n        const {headerPatterns, path, overridesWithRegex} = await this.generateHeaderPatterns(uiSourceCode);\n        if (headerPatterns.size > 0) {\n          patterns = new Set([...patterns, ...headerPatterns]);\n          this.#headerOverridesMap.set(path, overridesWithRegex);\n        }\n      } else {\n        patterns.add(pattern);\n      }\n      // Most servers have the concept of a \"directory index\", which is a\n      // default resource name for a request targeting a \"directory\", e. g.\n      // requesting \"example.com/path/\" would result in the same response as\n      // requesting \"example.com/path/index.html\". To match this behavior we\n      // generate an additional pattern without \"index.html\" as the longer\n      // pattern would not match against a shorter request.\n      const {head, tail} = extractDirectoryIndex(pattern);\n      if (tail) {\n        patterns.add(head);\n      }\n    }\n\n    return SDK.NetworkManager.MultitargetNetworkManager.instance().setInterceptionHandlerForPatterns(\n        Array.from(patterns).map(\n            pattern => ({urlPattern: pattern, requestStage: Protocol.Fetch.RequestStage.Response})),\n        this.interceptionHandlerBound);\n  }\n\n  private async onUISourceCodeRemoved(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    await this.networkUISourceCodeRemoved(uiSourceCode);\n    await this.filesystemUISourceCodeRemoved(uiSourceCode);\n  }\n\n  private async networkUISourceCodeRemoved(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Network) {\n      await this.#unbind(uiSourceCode);\n      this.#sourceCodeToBindProcessMutex.delete(uiSourceCode);\n      this.networkUISourceCodeForEncodedPath.delete(this.encodedPathFromUrl(uiSourceCode.url()));\n    }\n  }\n\n  private async filesystemUISourceCodeRemoved(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (uiSourceCode.project() !== this.projectInternal) {\n      return;\n    }\n    this.updateInterceptionPatterns();\n    this.originalResponseContentPromises.delete(uiSourceCode);\n    await this.#unbind(uiSourceCode);\n  }\n\n  async setProject(project: Workspace.Workspace.Project|null): Promise<void> {\n    if (project === this.projectInternal) {\n      return;\n    }\n\n    if (this.projectInternal) {\n      await Promise.all(\n          this.projectInternal.uiSourceCodes().map(uiSourceCode => this.filesystemUISourceCodeRemoved(uiSourceCode)));\n    }\n\n    this.projectInternal = project;\n\n    if (this.projectInternal) {\n      await Promise.all(\n          this.projectInternal.uiSourceCodes().map(uiSourceCode => this.filesystemUISourceCodeAdded(uiSourceCode)));\n    }\n\n    await this.updateActiveProject();\n    this.dispatchEventToListeners(Events.ProjectChanged, this.projectInternal);\n  }\n\n  private async onProjectAdded(project: Workspace.Workspace.Project): Promise<void> {\n    if (project.type() !== Workspace.Workspace.projectTypes.FileSystem ||\n        FileSystemWorkspaceBinding.fileSystemType(project) !== 'overrides') {\n      return;\n    }\n    const fileSystemPath = FileSystemWorkspaceBinding.fileSystemPath(project.id() as Platform.DevToolsPath.UrlString);\n    if (!fileSystemPath) {\n      return;\n    }\n    if (this.projectInternal) {\n      this.projectInternal.remove();\n    }\n\n    await this.setProject(project);\n  }\n\n  private async onProjectRemoved(project: Workspace.Workspace.Project): Promise<void> {\n    if (project === this.projectInternal) {\n      await this.setProject(null);\n    }\n  }\n\n  mergeHeaders(baseHeaders: Protocol.Fetch.HeaderEntry[], overrideHeaders: Protocol.Network.Headers):\n      Protocol.Fetch.HeaderEntry[] {\n    const result: Protocol.Fetch.HeaderEntry[] = [];\n    const headerMap = new Map<string, string>();\n    for (const header of baseHeaders) {\n      headerMap.set(header.name, header.value);\n    }\n    for (const [headerName, headerValue] of Object.entries(overrideHeaders)) {\n      headerMap.set(headerName, headerValue);\n    }\n    headerMap.forEach((headerValue, headerName) => {\n      result.push({name: headerName, value: headerValue});\n    });\n    return result;\n  }\n\n  #maybeMergeHeadersForPathSegment(\n      path: Platform.DevToolsPath.EncodedPathString, requestUrl: Platform.DevToolsPath.UrlString,\n      headers: Protocol.Fetch.HeaderEntry[]): Protocol.Fetch.HeaderEntry[] {\n    const headerOverrides = this.#headerOverridesMap.get(path) || [];\n    for (const headerOverride of headerOverrides) {\n      if (headerOverride.applyToRegex.test(requestUrl)) {\n        headers = this.mergeHeaders(headers, headerOverride.headers);\n      }\n    }\n    return headers;\n  }\n\n  handleHeaderInterception(interceptedRequest: SDK.NetworkManager.InterceptedRequest): Protocol.Fetch.HeaderEntry[] {\n    let result: Protocol.Fetch.HeaderEntry[] = interceptedRequest.responseHeaders || [];\n    // 'rawPathFromUrl()''s return value is already (singly-)encoded, so we can\n    // treat it as an 'EncodedPathString' here.\n    const urlSegments =\n        this.rawPathFromUrl(interceptedRequest.request.url as Platform.DevToolsPath.UrlString).split('/') as\n        Platform.DevToolsPath.EncodedPathString[];\n    // Traverse the hierarchy of overrides from the most general to the most\n    // specific. Check with empty string first to match overrides applying to\n    // all domains.\n    // e.g. '', 'www.example.com/', 'www.example.com/path/', ...\n    let path = Platform.DevToolsPath.EmptyEncodedPathString;\n    result = this.#maybeMergeHeadersForPathSegment(\n        path, interceptedRequest.request.url as Platform.DevToolsPath.UrlString, result);\n    for (const segment of urlSegments) {\n      path = Common.ParsedURL.ParsedURL.concatenate(path, segment, '/');\n      result = this.#maybeMergeHeadersForPathSegment(\n          path, interceptedRequest.request.url as Platform.DevToolsPath.UrlString, result);\n    }\n    return result;\n  }\n\n  private async interceptionHandler(interceptedRequest: SDK.NetworkManager.InterceptedRequest): Promise<void> {\n    const method = interceptedRequest.request.method;\n    if (!this.activeInternal || (method !== 'GET' && method !== 'POST')) {\n      return;\n    }\n    const proj = this.projectInternal as FileSystem;\n    const path = this.fileUrlFromNetworkUrl(interceptedRequest.request.url as Platform.DevToolsPath.UrlString);\n    const fileSystemUISourceCode = proj.uiSourceCodeForURL(path);\n    let responseHeaders: Protocol.Fetch.HeaderEntry[] = [];\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.HEADER_OVERRIDES)) {\n      responseHeaders = this.handleHeaderInterception(interceptedRequest);\n    }\n    if (!fileSystemUISourceCode && !responseHeaders.length) {\n      return;\n    }\n    if (!responseHeaders.length) {\n      responseHeaders = interceptedRequest.responseHeaders || [];\n    }\n\n    let mimeType = '';\n    if (interceptedRequest.responseHeaders) {\n      for (const header of interceptedRequest.responseHeaders) {\n        if (header.name.toLowerCase() === 'content-type') {\n          mimeType = header.value;\n          break;\n        }\n      }\n    }\n\n    if (!mimeType) {\n      const expectedResourceType =\n          Common.ResourceType.resourceTypes[interceptedRequest.resourceType] || Common.ResourceType.resourceTypes.Other;\n      mimeType = fileSystemUISourceCode?.mimeType() || '';\n      if (Common.ResourceType.ResourceType.fromMimeType(mimeType) !== expectedResourceType) {\n        mimeType = expectedResourceType.canonicalMimeType();\n      }\n    }\n\n    if (fileSystemUISourceCode) {\n      this.originalResponseContentPromises.set(\n          fileSystemUISourceCode, interceptedRequest.responseBody().then(response => {\n            if (response.error || response.content === null) {\n              return null;\n            }\n            if (response.encoded) {\n              const text = atob(response.content);\n              const data = new Uint8Array(text.length);\n              for (let i = 0; i < text.length; ++i) {\n                data[i] = text.charCodeAt(i);\n              }\n              return new TextDecoder('utf-8').decode(data);\n            }\n            return response.content;\n          }));\n\n      const project = fileSystemUISourceCode.project() as FileSystem;\n      const blob = await project.requestFileBlob(fileSystemUISourceCode);\n      if (blob) {\n        void interceptedRequest.continueRequestWithContent(\n            new Blob([blob], {type: mimeType}), /* encoded */ false, responseHeaders);\n      }\n    } else {\n      const responseBody = await interceptedRequest.responseBody();\n      if (!responseBody.error && responseBody.content) {\n        void interceptedRequest.continueRequestWithContent(\n            new Blob([responseBody.content], {type: mimeType}), /* encoded */ true, responseHeaders);\n      }\n    }\n  }\n}\n\nconst RESERVED_FILENAMES = new Set<string>([\n  'con',  'prn',  'aux',  'nul',  'com1', 'com2', 'com3', 'com4', 'com5', 'com6', 'com7',\n  'com8', 'com9', 'lpt1', 'lpt2', 'lpt3', 'lpt4', 'lpt5', 'lpt6', 'lpt7', 'lpt8', 'lpt9',\n]);\n\nexport const HEADERS_FILENAME = '.headers';\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  ProjectChanged = 'ProjectChanged',\n}\n\nexport type EventTypes = {\n  [Events.ProjectChanged]: Workspace.Workspace.Project|null,\n};\n\nexport interface HeaderOverride {\n  applyTo: string;\n  headers: Protocol.Network.Headers;\n}\n\ninterface HeaderOverrideWithRegex {\n  applyToRegex: RegExp;\n  headers: Protocol.Network.Headers;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isHeaderOverride(arg: any): arg is HeaderOverride {\n  if (!(arg && arg.applyTo && typeof (arg.applyTo === 'string') && arg.headers && Object.keys(arg.headers).length)) {\n    return false;\n  }\n  return Object.values(arg.headers).every(value => typeof value === 'string');\n}\n\nexport function escapeRegex(pattern: string): string {\n  return Platform.StringUtilities.escapeCharacters(pattern, '[]{}()\\\\.^$+|-,?').replaceAll('*', '.*');\n}\n\nexport function extractDirectoryIndex(pattern: string): {head: string, tail?: string} {\n  const lastSlash = pattern.lastIndexOf('/');\n  const tail = lastSlash >= 0 ? pattern.slice(lastSlash + 1) : pattern;\n  const head = lastSlash >= 0 ? pattern.slice(0, lastSlash + 1) : '';\n  const regex = new RegExp('^' + escapeRegex(tail) + '$');\n  if (regex.test('index.html') || regex.test('index.htm') || regex.test('index.php')) {\n    return {head, tail};\n  }\n  return {head: pattern};\n}\n"]}