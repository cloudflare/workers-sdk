{"version":3,"file":"FileSystemWorkspaceBinding.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/FileSystemWorkspaceBinding.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport type {IsolatedFileSystem} from './IsolatedFileSystem.js';\nimport type {IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';\nimport {Events} from './IsolatedFileSystemManager.js';\nimport type {PlatformFileSystem} from './PlatformFileSystem.js';\n\nexport class FileSystemWorkspaceBinding {\n  readonly isolatedFileSystemManager: IsolatedFileSystemManager;\n  private readonly workspace: Workspace.Workspace.WorkspaceImpl;\n  private readonly eventListeners: Common.EventTarget.EventDescriptor[];\n  private readonly boundFileSystems: Map<string, FileSystem>;\n  constructor(isolatedFileSystemManager: IsolatedFileSystemManager, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.isolatedFileSystemManager = isolatedFileSystemManager;\n    this.workspace = workspace;\n    this.eventListeners = [\n      this.isolatedFileSystemManager.addEventListener(Events.FileSystemAdded, this.onFileSystemAdded, this),\n      this.isolatedFileSystemManager.addEventListener(Events.FileSystemRemoved, this.onFileSystemRemoved, this),\n      this.isolatedFileSystemManager.addEventListener(Events.FileSystemFilesChanged, this.fileSystemFilesChanged, this),\n    ];\n    this.boundFileSystems = new Map();\n    void this.isolatedFileSystemManager.waitForFileSystems().then(this.onFileSystemsLoaded.bind(this));\n  }\n\n  static projectId(fileSystemPath: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.UrlString {\n    return fileSystemPath;\n  }\n\n  static relativePath(uiSourceCode: Workspace.UISourceCode.UISourceCode): Platform.DevToolsPath.EncodedPathString[] {\n    const baseURL = (uiSourceCode.project() as FileSystem).fileSystemBaseURL;\n    return Common.ParsedURL.ParsedURL.split(\n        Common.ParsedURL.ParsedURL.sliceUrlToEncodedPathString(uiSourceCode.url(), baseURL.length), '/');\n  }\n\n  static tooltipForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    const fileSystem = (uiSourceCode.project() as FileSystem).fileSystemInternal;\n    return fileSystem.tooltipForURL(uiSourceCode.url());\n  }\n\n  static fileSystemType(project: Workspace.Workspace.Project): string {\n    const fileSystem = (project as FileSystem).fileSystemInternal;\n    return fileSystem.type();\n  }\n\n  static fileSystemSupportsAutomapping(project: Workspace.Workspace.Project): boolean {\n    const fileSystem = (project as FileSystem).fileSystemInternal;\n    return fileSystem.supportsAutomapping();\n  }\n\n  static completeURL(project: Workspace.Workspace.Project, relativePath: string): Platform.DevToolsPath.UrlString {\n    const fsProject = project as FileSystem;\n    return Common.ParsedURL.ParsedURL.concatenate(fsProject.fileSystemBaseURL, relativePath);\n  }\n\n  static fileSystemPath(projectId: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.UrlString {\n    return projectId;\n  }\n\n  fileSystemManager(): IsolatedFileSystemManager {\n    return this.isolatedFileSystemManager;\n  }\n\n  private onFileSystemsLoaded(fileSystems: IsolatedFileSystem[]): void {\n    for (const fileSystem of fileSystems) {\n      this.addFileSystem(fileSystem);\n    }\n  }\n\n  private onFileSystemAdded(event: Common.EventTarget.EventTargetEvent<PlatformFileSystem>): void {\n    const fileSystem = event.data;\n    this.addFileSystem(fileSystem);\n  }\n\n  private addFileSystem(fileSystem: PlatformFileSystem): void {\n    const boundFileSystem = new FileSystem(this, fileSystem, this.workspace);\n    this.boundFileSystems.set(fileSystem.path(), boundFileSystem);\n  }\n\n  private onFileSystemRemoved(event: Common.EventTarget.EventTargetEvent<PlatformFileSystem>): void {\n    const fileSystem = event.data;\n    const boundFileSystem = this.boundFileSystems.get(fileSystem.path());\n    if (boundFileSystem) {\n      boundFileSystem.dispose();\n    }\n    this.boundFileSystems.delete(fileSystem.path());\n  }\n\n  private fileSystemFilesChanged(event: Common.EventTarget.EventTargetEvent<FilesChangedData>): void {\n    const paths = event.data;\n    for (const fileSystemPath of paths.changed.keysArray()) {\n      const fileSystem = this.boundFileSystems.get(fileSystemPath);\n      if (!fileSystem) {\n        continue;\n      }\n      paths.changed.get(fileSystemPath).forEach(path => fileSystem.fileChanged(path));\n    }\n\n    for (const fileSystemPath of paths.added.keysArray()) {\n      const fileSystem = this.boundFileSystems.get(fileSystemPath);\n      if (!fileSystem) {\n        continue;\n      }\n      paths.added.get(fileSystemPath).forEach(path => fileSystem.fileChanged(path));\n    }\n\n    for (const fileSystemPath of paths.removed.keysArray()) {\n      const fileSystem = this.boundFileSystems.get(fileSystemPath);\n      if (!fileSystem) {\n        continue;\n      }\n      paths.removed.get(fileSystemPath).forEach(path => fileSystem.removeUISourceCode(path));\n    }\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n    for (const fileSystem of this.boundFileSystems.values()) {\n      fileSystem.dispose();\n      this.boundFileSystems.delete(fileSystem.fileSystemInternal.path());\n    }\n  }\n}\n\nexport class FileSystem extends Workspace.Workspace.ProjectStore {\n  readonly fileSystemInternal: PlatformFileSystem;\n  readonly fileSystemBaseURL: Platform.DevToolsPath.UrlString;\n  private readonly fileSystemParentURL: Platform.DevToolsPath.UrlString;\n  private readonly fileSystemWorkspaceBinding: FileSystemWorkspaceBinding;\n  private readonly fileSystemPathInternal: Platform.DevToolsPath.UrlString;\n  private readonly creatingFilesGuard: Set<string>;\n  constructor(\n      fileSystemWorkspaceBinding: FileSystemWorkspaceBinding, isolatedFileSystem: PlatformFileSystem,\n      workspace: Workspace.Workspace.WorkspaceImpl) {\n    const fileSystemPath = isolatedFileSystem.path();\n    const id = FileSystemWorkspaceBinding.projectId(fileSystemPath);\n    console.assert(!workspace.project(id));\n    const displayName = fileSystemPath.substr(fileSystemPath.lastIndexOf('/') + 1);\n\n    super(workspace, id, Workspace.Workspace.projectTypes.FileSystem, displayName);\n\n    this.fileSystemInternal = isolatedFileSystem;\n    this.fileSystemBaseURL = Common.ParsedURL.ParsedURL.concatenate(this.fileSystemInternal.path(), '/');\n    this.fileSystemParentURL =\n        Common.ParsedURL.ParsedURL.substr(this.fileSystemBaseURL, 0, fileSystemPath.lastIndexOf('/') + 1);\n    this.fileSystemWorkspaceBinding = fileSystemWorkspaceBinding;\n    this.fileSystemPathInternal = fileSystemPath;\n    this.creatingFilesGuard = new Set();\n\n    workspace.addProject(this);\n    this.populate();\n  }\n\n  fileSystemPath(): Platform.DevToolsPath.UrlString {\n    return this.fileSystemPathInternal;\n  }\n\n  fileSystem(): PlatformFileSystem {\n    return this.fileSystemInternal;\n  }\n\n  mimeType(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    return this.fileSystemInternal.mimeFromPath(uiSourceCode.url());\n  }\n\n  initialGitFolders(): Platform.DevToolsPath.UrlString[] {\n    return this.fileSystemInternal.initialGitFolders().map(\n        folder => Common.ParsedURL.ParsedURL.concatenate(this.fileSystemPathInternal, '/', folder));\n  }\n\n  private filePathForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Platform.DevToolsPath.EncodedPathString {\n    return Common.ParsedURL.ParsedURL.sliceUrlToEncodedPathString(\n        uiSourceCode.url(), this.fileSystemPathInternal.length);\n  }\n\n  isServiceProject(): boolean {\n    return false;\n  }\n\n  requestMetadata(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<Workspace.UISourceCode.UISourceCodeMetadata|null> {\n    const metadata = sourceCodeToMetadataMap.get(uiSourceCode);\n    if (metadata) {\n      return metadata;\n    }\n    const relativePath = this.filePathForUISourceCode(uiSourceCode);\n    const promise = this.fileSystemInternal.getMetadata(relativePath).then(onMetadata);\n    sourceCodeToMetadataMap.set(uiSourceCode, promise);\n    return promise;\n\n    function onMetadata(metadata: {modificationTime: Date, size: number}|\n                        null): Workspace.UISourceCode.UISourceCodeMetadata|null {\n      if (!metadata) {\n        return null;\n      }\n      return new Workspace.UISourceCode.UISourceCodeMetadata(metadata.modificationTime, metadata.size);\n    }\n  }\n\n  requestFileBlob(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<Blob|null> {\n    return this.fileSystemInternal.requestFileBlob(this.filePathForUISourceCode(uiSourceCode));\n  }\n\n  requestFileContent(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<TextUtils.ContentProvider.DeferredContent> {\n    const filePath = this.filePathForUISourceCode(uiSourceCode);\n    return this.fileSystemInternal.requestFileContent(filePath);\n  }\n\n  canSetFileContent(): boolean {\n    return true;\n  }\n\n  async setFileContent(uiSourceCode: Workspace.UISourceCode.UISourceCode, newContent: string, isBase64: boolean):\n      Promise<void> {\n    const filePath = this.filePathForUISourceCode(uiSourceCode);\n    await this.fileSystemInternal.setFileContent(filePath, newContent, isBase64);\n  }\n\n  fullDisplayName(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    const baseURL = (uiSourceCode.project() as FileSystem).fileSystemParentURL;\n    return uiSourceCode.url().substring(baseURL.length);\n  }\n\n  canRename(): boolean {\n    return true;\n  }\n\n  rename(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, newName: Platform.DevToolsPath.RawPathString,\n      callback:\n          (arg0: boolean, arg1?: string|undefined, arg2?: Platform.DevToolsPath.UrlString|undefined,\n           arg3?: Common.ResourceType.ResourceType|undefined) => void): void {\n    if (newName === uiSourceCode.name()) {\n      callback(true, uiSourceCode.name(), uiSourceCode.url(), uiSourceCode.contentType());\n      return;\n    }\n\n    let filePath = this.filePathForUISourceCode(uiSourceCode);\n    this.fileSystemInternal.renameFile(filePath, newName, innerCallback.bind(this));\n\n    function innerCallback(this: FileSystem, success: boolean, newName?: string): void {\n      if (!success || !newName) {\n        callback(false, newName);\n        return;\n      }\n      console.assert(Boolean(newName));\n      const slash = filePath.lastIndexOf('/');\n      const parentPath = Common.ParsedURL.ParsedURL.substr(filePath, 0, slash);\n      filePath = Common.ParsedURL.ParsedURL.encodedFromParentPathAndName(parentPath, newName);\n      filePath = Common.ParsedURL.ParsedURL.substr(filePath, 1);\n      const newURL = Common.ParsedURL.ParsedURL.concatenate(this.fileSystemBaseURL, filePath);\n      const newContentType = this.fileSystemInternal.contentType(newName);\n      this.renameUISourceCode(uiSourceCode, newName);\n      callback(true, newName, newURL, newContentType);\n    }\n  }\n\n  async searchInFileContent(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, query: string, caseSensitive: boolean,\n      isRegex: boolean): Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    const filePath = this.filePathForUISourceCode(uiSourceCode);\n    const {content} = await this.fileSystemInternal.requestFileContent(filePath);\n    if (content) {\n      return TextUtils.TextUtils.performSearchInContent(content, query, caseSensitive, isRegex);\n    }\n    return [];\n  }\n\n  async findFilesMatchingSearchRequest(\n      searchConfig: Workspace.Workspace.ProjectSearchConfig, filesMatchingFileQuery: Platform.DevToolsPath.UrlString[],\n      progress: Common.Progress.Progress): Promise<string[]> {\n    let result: string[] = filesMatchingFileQuery;\n    const queriesToRun = searchConfig.queries().slice();\n    if (!queriesToRun.length) {\n      queriesToRun.push('');\n    }\n    progress.setTotalWork(queriesToRun.length);\n\n    for (const query of queriesToRun) {\n      const files = await this.fileSystemInternal.searchInPath(searchConfig.isRegex() ? '' : query, progress);\n      files.sort(Platform.StringUtilities.naturalOrderComparator);\n      result = Platform.ArrayUtilities.intersectOrdered(result, files, Platform.StringUtilities.naturalOrderComparator);\n      progress.incrementWorked(1);\n    }\n\n    progress.done();\n    return result;\n  }\n\n  indexContent(progress: Common.Progress.Progress): void {\n    this.fileSystemInternal.indexContent(progress);\n  }\n\n  populate(): void {\n    const chunkSize = 1000;\n    const filePaths = this.fileSystemInternal.initialFilePaths();\n    reportFileChunk.call(this, 0);\n\n    function reportFileChunk(this: FileSystem, from: number): void {\n      const to = Math.min(from + chunkSize, filePaths.length);\n      for (let i = from; i < to; ++i) {\n        this.addFile(filePaths[i]);\n      }\n      if (to < filePaths.length) {\n        window.setTimeout(reportFileChunk.bind(this, to), 100);\n      }\n    }\n  }\n\n  excludeFolder(url: Platform.DevToolsPath.UrlString): void {\n    let relativeFolder = Common.ParsedURL.ParsedURL.sliceUrlToEncodedPathString(url, this.fileSystemBaseURL.length);\n    if (!relativeFolder.startsWith('/')) {\n      relativeFolder = Common.ParsedURL.ParsedURL.prepend('/', relativeFolder);\n    }\n    if (!relativeFolder.endsWith('/')) {\n      relativeFolder = Common.ParsedURL.ParsedURL.concatenate(relativeFolder, '/');\n    }\n    this.fileSystemInternal.addExcludedFolder(relativeFolder);\n\n    const uiSourceCodes = this.uiSourceCodes().slice();\n    for (let i = 0; i < uiSourceCodes.length; ++i) {\n      const uiSourceCode = uiSourceCodes[i];\n      if (uiSourceCode.url().startsWith(url)) {\n        this.removeUISourceCode(uiSourceCode.url());\n      }\n    }\n  }\n\n  canExcludeFolder(path: Platform.DevToolsPath.EncodedPathString): boolean {\n    return this.fileSystemInternal.canExcludeFolder(path);\n  }\n\n  canCreateFile(): boolean {\n    return true;\n  }\n\n  async createFile(\n      path: Platform.DevToolsPath.EncodedPathString, name: Platform.DevToolsPath.RawPathString|null, content: string,\n      isBase64?: boolean): Promise<Workspace.UISourceCode.UISourceCode|null> {\n    const guardFileName = this.fileSystemPathInternal + path + (!path.endsWith('/') ? '/' : '') + name;\n    this.creatingFilesGuard.add(guardFileName);\n    const filePath = await this.fileSystemInternal.createFile(path, name);\n    if (!filePath) {\n      return null;\n    }\n    const uiSourceCode = this.addFile(filePath);\n    uiSourceCode.setContent(content, Boolean(isBase64));\n    this.creatingFilesGuard.delete(guardFileName);\n    return uiSourceCode;\n  }\n\n  deleteFile(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const relativePath = this.filePathForUISourceCode(uiSourceCode);\n    void this.fileSystemInternal.deleteFile(relativePath).then(success => {\n      if (success) {\n        this.removeUISourceCode(uiSourceCode.url());\n      }\n    });\n  }\n\n  remove(): void {\n    this.fileSystemWorkspaceBinding.isolatedFileSystemManager.removeFileSystem(this.fileSystemInternal);\n  }\n\n  private addFile(filePath: Platform.DevToolsPath.EncodedPathString): Workspace.UISourceCode.UISourceCode {\n    const contentType = this.fileSystemInternal.contentType(filePath);\n    const uiSourceCode =\n        this.createUISourceCode(Common.ParsedURL.ParsedURL.concatenate(this.fileSystemBaseURL, filePath), contentType);\n    this.addUISourceCode(uiSourceCode);\n    return uiSourceCode;\n  }\n\n  fileChanged(path: Platform.DevToolsPath.UrlString): void {\n    // Ignore files that are being created but do not have content yet.\n    if (this.creatingFilesGuard.has(path)) {\n      return;\n    }\n    const uiSourceCode = this.uiSourceCodeForURL(path);\n    if (!uiSourceCode) {\n      const contentType = this.fileSystemInternal.contentType(path);\n      this.addUISourceCode(this.createUISourceCode(path, contentType));\n      return;\n    }\n    sourceCodeToMetadataMap.delete(uiSourceCode);\n    void uiSourceCode.checkContentUpdated();\n  }\n\n  tooltipForURL(url: Platform.DevToolsPath.UrlString): string {\n    return this.fileSystemInternal.tooltipForURL(url);\n  }\n\n  dispose(): void {\n    this.removeProject();\n  }\n}\n\nconst sourceCodeToMetadataMap =\n    new WeakMap<Workspace.UISourceCode.UISourceCode, Promise<Workspace.UISourceCode.UISourceCodeMetadata|null>>();\nexport interface FilesChangedData {\n  changed: Platform.MapUtilities.Multimap<Platform.DevToolsPath.UrlString, Platform.DevToolsPath.UrlString>;\n  added: Platform.MapUtilities.Multimap<Platform.DevToolsPath.UrlString, Platform.DevToolsPath.UrlString>;\n  removed: Platform.MapUtilities.Multimap<Platform.DevToolsPath.UrlString, Platform.DevToolsPath.UrlString>;\n}\n"]}