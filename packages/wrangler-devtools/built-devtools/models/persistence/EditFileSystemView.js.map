{"version":3,"file":"EditFileSystemView.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/EditFileSystemView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport editFileSystemViewStyles from './editFileSystemView.css.js';\nimport {Events, IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';\n\nimport type {PlatformFileSystem} from './PlatformFileSystem.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Edit File System View of the Workspace settings in Settings\n  */\n  excludedFolders: 'Excluded folders',\n  /**\n  *@description Text to add something\n  */\n  add: 'Add',\n  /**\n  * @description Placeholder text for an area of the UI that shows which folders have been excluded\n  * from being show in DevTools. When the user has not yet chosen any folders to exclude, this text\n  * is shown.\n  */\n  none: 'None',\n  /**\n  *@description Text in Edit File System View of the Workspace settings in Settings\n  *@example {file/path/} PH1\n  */\n  sViaDevtools: '{PH1} (via .devtools)',\n  /**\n  *@description Text in Edit File System View of the Workspace settings in Settings\n  */\n  folderPath: 'Folder path',\n  /**\n  *@description Error message when a file system path is an empty string.\n  */\n  enterAPath: 'Enter a path',\n  /**\n  *@description Error message when a file system path is identical to an existing path.\n  */\n  enterAUniquePath: 'Enter a unique path',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/EditFileSystemView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class EditFileSystemView extends UI.Widget.VBox implements UI.ListWidget.Delegate<string> {\n  private readonly fileSystemPath: Platform.DevToolsPath.UrlString;\n  private excludedFolders: Platform.DevToolsPath.EncodedPathString[];\n  private readonly eventListeners: Common.EventTarget.EventDescriptor[];\n  private readonly excludedFoldersList: UI.ListWidget.ListWidget<string>;\n  private muteUpdate?: boolean;\n  private excludedFolderEditor?: UI.ListWidget.Editor<string>;\n  constructor(fileSystemPath: Platform.DevToolsPath.UrlString) {\n    super(true);\n\n    this.fileSystemPath = fileSystemPath;\n\n    this.excludedFolders = [];\n\n    this.eventListeners = [\n      IsolatedFileSystemManager.instance().addEventListener(Events.ExcludedFolderAdded, this.update, this),\n      IsolatedFileSystemManager.instance().addEventListener(Events.ExcludedFolderRemoved, this.update, this),\n    ];\n\n    const excludedFoldersHeader = this.contentElement.createChild('div', 'file-system-header');\n    excludedFoldersHeader.createChild('div', 'file-system-header-text').textContent =\n        i18nString(UIStrings.excludedFolders);\n    excludedFoldersHeader.appendChild(UI.UIUtils.createTextButton(\n        i18nString(UIStrings.add), this.addExcludedFolderButtonClicked.bind(this), 'add-button'));\n    this.excludedFoldersList = new UI.ListWidget.ListWidget(this);\n    this.excludedFoldersList.element.classList.add('file-system-list');\n\n    const excludedFoldersPlaceholder = document.createElement('div');\n    excludedFoldersPlaceholder.classList.add('file-system-list-empty');\n    excludedFoldersPlaceholder.textContent = i18nString(UIStrings.none);\n    this.excludedFoldersList.setEmptyPlaceholder(excludedFoldersPlaceholder);\n    this.excludedFoldersList.show(this.contentElement);\n\n    this.update();\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n  }\n\n  private getFileSystem(): PlatformFileSystem {\n    return IsolatedFileSystemManager.instance().fileSystem(this.fileSystemPath) as PlatformFileSystem;\n  }\n\n  private update(): void {\n    if (this.muteUpdate) {\n      return;\n    }\n\n    this.excludedFoldersList.clear();\n    this.excludedFolders = [];\n    for (const folder of this.getFileSystem().excludedFolders().values()) {\n      this.excludedFolders.push(folder);\n      this.excludedFoldersList.appendItem(folder, true);\n    }\n  }\n\n  private addExcludedFolderButtonClicked(): void {\n    this.excludedFoldersList.addNewItem(0, '');\n  }\n\n  renderItem(item: string, editable: boolean): Element {\n    const element = document.createElement('div');\n    element.classList.add('file-system-list-item');\n    const pathPrefix = editable ? item : i18nString(UIStrings.sViaDevtools, {PH1: item}) as string;\n    const pathPrefixElement = element.createChild('div', 'file-system-value');\n    pathPrefixElement.textContent = pathPrefix;\n    UI.Tooltip.Tooltip.install(pathPrefixElement, pathPrefix);\n    return element;\n  }\n\n  removeItemRequested(_item: string, index: number): void {\n    this.getFileSystem().removeExcludedFolder(this.excludedFolders[index]);\n  }\n\n  commitEdit(item: Platform.DevToolsPath.EncodedPathString, editor: UI.ListWidget.Editor<string>, isNew: boolean):\n      void {\n    this.muteUpdate = true;\n    if (!isNew) {\n      this.getFileSystem().removeExcludedFolder(item);\n    }\n    this.getFileSystem().addExcludedFolder(\n        this.normalizePrefix(editor.control('pathPrefix').value) as Platform.DevToolsPath.EncodedPathString);\n    this.muteUpdate = false;\n    this.update();\n  }\n\n  beginEdit(item: string): UI.ListWidget.Editor<string> {\n    const editor = this.createExcludedFolderEditor();\n    editor.control('pathPrefix').value = item;\n    return editor;\n  }\n\n  private createExcludedFolderEditor(): UI.ListWidget.Editor<string> {\n    if (this.excludedFolderEditor) {\n      return this.excludedFolderEditor;\n    }\n\n    const editor = new UI.ListWidget.Editor<string>();\n    this.excludedFolderEditor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'file-system-edit-row');\n    titles.createChild('div', 'file-system-value').textContent = i18nString(UIStrings.folderPath);\n\n    const fields = content.createChild('div', 'file-system-edit-row');\n    fields.createChild('div', 'file-system-value')\n        .appendChild(editor.createInput('pathPrefix', 'text', '/path/to/folder/', pathPrefixValidator.bind(this)));\n\n    return editor;\n\n    function pathPrefixValidator(\n        this: EditFileSystemView, _item: string, index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const prefix = this.normalizePrefix(input.value.trim());\n\n      if (!prefix) {\n        return {valid: false, errorMessage: i18nString(UIStrings.enterAPath)};\n      }\n\n      const configurableCount = this.getFileSystem().excludedFolders().size;\n      for (let i = 0; i < configurableCount; ++i) {\n        if (i !== index && this.excludedFolders[i] === prefix) {\n          return {valid: false, errorMessage: i18nString(UIStrings.enterAUniquePath)};\n        }\n      }\n      return {valid: true, errorMessage: undefined};\n    }\n  }\n\n  private normalizePrefix(prefix: string): string {\n    if (!prefix) {\n      return '';\n    }\n    return prefix + (prefix[prefix.length - 1] === '/' ? '' : '/');\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.excludedFoldersList.registerCSSFiles([editFileSystemViewStyles]);\n    this.registerCSSFiles([editFileSystemViewStyles]);\n  }\n}\n"]}