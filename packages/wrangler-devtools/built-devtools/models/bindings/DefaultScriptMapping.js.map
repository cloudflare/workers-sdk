{"version":3,"file":"DefaultScriptMapping.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/DefaultScriptMapping.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport type {DebuggerSourceMapping, DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\n\nconst uiSourceCodeToScriptsMap = new WeakMap<Workspace.UISourceCode.UISourceCode, Set<SDK.Script.Script>>();\nconst scriptToUISourceCodeMap = new WeakMap<SDK.Script.Script, Workspace.UISourceCode.UISourceCode>();\n\nexport class DefaultScriptMapping implements DebuggerSourceMapping {\n  readonly #debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  readonly #debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  readonly #project: ContentProviderBasedProject;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #uiSourceCodeToScriptsMap: WeakMap<Workspace.UISourceCode.UISourceCode, SDK.Script.Script>;\n  constructor(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.#debuggerModel = debuggerModel;\n    this.#debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n    this.#project = new ContentProviderBasedProject(\n        workspace, 'debugger:' + debuggerModel.target().id(), Workspace.Workspace.projectTypes.Debugger, '',\n        true /* isServiceProject */);\n    this.#eventListeners = [\n      debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.debuggerReset, this),\n      debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this.parsedScriptSource, this),\n      debuggerModel.addEventListener(\n          SDK.DebuggerModel.Events.DiscardedAnonymousScriptSource, this.discardedScriptSource, this),\n    ];\n    this.#uiSourceCodeToScriptsMap = new WeakMap();\n  }\n\n  static createV8ScriptURL(script: SDK.Script.Script): Platform.DevToolsPath.UrlString {\n    const name = Common.ParsedURL.ParsedURL.extractName(script.sourceURL);\n    const url = 'debugger:///VM' + script.scriptId + (name ? ' ' + name : '') as Platform.DevToolsPath.UrlString;\n    return url;\n  }\n\n  static scriptForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script|null {\n    const scripts = uiSourceCodeToScriptsMap.get(uiSourceCode);\n    return scripts ? scripts.values().next().value : null;\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n    const uiSourceCode = scriptToUISourceCodeMap.get(script);\n    if (!uiSourceCode) {\n      return null;\n    }\n    const {lineNumber, columnNumber = 0} = rawLocation;\n    return uiSourceCode.uiLocation(lineNumber, columnNumber);\n  }\n\n  uiLocationToRawLocations(uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number):\n      SDK.DebuggerModel.Location[] {\n    const script = this.#uiSourceCodeToScriptsMap.get(uiSourceCode);\n    if (!script) {\n      return [];\n    }\n    return [this.#debuggerModel.createRawLocation(script, lineNumber, columnNumber)];\n  }\n\n  private parsedScriptSource(event: Common.EventTarget.EventTargetEvent<SDK.Script.Script>): void {\n    const script = event.data;\n    const url = DefaultScriptMapping.createV8ScriptURL(script);\n\n    const uiSourceCode = this.#project.createUISourceCode(url, Common.ResourceType.resourceTypes.Script);\n    this.#uiSourceCodeToScriptsMap.set(uiSourceCode, script);\n    const scriptSet = uiSourceCodeToScriptsMap.get(uiSourceCode);\n    if (!scriptSet) {\n      uiSourceCodeToScriptsMap.set(uiSourceCode, new Set([script]));\n    } else {\n      scriptSet.add(script);\n    }\n    scriptToUISourceCodeMap.set(script, uiSourceCode);\n    this.#project.addUISourceCodeWithProvider(uiSourceCode, script, null, 'text/javascript');\n    void this.#debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  private discardedScriptSource(event: Common.EventTarget.EventTargetEvent<SDK.Script.Script>): void {\n    const script = event.data;\n    const uiSourceCode = scriptToUISourceCodeMap.get(script);\n    if (!uiSourceCode) {\n      return;\n    }\n    scriptToUISourceCodeMap.delete(script);\n    this.#uiSourceCodeToScriptsMap.delete(uiSourceCode);\n    const scripts = uiSourceCodeToScriptsMap.get(uiSourceCode);\n    if (scripts) {\n      scripts.delete(script);\n      if (!scripts.size) {\n        uiSourceCodeToScriptsMap.delete(uiSourceCode);\n      }\n    }\n    this.#project.removeUISourceCode(uiSourceCode.url());\n  }\n\n  private debuggerReset(): void {\n    this.#project.reset();\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.debuggerReset();\n    this.#project.dispose();\n  }\n}\n"]}