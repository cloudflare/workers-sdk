{"version":3,"file":"SourceFrameIssuesManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/SourceFrameIssuesManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\n\nimport {\n  ContentSecurityPolicyIssue,\n  trustedTypesPolicyViolationCode,\n  trustedTypesSinkViolationCode,\n} from './ContentSecurityPolicyIssue.js';\nimport type {Issue, IssueKind} from './Issue.js';\nimport {toZeroBasedLocation} from './Issue.js';\nimport type {IssueAddedEvent, IssuesManager} from './IssuesManager.js';\nimport {Events} from './IssuesManagerEvents.js';\nimport {getIssueTitleFromMarkdownDescription} from './MarkdownIssueDescription.js';\n\nexport class SourceFrameIssuesManager {\n  #locationPool = new Bindings.LiveLocation.LiveLocationPool();\n  #issueMessages = new Array<IssueMessage>();\n\n  constructor(private readonly issuesManager: IssuesManager) {\n    this.issuesManager.addEventListener(Events.IssueAdded, this.#onIssueAdded, this);\n    this.issuesManager.addEventListener(Events.FullUpdateRequired, this.#onFullUpdateRequired, this);\n  }\n\n  #onIssueAdded(event: Common.EventTarget.EventTargetEvent<IssueAddedEvent>): void {\n    const {issue} = event.data;\n    this.#addIssue(issue);\n  }\n\n  #addIssue(issue: Issue): void {\n    if (!this.#isTrustedTypeIssue(issue)) {\n      return;\n    }\n    const issuesModel = issue.model();\n    if (!issuesModel) {\n      return;\n    }\n    const debuggerModel = issuesModel.target().model(SDK.DebuggerModel.DebuggerModel);\n    const srcLocation = toZeroBasedLocation(issue.details().sourceCodeLocation);\n    if (srcLocation && debuggerModel) {\n      const rawLocation =\n          debuggerModel.createRawLocationByURL(srcLocation.url, srcLocation.lineNumber, srcLocation.columnNumber);\n      if (rawLocation) {\n        void this.#addIssueMessageToScript(issue, rawLocation);\n      }\n    }\n  }\n\n  #onFullUpdateRequired(): void {\n    this.#resetMessages();\n    const issues = this.issuesManager.issues();\n    for (const issue of issues) {\n      this.#addIssue(issue);\n    }\n  }\n\n  async #addIssueMessageToScript(issue: Issue, rawLocation: SDK.DebuggerModel.Location): Promise<void> {\n    const description = issue.getDescription();\n    if (description) {\n      const title = await getIssueTitleFromMarkdownDescription(description);\n      if (title) {\n        const clickHandler = (): void => {\n          void Common.Revealer.reveal(issue);\n        };\n        this.#issueMessages.push(\n            new IssueMessage(title, issue.getKind(), rawLocation, this.#locationPool, clickHandler));\n      }\n    }\n  }\n\n  #isTrustedTypeIssue(issue: Issue): issue is ContentSecurityPolicyIssue {\n    return issue instanceof ContentSecurityPolicyIssue && issue.code() === trustedTypesSinkViolationCode ||\n        issue.code() === trustedTypesPolicyViolationCode;\n  }\n\n  #resetMessages(): void {\n    for (const message of this.#issueMessages) {\n      message.dispose();\n    }\n    this.#issueMessages = [];\n    this.#locationPool.disposeAll();\n  }\n}\n\nexport class IssueMessage extends Workspace.UISourceCode.Message {\n  #uiSourceCode?: Workspace.UISourceCode.UISourceCode = undefined;\n  #kind: IssueKind;\n\n  constructor(\n      title: string, kind: IssueKind, rawLocation: SDK.DebuggerModel.Location,\n      locationPool: Bindings.LiveLocation.LiveLocationPool, clickHandler: () => void) {\n    super(Workspace.UISourceCode.Message.Level.Issue, title, clickHandler);\n    this.#kind = kind;\n    void Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().createLiveLocation(\n        rawLocation, this.#updateLocation.bind(this), locationPool);\n  }\n\n  async #updateLocation(liveLocation: Bindings.LiveLocation.LiveLocation): Promise<void> {\n    if (this.#uiSourceCode) {\n      this.#uiSourceCode.removeMessage(this);\n    }\n    const uiLocation = await liveLocation.uiLocation();\n    if (!uiLocation) {\n      return;\n    }\n    this.range = TextUtils.TextRange.TextRange.createFromLocation(uiLocation.lineNumber, uiLocation.columnNumber || 0);\n    this.#uiSourceCode = uiLocation.uiSourceCode;\n    this.#uiSourceCode.addMessage(this);\n  }\n\n  getIssueKind(): IssueKind {\n    return this.#kind;\n  }\n\n  dispose(): void {\n    if (this.#uiSourceCode) {\n      this.#uiSourceCode.removeMessage(this);\n    }\n  }\n}\n"]}