{"version":3,"file":"Issue.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/Issue.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {MarkdownIssueDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n   *@description The kind of an issue (plural) (Issues are categorized into kinds).\n   */\n  improvements: 'Improvements',\n  /**\n   *@description The kind of an issue (plural) (Issues are categorized into kinds).\n   */\n  pageErrors: 'Page Errors',\n  /**\n   *@description The kind of an issue (plural) (Issues are categorized into kinds).\n   */\n  breakingChanges: 'Breaking Changes',\n  /**\n   *@description A description for a kind of issue we display in the issues tab.\n   */\n  pageErrorIssue: 'A page error issue: the page is not working correctly',\n  /**\n   *@description A description for a kind of issue we display in the issues tab.\n   */\n  breakingChangeIssue: 'A breaking change issue: the page may stop working in an upcoming version of Chrome',\n  /**\n   *@description A description for a kind of issue we display in the issues tab.\n   */\n  improvementIssue: 'An improvement issue: there is an opportunity to improve the page',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/Issue.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// eslint-disable-next-line rulesdir/const_enum\nexport enum IssueCategory {\n  CrossOriginEmbedderPolicy = 'CrossOriginEmbedderPolicy',\n  Generic = 'Generic',\n  MixedContent = 'MixedContent',\n  Cookie = 'Cookie',\n  HeavyAd = 'HeavyAd',\n  ContentSecurityPolicy = 'ContentSecurityPolicy',\n  TrustedWebActivity = 'TrustedWebActivity',\n  LowTextContrast = 'LowTextContrast',\n  Cors = 'Cors',\n  AttributionReporting = 'AttributionReporting',\n  QuirksMode = 'QuirksMode',\n  Other = 'Other',\n}\n\n// eslint-disable-next-line rulesdir/const_enum\nexport enum IssueKind {\n  /**\n   * Something is not working in the page right now. Issues of this kind need\n   * usually be fixed right away. They usually indicate that a Web API is being\n   * used in a wrong way, or that a network request was misconfigured.\n   */\n  PageError = 'PageError',\n  /**\n   * The page is using a Web API or relying on browser behavior that is going\n   * to change in the future. If possible, the message associated with issues\n   * of this kind should include a time when the behavior is going to change.\n   */\n  BreakingChange = 'BreakingChange',\n  /**\n   * Anything that can be improved about the page, but isn't urgent and doesn't\n   * impair functionality in a major way.\n   */\n  Improvement = 'Improvement',\n}\n\nexport function getIssueKindName(issueKind: IssueKind): Common.UIString.LocalizedString {\n  switch (issueKind) {\n    case IssueKind.BreakingChange:\n      return i18nString(UIStrings.breakingChanges);\n    case IssueKind.Improvement:\n      return i18nString(UIStrings.improvements);\n    case IssueKind.PageError:\n      return i18nString(UIStrings.pageErrors);\n  }\n}\n\nexport function getIssueKindDescription(issueKind: IssueKind): Common.UIString.LocalizedString {\n  switch (issueKind) {\n    case IssueKind.PageError:\n      return i18nString(UIStrings.pageErrorIssue);\n    case IssueKind.BreakingChange:\n      return i18nString(UIStrings.breakingChangeIssue);\n    case IssueKind.Improvement:\n      return i18nString(UIStrings.improvementIssue);\n  }\n}\n\n/**\n * Union two issue kinds for issue aggregation. The idea is to show the most\n * important kind on aggregated issues that union issues of different kinds.\n */\nexport function unionIssueKind(a: IssueKind, b: IssueKind): IssueKind {\n  if (a === IssueKind.PageError || b === IssueKind.PageError) {\n    return IssueKind.PageError;\n  }\n  if (a === IssueKind.BreakingChange || b === IssueKind.BreakingChange) {\n    return IssueKind.BreakingChange;\n  }\n  return IssueKind.Improvement;\n}\n\nexport function getShowThirdPartyIssuesSetting(): Common.Settings.Setting<boolean> {\n  return Common.Settings.Settings.instance().createSetting('showThirdPartyIssues', false);\n}\n\nexport interface AffectedElement {\n  backendNodeId: Protocol.DOM.BackendNodeId;\n  nodeName: string;\n  target: SDK.Target.Target|null;\n}\n\nexport abstract class Issue<IssueCode extends string = string> {\n  #issueCode: IssueCode;\n  #issuesModel: SDK.IssuesModel.IssuesModel|null;\n  protected issueId: Protocol.Audits.IssueId|undefined = undefined;\n  #hidden: boolean;\n\n  constructor(\n      code: IssueCode|{code: IssueCode, umaCode: string}, issuesModel: SDK.IssuesModel.IssuesModel|null = null,\n      issueId?: Protocol.Audits.IssueId) {\n    this.#issueCode = typeof code === 'object' ? code.code : code;\n    this.#issuesModel = issuesModel;\n    this.issueId = issueId;\n    Host.userMetrics.issueCreated(typeof code === 'string' ? code : code.umaCode);\n    this.#hidden = false;\n  }\n\n  code(): IssueCode {\n    return this.#issueCode;\n  }\n\n  abstract primaryKey(): string;\n  abstract getDescription(): MarkdownIssueDescription|null;\n  abstract getCategory(): IssueCategory;\n  abstract getKind(): IssueKind;\n\n  getBlockedByResponseDetails(): Iterable<Protocol.Audits.BlockedByResponseIssueDetails> {\n    return [];\n  }\n\n  cookies(): Iterable<Protocol.Audits.AffectedCookie> {\n    return [];\n  }\n\n  rawCookieLines(): Iterable<string> {\n    return [];\n  }\n\n  elements(): Iterable<AffectedElement> {\n    return [];\n  }\n\n  requests(): Iterable<Protocol.Audits.AffectedRequest> {\n    return [];\n  }\n\n  sources(): Iterable<Protocol.Audits.SourceCodeLocation> {\n    return [];\n  }\n\n  isAssociatedWithRequestId(requestId: string): boolean {\n    for (const request of this.requests()) {\n      if (request.requestId === requestId) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The model might be unavailable or belong to a target that has already been disposed.\n   */\n  model(): SDK.IssuesModel.IssuesModel|null {\n    return this.#issuesModel;\n  }\n\n  isCausedByThirdParty(): boolean {\n    return false;\n  }\n\n  getIssueId(): Protocol.Audits.IssueId|undefined {\n    return this.issueId;\n  }\n\n  isHidden(): boolean {\n    return this.#hidden;\n  }\n\n  setHidden(hidden: boolean): void {\n    this.#hidden = hidden;\n  }\n}\n\nexport function toZeroBasedLocation(location: Protocol.Audits.SourceCodeLocation|undefined): {\n  url: Platform.DevToolsPath.UrlString,\n  scriptId: Protocol.Runtime.ScriptId|undefined,\n  lineNumber: number,\n  columnNumber: number|undefined,\n}|undefined {\n  if (!location) {\n    return undefined;\n  }\n  return {\n    url: location.url as Platform.DevToolsPath.UrlString,\n    scriptId: location.scriptId,\n    lineNumber: location.lineNumber,\n    columnNumber: location.columnNumber === 0 ? undefined : location.columnNumber - 1,\n  };\n}\n"]}