{"version":3,"file":"ScriptFormatter.js","sourceRoot":"","sources":["../../../../../../front_end/models/formatter/ScriptFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as FormatterActions from '../../entrypoints/formatter_worker/FormatterActions.js';\n\nimport {formatterWorkerPool} from './FormatterWorkerPool.js';\n\nfunction locationToPosition(lineEndings: number[], lineNumber: number, columnNumber: number): number {\n  const position = lineNumber ? lineEndings[lineNumber - 1] + 1 : 0;\n  return position + columnNumber;\n}\n\nfunction positionToLocation(lineEndings: number[], position: number): number[] {\n  const lineNumber =\n      Platform.ArrayUtilities.upperBound(lineEndings, position - 1, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n  let columnNumber;\n  if (!lineNumber) {\n    columnNumber = position;\n  } else {\n    columnNumber = position - lineEndings[lineNumber - 1] - 1;\n  }\n  return [lineNumber, columnNumber];\n}\n\nexport interface FormattedContent {\n  formattedContent: string;\n  formattedMapping: FormatterSourceMapping;\n}\n\nexport async function format(\n    contentType: Common.ResourceType.ResourceType, mimeType: string, content: string,\n    indent: string =\n        Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get()): Promise<FormattedContent> {\n  if (contentType.isDocumentOrScriptOrStyleSheet()) {\n    return formatScriptContent(mimeType, content, indent);\n  }\n\n  return {formattedContent: content, formattedMapping: new IdentityFormatterSourceMapping()};\n}\n\nexport async function formatScriptContent(\n    mimeType: string, content: string,\n    indent: string =\n        Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get()): Promise<FormattedContent> {\n  const originalContent = content.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '');\n\n  const pool = formatterWorkerPool();\n\n  const formatResult = await pool.format(mimeType, originalContent, indent);\n  const originalContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(originalContent);\n  const formattedContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(formatResult.content);\n\n  const sourceMapping =\n      new FormatterSourceMappingImpl(originalContentLineEndings, formattedContentLineEndings, formatResult.mapping);\n  return {formattedContent: formatResult.content, formattedMapping: sourceMapping};\n}\n\nexport interface FormatterSourceMapping {\n  originalToFormatted(lineNumber: number, columnNumber?: number): number[];\n  formattedToOriginal(lineNumber: number, columnNumber?: number): number[];\n}\n\nclass IdentityFormatterSourceMapping implements FormatterSourceMapping {\n  originalToFormatted(lineNumber: number, columnNumber = 0): number[] {\n    return [lineNumber, columnNumber];\n  }\n\n  formattedToOriginal(lineNumber: number, columnNumber = 0): number[] {\n    return [lineNumber, columnNumber];\n  }\n}\n\nclass FormatterSourceMappingImpl implements FormatterSourceMapping {\n  private readonly originalLineEndings: number[];\n  private readonly formattedLineEndings: number[];\n  private readonly mapping: FormatterActions.FormatMapping;\n\n  constructor(originalLineEndings: number[], formattedLineEndings: number[], mapping: FormatterActions.FormatMapping) {\n    this.originalLineEndings = originalLineEndings;\n    this.formattedLineEndings = formattedLineEndings;\n    this.mapping = mapping;\n  }\n\n  originalToFormatted(lineNumber: number, columnNumber?: number): number[] {\n    const originalPosition = locationToPosition(this.originalLineEndings, lineNumber, columnNumber || 0);\n    const formattedPosition = this.convertPosition(this.mapping.original, this.mapping.formatted, originalPosition);\n    return positionToLocation(this.formattedLineEndings, formattedPosition);\n  }\n\n  formattedToOriginal(lineNumber: number, columnNumber?: number): number[] {\n    const formattedPosition = locationToPosition(this.formattedLineEndings, lineNumber, columnNumber || 0);\n    const originalPosition = this.convertPosition(this.mapping.formatted, this.mapping.original, formattedPosition);\n    return positionToLocation(this.originalLineEndings, originalPosition);\n  }\n\n  private convertPosition(positions1: number[], positions2: number[], position: number): number {\n    const index =\n        Platform.ArrayUtilities.upperBound(positions1, position, Platform.ArrayUtilities.DEFAULT_COMPARATOR) - 1;\n    let convertedPosition: number = positions2[index] + position - positions1[index];\n    if (index < positions2.length - 1 && convertedPosition > positions2[index + 1]) {\n      convertedPosition = positions2[index + 1];\n    }\n    return convertedPosition;\n  }\n}\n"]}