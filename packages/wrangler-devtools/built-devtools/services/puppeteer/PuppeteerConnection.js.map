{"version":3,"file":"PuppeteerConnection.js","sourceRoot":"","sources":["../../../../../../front_end/services/puppeteer/PuppeteerConnection.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as puppeteer from '../../third_party/puppeteer/puppeteer.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\n\nexport class Transport implements puppeteer.ConnectionTransport {\n  #connection: SDK.Connections.ParallelConnectionInterface;\n  #knownIds = new Set<number>();\n\n  constructor(connection: SDK.Connections.ParallelConnectionInterface) {\n    this.#connection = connection;\n  }\n\n  send(message: string): void {\n    const data = JSON.parse(message);\n    this.#knownIds.add(data.id);\n    this.#connection.sendRawMessage(JSON.stringify(data));\n  }\n\n  close(): void {\n    void this.#connection.disconnect();\n  }\n\n  set onmessage(cb: (message: string) => void) {\n    this.#connection.setOnMessage((message: Object) => {\n      if (!cb) {\n        return;\n      }\n      const data = (message) as {id: number, method: string, params: unknown, sessionId?: string};\n      if (data.id && !this.#knownIds.has(data.id)) {\n        return;\n      }\n      this.#knownIds.delete(data.id);\n      if (!data.sessionId) {\n        return;\n      }\n      return cb(JSON.stringify({\n        ...data,\n        // Puppeteer is expecting to use the default session, but we give it a non-default session in #connection.\n        // Replace that sessionId with undefined so Puppeteer treats it as default.\n        sessionId: data.sessionId === this.#connection.getSessionId() ? undefined : data.sessionId,\n      }));\n    });\n  }\n\n  set onclose(cb: () => void) {\n    const prev = this.#connection.getOnDisconnect();\n    this.#connection.setOnDisconnect(reason => {\n      if (prev) {\n        prev(reason);\n      }\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\n\nexport class PuppeteerConnection extends puppeteer.Connection {\n  override async onMessage(message: string): Promise<void> {\n    const msgObj = JSON.parse(message) as {id: number, method: string, params: unknown, sessionId?: string};\n    if (msgObj.sessionId && !this._sessions.has(msgObj.sessionId)) {\n      return;\n    }\n    void super.onMessage(message);\n  }\n}\n\nexport async function getPuppeteerConnection(\n    rawConnection: SDK.Connections.ParallelConnectionInterface,\n    mainFrameId: string,\n    mainTargetId: string,\n    ): Promise<{page: puppeteer.Page | null, browser: puppeteer.Browser}> {\n  const transport = new Transport(rawConnection);\n\n  // url is an empty string in this case parallel to:\n  // https://github.com/puppeteer/puppeteer/blob/f63a123ecef86693e6457b07437a96f108f3e3c5/src/common/BrowserConnector.ts#L72\n  const connection = new PuppeteerConnection('', transport);\n\n  const targetFilterCallback = (targetInfo: Protocol.Target.TargetInfo): boolean => {\n    if (targetInfo.type !== 'page' && targetInfo.type !== 'iframe') {\n      return false;\n    }\n    // TODO only connect to iframes that are related to the main target. This requires refactoring in Puppeteer: https://github.com/puppeteer/puppeteer/issues/3667.\n    return targetInfo.targetId === mainTargetId || targetInfo.openerId === mainTargetId || targetInfo.type === 'iframe';\n  };\n\n  const browser = await puppeteer.Browser._create(\n      connection,\n      [] /* contextIds */,\n      false /* ignoreHTTPSErrors */,\n      undefined /* defaultViewport */,\n      undefined /* process */,\n      undefined /* closeCallback */,\n      targetFilterCallback,\n  );\n\n  const pages = await browser.pages();\n  const page = pages.find(p => p.mainFrame()._id === mainFrameId) || null;\n\n  return {page, browser};\n}\n"]}