{"version":3,"file":"CategorizedBreakpointsSidebarPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport categorizedBreakpointsSidebarPaneStyles from './categorizedBreakpointsSidebarPane.css.js';\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n  *@description Screen reader description of a hit breakpoint in the Sources panel\n  */\n  breakpointHit: 'breakpoint hit',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport abstract class CategorizedBreakpointsSidebarPane extends UI.Widget.VBox {\n  readonly #categoriesTreeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  readonly #viewId: string;\n  readonly #detailsPausedReason: Protocol.Debugger.PausedEventReason;\n  readonly #categories: Map<string, Item>;\n  readonly #breakpoints: Map<SDK.CategorizedBreakpoint.CategorizedBreakpoint, Item>;\n  #highlightedElement?: HTMLLIElement;\n  constructor(\n      categories: string[], breakpoints: SDK.CategorizedBreakpoint.CategorizedBreakpoint[], viewId: string,\n      detailsPausedReason: Protocol.Debugger.PausedEventReason) {\n    super(true);\n    this.#categoriesTreeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n\n    this.#categoriesTreeOutline.setShowSelectionOnKeyboardFocus(/* show */ true);\n    this.contentElement.appendChild(this.#categoriesTreeOutline.element);\n    this.#viewId = viewId;\n    this.#detailsPausedReason = detailsPausedReason;\n\n    this.#categories = new Map();\n    for (const category of categories) {\n      if (!this.#categories.has(category)) {\n        this.createCategory(category);\n      }\n    }\n    if (categories.length > 0) {\n      const firstCategory = this.#categories.get(categories[0]);\n      if (firstCategory) {\n        firstCategory.element.select();\n      }\n    }\n\n    this.#breakpoints = new Map();\n    for (const breakpoint of breakpoints) {\n      this.createBreakpoint(breakpoint);\n    }\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerPaused, this.update, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerResumed, this.update, this);\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.Target.Target, this.update, this);\n  }\n\n  get categories(): Map<string, Item> {\n    return this.#categories;\n  }\n\n  get breakpoints(): Map<SDK.CategorizedBreakpoint.CategorizedBreakpoint, Item> {\n    return this.#breakpoints;\n  }\n\n  focus(): void {\n    this.#categoriesTreeOutline.forceSelect();\n  }\n\n  private createCategory(name: string): void {\n    const labelNode = UI.UIUtils.CheckboxLabel.create(name);\n    labelNode.checkboxElement.addEventListener('click', this.categoryCheckboxClicked.bind(this, name), true);\n    labelNode.checkboxElement.tabIndex = -1;\n\n    const treeElement = new UI.TreeOutline.TreeElement(labelNode);\n    treeElement.listItemElement.addEventListener('keydown', event => {\n      if (event.key === ' ') {\n        const category = this.#categories.get(name);\n        if (category) {\n          category.checkbox.click();\n        }\n        event.consume(true);\n      }\n    });\n    labelNode.checkboxElement.addEventListener('focus', () => treeElement.listItemElement.focus());\n    UI.ARIAUtils.setChecked(treeElement.listItemElement, false);\n    this.#categoriesTreeOutline.appendChild(treeElement);\n\n    this.#categories.set(name, {element: treeElement, checkbox: labelNode.checkboxElement});\n  }\n\n  protected createBreakpoint(breakpoint: SDK.CategorizedBreakpoint.CategorizedBreakpoint): void {\n    const labelNode = UI.UIUtils.CheckboxLabel.create(breakpoint.title());\n    labelNode.classList.add('source-code');\n    labelNode.checkboxElement.addEventListener('click', this.breakpointCheckboxClicked.bind(this, breakpoint), true);\n    labelNode.checkboxElement.tabIndex = -1;\n\n    const treeElement = new UI.TreeOutline.TreeElement(labelNode);\n    treeElement.listItemElement.addEventListener('keydown', event => {\n      if (event.key === ' ') {\n        const breakpointToClick = this.#breakpoints.get(breakpoint);\n        if (breakpointToClick) {\n          breakpointToClick.checkbox.click();\n        }\n        event.consume(true);\n      }\n    });\n    labelNode.checkboxElement.addEventListener('focus', () => treeElement.listItemElement.focus());\n    UI.ARIAUtils.setChecked(treeElement.listItemElement, false);\n    treeElement.listItemElement.createChild('div', 'breakpoint-hit-marker');\n    const category = this.#categories.get(breakpoint.category());\n    if (category) {\n      category.element.appendChild(treeElement);\n    }\n    // Better to return that to produce a side-effect\n    this.#breakpoints.set(breakpoint, {element: treeElement, checkbox: labelNode.checkboxElement});\n  }\n\n  protected getBreakpointFromPausedDetails(_details: SDK.DebuggerModel.DebuggerPausedDetails):\n      SDK.CategorizedBreakpoint.CategorizedBreakpoint|null {\n    return null;\n  }\n\n  private update(): void {\n    const target = UI.Context.Context.instance().flavor(SDK.Target.Target);\n    const debuggerModel = target ? target.model(SDK.DebuggerModel.DebuggerModel) : null;\n    const details = debuggerModel ? debuggerModel.debuggerPausedDetails() : null;\n\n    if (!details || details.reason !== this.#detailsPausedReason || !details.auxData) {\n      if (this.#highlightedElement) {\n        UI.ARIAUtils.setDescription(this.#highlightedElement, '');\n        this.#highlightedElement.classList.remove('breakpoint-hit');\n        this.#highlightedElement = undefined;\n      }\n      return;\n    }\n    const breakpoint = this.getBreakpointFromPausedDetails(details);\n    if (!breakpoint) {\n      return;\n    }\n\n    void UI.ViewManager.ViewManager.instance().showView(this.#viewId);\n    const category = this.#categories.get(breakpoint.category());\n    if (category) {\n      category.element.expand();\n    }\n    const matchingBreakpoint = this.#breakpoints.get(breakpoint);\n    if (matchingBreakpoint) {\n      this.#highlightedElement = matchingBreakpoint.element.listItemElement;\n      UI.ARIAUtils.setDescription(this.#highlightedElement, i18nString(UIStrings.breakpointHit));\n      this.#highlightedElement.classList.add('breakpoint-hit');\n    }\n  }\n\n  // Probably can be kept although eventListener does not call this._breakpointCheckboxClicke\n  private categoryCheckboxClicked(category: string): void {\n    const item = this.#categories.get(category);\n    if (!item) {\n      return;\n    }\n\n    const enabled = item.checkbox.checked;\n    UI.ARIAUtils.setChecked(item.element.listItemElement, enabled);\n\n    for (const breakpoint of this.#breakpoints.keys()) {\n      if (breakpoint.category() === category) {\n        const matchingBreakpoint = this.#breakpoints.get(breakpoint);\n        if (matchingBreakpoint) {\n          matchingBreakpoint.checkbox.checked = enabled;\n          this.toggleBreakpoint(breakpoint, enabled);\n        }\n      }\n    }\n  }\n\n  protected toggleBreakpoint(breakpoint: SDK.CategorizedBreakpoint.CategorizedBreakpoint, enabled: boolean): void {\n    breakpoint.setEnabled(enabled);\n  }\n\n  private breakpointCheckboxClicked(breakpoint: SDK.CategorizedBreakpoint.CategorizedBreakpoint): void {\n    const item = this.#breakpoints.get(breakpoint);\n    if (!item) {\n      return;\n    }\n\n    this.toggleBreakpoint(breakpoint, item.checkbox.checked);\n    UI.ARIAUtils.setChecked(item.element.listItemElement, item.checkbox.checked);\n\n    // Put the rest in a separate function\n    let hasEnabled = false;\n    let hasDisabled = false;\n    for (const other of this.#breakpoints.keys()) {\n      if (other.category() === breakpoint.category()) {\n        if (other.enabled()) {\n          hasEnabled = true;\n        } else {\n          hasDisabled = true;\n        }\n      }\n    }\n\n    const category = this.#categories.get(breakpoint.category());\n    if (!category) {\n      return;\n    }\n    category.checkbox.checked = hasEnabled;\n    category.checkbox.indeterminate = hasEnabled && hasDisabled;\n    if (category.checkbox.indeterminate) {\n      UI.ARIAUtils.setCheckboxAsIndeterminate(category.element.listItemElement);\n    } else {\n      UI.ARIAUtils.setChecked(category.element.listItemElement, hasEnabled);\n    }\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.#categoriesTreeOutline.registerCSSFiles([categorizedBreakpointsSidebarPaneStyles]);\n  }\n}\nexport interface Item {\n  element: UI.TreeOutline.TreeElement;\n  checkbox: HTMLInputElement;\n}\n"]}