{"version":3,"file":"TimelinePaintProfilerView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelinePaintProfilerView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport timelinePaintProfilerStyles from './timelinePaintProfiler.css.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class TimelinePaintProfilerView extends UI.SplitWidget.SplitWidget {\n  private frameModel: TimelineModel.TimelineFrameModel.TimelineFrameModel;\n  private readonly logAndImageSplitWidget: UI.SplitWidget.SplitWidget;\n  private readonly imageView: TimelinePaintImageView;\n  private readonly paintProfilerView: LayerViewer.PaintProfilerView.PaintProfilerView;\n  private readonly logTreeView: LayerViewer.PaintProfilerView.PaintProfilerCommandLogView;\n  private needsUpdateWhenVisible: boolean;\n  private pendingSnapshot: SDK.PaintProfiler.PaintProfilerSnapshot|null;\n  private event: SDK.TracingModel.Event|null;\n  private paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel|null;\n  private lastLoadedSnapshot: SDK.PaintProfiler.PaintProfilerSnapshot|null;\n  constructor(frameModel: TimelineModel.TimelineFrameModel.TimelineFrameModel) {\n    super(false, false);\n    this.element.classList.add('timeline-paint-profiler-view');\n    this.setSidebarSize(60);\n    this.setResizable(false);\n\n    this.frameModel = frameModel;\n    this.logAndImageSplitWidget = new UI.SplitWidget.SplitWidget(true, false);\n    this.logAndImageSplitWidget.element.classList.add('timeline-paint-profiler-log-split');\n    this.setMainWidget(this.logAndImageSplitWidget);\n    this.imageView = new TimelinePaintImageView();\n    this.logAndImageSplitWidget.setMainWidget(this.imageView);\n\n    this.paintProfilerView =\n        new LayerViewer.PaintProfilerView.PaintProfilerView(this.imageView.showImage.bind(this.imageView));\n    this.paintProfilerView.addEventListener(\n        LayerViewer.PaintProfilerView.Events.WindowChanged, this.onWindowChanged, this);\n    this.setSidebarWidget(this.paintProfilerView);\n\n    this.logTreeView = new LayerViewer.PaintProfilerView.PaintProfilerCommandLogView();\n    this.logAndImageSplitWidget.setSidebarWidget(this.logTreeView);\n\n    this.needsUpdateWhenVisible = false;\n    this.pendingSnapshot = null;\n    this.event = null;\n    this.paintProfilerModel = null;\n    this.lastLoadedSnapshot = null;\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    if (this.needsUpdateWhenVisible) {\n      this.needsUpdateWhenVisible = false;\n      this.update();\n    }\n  }\n\n  setSnapshot(snapshot: SDK.PaintProfiler.PaintProfilerSnapshot): void {\n    this.releaseSnapshot();\n    this.pendingSnapshot = snapshot;\n    this.event = null;\n    this.updateWhenVisible();\n  }\n\n  setEvent(paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel, event: SDK.TracingModel.Event): boolean {\n    this.releaseSnapshot();\n    this.paintProfilerModel = paintProfilerModel;\n    this.pendingSnapshot = null;\n    this.event = event;\n\n    this.updateWhenVisible();\n    if (this.event.name === TimelineModel.TimelineModel.RecordType.Paint) {\n      return Boolean(TimelineModel.TimelineModel.TimelineData.forEvent(event).picture);\n    }\n    if (this.event.name === TimelineModel.TimelineModel.RecordType.RasterTask) {\n      return this.frameModel.hasRasterTile(this.event);\n    }\n    return false;\n  }\n\n  private updateWhenVisible(): void {\n    if (this.isShowing()) {\n      this.update();\n    } else {\n      this.needsUpdateWhenVisible = true;\n    }\n  }\n\n  private update(): void {\n    this.logTreeView.setCommandLog([]);\n    void this.paintProfilerView.setSnapshotAndLog(null, [], null);\n\n    let snapshotPromise: Promise<{\n      rect: Protocol.DOM.Rect | null,\n      snapshot: SDK.PaintProfiler.PaintProfilerSnapshot,\n    }|null>;\n    if (this.pendingSnapshot) {\n      snapshotPromise = Promise.resolve({rect: null, snapshot: this.pendingSnapshot});\n    } else if (this.event && this.event.name === TimelineModel.TimelineModel.RecordType.Paint) {\n      const picture =\n          (TimelineModel.TimelineModel.TimelineData.forEvent(this.event).picture as SDK.TracingModel.ObjectSnapshot);\n      snapshotPromise =\n          picture.objectPromise()\n              .then(\n                  data =>\n                      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n                  // @ts-expect-error\n                  (this.paintProfilerModel as SDK.PaintProfiler.PaintProfilerModel).loadSnapshot(data['skp64']))\n              .then(snapshot => snapshot && {rect: null, snapshot: snapshot});\n    } else if (this.event && this.event.name === TimelineModel.TimelineModel.RecordType.RasterTask) {\n      snapshotPromise = this.frameModel.rasterTilePromise(this.event);\n    } else {\n      console.assert(false, 'Unexpected event type or no snapshot');\n      return;\n    }\n    void snapshotPromise.then(snapshotWithRect => {\n      this.releaseSnapshot();\n      if (!snapshotWithRect) {\n        this.imageView.showImage();\n        return;\n      }\n      const snapshot = snapshotWithRect.snapshot;\n      this.lastLoadedSnapshot = snapshot;\n      this.imageView.setMask(snapshotWithRect.rect);\n      void snapshot.commandLog().then(log => onCommandLogDone.call(this, snapshot, snapshotWithRect.rect, log || []));\n    });\n\n    function onCommandLogDone(\n        this: TimelinePaintProfilerView, snapshot: SDK.PaintProfiler.PaintProfilerSnapshot,\n        clipRect: Protocol.DOM.Rect|null, log?: SDK.PaintProfiler.PaintProfilerLogItem[]): void {\n      this.logTreeView.setCommandLog(log || []);\n      void this.paintProfilerView.setSnapshotAndLog(snapshot, log || [], clipRect);\n    }\n  }\n\n  private releaseSnapshot(): void {\n    if (!this.lastLoadedSnapshot) {\n      return;\n    }\n    this.lastLoadedSnapshot.release();\n    this.lastLoadedSnapshot = null;\n  }\n\n  private onWindowChanged(): void {\n    this.logTreeView.updateWindow(this.paintProfilerView.selectionWindow());\n  }\n}\n\nexport class TimelinePaintImageView extends UI.Widget.Widget {\n  private imageContainer: HTMLElement;\n  private imageElement: HTMLImageElement;\n  private readonly maskElement: HTMLElement;\n  private transformController: LayerViewer.TransformController.TransformController;\n  private maskRectangle?: Protocol.DOM.Rect|null;\n  constructor() {\n    super(true);\n\n    this.contentElement.classList.add('fill', 'paint-profiler-image-view');\n    this.imageContainer = this.contentElement.createChild('div', 'paint-profiler-image-container');\n    this.imageElement = (this.imageContainer.createChild('img') as HTMLImageElement);\n    this.maskElement = this.imageContainer.createChild('div');\n    this.imageElement.addEventListener('load', this.updateImagePosition.bind(this), false);\n    this.transformController =\n        new LayerViewer.TransformController.TransformController((this.contentElement as HTMLElement), true);\n    this.transformController.addEventListener(\n        LayerViewer.TransformController.Events.TransformChanged, this.updateImagePosition, this);\n  }\n\n  onResize(): void {\n    if (this.imageElement.src) {\n      this.updateImagePosition();\n    }\n  }\n\n  private updateImagePosition(): void {\n    const width = this.imageElement.naturalWidth;\n    const height = this.imageElement.naturalHeight;\n    const clientWidth = this.contentElement.clientWidth;\n    const clientHeight = this.contentElement.clientHeight;\n\n    const paddingFraction = 0.1;\n    const paddingX = clientWidth * paddingFraction;\n    const paddingY = clientHeight * paddingFraction;\n    const scaleX = (clientWidth - paddingX) / width;\n    const scaleY = (clientHeight - paddingY) / height;\n    const scale = Math.min(scaleX, scaleY);\n\n    if (this.maskRectangle) {\n      const style = this.maskElement.style;\n      style.width = width + 'px';\n      style.height = height + 'px';\n      style.borderLeftWidth = this.maskRectangle.x + 'px';\n      style.borderTopWidth = this.maskRectangle.y + 'px';\n      style.borderRightWidth = (width - this.maskRectangle.x - this.maskRectangle.width) + 'px';\n      style.borderBottomWidth = (height - this.maskRectangle.y - this.maskRectangle.height) + 'px';\n    }\n    this.transformController.setScaleConstraints(0.5, 10 / scale);\n    let matrix = new WebKitCSSMatrix()\n                     .scale(this.transformController.scale(), this.transformController.scale())\n                     .translate(clientWidth / 2, clientHeight / 2)\n                     .scale(scale, scale)\n                     .translate(-width / 2, -height / 2);\n    const bounds = UI.Geometry.boundsForTransformedPoints(matrix, [0, 0, 0, width, height, 0]);\n    this.transformController.clampOffsets(\n        paddingX - bounds.maxX, clientWidth - paddingX - bounds.minX, paddingY - bounds.maxY,\n        clientHeight - paddingY - bounds.minY);\n    matrix = new WebKitCSSMatrix()\n                 .translate(this.transformController.offsetX(), this.transformController.offsetY())\n                 .multiply(matrix);\n    this.imageContainer.style.webkitTransform = matrix.toString();\n  }\n\n  showImage(imageURL?: string): void {\n    this.imageContainer.classList.toggle('hidden', !imageURL);\n    if (imageURL) {\n      this.imageElement.src = imageURL;\n    }\n  }\n\n  setMask(maskRectangle: Protocol.DOM.Rect|null): void {\n    this.maskRectangle = maskRectangle;\n    this.maskElement.classList.toggle('hidden', !maskRectangle);\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([timelinePaintProfilerStyles]);\n  }\n}\n"]}