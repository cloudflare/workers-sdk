{"version":3,"file":"ExtensionTracingSession.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/ExtensionTracingSession.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAQ7B,OAAO,EAAC,cAAc,EAAC,MAAM,qBAAqB,CAAC;AAEnD,MAAM,OAAO,uBAAuB;IACjB,QAAQ,CAA2D;IACnE,gBAAgB,CAAmB;IAC5C,kBAAkB,CAAc;IACvB,iBAAiB,CAAgB;IAC1C,UAAU,CAAS;IAE3B,YAAY,QAAkE,EAAE,gBAAkC;QAChH,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC7C,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,cAAc;IACd,CAAC;IAED,iBAAiB;IACjB,CAAC;IAED,eAAe,CAAC,SAAkB;IAClC,CAAC;IAED,eAAe,CAAC,YAAgD;QAC9D,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QACD,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACzG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,QAAQ,CAAC,GAAoC,EAAE,sBAA8B;QAC3E,IAAI,CAAC,GAAG,EAAE;YACR,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,UAAU,GAAG,sBAAsB,CAAC;QACzC,cAAc,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;CACF","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Extensions from '../../models/extensions/extensions.js';\n\nimport type {PerformanceModel} from './PerformanceModel.js';\nimport type {Client} from './TimelineLoader.js';\nimport {TimelineLoader} from './TimelineLoader.js';\n\nexport class ExtensionTracingSession implements Extensions.ExtensionTraceProvider.TracingSession, Client {\n  private readonly provider: Extensions.ExtensionTraceProvider.ExtensionTraceProvider;\n  private readonly performanceModel: PerformanceModel;\n  private completionCallback!: () => void;\n  private readonly completionPromise: Promise<void>;\n  private timeOffset: number;\n\n  constructor(provider: Extensions.ExtensionTraceProvider.ExtensionTraceProvider, performanceModel: PerformanceModel) {\n    this.provider = provider;\n    this.performanceModel = performanceModel;\n    this.completionPromise = new Promise(fulfill => {\n      this.completionCallback = fulfill;\n    });\n    this.timeOffset = 0;\n  }\n\n  loadingStarted(): void {\n  }\n\n  processingStarted(): void {\n  }\n\n  loadingProgress(_progress?: number): void {\n  }\n\n  loadingComplete(tracingModel: SDK.TracingModel.TracingModel|null): void {\n    if (!tracingModel) {\n      return;\n    }\n    this.performanceModel.addExtensionEvents(this.provider.longDisplayName(), tracingModel, this.timeOffset);\n    this.completionCallback();\n  }\n\n  complete(url: Platform.DevToolsPath.UrlString, timeOffsetMicroseconds: number): void {\n    if (!url) {\n      this.completionCallback();\n      return;\n    }\n    this.timeOffset = timeOffsetMicroseconds;\n    TimelineLoader.loadFromURL(url, this);\n  }\n\n  start(): void {\n    this.provider.start(this);\n  }\n\n  stop(): Promise<void> {\n    this.provider.stop();\n    return this.completionPromise;\n  }\n}\n"]}