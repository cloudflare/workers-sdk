{"version":3,"file":"PerformanceModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/PerformanceModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Bindings from '../../models/bindings/bindings.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\n\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\n\nexport class PerformanceModel extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private mainTargetInternal: SDK.Target.Target|null;\n  private tracingModelInternal: SDK.TracingModel.TracingModel|null;\n  private filtersInternal: TimelineModel.TimelineModelFilter.TimelineModelFilter[];\n  private readonly timelineModelInternal: TimelineModel.TimelineModel.TimelineModelImpl;\n  private readonly frameModelInternal: TimelineModel.TimelineFrameModel.TimelineFrameModel;\n  private filmStripModelInternal: SDK.FilmStripModel.FilmStripModel|null;\n  private readonly irModel: TimelineModel.TimelineIRModel.TimelineIRModel;\n  private windowInternal: Window;\n  private readonly extensionTracingModels: {\n    title: string,\n    model: SDK.TracingModel.TracingModel,\n    timeOffset: number,\n  }[];\n  private recordStartTimeInternal?: number;\n\n  constructor() {\n    super();\n    this.mainTargetInternal = null;\n    this.tracingModelInternal = null;\n    this.filtersInternal = [];\n\n    this.timelineModelInternal = new TimelineModel.TimelineModel.TimelineModelImpl();\n    this.frameModelInternal = new TimelineModel.TimelineFrameModel.TimelineFrameModel(\n        event => TimelineUIUtils.eventStyle(event).category.name);\n    this.filmStripModelInternal = null;\n    this.irModel = new TimelineModel.TimelineIRModel.TimelineIRModel();\n\n    this.windowInternal = {left: 0, right: Infinity};\n\n    this.extensionTracingModels = [];\n    this.recordStartTimeInternal = undefined;\n  }\n\n  setMainTarget(target: SDK.Target.Target): void {\n    this.mainTargetInternal = target;\n  }\n\n  mainTarget(): SDK.Target.Target|null {\n    return this.mainTargetInternal;\n  }\n\n  setRecordStartTime(time: number): void {\n    this.recordStartTimeInternal = time;\n  }\n\n  recordStartTime(): number|undefined {\n    return this.recordStartTimeInternal;\n  }\n\n  setFilters(filters: TimelineModel.TimelineModelFilter.TimelineModelFilter[]): void {\n    this.filtersInternal = filters;\n  }\n\n  filters(): TimelineModel.TimelineModelFilter.TimelineModelFilter[] {\n    return this.filtersInternal;\n  }\n\n  isVisible(event: SDK.TracingModel.Event): boolean {\n    return this.filtersInternal.every(f => f.accept(event));\n  }\n\n  setTracingModel(model: SDK.TracingModel.TracingModel): void {\n    this.tracingModelInternal = model;\n    this.timelineModelInternal.setEvents(model);\n\n    let animationEvents: SDK.TracingModel.AsyncEvent[]|null = null;\n    for (const track of this.timelineModelInternal.tracks()) {\n      if (track.type === TimelineModel.TimelineModel.TrackType.Animation) {\n        animationEvents = track.asyncEvents;\n      }\n    }\n    if (animationEvents) {\n      this.irModel.populate([], animationEvents || []);\n    }\n\n    const mainTracks = this.timelineModelInternal.tracks().filter(\n        track => track.type === TimelineModel.TimelineModel.TrackType.MainThread && track.forMainFrame &&\n            track.events.length);\n    const threadData = mainTracks.map(track => {\n      const event = track.events[0];\n      return {thread: event.thread, time: event.startTime};\n    });\n    this.frameModelInternal.addTraceEvents(\n        this.mainTargetInternal, this.timelineModelInternal.inspectedTargetEvents(), threadData);\n\n    for (const entry of this.extensionTracingModels) {\n      entry.model.adjustTime(\n          this.tracingModelInternal.minimumRecordTime() + (entry.timeOffset / 1000) -\n          (this.recordStartTimeInternal as number));\n    }\n    this.autoWindowTimes();\n  }\n\n  addExtensionEvents(title: string, model: SDK.TracingModel.TracingModel, timeOffset: number): void {\n    this.extensionTracingModels.push({model: model, title: title, timeOffset: timeOffset});\n    if (!this.tracingModelInternal) {\n      return;\n    }\n    model.adjustTime(\n        this.tracingModelInternal.minimumRecordTime() + (timeOffset / 1000) - (this.recordStartTimeInternal as number));\n    this.dispatchEventToListeners(Events.ExtensionDataAdded);\n  }\n\n  tracingModel(): SDK.TracingModel.TracingModel {\n    if (!this.tracingModelInternal) {\n      throw 'call setTracingModel before accessing PerformanceModel';\n    }\n    return this.tracingModelInternal;\n  }\n\n  timelineModel(): TimelineModel.TimelineModel.TimelineModelImpl {\n    return this.timelineModelInternal;\n  }\n\n  filmStripModel(): SDK.FilmStripModel.FilmStripModel {\n    if (this.filmStripModelInternal) {\n      return this.filmStripModelInternal;\n    }\n    if (!this.tracingModelInternal) {\n      throw 'call setTracingModel before accessing PerformanceModel';\n    }\n    this.filmStripModelInternal = new SDK.FilmStripModel.FilmStripModel(this.tracingModelInternal);\n    return this.filmStripModelInternal;\n  }\n\n  frames(): TimelineModel.TimelineFrameModel.TimelineFrame[] {\n    return this.frameModelInternal.getFrames();\n  }\n\n  frameModel(): TimelineModel.TimelineFrameModel.TimelineFrameModel {\n    return this.frameModelInternal;\n  }\n\n  interactionRecords(): Common.SegmentedRange.Segment<TimelineModel.TimelineIRModel.Phases>[] {\n    return this.irModel.interactionRecords();\n  }\n\n  extensionInfo(): {\n    title: string,\n    model: SDK.TracingModel.TracingModel,\n  }[] {\n    return this.extensionTracingModels;\n  }\n\n  dispose(): void {\n    if (this.tracingModelInternal) {\n      this.tracingModelInternal.dispose();\n    }\n    for (const extensionEntry of this.extensionTracingModels) {\n      extensionEntry.model.dispose();\n    }\n  }\n\n  filmStripModelFrame(frame: TimelineModel.TimelineFrameModel.TimelineFrame): SDK.FilmStripModel.Frame|null {\n    // For idle frames, look at the state at the beginning of the frame.\n    const screenshotTime = frame.idle ? frame.startTime : frame.endTime;\n    const filmStripModel = (this.filmStripModelInternal as SDK.FilmStripModel.FilmStripModel);\n    const filmStripFrame = filmStripModel.frameByTimestamp(screenshotTime);\n    return filmStripFrame && filmStripFrame.timestamp - frame.endTime < 10 ? filmStripFrame : null;\n  }\n\n  save(stream: Common.StringOutputStream.OutputStream): Promise<DOMError|null> {\n    if (!this.tracingModelInternal) {\n      throw 'call setTracingModel before accessing PerformanceModel';\n    }\n    const backingStorage = (this.tracingModelInternal.backingStorage() as Bindings.TempFile.TempFileBackingStorage);\n    return backingStorage.writeToStream(stream);\n  }\n\n  setWindow(window: Window, animate?: boolean): void {\n    this.windowInternal = window;\n    this.dispatchEventToListeners(Events.WindowChanged, {window, animate});\n  }\n\n  window(): Window {\n    return this.windowInternal;\n  }\n\n  private autoWindowTimes(): void {\n    const timelineModel = this.timelineModelInternal;\n    let tasks: SDK.TracingModel.Event[] = [];\n    for (const track of timelineModel.tracks()) {\n      // Deliberately pick up last main frame's track.\n      if (track.type === TimelineModel.TimelineModel.TrackType.MainThread && track.forMainFrame) {\n        tasks = track.tasks;\n      }\n    }\n    if (!tasks.length) {\n      this.setWindow({left: timelineModel.minimumRecordTime(), right: timelineModel.maximumRecordTime()});\n      return;\n    }\n\n    function findLowUtilizationRegion(startIndex: number, stopIndex: number): number {\n      const threshold = 0.1;\n      let cutIndex = startIndex;\n      let cutTime = (tasks[cutIndex].startTime + (tasks[cutIndex].endTime as number)) / 2;\n      let usedTime = 0;\n      const step = Math.sign(stopIndex - startIndex);\n      for (let i = startIndex; i !== stopIndex; i += step) {\n        const task = tasks[i];\n        const taskTime = (task.startTime + (task.endTime as number)) / 2;\n        const interval = Math.abs(cutTime - taskTime);\n        if (usedTime < threshold * interval) {\n          cutIndex = i;\n          cutTime = taskTime;\n          usedTime = 0;\n        }\n        usedTime += (task.duration as number);\n      }\n      return cutIndex;\n    }\n    const rightIndex = findLowUtilizationRegion(tasks.length - 1, 0);\n    const leftIndex = findLowUtilizationRegion(0, rightIndex);\n    let leftTime: number = tasks[leftIndex].startTime;\n    let rightTime: number = (tasks[rightIndex].endTime as number);\n    const span = rightTime - leftTime;\n    const totalSpan = timelineModel.maximumRecordTime() - timelineModel.minimumRecordTime();\n    if (span < totalSpan * 0.1) {\n      leftTime = timelineModel.minimumRecordTime();\n      rightTime = timelineModel.maximumRecordTime();\n    } else {\n      leftTime = Math.max(leftTime - 0.05 * span, timelineModel.minimumRecordTime());\n      rightTime = Math.min(rightTime + 0.05 * span, timelineModel.maximumRecordTime());\n    }\n    this.setWindow({left: leftTime, right: rightTime});\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  ExtensionDataAdded = 'ExtensionDataAdded',\n  WindowChanged = 'WindowChanged',\n}\n\nexport interface WindowChangedEvent {\n  window: Window;\n  animate: boolean|undefined;\n}\n\nexport type EventTypes = {\n  [Events.ExtensionDataAdded]: void,\n  [Events.WindowChanged]: WindowChangedEvent,\n};\n\nexport interface Window {\n  left: number;\n  right: number;\n}\n"]}