{"version":3,"file":"InputTimeline.js","sourceRoot":"","sources":["../../../../../../front_end/panels/input/InputTimeline.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Timeline from '../timeline/timeline.js';\nimport inputTimelineStyles from './inputTimeline.css.js';\n\nimport {InputModel} from './InputModel.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to clear everything\n  */\n  clearAll: 'Clear all',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon load button\n  */\n  loadProfile: 'Load profile…',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon download button\n  */\n  saveProfile: 'Save profile…',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/input//InputTimeline.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet inputTimelineInstance: InputTimeline;\nexport class InputTimeline extends UI.Widget.VBox implements Timeline.TimelineLoader.Client {\n  private tracingClient: TracingClient|null;\n  private tracingModel: SDK.TracingModel.TracingModel|null;\n  private inputModel: InputModel|null;\n  private state: State;\n  private readonly toggleRecordAction: UI.ActionRegistration.Action;\n  private readonly startReplayAction: UI.ActionRegistration.Action;\n  private readonly togglePauseAction: UI.ActionRegistration.Action;\n  private readonly panelToolbar: UI.Toolbar.Toolbar;\n  private readonly clearButton: UI.Toolbar.ToolbarButton;\n  private readonly loadButton: UI.Toolbar.ToolbarButton;\n  private readonly saveButton: UI.Toolbar.ToolbarButton;\n  private fileSelectorElement?: HTMLInputElement;\n  private loader?: Timeline.TimelineLoader.TimelineLoader;\n\n  constructor() {\n    super(true);\n    this.element.classList.add('inputs-timeline');\n\n    this.tracingClient = null;\n    this.tracingModel = null;\n    this.inputModel = null;\n\n    this.state = State.Idle;\n    this.toggleRecordAction =\n        UI.ActionRegistry.ActionRegistry.instance().action('input.toggle-recording') as UI.ActionRegistration.Action;\n    this.startReplayAction =\n        UI.ActionRegistry.ActionRegistry.instance().action('input.start-replaying') as UI.ActionRegistration.Action;\n    this.togglePauseAction =\n        UI.ActionRegistry.ActionRegistry.instance().action('input.toggle-pause') as UI.ActionRegistration.Action;\n\n    const toolbarContainer = this.contentElement.createChild('div', 'input-timeline-toolbar-container');\n    this.panelToolbar = new UI.Toolbar.Toolbar('input-timeline-toolbar', toolbarContainer);\n\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction));\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.startReplayAction));\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.togglePauseAction));\n\n    this.clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'largeicon-clear');\n    this.clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.reset.bind(this));\n    this.panelToolbar.appendToolbarItem(this.clearButton);\n\n    this.panelToolbar.appendSeparator();\n\n    // Load / Save\n    this.loadButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.loadProfile), 'largeicon-load');\n    this.loadButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => this.selectFileToLoad());\n    this.saveButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.saveProfile), 'largeicon-download');\n    this.saveButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      void this.saveToFile();\n    });\n    this.panelToolbar.appendSeparator();\n    this.panelToolbar.appendToolbarItem(this.loadButton);\n    this.panelToolbar.appendToolbarItem(this.saveButton);\n    this.panelToolbar.appendSeparator();\n    this.createFileSelector();\n\n    this.updateControls();\n  }\n\n  static instance(opts: {forceNew: boolean} = {forceNew: false}): InputTimeline {\n    const {forceNew} = opts;\n    if (!inputTimelineInstance || forceNew) {\n      inputTimelineInstance = new InputTimeline();\n    }\n\n    return inputTimelineInstance;\n  }\n\n  private reset(): void {\n    this.tracingClient = null;\n    this.tracingModel = null;\n    this.inputModel = null;\n    this.setState(State.Idle);\n  }\n\n  private createFileSelector(): void {\n    if (this.fileSelectorElement) {\n      this.fileSelectorElement.remove();\n    }\n    this.fileSelectorElement = UI.UIUtils.createFileSelectorElement(this.loadFromFile.bind(this));\n    this.element.appendChild(this.fileSelectorElement);\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([inputTimelineStyles]);\n  }\n\n  willHide(): void {\n  }\n\n  private setState(state: State): void {\n    this.state = state;\n    this.updateControls();\n  }\n\n  private isAvailableState(): boolean {\n    return this.state === State.Idle || this.state === State.ReplayPaused;\n  }\n\n  private updateControls(): void {\n    this.toggleRecordAction.setToggled(this.state === State.Recording);\n    this.toggleRecordAction.setEnabled(this.isAvailableState() || this.state === State.Recording);\n    this.startReplayAction.setEnabled(this.isAvailableState() && Boolean(this.tracingModel));\n    this.togglePauseAction.setEnabled(this.state === State.Replaying || this.state === State.ReplayPaused);\n    this.togglePauseAction.setToggled(this.state === State.ReplayPaused);\n    this.clearButton.setEnabled(this.isAvailableState());\n    this.loadButton.setEnabled(this.isAvailableState());\n    this.saveButton.setEnabled(this.isAvailableState() && Boolean(this.tracingModel));\n  }\n\n  toggleRecording(): void {\n    switch (this.state) {\n      case State.Recording: {\n        void this.stopRecording();\n        break;\n      }\n      case State.Idle: {\n        void this.startRecording();\n        break;\n      }\n    }\n  }\n\n  startReplay(): void {\n    void this.replayEvents();\n  }\n\n  toggleReplayPause(): void {\n    switch (this.state) {\n      case State.Replaying: {\n        this.pauseReplay();\n        break;\n      }\n      case State.ReplayPaused: {\n        this.resumeReplay();\n        break;\n      }\n    }\n  }\n\n  /**\n   * Saves all current events in a file (JSON format).\n   */\n  private async saveToFile(): Promise<void> {\n    console.assert(this.state === State.Idle);\n    if (!this.tracingModel) {\n      return;\n    }\n\n    const fileName = `InputProfile-${Platform.DateUtilities.toISO8601Compact(new Date())}.json` as\n        Platform.DevToolsPath.RawPathString;\n    const stream = new Bindings.FileUtils.FileOutputStream();\n\n    const accepted = await stream.open(fileName);\n    if (!accepted) {\n      return;\n    }\n\n    const backingStorage = this.tracingModel.backingStorage() as Bindings.TempFile.TempFileBackingStorage;\n    await backingStorage.writeToStream(stream);\n    void stream.close();\n  }\n\n  private selectFileToLoad(): void {\n    if (this.fileSelectorElement) {\n      this.fileSelectorElement.click();\n    }\n  }\n\n  private loadFromFile(file: File): void {\n    console.assert(this.isAvailableState());\n\n    this.setState(State.Loading);\n    this.loader = Timeline.TimelineLoader.TimelineLoader.loadFromFile(file, this);\n\n    this.createFileSelector();\n  }\n\n  private async startRecording(): Promise<void> {\n    this.setState(State.StartPending);\n    this.tracingClient =\n        new TracingClient(SDK.TargetManager.TargetManager.instance().mainTarget() as SDK.Target.Target, this);\n\n    const response = await this.tracingClient.startRecording();\n    if (!response || response.getError()) {\n      this.recordingFailed();\n    } else {\n      this.setState(State.Recording);\n    }\n  }\n\n  private async stopRecording(): Promise<void> {\n    if (!this.tracingClient) {\n      return;\n    }\n    this.setState(State.StopPending);\n    await this.tracingClient.stopRecording();\n    this.tracingClient = null;\n  }\n\n  private async replayEvents(): Promise<void> {\n    if (!this.inputModel) {\n      return;\n    }\n    this.setState(State.Replaying);\n    await this.inputModel.startReplay(this.replayStopped.bind(this));\n  }\n\n  private pauseReplay(): void {\n    if (!this.inputModel) {\n      return;\n    }\n    this.inputModel.pause();\n    this.setState(State.ReplayPaused);\n  }\n\n  private resumeReplay(): void {\n    if (!this.inputModel) {\n      return;\n    }\n    this.inputModel.resume();\n    this.setState(State.Replaying);\n  }\n\n  loadingStarted(): void {\n  }\n\n  loadingProgress(_progress?: number): void {\n  }\n\n  processingStarted(): void {\n  }\n\n  loadingComplete(tracingModel: SDK.TracingModel.TracingModel|null): void {\n    if (!tracingModel) {\n      this.reset();\n      return;\n    }\n    this.inputModel = new InputModel(SDK.TargetManager.TargetManager.instance().mainTarget() as SDK.Target.Target);\n    this.tracingModel = tracingModel;\n    this.inputModel.setEvents(tracingModel);\n\n    this.setState(State.Idle);\n  }\n\n  private recordingFailed(): void {\n    this.tracingClient = null;\n    this.setState(State.Idle);\n  }\n\n  replayStopped(): void {\n    this.setState(State.Idle);\n  }\n}\n\nexport const enum State {\n  Idle = 'Idle',\n  StartPending = 'StartPending',\n  Recording = 'Recording',\n  StopPending = 'StopPending',\n  Replaying = 'Replaying',\n  ReplayPaused = 'ReplayPaused',\n  Loading = 'Loading',\n}\n\nlet actionDelegateInstance: ActionDelegate;\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!actionDelegateInstance || forceNew) {\n      actionDelegateInstance = new ActionDelegate();\n    }\n\n    return actionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const inputViewId = 'Inputs';\n    void UI.ViewManager.ViewManager.instance()\n        .showView(inputViewId)\n        .then(() => UI.ViewManager.ViewManager.instance().view(inputViewId).widget())\n        .then(widget => this.innerHandleAction(widget as InputTimeline, actionId));\n\n    return true;\n  }\n\n  private innerHandleAction(inputTimeline: InputTimeline, actionId: string): void {\n    switch (actionId) {\n      case 'input.toggle-recording':\n        inputTimeline.toggleRecording();\n        break;\n      case 'input.start-replaying':\n        inputTimeline.startReplay();\n        break;\n      case 'input.toggle-pause':\n        inputTimeline.toggleReplayPause();\n        break;\n      default:\n        console.assert(false, `Unknown action: ${actionId}`);\n    }\n  }\n}\n\nexport class TracingClient implements SDK.TracingManager.TracingManagerClient {\n  private readonly target: SDK.Target.Target;\n  private tracingManager: SDK.TracingManager.TracingManager|null;\n  private readonly client: InputTimeline;\n  private readonly tracingModel: SDK.TracingModel.TracingModel;\n  private tracingCompleteCallback: (() => void)|null;\n  constructor(target: SDK.Target.Target, client: InputTimeline) {\n    this.target = target;\n    this.tracingManager = target.model(SDK.TracingManager.TracingManager);\n    this.client = client;\n\n    const backingStorage = new Bindings.TempFile.TempFileBackingStorage();\n    this.tracingModel = new SDK.TracingModel.TracingModel(backingStorage);\n\n    this.tracingCompleteCallback = null;\n  }\n\n  async startRecording(): Promise<Protocol.ProtocolResponseWithError|undefined> {\n    if (!this.tracingManager) {\n      return;\n    }\n\n    const categoriesArray = ['devtools.timeline', 'disabled-by-default-devtools.timeline.inputs'];\n    const categories = categoriesArray.join(',');\n\n    const response = await this.tracingManager.start(this, categories, '');\n    if (response.getError()) {\n      await this.waitForTracingToStop(false);\n    }\n    return response;\n  }\n\n  async stopRecording(): Promise<void> {\n    if (this.tracingManager) {\n      this.tracingManager.stop();\n    }\n\n    await this.waitForTracingToStop(true);\n    await SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n    this.tracingModel.tracingComplete();\n    this.client.loadingComplete(this.tracingModel);\n  }\n  traceEventsCollected(events: SDK.TracingManager.EventPayload[]): void {\n    this.tracingModel.addEvents(events);\n  }\n\n  tracingComplete(): void {\n    if (this.tracingCompleteCallback) {\n      this.tracingCompleteCallback();\n    }\n    this.tracingCompleteCallback = null;\n  }\n\n  tracingBufferUsage(_usage: number): void {\n  }\n\n  eventsRetrievalProgress(_progress: number): void {\n  }\n\n  private waitForTracingToStop(awaitTracingCompleteCallback: boolean): Promise<void> {\n    return new Promise(resolve => {\n      if (this.tracingManager && awaitTracingCompleteCallback) {\n        this.tracingCompleteCallback = resolve;\n      } else {\n        resolve();\n      }\n    });\n  }\n}\n"]}