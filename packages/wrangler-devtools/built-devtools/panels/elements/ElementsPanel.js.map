{"version":3,"file":"ElementsPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ElementsPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\n\nimport elementsPanelStyles from './elementsPanel.css.js';\n\nimport type * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {AccessibilityTreeView} from './AccessibilityTreeView.js';\nimport * as ElementsComponents from './components/components.js';\nimport {ComputedStyleWidget} from './ComputedStyleWidget.js';\n\nimport type {ElementsTreeElement} from './ElementsTreeElement.js';\nimport {ElementsTreeElementHighlighter} from './ElementsTreeElementHighlighter.js';\nimport {ElementsTreeOutline} from './ElementsTreeOutline.js';\nimport type {MarkerDecorator} from './MarkerDecorator.js';\nimport {MetricsSidebarPane} from './MetricsSidebarPane.js';\nimport {LayoutSidebarPane} from './LayoutSidebarPane.js';\nimport {Events as StylesSidebarPaneEvents, StylesSidebarPane} from './StylesSidebarPane.js';\nimport type {StylesUpdateCompletedEvent} from './StylesSidebarPane.js';\n\nconst UIStrings = {\n  /**\n  * @description Placeholder text for the search box the Elements Panel. Selector refers to CSS\n  * selectors.\n  */\n  findByStringSelectorOrXpath: 'Find by string, selector, or `XPath`',\n  /**\n  * @description Button text for a button that takes the user to the Accessibility Tree View from the\n  * DOM tree view, in the Elements panel.\n  */\n  switchToAccessibilityTreeView: 'Switch to Accessibility Tree view',\n  /**\n  * @description Button text for a button that takes the user to the DOM tree view from the\n  * Accessibility Tree View, in the Elements panel.\n  */\n  switchToDomTreeView: 'Switch to DOM Tree view',\n  /**\n  * @description Label for a link to a rendering frame.\n  */\n  frame: 'Frame',\n  /**\n  * @description Tooltip for the the Computed Styles sidebar toggle in the Styles pane. Command to\n  * open/show the sidebar.\n  */\n  showComputedStylesSidebar: 'Show Computed Styles sidebar',\n  /**\n  * @description Tooltip for the the Computed Styles sidebar toggle in the Styles pane. Command to\n  * close/hide the sidebar.\n  */\n  hideComputedStylesSidebar: 'Hide Computed Styles sidebar',\n  /**\n   * @description Screen reader announcement when the computed styles sidebar is shown in the Elements panel.\n   */\n  computedStylesShown: 'Computed Styles sidebar shown',\n  /**\n   * @description Screen reader announcement when the computed styles sidebar is hidden in the Elements panel.\n   */\n  computedStylesHidden: 'Computed Styles sidebar hidden',\n  /**\n  * @description Title of a pane in the Elements panel that shows computed styles for the selected\n  * HTML element. Computed styles are the final, actual styles of the element, including all\n  * implicit and specified styles.\n  */\n  computed: 'Computed',\n  /**\n  * @description Title of a pane in the Elements panel that shows the CSS styles for the selected\n  * HTML element.\n  */\n  styles: 'Styles',\n  /**\n  * @description A context menu item to reveal a node in the DOM tree of the Elements Panel\n  */\n  revealInElementsPanel: 'Reveal in Elements panel',\n  /**\n  * @description Warning/error text displayed when a node cannot be found in the current page.\n  */\n  nodeCannotBeFoundInTheCurrent: 'Node cannot be found in the current page.',\n  /**\n  * @description Console warning when a user tries to reveal a non-node type Remote Object. A remote\n  * object is a JavaScript object that is not stored in DevTools, that DevTools has a connection to.\n  * It should correspond to a local node.\n  */\n  theRemoteObjectCouldNotBe: 'The remote object could not be resolved to a valid node.',\n  /**\n  * @description Console warning when the user tries to reveal a deferred DOM Node that resolves as\n  * null. A deferred DOM node is a node we know about but have not yet fetched from the backend (we\n  * defer the work until later).\n  */\n  theDeferredDomNodeCouldNotBe: 'The deferred `DOM` Node could not be resolved to a valid node.',\n  /**\n  * @description Text in Elements Panel of the Elements panel. Shows the current CSS Pseudo-classes\n  * applicable to the selected HTML element.\n  * @example {::after, ::before} PH1\n  */\n  elementStateS: 'Element state: {PH1}',\n  /**\n  * @description Accessible name for side panel toolbar.\n  */\n  sidePanelToolbar: 'Side panel toolbar',\n  /**\n  * @description Accessible name for side panel contents.\n  */\n  sidePanelContent: 'Side panel content',\n  /**\n  * @description Accessible name for the DOM tree explorer view.\n  */\n  domTreeExplorer: 'DOM tree explorer',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementsPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * These strings need to match the `SidebarPaneCodes` in UserMetrics.ts. DevTools\n * collects usage metrics for the different sidebar tabs.\n */\nexport const enum SidebarPaneTabId {\n  Computed = 'Computed',\n  Styles = 'Styles',\n}\n\nconst createAccessibilityTreeToggleButton = (isActive: boolean): HTMLElement => {\n  const button = new Buttons.Button.Button();\n  const title =\n      isActive ? i18nString(UIStrings.switchToDomTreeView) : i18nString(UIStrings.switchToAccessibilityTreeView);\n  button.data = {\n    active: isActive,\n    variant: Buttons.Button.Variant.TOOLBAR,\n    iconUrl: new URL('../../Images/accessibility-icon.svg', import.meta.url).toString(),\n    title,\n  };\n  button.tabIndex = 0;\n  button.classList.add('axtree-button');\n  if (isActive) {\n    button.classList.add('active');\n  }\n  return button;\n};\n\nlet elementsPanelInstance: ElementsPanel;\n\nexport class ElementsPanel extends UI.Panel.Panel implements UI.SearchableView.Searchable,\n                                                             SDK.TargetManager.SDKModelObserver<SDK.DOMModel.DOMModel>,\n                                                             UI.View.ViewLocationResolver {\n  private splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly searchableViewInternal: UI.SearchableView.SearchableView;\n  private mainContainer: HTMLDivElement;\n  private domTreeContainer: HTMLDivElement;\n  private splitMode: _splitMode|null;\n  private readonly accessibilityTreeView: AccessibilityTreeView|undefined;\n  private breadcrumbs: ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs;\n  stylesWidget: StylesSidebarPane;\n  private readonly computedStyleWidget: ComputedStyleWidget;\n  private readonly metricsWidget: MetricsSidebarPane;\n  private treeOutlines: Set<ElementsTreeOutline> = new Set();\n  private readonly treeOutlineHeaders: Map<ElementsTreeOutline, Element> = new Map();\n  private searchResults!: {\n    domModel: SDK.DOMModel.DOMModel,\n    index: number,\n    node: ((SDK.DOMModel.DOMNode | undefined)|null),\n  }[]|undefined;\n  private currentSearchResultIndex: number;\n  pendingNodeReveal: boolean;\n  private readonly adornerManager: ElementsComponents.AdornerManager.AdornerManager;\n  private adornerSettingsPane: ElementsComponents.AdornerSettingsPane.AdornerSettingsPane|null;\n  private readonly adornersByName: Map<string, Set<Adorners.Adorner.Adorner>>;\n  accessibilityTreeButton?: HTMLElement;\n  domTreeButton?: HTMLElement;\n  private selectedNodeOnReset?: SDK.DOMModel.DOMNode;\n  private hasNonDefaultSelectedNode?: boolean;\n  private searchConfig?: UI.SearchableView.SearchConfig;\n  private omitDefaultSelection?: boolean;\n  private notFirstInspectElement?: boolean;\n  sidebarPaneView?: UI.View.TabbedViewLocation;\n  private stylesViewToReveal?: UI.View.SimpleView;\n\n  private cssStyleTrackerByCSSModel: Map<SDK.CSSModel.CSSModel, SDK.CSSModel.CSSPropertyTracker>;\n\n  constructor() {\n    super('elements');\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(true, true, 'elementsPanelSplitViewState', 325, 325);\n    this.splitWidget.addEventListener(\n        UI.SplitWidget.Events.SidebarSizeChanged, this.updateTreeOutlineVisibleWidth.bind(this));\n    this.splitWidget.show(this.element);\n\n    this.searchableViewInternal = new UI.SearchableView.SearchableView(this, null);\n    this.searchableViewInternal.setMinimumSize(25, 28);\n    this.searchableViewInternal.setPlaceholder(i18nString(UIStrings.findByStringSelectorOrXpath));\n    const stackElement = this.searchableViewInternal.element;\n\n    this.mainContainer = document.createElement('div');\n    this.domTreeContainer = document.createElement('div');\n    const crumbsContainer = document.createElement('div');\n    if (Root.Runtime.experiments.isEnabled('fullAccessibilityTree')) {\n      this.initializeFullAccessibilityTreeView();\n    }\n    this.mainContainer.appendChild(this.domTreeContainer);\n    stackElement.appendChild(this.mainContainer);\n    stackElement.appendChild(crumbsContainer);\n\n    UI.ARIAUtils.markAsMain(this.domTreeContainer);\n    UI.ARIAUtils.setAccessibleName(this.domTreeContainer, i18nString(UIStrings.domTreeExplorer));\n\n    this.splitWidget.setMainWidget(this.searchableViewInternal);\n    this.splitMode = null;\n\n    this.mainContainer.id = 'main-content';\n    this.domTreeContainer.id = 'elements-content';\n    // FIXME: crbug.com/425984\n    if (Common.Settings.Settings.instance().moduleSetting('domWordWrap').get()) {\n      this.domTreeContainer.classList.add('elements-wrap');\n    }\n    Common.Settings.Settings.instance()\n        .moduleSetting('domWordWrap')\n        .addChangeListener(this.domWordWrapSettingChanged.bind(this));\n\n    crumbsContainer.id = 'elements-crumbs';\n    if (this.domTreeButton) {\n      this.accessibilityTreeView = new AccessibilityTreeView(this.domTreeButton);\n    }\n    this.breadcrumbs = new ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs();\n    this.breadcrumbs.addEventListener('breadcrumbsnodeselected', event => {\n      this.crumbNodeSelected(event);\n    });\n\n    crumbsContainer.appendChild(this.breadcrumbs);\n\n    this.stylesWidget = StylesSidebarPane.instance();\n    this.computedStyleWidget = new ComputedStyleWidget();\n    this.metricsWidget = new MetricsSidebarPane();\n\n    Common.Settings.Settings.instance()\n        .moduleSetting('sidebarPosition')\n        .addChangeListener(this.updateSidebarPosition.bind(this));\n    this.updateSidebarPosition();\n\n    this.cssStyleTrackerByCSSModel = new Map();\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DOMModel.DOMModel, this);\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.NameChanged, event => this.targetNameChanged(event.data));\n    Common.Settings.Settings.instance()\n        .moduleSetting('showUAShadowDOM')\n        .addChangeListener(this.showUAShadowDOMChanged.bind(this));\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.DocumentUpdated, this.documentUpdatedEvent, this);\n    Extensions.ExtensionServer.ExtensionServer.instance().addEventListener(\n        Extensions.ExtensionServer.Events.SidebarPaneAdded, this.extensionSidebarPaneAdded, this);\n    this.currentSearchResultIndex = -1;  // -1 represents the initial invalid state\n\n    this.pendingNodeReveal = false;\n\n    this.adornerManager = new ElementsComponents.AdornerManager.AdornerManager(\n        Common.Settings.Settings.instance().moduleSetting('adornerSettings'));\n    this.adornerSettingsPane = null;\n    this.adornersByName = new Map();\n  }\n\n  private initializeFullAccessibilityTreeView(): void {\n    this.accessibilityTreeButton = createAccessibilityTreeToggleButton(false);\n    this.accessibilityTreeButton.addEventListener('click', this.showAccessibilityTree.bind(this));\n\n    this.domTreeButton = createAccessibilityTreeToggleButton(true);\n    this.domTreeButton.addEventListener('click', this.showDOMTree.bind(this));\n\n    this.mainContainer.appendChild(this.accessibilityTreeButton);\n  }\n\n  private showAccessibilityTree(): void {\n    if (this.accessibilityTreeView) {\n      this.splitWidget.setMainWidget(this.accessibilityTreeView);\n    }\n  }\n\n  private showDOMTree(): void {\n    this.splitWidget.setMainWidget(this.searchableViewInternal);\n    const selectedNode = this.selectedDOMNode();\n    if (!selectedNode) {\n      return;\n    }\n    const treeElement = this.treeElementForNode(selectedNode);\n    if (!treeElement) {\n      return;\n    }\n    treeElement.select();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): ElementsPanel {\n    const {forceNew} = opts;\n    if (!elementsPanelInstance || forceNew) {\n      elementsPanelInstance = new ElementsPanel();\n    }\n\n    return elementsPanelInstance;\n  }\n\n  revealProperty(cssProperty: SDK.CSSProperty.CSSProperty): Promise<void> {\n    if (!this.sidebarPaneView || !this.stylesViewToReveal) {\n      return Promise.resolve();\n    }\n\n    return this.sidebarPaneView.showView(this.stylesViewToReveal).then(() => {\n      this.stylesWidget.revealProperty((cssProperty as SDK.CSSProperty.CSSProperty));\n    });\n  }\n\n  resolveLocation(_locationName: string): UI.View.ViewLocation|null {\n    return this.sidebarPaneView || null;\n  }\n\n  showToolbarPane(widget: UI.Widget.Widget|null, toggle: UI.Toolbar.ToolbarToggle|null): void {\n    // TODO(luoe): remove this function once its providers have an alternative way to reveal their views.\n    this.stylesWidget.showToolbarPane(widget, toggle);\n  }\n\n  modelAdded(domModel: SDK.DOMModel.DOMModel): void {\n    const parentModel = domModel.parentModel();\n\n    let treeOutline: ElementsTreeOutline|null = parentModel ? ElementsTreeOutline.forDOMModel(parentModel) : null;\n    if (!treeOutline) {\n      treeOutline = new ElementsTreeOutline(true, true);\n      treeOutline.setWordWrap(Common.Settings.Settings.instance().moduleSetting('domWordWrap').get());\n      treeOutline.addEventListener(ElementsTreeOutline.Events.SelectedNodeChanged, this.selectedNodeChanged, this);\n      treeOutline.addEventListener(ElementsTreeOutline.Events.ElementsTreeUpdated, this.updateBreadcrumbIfNeeded, this);\n      new ElementsTreeElementHighlighter(treeOutline);\n      this.treeOutlines.add(treeOutline);\n      if (domModel.target().parentTarget()) {\n        const element = document.createElement('div');\n        element.classList.add('elements-tree-header');\n        this.treeOutlineHeaders.set(treeOutline, element);\n        this.targetNameChanged(domModel.target());\n      }\n    }\n    treeOutline.wireToDOMModel(domModel);\n\n    this.setupStyleTracking(domModel.cssModel());\n\n    // Perform attach if necessary.\n    if (this.isShowing()) {\n      this.wasShown();\n    }\n  }\n\n  modelRemoved(domModel: SDK.DOMModel.DOMModel): void {\n    const treeOutline = ElementsTreeOutline.forDOMModel(domModel);\n    if (!treeOutline) {\n      return;\n    }\n\n    treeOutline.unwireFromDOMModel(domModel);\n    if (domModel.parentModel()) {\n      return;\n    }\n    this.treeOutlines.delete(treeOutline);\n    const header = this.treeOutlineHeaders.get(treeOutline);\n    if (header) {\n      header.remove();\n    }\n    this.treeOutlineHeaders.delete(treeOutline);\n    treeOutline.element.remove();\n\n    this.removeStyleTracking(domModel.cssModel());\n  }\n\n  private targetNameChanged(target: SDK.Target.Target): void {\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    if (!domModel) {\n      return;\n    }\n    const treeOutline = ElementsTreeOutline.forDOMModel(domModel);\n    if (!treeOutline) {\n      return;\n    }\n    const header = this.treeOutlineHeaders.get(treeOutline);\n    if (!header) {\n      return;\n    }\n    header.removeChildren();\n    header.createChild('div', 'elements-tree-header-frame').textContent = i18nString(UIStrings.frame);\n    header.appendChild(Components.Linkifier.Linkifier.linkifyURL(\n        target.inspectedURL(), ({text: target.name()} as Components.Linkifier.LinkifyURLOptions)));\n  }\n\n  private updateTreeOutlineVisibleWidth(): void {\n    if (!this.treeOutlines.size) {\n      return;\n    }\n\n    let width = this.splitWidget.element.offsetWidth;\n    if (this.splitWidget.isVertical()) {\n      width -= this.splitWidget.sidebarSize();\n    }\n    for (const treeOutline of this.treeOutlines) {\n      treeOutline.setVisibleWidth(width);\n    }\n  }\n\n  focus(): void {\n    if (this.treeOutlines.size) {\n      this.treeOutlines.values().next().value.focus();\n    }\n  }\n\n  searchableView(): UI.SearchableView.SearchableView {\n    return this.searchableViewInternal;\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().setFlavor(ElementsPanel, this);\n    this.registerCSSFiles([elementsPanelStyles]);\n\n    for (const treeOutline of this.treeOutlines) {\n      // Attach heavy component lazily\n      if (treeOutline.element.parentElement !== this.domTreeContainer) {\n        const header = this.treeOutlineHeaders.get(treeOutline);\n        if (header) {\n          this.domTreeContainer.appendChild(header);\n        }\n        this.domTreeContainer.appendChild(treeOutline.element);\n      }\n    }\n\n    const domModels = SDK.TargetManager.TargetManager.instance().models(SDK.DOMModel.DOMModel);\n    for (const domModel of domModels) {\n      if (domModel.parentModel()) {\n        continue;\n      }\n      const treeOutline = ElementsTreeOutline.forDOMModel(domModel);\n      if (!treeOutline) {\n        continue;\n      }\n      treeOutline.setVisible(true);\n\n      if (!treeOutline.rootDOMNode) {\n        if (domModel.existingDocument()) {\n          treeOutline.rootDOMNode = domModel.existingDocument();\n          this.documentUpdated(domModel);\n        } else {\n          void domModel.requestDocument();\n        }\n      }\n    }\n  }\n\n  willHide(): void {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    for (const treeOutline of this.treeOutlines) {\n      treeOutline.setVisible(false);\n      // Detach heavy component on hide\n      this.domTreeContainer.removeChild(treeOutline.element);\n      const header = this.treeOutlineHeaders.get(treeOutline);\n      if (header) {\n        this.domTreeContainer.removeChild(header);\n      }\n    }\n    super.willHide();\n    UI.Context.Context.instance().setFlavor(ElementsPanel, null);\n  }\n\n  onResize(): void {\n    this.element.window().requestAnimationFrame(this.updateSidebarPosition.bind(this));  // Do not force layout.\n    this.updateTreeOutlineVisibleWidth();\n  }\n\n  private selectedNodeChanged(\n      event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode | null, focus: boolean}>): void {\n    let selectedNode = event.data.node;\n\n    // If the selectedNode is a pseudoNode, we want to ensure that it has a valid parentNode\n    if (selectedNode && (selectedNode.pseudoType() && !selectedNode.parentNode)) {\n      selectedNode = null;\n    }\n    const {focus} = event.data;\n    for (const treeOutline of this.treeOutlines) {\n      if (!selectedNode || ElementsTreeOutline.forDOMModel(selectedNode.domModel()) !== treeOutline) {\n        treeOutline.selectDOMNode(null);\n      }\n    }\n\n    if (selectedNode) {\n      const activeNode = ElementsComponents.Helper.legacyNodeToElementsComponentsNode(selectedNode);\n      const crumbs = [activeNode];\n\n      for (let current: (SDK.DOMModel.DOMNode|null) = selectedNode.parentNode; current; current = current.parentNode) {\n        crumbs.push(ElementsComponents.Helper.legacyNodeToElementsComponentsNode(current));\n      }\n\n      this.breadcrumbs.data = {\n        crumbs,\n        selectedNode: ElementsComponents.Helper.legacyNodeToElementsComponentsNode(selectedNode),\n      };\n\n      if (this.accessibilityTreeView) {\n        void this.accessibilityTreeView.selectedNodeChanged(selectedNode);\n      }\n    } else {\n      this.breadcrumbs.data = {crumbs: [], selectedNode: null};\n    }\n\n    UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, selectedNode);\n\n    if (!selectedNode) {\n      return;\n    }\n    void selectedNode.setAsInspectedNode();\n    if (focus) {\n      this.selectedNodeOnReset = selectedNode;\n      this.hasNonDefaultSelectedNode = true;\n    }\n\n    const executionContexts = selectedNode.domModel().runtimeModel().executionContexts();\n    const nodeFrameId = selectedNode.frameId();\n    for (const context of executionContexts) {\n      if (context.frameId === nodeFrameId) {\n        UI.Context.Context.instance().setFlavor(SDK.RuntimeModel.ExecutionContext, context);\n        break;\n      }\n    }\n  }\n\n  private documentUpdatedEvent(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMModel>): void {\n    const domModel = event.data;\n    this.documentUpdated(domModel);\n    this.removeStyleTracking(domModel.cssModel());\n    this.setupStyleTracking(domModel.cssModel());\n  }\n\n  private documentUpdated(domModel: SDK.DOMModel.DOMModel): void {\n    this.searchableViewInternal.resetSearch();\n\n    if (!domModel.existingDocument()) {\n      if (this.isShowing()) {\n        void domModel.requestDocument();\n      }\n      return;\n    }\n\n    this.hasNonDefaultSelectedNode = false;\n\n    if (this.omitDefaultSelection) {\n      return;\n    }\n\n    const savedSelectedNodeOnReset = this.selectedNodeOnReset;\n    void restoreNode.call(this, domModel, this.selectedNodeOnReset || null);\n\n    async function restoreNode(\n        this: ElementsPanel, domModel: SDK.DOMModel.DOMModel, staleNode: SDK.DOMModel.DOMNode|null): Promise<void> {\n      const nodePath = staleNode ? staleNode.path() : null;\n      const restoredNodeId = nodePath ? await domModel.pushNodeByPathToFrontend(nodePath) : null;\n\n      if (savedSelectedNodeOnReset !== this.selectedNodeOnReset) {\n        return;\n      }\n      let node: (SDK.DOMModel.DOMNode|null) = restoredNodeId ? domModel.nodeForId(restoredNodeId) : null;\n      if (!node) {\n        const inspectedDocument = domModel.existingDocument();\n        node = inspectedDocument ? inspectedDocument.body || inspectedDocument.documentElement : null;\n      }\n      // If `node` is null here, the document hasn't been transmitted from the backend yet\n      // and isn't in a valid state to have a default-selected node. Another document update\n      // should be forthcoming. In the meantime, don't set the default-selected node or notify\n      // the test that it's ready, because it isn't.\n      if (node) {\n        this.setDefaultSelectedNode(node);\n        this.lastSelectedNodeSelectedForTest();\n      }\n    }\n  }\n\n  private lastSelectedNodeSelectedForTest(): void {\n  }\n\n  private setDefaultSelectedNode(node: SDK.DOMModel.DOMNode|null): void {\n    if (!node || this.hasNonDefaultSelectedNode || this.pendingNodeReveal) {\n      return;\n    }\n    const treeOutline = ElementsTreeOutline.forDOMModel(node.domModel());\n    if (!treeOutline) {\n      return;\n    }\n    this.selectDOMNode(node);\n    if (treeOutline.selectedTreeElement) {\n      treeOutline.selectedTreeElement.expand();\n    }\n  }\n\n  searchCanceled(): void {\n    this.searchConfig = undefined;\n    this.hideSearchHighlights();\n\n    this.searchableViewInternal.updateSearchMatchesCount(0);\n\n    this.currentSearchResultIndex = -1;\n    delete this.searchResults;\n\n    SDK.DOMModel.DOMModel.cancelSearch();\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    const query = searchConfig.query;\n\n    const whitespaceTrimmedQuery = query.trim();\n    if (!whitespaceTrimmedQuery.length) {\n      return;\n    }\n\n    if (!this.searchConfig || this.searchConfig.query !== query) {\n      this.searchCanceled();\n    } else {\n      this.hideSearchHighlights();\n    }\n\n    this.searchConfig = searchConfig;\n\n    const showUAShadowDOM = Common.Settings.Settings.instance().moduleSetting('showUAShadowDOM').get();\n    const domModels = SDK.TargetManager.TargetManager.instance().models(SDK.DOMModel.DOMModel);\n    const promises = domModels.map(domModel => domModel.performSearch(whitespaceTrimmedQuery, showUAShadowDOM));\n    void Promise.all(promises).then(resultCounts => {\n      this.searchResults = [];\n      for (let i = 0; i < resultCounts.length; ++i) {\n        const resultCount = resultCounts[i];\n        for (let j = 0; j < resultCount; ++j) {\n          this.searchResults.push({domModel: domModels[i], index: j, node: undefined});\n        }\n      }\n      this.searchableViewInternal.updateSearchMatchesCount(this.searchResults.length);\n      if (!this.searchResults.length) {\n        return;\n      }\n      if (this.currentSearchResultIndex >= this.searchResults.length) {\n        this.currentSearchResultIndex = -1;\n      }\n\n      let index: (0|- 1)|number = this.currentSearchResultIndex;\n\n      if (shouldJump) {\n        if (this.currentSearchResultIndex === -1) {\n          index = jumpBackwards ? -1 : 0;\n        } else {\n          index = jumpBackwards ? index - 1 : index + 1;\n        }\n        this.jumpToSearchResult(index);\n      }\n    });\n  }\n\n  private domWordWrapSettingChanged(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n    this.domTreeContainer.classList.toggle('elements-wrap', event.data);\n    for (const treeOutline of this.treeOutlines) {\n      treeOutline.setWordWrap(event.data);\n    }\n  }\n\n  switchToAndFocus(node: SDK.DOMModel.DOMNode): void {\n    // Reset search restore.\n    this.searchableViewInternal.cancelSearch();\n    void UI.ViewManager.ViewManager.instance().showView('elements').then(() => this.selectDOMNode(node, true));\n  }\n\n  private jumpToSearchResult(index: number): void {\n    if (!this.searchResults) {\n      return;\n    }\n\n    this.currentSearchResultIndex = (index + this.searchResults.length) % this.searchResults.length;\n    this.highlightCurrentSearchResult();\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this.searchResults || !this.searchConfig) {\n      return;\n    }\n    this.performSearch(this.searchConfig, true);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this.searchResults || !this.searchConfig) {\n      return;\n    }\n    this.performSearch(this.searchConfig, true, true);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return false;\n  }\n\n  supportsRegexSearch(): boolean {\n    return false;\n  }\n\n  private highlightCurrentSearchResult(): void {\n    const index = this.currentSearchResultIndex;\n    const searchResults = this.searchResults;\n    if (!searchResults) {\n      return;\n    }\n    const searchResult = searchResults[index];\n\n    this.searchableViewInternal.updateCurrentMatchIndex(index);\n    if (searchResult.node === null) {\n      return;\n    }\n\n    if (typeof searchResult.node === 'undefined') {\n      // No data for slot, request it.\n      void searchResult.domModel.searchResult(searchResult.index).then(node => {\n        searchResult.node = node;\n\n        // If any of these properties are undefined or reset to an invalid value,\n        // this means the search/highlight request is outdated.\n        const highlightRequestValid = this.searchConfig && this.searchResults && (this.currentSearchResultIndex !== -1);\n        if (highlightRequestValid) {\n          this.highlightCurrentSearchResult();\n        }\n      });\n      return;\n    }\n\n    const treeElement = this.treeElementForNode(searchResult.node);\n    void searchResult.node.scrollIntoView();\n    if (treeElement) {\n      this.searchConfig && treeElement.highlightSearchResults(this.searchConfig.query);\n      treeElement.reveal();\n      const matches = treeElement.listItemElement.getElementsByClassName(UI.UIUtils.highlightedSearchResultClassName);\n      if (matches.length) {\n        matches[0].scrollIntoViewIfNeeded(false);\n      }\n    }\n  }\n\n  private hideSearchHighlights(): void {\n    if (!this.searchResults || !this.searchResults.length || this.currentSearchResultIndex === -1) {\n      return;\n    }\n    const searchResult = this.searchResults[this.currentSearchResultIndex];\n    if (!searchResult.node) {\n      return;\n    }\n    const treeElement = this.treeElementForNode(searchResult.node);\n    if (treeElement) {\n      treeElement.hideSearchHighlights();\n    }\n  }\n\n  selectedDOMNode(): SDK.DOMModel.DOMNode|null {\n    for (const treeOutline of this.treeOutlines) {\n      if (treeOutline.selectedDOMNode()) {\n        return treeOutline.selectedDOMNode();\n      }\n    }\n    return null;\n  }\n\n  selectDOMNode(node: SDK.DOMModel.DOMNode, focus?: boolean): void {\n    for (const treeOutline of this.treeOutlines) {\n      const outline = ElementsTreeOutline.forDOMModel(node.domModel());\n      if (outline === treeOutline) {\n        treeOutline.selectDOMNode(node, focus);\n      } else {\n        treeOutline.selectDOMNode(null);\n      }\n    }\n  }\n\n  private updateBreadcrumbIfNeeded(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode[]>): void {\n    const nodes = event.data;\n    /* If we don't have a selected node then we can tell the breadcrumbs that & bail. */\n    const selectedNode = this.selectedDOMNode();\n    if (!selectedNode) {\n      this.breadcrumbs.data = {\n        crumbs: [],\n        selectedNode: null,\n      };\n      return;\n    }\n\n    /* This function gets called whenever the tree outline is updated\n     * and contains any nodes that have changed.\n     * What we need to do is construct the new set of breadcrumb nodes, combining the Nodes\n     * that we had before with the new nodes, and pass them into the breadcrumbs component.\n     */\n\n    // Get the current set of active crumbs\n    const activeNode = ElementsComponents.Helper.legacyNodeToElementsComponentsNode(selectedNode);\n    const existingCrumbs = [activeNode];\n    for (let current: (SDK.DOMModel.DOMNode|null) = selectedNode.parentNode; current; current = current.parentNode) {\n      existingCrumbs.push(ElementsComponents.Helper.legacyNodeToElementsComponentsNode(current));\n    }\n\n    /* Get the change nodes from the event & convert them to breadcrumb nodes */\n    const newNodes = nodes.map(ElementsComponents.Helper.legacyNodeToElementsComponentsNode);\n    const nodesThatHaveChangedMap = new Map<number, ElementsComponents.Helper.DOMNode>();\n    newNodes.forEach(crumb => nodesThatHaveChangedMap.set(crumb.id, crumb));\n\n    /* Loop over our existing crumbs, and if any have an ID that matches an ID from the new nodes\n     * that we have, use the new node, rather than the one we had, because it's changed.\n     */\n    const newSetOfCrumbs = existingCrumbs.map(crumb => {\n      const replacement = nodesThatHaveChangedMap.get(crumb.id);\n      return replacement || crumb;\n    });\n\n    this.breadcrumbs.data = {\n      crumbs: newSetOfCrumbs,\n      selectedNode: activeNode,\n    };\n  }\n\n  private crumbNodeSelected(event: ElementsComponents.ElementsBreadcrumbs.NodeSelectedEvent): void {\n    this.selectDOMNode(event.legacyDomNode, true);\n  }\n\n  private treeOutlineForNode(node: SDK.DOMModel.DOMNode|null): ElementsTreeOutline|null {\n    if (!node) {\n      return null;\n    }\n    return ElementsTreeOutline.forDOMModel(node.domModel());\n  }\n\n  private treeElementForNode(node: SDK.DOMModel.DOMNode): ElementsTreeElement|null {\n    const treeOutline = this.treeOutlineForNode(node);\n    if (!treeOutline) {\n      return null;\n    }\n    return treeOutline.findTreeElement(node);\n  }\n\n  private leaveUserAgentShadowDOM(node: SDK.DOMModel.DOMNode): SDK.DOMModel.DOMNode {\n    let userAgentShadowRoot;\n    while ((userAgentShadowRoot = node.ancestorUserAgentShadowRoot()) && userAgentShadowRoot.parentNode) {\n      node = userAgentShadowRoot.parentNode;\n    }\n    return node;\n  }\n\n  async revealAndSelectNode(nodeToReveal: SDK.DOMModel.DOMNode, focus: boolean, omitHighlight?: boolean):\n      Promise<void> {\n    this.omitDefaultSelection = true;\n\n    const node = Common.Settings.Settings.instance().moduleSetting('showUAShadowDOM').get() ?\n        nodeToReveal :\n        this.leaveUserAgentShadowDOM(nodeToReveal);\n    if (!omitHighlight) {\n      node.highlightForTwoSeconds();\n    }\n\n    if (this.accessibilityTreeView) {\n      void this.accessibilityTreeView.revealAndSelectNode(nodeToReveal);\n    }\n\n    await UI.ViewManager.ViewManager.instance().showView('elements', false, !focus);\n    this.selectDOMNode(node, focus);\n    delete this.omitDefaultSelection;\n    if (!this.notFirstInspectElement) {\n      ElementsPanel.firstInspectElementNodeNameForTest = node.nodeName();\n      ElementsPanel.firstInspectElementCompletedForTest();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectElementCompleted();\n    }\n    this.notFirstInspectElement = true;\n  }\n\n  private showUAShadowDOMChanged(): void {\n    for (const treeOutline of this.treeOutlines) {\n      treeOutline.update();\n    }\n  }\n\n  private setupTextSelectionHack(stylePaneWrapperElement: HTMLElement): void {\n    // We \"extend\" the sidebar area when dragging, in order to keep smooth text\n    // selection. It should be replaced by 'user-select: contain' in the future.\n    const uninstallHackBound = uninstallHack.bind(this);\n\n    // Fallback to cover unforeseen cases where text selection has ended.\n    const uninstallHackOnMousemove = (event: Event): void => {\n      if ((event as MouseEvent).buttons === 0) {\n        uninstallHack.call(this);\n      }\n    };\n\n    stylePaneWrapperElement.addEventListener('mousedown', (event: Event) => {\n      if ((event as MouseEvent).button !== 0) {\n        return;\n      }\n      this.splitWidget.element.classList.add('disable-resizer-for-elements-hack');\n      stylePaneWrapperElement.style.setProperty('height', `${stylePaneWrapperElement.offsetHeight}px`);\n      const largeLength = 1000000;\n      stylePaneWrapperElement.style.setProperty('left', `${- 1 * largeLength}px`);\n      stylePaneWrapperElement.style.setProperty('padding-left', `${largeLength}px`);\n      stylePaneWrapperElement.style.setProperty('width', `calc(100% + ${largeLength}px)`);\n      stylePaneWrapperElement.style.setProperty('position', 'absolute');\n\n      stylePaneWrapperElement.window().addEventListener('blur', uninstallHackBound);\n      stylePaneWrapperElement.window().addEventListener('contextmenu', uninstallHackBound, true);\n      stylePaneWrapperElement.window().addEventListener('dragstart', uninstallHackBound, true);\n      stylePaneWrapperElement.window().addEventListener('mousemove', uninstallHackOnMousemove, true);\n      stylePaneWrapperElement.window().addEventListener('mouseup', uninstallHackBound, true);\n      stylePaneWrapperElement.window().addEventListener('visibilitychange', uninstallHackBound);\n    }, true);\n\n    function uninstallHack(this: ElementsPanel): void {\n      this.splitWidget.element.classList.remove('disable-resizer-for-elements-hack');\n      stylePaneWrapperElement.style.removeProperty('left');\n      stylePaneWrapperElement.style.removeProperty('padding-left');\n      stylePaneWrapperElement.style.removeProperty('width');\n      stylePaneWrapperElement.style.removeProperty('position');\n\n      stylePaneWrapperElement.window().removeEventListener('blur', uninstallHackBound);\n      stylePaneWrapperElement.window().removeEventListener('contextmenu', uninstallHackBound, true);\n      stylePaneWrapperElement.window().removeEventListener('dragstart', uninstallHackBound, true);\n      stylePaneWrapperElement.window().removeEventListener('mousemove', uninstallHackOnMousemove, true);\n      stylePaneWrapperElement.window().removeEventListener('mouseup', uninstallHackBound, true);\n      stylePaneWrapperElement.window().removeEventListener('visibilitychange', uninstallHackBound);\n    }\n  }\n\n  private initializeSidebarPanes(splitMode: _splitMode): void {\n    this.splitWidget.setVertical(splitMode === _splitMode.Vertical);\n    this.showToolbarPane(null /* widget */, null /* toggle */);\n\n    const matchedStylePanesWrapper = new UI.Widget.VBox();\n    matchedStylePanesWrapper.element.classList.add('style-panes-wrapper');\n    this.stylesWidget.show(matchedStylePanesWrapper.element);\n    this.setupTextSelectionHack(matchedStylePanesWrapper.element);\n\n    const computedStylePanesWrapper = new UI.Widget.VBox();\n    computedStylePanesWrapper.element.classList.add('style-panes-wrapper');\n    this.computedStyleWidget.show(computedStylePanesWrapper.element);\n\n    const stylesSplitWidget = new UI.SplitWidget.SplitWidget(\n        true /* isVertical */, true /* secondIsSidebar */, 'elements.styles.sidebar.width', 100);\n    stylesSplitWidget.setMainWidget(matchedStylePanesWrapper);\n    stylesSplitWidget.hideSidebar();\n    stylesSplitWidget.enableShowModeSaving();\n    stylesSplitWidget.addEventListener(UI.SplitWidget.Events.ShowModeChanged, () => {\n      showMetricsWidgetInStylesPane();\n    });\n    this.stylesWidget.addEventListener(StylesSidebarPaneEvents.InitialUpdateCompleted, () => {\n      this.stylesWidget.appendToolbarItem(stylesSplitWidget.createShowHideSidebarButton(\n          i18nString(UIStrings.showComputedStylesSidebar), i18nString(UIStrings.hideComputedStylesSidebar),\n          i18nString(UIStrings.computedStylesShown), i18nString(UIStrings.computedStylesHidden)));\n    });\n\n    const showMetricsWidgetInComputedPane = (): void => {\n      this.metricsWidget.show(computedStylePanesWrapper.element, this.computedStyleWidget.element);\n      this.metricsWidget.toggleVisibility(true /* visible */);\n      this.stylesWidget.removeEventListener(StylesSidebarPaneEvents.StylesUpdateCompleted, toggleMetricsWidget);\n    };\n\n    const showMetricsWidgetInStylesPane = (): void => {\n      const showMergedComputedPane = stylesSplitWidget.showMode() === UI.SplitWidget.ShowMode.Both;\n      if (showMergedComputedPane) {\n        showMetricsWidgetInComputedPane();\n      } else {\n        this.metricsWidget.show(matchedStylePanesWrapper.element);\n        if (!this.stylesWidget.hasMatchedStyles) {\n          this.metricsWidget.toggleVisibility(false /* invisible */);\n        }\n        this.stylesWidget.addEventListener(StylesSidebarPaneEvents.StylesUpdateCompleted, toggleMetricsWidget);\n      }\n    };\n\n    let skippedInitialTabSelectedEvent = false;\n\n    const toggleMetricsWidget = (event: Common.EventTarget.EventTargetEvent<StylesUpdateCompletedEvent>): void => {\n      this.metricsWidget.toggleVisibility(event.data.hasMatchedStyles);\n    };\n\n    const tabSelected = (event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void => {\n      const {tabId} = event.data;\n      if (tabId === SidebarPaneTabId.Computed) {\n        computedStylePanesWrapper.show(computedView.element);\n        showMetricsWidgetInComputedPane();\n      } else if (tabId === SidebarPaneTabId.Styles) {\n        stylesSplitWidget.setSidebarWidget(computedStylePanesWrapper);\n        showMetricsWidgetInStylesPane();\n      }\n\n      if (skippedInitialTabSelectedEvent) {\n        // We don't log the initially selected sidebar pane to UMA because\n        // it will skew the histogram heavily toward the Styles pane\n        Host.userMetrics.sidebarPaneShown(tabId);\n      } else {\n        skippedInitialTabSelectedEvent = true;\n      }\n    };\n\n    this.sidebarPaneView = UI.ViewManager.ViewManager.instance().createTabbedLocation(\n        () => UI.ViewManager.ViewManager.instance().showView('elements'), 'Styles-pane-sidebar', false, true);\n    const tabbedPane = this.sidebarPaneView.tabbedPane();\n    if (this.splitMode !== _splitMode.Vertical) {\n      this.splitWidget.installResizer(tabbedPane.headerElement());\n    }\n\n    const headerElement = tabbedPane.headerElement();\n    UI.ARIAUtils.markAsNavigation(headerElement);\n    UI.ARIAUtils.setAccessibleName(headerElement, i18nString(UIStrings.sidePanelToolbar));\n\n    const contentElement = tabbedPane.tabbedPaneContentElement();\n    UI.ARIAUtils.markAsComplementary(contentElement);\n    UI.ARIAUtils.setAccessibleName(contentElement, i18nString(UIStrings.sidePanelContent));\n\n    const stylesView =\n        new UI.View.SimpleView(i18nString(UIStrings.styles), /* isWebComponent */ undefined, SidebarPaneTabId.Styles);\n    this.sidebarPaneView.appendView(stylesView);\n    stylesView.element.classList.add('flex-auto');\n    stylesSplitWidget.show(stylesView.element);\n\n    const computedView = new UI.View.SimpleView(\n        i18nString(UIStrings.computed), /* isWebComponent */ undefined, SidebarPaneTabId.Computed);\n    computedView.element.classList.add('composite', 'fill');\n\n    tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected, tabSelected, this);\n    this.sidebarPaneView.appendView(computedView);\n    this.stylesViewToReveal = stylesView;\n\n    this.sidebarPaneView.appendApplicableItems('elements-sidebar');\n    const extensionSidebarPanes = Extensions.ExtensionServer.ExtensionServer.instance().sidebarPanes();\n    for (let i = 0; i < extensionSidebarPanes.length; ++i) {\n      this.addExtensionSidebarPane(extensionSidebarPanes[i]);\n    }\n\n    this.splitWidget.setSidebarWidget(this.sidebarPaneView.tabbedPane());\n  }\n\n  private updateSidebarPosition(): void {\n    if (this.sidebarPaneView && this.sidebarPaneView.tabbedPane().shouldHideOnDetach()) {\n      return;\n    }  // We can't reparent extension iframes.\n\n    const position = Common.Settings.Settings.instance().moduleSetting('sidebarPosition').get();\n    let splitMode = _splitMode.Horizontal;\n    if (position === 'right' ||\n        (position === 'auto' && UI.InspectorView.InspectorView.instance().element.offsetWidth > 680)) {\n      splitMode = _splitMode.Vertical;\n    }\n    if (!this.sidebarPaneView) {\n      this.initializeSidebarPanes(splitMode);\n      return;\n    }\n    if (splitMode === this.splitMode) {\n      return;\n    }\n    this.splitMode = splitMode;\n\n    const tabbedPane = this.sidebarPaneView.tabbedPane();\n    this.splitWidget.uninstallResizer(tabbedPane.headerElement());\n\n    this.splitWidget.setVertical(this.splitMode === _splitMode.Vertical);\n    this.showToolbarPane(null /* widget */, null /* toggle */);\n\n    if (this.splitMode !== _splitMode.Vertical) {\n      this.splitWidget.installResizer(tabbedPane.headerElement());\n    }\n  }\n\n  private extensionSidebarPaneAdded(\n      event: Common.EventTarget.EventTargetEvent<Extensions.ExtensionPanel.ExtensionSidebarPane>): void {\n    this.addExtensionSidebarPane(event.data);\n  }\n\n  private addExtensionSidebarPane(pane: Extensions.ExtensionPanel.ExtensionSidebarPane): void {\n    if (this.sidebarPaneView && pane.panelName() === this.name) {\n      this.sidebarPaneView.appendView(pane);\n    }\n  }\n\n  getComputedStyleWidget(): ComputedStyleWidget {\n    return this.computedStyleWidget;\n  }\n\n  private setupStyleTracking(cssModel: SDK.CSSModel.CSSModel): void {\n    const cssPropertyTracker = cssModel.createCSSPropertyTracker(TrackedCSSProperties);\n    cssPropertyTracker.start();\n    this.cssStyleTrackerByCSSModel.set(cssModel, cssPropertyTracker);\n    cssPropertyTracker.addEventListener(\n        SDK.CSSModel.CSSPropertyTrackerEvents.TrackedCSSPropertiesUpdated, this.trackedCSSPropertiesUpdated, this);\n  }\n\n  private removeStyleTracking(cssModel: SDK.CSSModel.CSSModel): void {\n    const cssPropertyTracker = this.cssStyleTrackerByCSSModel.get(cssModel);\n    if (!cssPropertyTracker) {\n      return;\n    }\n\n    cssPropertyTracker.stop();\n    this.cssStyleTrackerByCSSModel.delete(cssModel);\n    cssPropertyTracker.removeEventListener(\n        SDK.CSSModel.CSSPropertyTrackerEvents.TrackedCSSPropertiesUpdated, this.trackedCSSPropertiesUpdated, this);\n  }\n\n  private trackedCSSPropertiesUpdated({data: domNodes}:\n                                          Common.EventTarget.EventTargetEvent<(SDK.DOMModel.DOMNode | null)[]>): void {\n    for (const domNode of domNodes) {\n      if (!domNode) {\n        continue;\n      }\n      const treeElement = this.treeElementForNode(domNode);\n      if (treeElement) {\n        void treeElement.updateStyleAdorners();\n      }\n\n      LayoutSidebarPane.instance().update();\n    }\n  }\n\n  showAdornerSettingsPane(): void {\n    // Delay the initialization of the pane to the first showing\n    // since usually this pane won't be used.\n    if (!this.adornerSettingsPane) {\n      this.adornerSettingsPane = new ElementsComponents.AdornerSettingsPane.AdornerSettingsPane();\n      this.adornerSettingsPane.addEventListener('adornersettingupdated', (event: Event) => {\n        const {adornerName, isEnabledNow, newSettings} =\n            (event as ElementsComponents.AdornerSettingsPane.AdornerSettingUpdatedEvent).data;\n        const adornersToUpdate = this.adornersByName.get(adornerName);\n        if (adornersToUpdate) {\n          for (const adorner of adornersToUpdate) {\n            isEnabledNow ? adorner.show() : adorner.hide();\n          }\n        }\n        this.adornerManager.updateSettings(newSettings);\n      });\n      this.searchableViewInternal.element.prepend(this.adornerSettingsPane);\n    }\n\n    const adornerSettings = this.adornerManager.getSettings();\n    this.adornerSettingsPane.data = {\n      settings: adornerSettings,\n    };\n    this.adornerSettingsPane.show();\n  }\n\n  isAdornerEnabled(adornerText: string): boolean {\n    return this.adornerManager.isAdornerEnabled(adornerText);\n  }\n\n  registerAdorner(adorner: Adorners.Adorner.Adorner): void {\n    let adornerSet = this.adornersByName.get(adorner.name);\n    if (!adornerSet) {\n      adornerSet = new Set();\n      this.adornersByName.set(adorner.name, adornerSet);\n    }\n    adornerSet.add(adorner);\n    if (!this.isAdornerEnabled(adorner.name)) {\n      adorner.hide();\n    }\n  }\n\n  deregisterAdorner(adorner: Adorners.Adorner.Adorner): void {\n    const adornerSet = this.adornersByName.get(adorner.name);\n    if (!adornerSet) {\n      return;\n    }\n    adornerSet.delete(adorner);\n  }\n\n  private static firstInspectElementCompletedForTest = function(): void {};\n  private static firstInspectElementNodeNameForTest = '';\n}\n\n// @ts-ignore exported for Tests.js\nglobalThis.Elements = globalThis.Elements || {};\n// @ts-ignore exported for Tests.js\nglobalThis.Elements.ElementsPanel = ElementsPanel;\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const enum _splitMode {\n  Vertical = 'Vertical',\n  Horizontal = 'Horizontal',\n}\n\nconst TrackedCSSProperties = [\n  {\n    name: 'display',\n    value: 'grid',\n  },\n  {\n    name: 'display',\n    value: 'inline-grid',\n  },\n  {\n    name: 'display',\n    value: 'flex',\n  },\n  {\n    name: 'display',\n    value: 'inline-flex',\n  },\n  {\n    name: 'container-type',\n    value: 'inline-size',\n  },\n  {\n    name: 'container-type',\n    value: 'block-size',\n  },\n  {\n    name: 'container-type',\n    value: 'size',\n  },\n];\n\nlet contextMenuProviderInstance: ContextMenuProvider;\n\nexport class ContextMenuProvider implements UI.ContextMenu.Provider {\n  appendApplicableItems(event: Event, contextMenu: UI.ContextMenu.ContextMenu, object: Object): void {\n    if (!(object instanceof SDK.RemoteObject.RemoteObject && (object as SDK.RemoteObject.RemoteObject).isNode()) &&\n        !(object instanceof SDK.DOMModel.DOMNode) && !(object instanceof SDK.DOMModel.DeferredDOMNode)) {\n      return;\n    }\n    if (ElementsPanel.instance().element.isAncestor((event.target as Node))) {\n      return;\n    }\n    const commandCallback: () => void = Common.Revealer.reveal.bind(Common.Revealer.Revealer, object);\n    contextMenu.revealSection().appendItem(i18nString(UIStrings.revealInElementsPanel), commandCallback);\n  }\n\n  static instance(): ContextMenuProvider {\n    if (!contextMenuProviderInstance) {\n      contextMenuProviderInstance = new ContextMenuProvider();\n    }\n    return contextMenuProviderInstance;\n  }\n}\nlet dOMNodeRevealerInstance: DOMNodeRevealer;\nexport class DOMNodeRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): DOMNodeRevealer {\n    const {forceNew} = opts;\n    if (!dOMNodeRevealerInstance || forceNew) {\n      dOMNodeRevealerInstance = new DOMNodeRevealer();\n    }\n\n    return dOMNodeRevealerInstance;\n  }\n\n  reveal(node: Object, omitFocus?: boolean): Promise<void> {\n    const panel = ElementsPanel.instance();\n    panel.pendingNodeReveal = true;\n\n    return (new Promise<void>(revealPromise)).catch((reason: Error) => {\n      let message: string;\n      if (Platform.UserVisibleError.isUserVisibleError(reason)) {\n        message = reason.message;\n      } else {\n        message = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n      }\n\n      Common.Console.Console.instance().warn(message);\n      // Blink tests expect an exception to be raised and unhandled here to detect that the node\n      // was actually not successfully viewed.\n      throw reason;\n    });\n\n    function revealPromise(\n        resolve: () => void, reject: (arg0: Platform.UserVisibleError.UserVisibleError) => void): void {\n      if (node instanceof SDK.DOMModel.DOMNode) {\n        onNodeResolved((node as SDK.DOMModel.DOMNode));\n      } else if (node instanceof SDK.DOMModel.DeferredDOMNode) {\n        (node as SDK.DOMModel.DeferredDOMNode).resolve(checkDeferredDOMNodeThenReveal);\n      } else if (node instanceof SDK.RemoteObject.RemoteObject) {\n        const domModel = node.runtimeModel().target().model(SDK.DOMModel.DOMModel);\n        if (domModel) {\n          void domModel.pushObjectAsNodeToFrontend(node).then(checkRemoteObjectThenReveal);\n        } else {\n          const msg = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n          reject(new Platform.UserVisibleError.UserVisibleError(msg));\n        }\n      } else {\n        const msg = i18nString(UIStrings.theRemoteObjectCouldNotBe);\n        reject(new Platform.UserVisibleError.UserVisibleError(msg));\n        panel.pendingNodeReveal = false;\n      }\n\n      function onNodeResolved(resolvedNode: SDK.DOMModel.DOMNode): void {\n        panel.pendingNodeReveal = false;\n\n        // A detached node could still have a parent and ownerDocument\n        // properties, which means stepping up through the hierarchy to ensure\n        // that the root node is the document itself. Any break implies\n        // detachment.\n        let currentNode: SDK.DOMModel.DOMNode = resolvedNode;\n        while (currentNode.parentNode) {\n          currentNode = currentNode.parentNode;\n        }\n        const isDetached = !(currentNode instanceof SDK.DOMModel.DOMDocument);\n\n        const isDocument = node instanceof SDK.DOMModel.DOMDocument;\n        if (!isDocument && isDetached) {\n          const msg = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n          reject(new Platform.UserVisibleError.UserVisibleError(msg));\n          return;\n        }\n\n        if (resolvedNode) {\n          void panel.revealAndSelectNode(resolvedNode, !omitFocus).then(resolve);\n          return;\n        }\n        const msg = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n        reject(new Platform.UserVisibleError.UserVisibleError(msg));\n      }\n\n      function checkRemoteObjectThenReveal(resolvedNode: SDK.DOMModel.DOMNode|null): void {\n        if (!resolvedNode) {\n          const msg = i18nString(UIStrings.theRemoteObjectCouldNotBe);\n          reject(new Platform.UserVisibleError.UserVisibleError(msg));\n          return;\n        }\n        onNodeResolved(resolvedNode);\n      }\n\n      function checkDeferredDOMNodeThenReveal(resolvedNode: SDK.DOMModel.DOMNode|null): void {\n        if (!resolvedNode) {\n          const msg = i18nString(UIStrings.theDeferredDomNodeCouldNotBe);\n          reject(new Platform.UserVisibleError.UserVisibleError(msg));\n          return;\n        }\n        onNodeResolved(resolvedNode);\n      }\n    }\n  }\n}\n\nlet cSSPropertyRevealerInstance: CSSPropertyRevealer;\n\nexport class CSSPropertyRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): CSSPropertyRevealer {\n    const {forceNew} = opts;\n    if (!cSSPropertyRevealerInstance || forceNew) {\n      cSSPropertyRevealerInstance = new CSSPropertyRevealer();\n    }\n\n    return cSSPropertyRevealerInstance;\n  }\n\n  reveal(property: Object): Promise<void> {\n    const panel = ElementsPanel.instance();\n    return panel.revealProperty((property as SDK.CSSProperty.CSSProperty));\n  }\n}\n\nlet elementsActionDelegateInstance: ElementsActionDelegate;\n\nexport class ElementsActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!node) {\n      return true;\n    }\n    const treeOutline = ElementsTreeOutline.forDOMModel(node.domModel());\n    if (!treeOutline) {\n      return true;\n    }\n\n    switch (actionId) {\n      case 'elements.hide-element':\n        void treeOutline.toggleHideElement(node);\n        return true;\n      case 'elements.edit-as-html':\n        treeOutline.toggleEditAsHTML(node);\n        return true;\n      case 'elements.duplicate-element':\n        treeOutline.duplicateNode(node);\n        return true;\n      case 'elements.copy-styles':\n        void treeOutline.findTreeElement(node)?.copyStyles();\n        return true;\n      case 'elements.undo':\n        void SDK.DOMModel.DOMModelUndoStack.instance().undo();\n        ElementsPanel.instance().stylesWidget.forceUpdate();\n        return true;\n      case 'elements.redo':\n        void SDK.DOMModel.DOMModelUndoStack.instance().redo();\n        ElementsPanel.instance().stylesWidget.forceUpdate();\n        return true;\n    }\n    return false;\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): ElementsActionDelegate {\n    const {forceNew} = opts;\n    if (!elementsActionDelegateInstance || forceNew) {\n      elementsActionDelegateInstance = new ElementsActionDelegate();\n    }\n\n    return elementsActionDelegateInstance;\n  }\n}\n\nlet pseudoStateMarkerDecoratorInstance: PseudoStateMarkerDecorator;\nexport class PseudoStateMarkerDecorator implements MarkerDecorator {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): PseudoStateMarkerDecorator {\n    const {forceNew} = opts;\n    if (!pseudoStateMarkerDecoratorInstance || forceNew) {\n      pseudoStateMarkerDecoratorInstance = new PseudoStateMarkerDecorator();\n    }\n\n    return pseudoStateMarkerDecoratorInstance;\n  }\n\n  decorate(node: SDK.DOMModel.DOMNode): {\n    title: string,\n    color: string,\n  }|null {\n    const pseudoState = node.domModel().cssModel().pseudoState(node);\n    if (!pseudoState) {\n      return null;\n    }\n\n    return {color: 'orange', title: i18nString(UIStrings.elementStateS, {PH1: ':' + pseudoState.join(', :')})};\n  }\n}\n"]}