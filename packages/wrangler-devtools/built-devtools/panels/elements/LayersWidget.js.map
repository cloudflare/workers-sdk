{"version":3,"file":"LayersWidget.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/LayersWidget.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,KAAK,WAAW,MAAM,kDAAkD,CAAC;AAEhF,OAAO,EAAC,aAAa,EAAC,MAAM,oBAAoB,CAAC;AACjD,OAAO,kBAAkB,MAAM,uBAAuB,CAAC;AACvD,OAAO,KAAK,UAAU,MAAM,gDAAgD,CAAC;AAE7E,MAAM,SAAS,GAAG;IAChB;;;QAGI;IACJ,cAAc,EAAE,YAAY;IAC5B;;;MAGE;IACF,eAAe,EAAE,wBAAwB;CAC1C,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,iCAAiC,EAAE,SAAS,CAAC,CAAC;AACvF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,IAAI,oBAAkC,CAAC;AAEvC,MAAM,OAAO,YAAa,SAAQ,EAAE,CAAC,MAAM,CAAC,MAAM;IACxC,QAAQ,CAA8B;IACtC,kBAAkB,GAAG,IAAI,WAAW,CAAC,WAAW,CAAC,WAAW,EAAU,CAAC;IAE/E;QACE,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,oBAAoB,CAAC;QACrD,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;QAEzG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEzD,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,uBAAuB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACjG,CAAC;IAEO,WAAW,CAAC,QAAoC;QACtD,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;YAC9B,OAAO;SACR;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SAC7F;QACD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SAC1F;IACH,CAAC;IAED,KAAK,CAAC,QAAQ;QACZ,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IAEO,KAAK,CAAC,MAAM;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACrB,OAAO;SACR;QAED,IAAI,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACtE,IAAI,IAAI,EAAE;YACR,IAAI,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACtC;QACD,IAAI,CAAC,IAAI,EAAE;YACT,2BAA2B;YAC3B,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,MAAM,YAAY,GAAG,CAAC,QAAgB,EAAE,EAAE,CACtC,CAAC,KAAgC,EAAiD,EAAE;YAClF,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;YAClC,MAAM,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjE,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;YAC/C,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;YACnD,IAAI,CAAC,SAAS,EAAE;gBACd,OAAO,EAAC,YAAY,EAAE,EAAE,EAAC,CAAC;aAC3B;YACD,OAAO;gBACL,YAAY;gBACZ,EAAE;gBACF,QAAQ,EAAE,GAA6D,EAAE,CACrE,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;aAC3G,CAAC;QACJ,CAAC,CAAC;QACN,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG;YAC7B,eAAe,EAAE,WAAW,CAAC,WAAW,CAAC,eAAe;YACxD,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;SACpC,CAAC;QAEF,iEAAiE;QACjE,yBAAyB;QACzB,MAAM,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,SAAiB;QACjC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACrB,aAAa,CAAC,QAAQ,EAAE,CAAC,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;SAClF;QACD,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,uBAAuB,GAAG,SAAS,CAAC,CAAC;IAClG,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,OAEF,EAAC,QAAQ,EAAE,IAAI,EAAC;QAC5B,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,oBAAoB,IAAI,QAAQ,EAAE;YACrC,oBAAoB,GAAG,IAAI,YAAY,EAAE,CAAC;SAC3C;QAED,OAAO,oBAAoB,CAAC;IAC9B,CAAC;CACF;AAED,IAAI,sBAAsC,CAAC;AAE3C,MAAM,OAAO,cAAc;IACR,MAAM,CAA2B;IAClD;QACE,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC9C,UAAU,CAAC,IAAI,GAAG;YAChB,QAAQ,EAAE,iBAAiB;YAC3B,KAAK,EAAE,6BAA6B;YACpC,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;SACf,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,UAAU,CAAC,CAAC;QAC9F,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACjD,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,OAEZ,EAAC,QAAQ,EAAE,IAAI,EAAC;QAClB,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,sBAAsB,IAAI,QAAQ,EAAE;YACvC,sBAAsB,GAAG,IAAI,cAAc,EAAE,CAAC;SAC/C;QAED,OAAO,sBAAsB,CAAC;IAChC,CAAC;IAEO,OAAO;QACb,MAAM,IAAI,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;QACrC,aAAa,CAAC,QAAQ,EAAE,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACzF,CAAC;IAED,IAAI;QACF,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;CACF","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\n\nimport {ElementsPanel} from './ElementsPanel.js';\nimport layersWidgetStyles from './layersWidget.css.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\n\nconst UIStrings = {\n  /**\n  * @description Title of a section in the Element State Pane Widget of the Elements panel.\n  * The widget shows the layers present in the context of the currently selected node.\n  * */\n  cssLayersTitle: 'CSS layers',\n  /**\n  * @description Tooltip text in Element State Pane Widget of the Elements panel.\n  * For a button that opens a tool that shows the layers present in the current document.\n  */\n  toggleCSSLayers: 'Toggle CSS Layers view',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/LayersWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet layersWidgetInstance: LayersWidget;\n\nexport class LayersWidget extends UI.Widget.Widget {\n  private cssModel?: SDK.CSSModel.CSSModel|null;\n  private layerTreeComponent = new TreeOutline.TreeOutline.TreeOutline<string>();\n\n  constructor() {\n    super(true);\n\n    this.contentElement.className = 'styles-layers-pane';\n    UI.UIUtils.createTextChild(this.contentElement.createChild('div'), i18nString(UIStrings.cssLayersTitle));\n\n    this.contentElement.appendChild(this.layerTreeComponent);\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n  }\n\n  private updateModel(cssModel: SDK.CSSModel.CSSModel|null): void {\n    if (this.cssModel === cssModel) {\n      return;\n    }\n    if (this.cssModel) {\n      this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.update, this);\n    }\n    this.cssModel = cssModel;\n    if (this.cssModel) {\n      this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.update, this);\n    }\n  }\n\n  async wasShown(): Promise<void> {\n    super.wasShown();\n    this.registerCSSFiles([layersWidgetStyles]);\n    return this.update();\n  }\n\n  private async update(): Promise<void> {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (node) {\n      node = node.enclosingElementOrSelf();\n    }\n    if (!node) {\n      // do something meaningful?\n      return;\n    }\n\n    this.updateModel(node.domModel().cssModel());\n    if (!this.cssModel) {\n      return;\n    }\n    const makeTreeNode = (parentId: string) =>\n        (layer: Protocol.CSS.CSSLayerData): TreeOutline.TreeOutlineUtils.TreeNode<string> => {\n          const subLayers = layer.subLayers;\n          const name = SDK.CSSModel.CSSModel.readableLayerName(layer.name);\n          const treeNodeData = layer.order + ': ' + name;\n          const id = parentId ? parentId + '.' + name : name;\n          if (!subLayers) {\n            return {treeNodeData, id};\n          }\n          return {\n            treeNodeData,\n            id,\n            children: (): Promise<TreeOutline.TreeOutlineUtils.TreeNode<string>[]> =>\n                Promise.resolve(subLayers.sort((layer1, layer2) => layer1.order - layer2.order).map(makeTreeNode(id))),\n          };\n        };\n    const rootLayer = await this.cssModel.getRootLayer(node.id);\n    this.layerTreeComponent.data = {\n      defaultRenderer: TreeOutline.TreeOutline.defaultRenderer,\n      tree: [makeTreeNode('')(rootLayer)],\n    };\n\n    // We only expand the first 5 user-defined layers to not make the\n    // view too overwhelming.\n    await this.layerTreeComponent.expandRecursively(5);\n  }\n\n  async revealLayer(layerName: string): Promise<void> {\n    if (!this.isShowing()) {\n      ElementsPanel.instance().showToolbarPane(this, ButtonProvider.instance().item());\n    }\n    await this.update();\n    return this.layerTreeComponent.expandToAndSelectTreeNodeId('implicit outer layer.' + layerName);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): LayersWidget {\n    const {forceNew} = opts;\n    if (!layersWidgetInstance || forceNew) {\n      layersWidgetInstance = new LayersWidget();\n    }\n\n    return layersWidgetInstance;\n  }\n}\n\nlet buttonProviderInstance: ButtonProvider;\n\nexport class ButtonProvider implements UI.Toolbar.Provider {\n  private readonly button: UI.Toolbar.ToolbarToggle;\n  private constructor() {\n    const layersIcon = new IconButton.Icon.Icon();\n    layersIcon.data = {\n      iconName: 'ic_layers_16x16',\n      color: 'var(--color-text-secondary)',\n      width: '13px',\n      height: '13px',\n    };\n    this.button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleCSSLayers), layersIcon);\n    this.button.setVisible(false);\n    this.button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.clicked, this);\n    this.button.element.classList.add('monospace');\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ButtonProvider {\n    const {forceNew} = opts;\n    if (!buttonProviderInstance || forceNew) {\n      buttonProviderInstance = new ButtonProvider();\n    }\n\n    return buttonProviderInstance;\n  }\n\n  private clicked(): void {\n    const view = LayersWidget.instance();\n    ElementsPanel.instance().showToolbarPane(!view.isShowing() ? view : null, this.button);\n  }\n\n  item(): UI.Toolbar.ToolbarToggle {\n    return this.button;\n  }\n}\n"]}