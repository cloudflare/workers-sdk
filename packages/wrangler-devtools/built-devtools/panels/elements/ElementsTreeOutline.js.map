{"version":3,"file":"ElementsTreeOutline.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ElementsTreeOutline.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {linkifyDeferredNodeReference} from './DOMLinkifier.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport {ElementsTreeElement, InitialChildrenLimit} from './ElementsTreeElement.js';\nimport elementsTreeOutlineStyles from './elementsTreeOutline.css.js';\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport {TopLayerContainer} from './TopLayerContainer.js';\n\nimport type {MarkerDecoratorRegistration} from './MarkerDecorator.js';\n\nconst UIStrings = {\n  /**\n  *@description ARIA accessible name in Elements Tree Outline of the Elements panel\n  */\n  pageDom: 'Page DOM',\n  /**\n  *@description A context menu item to store a value as a global variable the Elements Panel\n  */\n  storeAsGlobalVariable: 'Store as global variable',\n  /**\n  *@description Tree element expand all button element button text content in Elements Tree Outline of the Elements panel\n  *@example {3} PH1\n  */\n  showAllNodesDMore: 'Show All Nodes ({PH1} More)',\n  /**\n  *@description Link text content in Elements Tree Outline of the Elements panel\n  */\n  reveal: 'reveal',\n  /**\n   * @description A context menu item to open the badge settings pane\n   */\n  adornerSettings: 'Badge settings\\u2026',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementsTreeOutline.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst elementsTreeOutlineByDOMModel = new WeakMap<SDK.DOMModel.DOMModel, ElementsTreeOutline>();\n\nconst populatedTreeElements = new Set<ElementsTreeElement>();\n\nexport class ElementsTreeOutline extends\n    Common.ObjectWrapper.eventMixin<ElementsTreeOutline.EventTypes, typeof UI.TreeOutline.TreeOutline>(\n        UI.TreeOutline.TreeOutline) {\n  treeElementByNode: WeakMap<SDK.DOMModel.DOMNode, ElementsTreeElement>;\n  private readonly shadowRoot: ShadowRoot;\n  readonly elementInternal: HTMLElement;\n  private includeRootDOMNode: boolean;\n  private selectEnabled: boolean|undefined;\n  private rootDOMNodeInternal: SDK.DOMModel.DOMNode|null;\n  selectedDOMNodeInternal: SDK.DOMModel.DOMNode|null;\n  private visible: boolean;\n  private readonly imagePreviewPopover: ImagePreviewPopover;\n  private updateRecords: Map<SDK.DOMModel.DOMNode, UpdateRecord>;\n  private treeElementsBeingUpdated: Set<ElementsTreeElement>;\n  decoratorExtensions: MarkerDecoratorRegistration[]|null;\n  private showHTMLCommentsSetting: Common.Settings.Setting<boolean>;\n  private multilineEditing?: MultilineEditorController|null;\n  private visibleWidthInternal?: number;\n  private clipboardNodeData?: ClipboardData;\n  private isXMLMimeTypeInternal?: boolean|null;\n  suppressRevealAndSelect: boolean = false;\n  private previousHoveredElement?: UI.TreeOutline.TreeElement;\n  private treeElementBeingDragged?: ElementsTreeElement;\n  private dragOverTreeElement?: ElementsTreeElement;\n  private updateModifiedNodesTimeout?: number;\n  private topLayerContainer?: TopLayerContainer;\n\n  constructor(omitRootDOMNode?: boolean, selectEnabled?: boolean, hideGutter?: boolean) {\n    super();\n    this.treeElementByNode = new WeakMap();\n    const shadowContainer = document.createElement('div');\n    this.shadowRoot = UI.Utils.createShadowRootWithCoreStyles(\n        shadowContainer,\n        {cssFile: [elementsTreeOutlineStyles, CodeHighlighter.Style.default], delegatesFocus: undefined});\n    const outlineDisclosureElement = this.shadowRoot.createChild('div', 'elements-disclosure');\n\n    this.elementInternal = this.element;\n    this.elementInternal.classList.add('elements-tree-outline', 'source-code');\n    if (hideGutter) {\n      this.elementInternal.classList.add('elements-hide-gutter');\n    }\n    UI.ARIAUtils.setAccessibleName(this.elementInternal, i18nString(UIStrings.pageDom));\n    this.elementInternal.addEventListener('focusout', this.onfocusout.bind(this), false);\n    this.elementInternal.addEventListener('mousedown', this.onmousedown.bind(this), false);\n    this.elementInternal.addEventListener('mousemove', this.onmousemove.bind(this), false);\n    this.elementInternal.addEventListener('mouseleave', this.onmouseleave.bind(this), false);\n    this.elementInternal.addEventListener('dragstart', this.ondragstart.bind(this), false);\n    this.elementInternal.addEventListener('dragover', this.ondragover.bind(this), false);\n    this.elementInternal.addEventListener('dragleave', this.ondragleave.bind(this), false);\n    this.elementInternal.addEventListener('drop', this.ondrop.bind(this), false);\n    this.elementInternal.addEventListener('dragend', this.ondragend.bind(this), false);\n    this.elementInternal.addEventListener('contextmenu', this.contextMenuEventFired.bind(this), false);\n    this.elementInternal.addEventListener('clipboard-beforecopy', this.onBeforeCopy.bind(this), false);\n    this.elementInternal.addEventListener('clipboard-copy', this.onCopyOrCut.bind(this, false), false);\n    this.elementInternal.addEventListener('clipboard-cut', this.onCopyOrCut.bind(this, true), false);\n    this.elementInternal.addEventListener('clipboard-paste', this.onPaste.bind(this), false);\n    this.elementInternal.addEventListener('keydown', this.onKeyDown.bind(this), false);\n\n    outlineDisclosureElement.appendChild(this.elementInternal);\n    this.element = shadowContainer;\n\n    this.includeRootDOMNode = !omitRootDOMNode;\n    this.selectEnabled = selectEnabled;\n    this.rootDOMNodeInternal = null;\n    this.selectedDOMNodeInternal = null;\n\n    this.visible = false;\n\n    this.imagePreviewPopover = new ImagePreviewPopover(\n        this.contentElement,\n        event => {\n          let link: (Element|null) = (event.target as Element | null);\n          while (link && !ImagePreviewPopover.getImageURL(link)) {\n            link = link.parentElementOrShadowHost();\n          }\n          return link;\n        },\n        link => {\n          const listItem = UI.UIUtils.enclosingNodeOrSelfWithNodeName(link, 'li');\n          if (!listItem) {\n            return null;\n          }\n\n          const treeElement =\n              (UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(listItem) as ElementsTreeElement | undefined);\n          if (!treeElement) {\n            return null;\n          }\n          return treeElement.node();\n        });\n\n    this.updateRecords = new Map();\n    this.treeElementsBeingUpdated = new Set();\n\n    this.decoratorExtensions = null;\n\n    this.showHTMLCommentsSetting = Common.Settings.Settings.instance().moduleSetting('showHTMLComments');\n    this.showHTMLCommentsSetting.addChangeListener(this.onShowHTMLCommentsChange.bind(this));\n    this.setUseLightSelectionColor(true);\n  }\n\n  static forDOMModel(domModel: SDK.DOMModel.DOMModel): ElementsTreeOutline|null {\n    return elementsTreeOutlineByDOMModel.get(domModel) || null;\n  }\n\n  private onShowHTMLCommentsChange(): void {\n    const selectedNode = this.selectedDOMNode();\n    if (selectedNode && selectedNode.nodeType() === Node.COMMENT_NODE && !this.showHTMLCommentsSetting.get()) {\n      this.selectDOMNode(selectedNode.parentNode);\n    }\n    this.update();\n  }\n\n  setWordWrap(wrap: boolean): void {\n    this.elementInternal.classList.toggle('elements-tree-nowrap', !wrap);\n  }\n\n  setMultilineEditing(multilineEditing: MultilineEditorController|null): void {\n    this.multilineEditing = multilineEditing;\n  }\n\n  visibleWidth(): number {\n    return this.visibleWidthInternal || 0;\n  }\n\n  setVisibleWidth(width: number): void {\n    this.visibleWidthInternal = width;\n    if (this.multilineEditing) {\n      this.multilineEditing.resize();\n    }\n  }\n\n  private setClipboardData(data: ClipboardData|null): void {\n    if (this.clipboardNodeData) {\n      const treeElement = this.findTreeElement(this.clipboardNodeData.node);\n      if (treeElement) {\n        treeElement.setInClipboard(false);\n      }\n      delete this.clipboardNodeData;\n    }\n\n    if (data) {\n      const treeElement = this.findTreeElement(data.node);\n      if (treeElement) {\n        treeElement.setInClipboard(true);\n      }\n      this.clipboardNodeData = data;\n    }\n  }\n\n  resetClipboardIfNeeded(removedNode: SDK.DOMModel.DOMNode): void {\n    if (this.clipboardNodeData && this.clipboardNodeData.node === removedNode) {\n      this.setClipboardData(null);\n    }\n  }\n\n  private onBeforeCopy(event: Event): void {\n    event.handled = true;\n  }\n\n  private onCopyOrCut(isCut: boolean, event: Event): void {\n    this.setClipboardData(null);\n    // @ts-ignore this bound in the main entry point\n    const originalEvent = event['original'];\n\n    if (!originalEvent || !originalEvent.target) {\n      return;\n    }\n\n    // Don't prevent the normal copy if the user has a selection.\n    if (originalEvent.target instanceof Node && originalEvent.target.hasSelection()) {\n      return;\n    }\n\n    // Do not interfere with text editing.\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    const targetNode = this.selectedDOMNode();\n    if (!targetNode) {\n      return;\n    }\n\n    if (!originalEvent.clipboardData) {\n      return;\n    }\n    originalEvent.clipboardData.clearData();\n    event.handled = true;\n\n    this.performCopyOrCut(isCut, targetNode);\n  }\n\n  performCopyOrCut(isCut: boolean, node: SDK.DOMModel.DOMNode|null): void {\n    if (!node) {\n      return;\n    }\n    if (isCut && (node.isShadowRoot() || node.ancestorUserAgentShadowRoot())) {\n      return;\n    }\n\n    void node.copyNode();\n    this.setClipboardData({node: node, isCut: isCut});\n  }\n\n  canPaste(targetNode: SDK.DOMModel.DOMNode): boolean {\n    if (targetNode.isShadowRoot() || targetNode.ancestorUserAgentShadowRoot()) {\n      return false;\n    }\n\n    if (!this.clipboardNodeData) {\n      return false;\n    }\n\n    const node = this.clipboardNodeData.node;\n    if (this.clipboardNodeData.isCut && (node === targetNode || node.isAncestor(targetNode))) {\n      return false;\n    }\n\n    if (targetNode.domModel() !== node.domModel()) {\n      return false;\n    }\n    return true;\n  }\n\n  pasteNode(targetNode: SDK.DOMModel.DOMNode): void {\n    if (this.canPaste(targetNode)) {\n      this.performPaste(targetNode);\n    }\n  }\n\n  duplicateNode(targetNode: SDK.DOMModel.DOMNode): void {\n    this.performDuplicate(targetNode);\n  }\n\n  private onPaste(event: Event): void {\n    // Do not interfere with text editing.\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    const targetNode = this.selectedDOMNode();\n    if (!targetNode || !this.canPaste(targetNode)) {\n      return;\n    }\n\n    event.handled = true;\n    this.performPaste(targetNode);\n  }\n\n  private performPaste(targetNode: SDK.DOMModel.DOMNode): void {\n    if (!this.clipboardNodeData) {\n      return;\n    }\n    if (this.clipboardNodeData.isCut) {\n      this.clipboardNodeData.node.moveTo(targetNode, null, expandCallback.bind(this));\n      this.setClipboardData(null);\n    } else {\n      this.clipboardNodeData.node.copyTo(targetNode, null, expandCallback.bind(this));\n    }\n\n    function expandCallback(\n        this: ElementsTreeOutline, error: string|null, pastedNode: SDK.DOMModel.DOMNode|null): void {\n      if (error || !pastedNode) {\n        return;\n      }\n      this.selectDOMNode(pastedNode);\n    }\n  }\n\n  private performDuplicate(targetNode: SDK.DOMModel.DOMNode): void {\n    if (targetNode.isInShadowTree()) {\n      return;\n    }\n\n    const parentNode = targetNode.parentNode ? targetNode.parentNode : targetNode;\n    if (parentNode.nodeName() === '#document') {\n      return;\n    }\n\n    targetNode.copyTo(parentNode, targetNode.nextSibling);\n  }\n\n  setVisible(visible: boolean): void {\n    if (visible === this.visible) {\n      return;\n    }\n    this.visible = visible;\n    if (!this.visible) {\n      this.imagePreviewPopover.hide();\n      if (this.multilineEditing) {\n        this.multilineEditing.cancel();\n      }\n      return;\n    }\n\n    this.runPendingUpdates();\n    if (this.selectedDOMNodeInternal) {\n      this.revealAndSelectNode(this.selectedDOMNodeInternal, false);\n    }\n  }\n\n  get rootDOMNode(): SDK.DOMModel.DOMNode|null {\n    return this.rootDOMNodeInternal;\n  }\n\n  set rootDOMNode(x: SDK.DOMModel.DOMNode|null) {\n    if (this.rootDOMNodeInternal === x) {\n      return;\n    }\n\n    this.rootDOMNodeInternal = x;\n\n    this.isXMLMimeTypeInternal = x && x.isXMLNode();\n\n    this.update();\n  }\n\n  get isXMLMimeType(): boolean {\n    return Boolean(this.isXMLMimeTypeInternal);\n  }\n\n  selectedDOMNode(): SDK.DOMModel.DOMNode|null {\n    return this.selectedDOMNodeInternal;\n  }\n\n  selectDOMNode(node: SDK.DOMModel.DOMNode|null, focus?: boolean): void {\n    if (this.selectedDOMNodeInternal === node) {\n      this.revealAndSelectNode(node, !focus);\n      return;\n    }\n\n    this.selectedDOMNodeInternal = node;\n    this.revealAndSelectNode(node, !focus);\n\n    // The revealAndSelectNode() method might find a different element if there is inlined text,\n    // and the select() call would change the selectedDOMNode and reenter this setter. So to\n    // avoid calling selectedNodeChanged() twice, first check if selectedDOMNodeInternal is the same\n    // node as the one passed in.\n    if (this.selectedDOMNodeInternal === node) {\n      this.selectedNodeChanged(Boolean(focus));\n    }\n  }\n\n  editing(): boolean {\n    const node = this.selectedDOMNode();\n    if (!node) {\n      return false;\n    }\n    const treeElement = this.findTreeElement(node);\n    if (!treeElement) {\n      return false;\n    }\n    return treeElement.isEditing() || false;\n  }\n\n  update(): void {\n    const selectedNode = this.selectedDOMNode();\n    this.removeChildren();\n    if (!this.rootDOMNode) {\n      return;\n    }\n\n    if (this.includeRootDOMNode) {\n      const treeElement = this.createElementTreeElement(this.rootDOMNode);\n      this.appendChild(treeElement);\n    } else {\n      // FIXME: this could use findTreeElement to reuse a tree element if it already exists\n      const children = this.visibleChildren(this.rootDOMNode);\n      for (const child of children) {\n        const treeElement = this.createElementTreeElement(child);\n        this.appendChild(treeElement);\n      }\n    }\n\n    if (selectedNode) {\n      this.revealAndSelectNode(selectedNode, true);\n    }\n  }\n\n  selectedNodeChanged(focus: boolean): void {\n    this.dispatchEventToListeners(\n        ElementsTreeOutline.Events.SelectedNodeChanged, {node: this.selectedDOMNodeInternal, focus: focus});\n  }\n\n  private fireElementsTreeUpdated(nodes: SDK.DOMModel.DOMNode[]): void {\n    this.dispatchEventToListeners(ElementsTreeOutline.Events.ElementsTreeUpdated, nodes);\n  }\n\n  findTreeElement(node: SDK.DOMModel.DOMNode): ElementsTreeElement|null {\n    let treeElement = this.lookUpTreeElement(node);\n    if (!treeElement && node.nodeType() === Node.TEXT_NODE) {\n      // The text node might have been inlined if it was short, so try to find the parent element.\n      treeElement = this.lookUpTreeElement(node.parentNode);\n    }\n\n    return treeElement as ElementsTreeElement | null;\n  }\n\n  private lookUpTreeElement(node: SDK.DOMModel.DOMNode|null): UI.TreeOutline.TreeElement|null {\n    if (!node) {\n      return null;\n    }\n\n    const cachedElement = this.treeElementByNode.get(node);\n    if (cachedElement) {\n      return cachedElement;\n    }\n\n    // Walk up the parent pointers from the desired node\n    const ancestors = [];\n    let currentNode;\n    for (currentNode = node.parentNode; currentNode; currentNode = currentNode.parentNode) {\n      ancestors.push(currentNode);\n      if (this.treeElementByNode.has(currentNode)) {  // stop climbing as soon as we hit\n        break;\n      }\n    }\n\n    if (!currentNode) {\n      return null;\n    }\n\n    // Walk down to populate each ancestor's children, to fill in the tree and the cache.\n    for (let i = ancestors.length - 1; i >= 0; --i) {\n      const child = ancestors[i - 1] || node;\n      const treeElement = this.treeElementByNode.get(ancestors[i]);\n      if (treeElement) {\n        void treeElement.onpopulate();  // fill the cache with the children of treeElement\n        if (child.index && child.index >= treeElement.expandedChildrenLimit()) {\n          this.setExpandedChildrenLimit(treeElement, child.index + 1);\n        }\n      }\n    }\n\n    return this.treeElementByNode.get(node) || null;\n  }\n\n  createTreeElementFor(node: SDK.DOMModel.DOMNode): ElementsTreeElement|null {\n    let treeElement = this.findTreeElement(node);\n    if (treeElement) {\n      return treeElement;\n    }\n    if (!node.parentNode) {\n      return null;\n    }\n\n    treeElement = this.createTreeElementFor(node.parentNode);\n    return treeElement ? this.showChild(treeElement, node) : null;\n  }\n\n  private revealAndSelectNode(node: SDK.DOMModel.DOMNode|null, omitFocus: boolean): void {\n    if (this.suppressRevealAndSelect) {\n      return;\n    }\n\n    if (!this.includeRootDOMNode && node === this.rootDOMNode && this.rootDOMNode) {\n      node = this.rootDOMNode.firstChild;\n    }\n    if (!node) {\n      return;\n    }\n    const treeElement = this.createTreeElementFor(node);\n    if (!treeElement) {\n      return;\n    }\n\n    treeElement.revealAndSelect(omitFocus);\n  }\n\n  treeElementFromEventInternal(event: MouseEvent): UI.TreeOutline.TreeElement|null {\n    const scrollContainer = this.element.parentElement;\n    if (!scrollContainer) {\n      return null;\n    }\n    // We choose this X coordinate based on the knowledge that our list\n    // items extend at least to the right edge of the outer <ol> container.\n    // In the no-word-wrap mode the outer <ol> may be wider than the tree container\n    // (and partially hidden), in which case we are left to use only its right boundary.\n    // We use .clientWidth to account for possible scrollbar, and subtract 6px\n    // for the width of the split widget (see splitWidget.css).\n    const x = scrollContainer.totalOffsetLeft() + scrollContainer.clientWidth - 6;\n\n    const y = event.pageY;\n\n    // Our list items have 1-pixel cracks between them vertically. We avoid\n    // the cracks by checking slightly above and slightly below the mouse\n    // and seeing if we hit the same element each time.\n    const elementUnderMouse = this.treeElementFromPoint(x, y);\n    const elementAboveMouse = this.treeElementFromPoint(x, y - 2);\n    let element;\n    if (elementUnderMouse === elementAboveMouse) {\n      element = elementUnderMouse;\n    } else {\n      element = this.treeElementFromPoint(x, y + 2);\n    }\n\n    return element;\n  }\n\n  private onfocusout(_event: Event): void {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n\n  private onmousedown(event: MouseEvent): void {\n    const element = this.treeElementFromEventInternal(event);\n\n    if (!element || element.isEventWithinDisclosureTriangle(event)) {\n      return;\n    }\n\n    element.select();\n  }\n\n  setHoverEffect(treeElement: UI.TreeOutline.TreeElement|null): void {\n    if (this.previousHoveredElement === treeElement) {\n      return;\n    }\n\n    if (this.previousHoveredElement instanceof ElementsTreeElement) {\n      this.previousHoveredElement.hovered = false;\n      delete this.previousHoveredElement;\n    }\n\n    if (treeElement instanceof ElementsTreeElement) {\n      treeElement.hovered = true;\n      this.previousHoveredElement = treeElement;\n    }\n  }\n\n  private onmousemove(event: MouseEvent): void {\n    const element = this.treeElementFromEventInternal(event);\n    if (element && this.previousHoveredElement === element) {\n      return;\n    }\n\n    this.setHoverEffect(element);\n    this.highlightTreeElement(\n        (element as UI.TreeOutline.TreeElement), !UI.KeyboardShortcut.KeyboardShortcut.eventHasEitherCtrlOrMeta(event));\n  }\n\n  private highlightTreeElement(element: UI.TreeOutline.TreeElement, showInfo: boolean): void {\n    if (element instanceof ElementsTreeElement) {\n      element.node().domModel().overlayModel().highlightInOverlay(\n          {node: element.node(), selectorList: undefined}, 'all', showInfo);\n      return;\n    }\n\n    if (element instanceof ShortcutTreeElement) {\n      element.domModel().overlayModel().highlightInOverlay(\n          {deferredNode: element.deferredNode(), selectorList: undefined}, 'all', showInfo);\n    }\n  }\n\n  private onmouseleave(_event: MouseEvent): void {\n    this.setHoverEffect(null);\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n\n  private ondragstart(event: DragEvent): boolean|undefined {\n    const node = (event.target as Node | null);\n    if (!node || node.hasSelection()) {\n      return false;\n    }\n    if (node.nodeName === 'A') {\n      return false;\n    }\n\n    const treeElement = this.validDragSourceOrTarget(this.treeElementFromEventInternal(event));\n    if (!treeElement) {\n      return false;\n    }\n\n    if (treeElement.node().nodeName() === 'BODY' || treeElement.node().nodeName() === 'HEAD') {\n      return false;\n    }\n\n    if (!event.dataTransfer || !treeElement.listItemElement.textContent) {\n      return;\n    }\n    event.dataTransfer.setData('text/plain', treeElement.listItemElement.textContent.replace(/\\u200b/g, ''));\n    event.dataTransfer.effectAllowed = 'copyMove';\n    this.treeElementBeingDragged = treeElement;\n\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n\n    return true;\n  }\n\n  private ondragover(event: DragEvent): boolean {\n    if (!this.treeElementBeingDragged) {\n      return false;\n    }\n\n    const treeElement = this.validDragSourceOrTarget(this.treeElementFromEventInternal(event));\n    if (!treeElement) {\n      return false;\n    }\n\n    let node: (SDK.DOMModel.DOMNode|null) = (treeElement.node() as SDK.DOMModel.DOMNode | null);\n    while (node) {\n      if (node === this.treeElementBeingDragged.nodeInternal) {\n        return false;\n      }\n      node = node.parentNode;\n    }\n\n    treeElement.listItemElement.classList.add('elements-drag-over');\n    this.dragOverTreeElement = treeElement;\n    event.preventDefault();\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'move';\n    }\n    return false;\n  }\n\n  private ondragleave(event: DragEvent): boolean {\n    this.clearDragOverTreeElementMarker();\n    event.preventDefault();\n    return false;\n  }\n\n  private validDragSourceOrTarget(treeElement: UI.TreeOutline.TreeElement|null): ElementsTreeElement|null {\n    if (!treeElement) {\n      return null;\n    }\n\n    if (!(treeElement instanceof ElementsTreeElement)) {\n      return null;\n    }\n    const elementsTreeElement = (treeElement as ElementsTreeElement);\n\n    const node = elementsTreeElement.node();\n    if (!node.parentNode || node.parentNode.nodeType() !== Node.ELEMENT_NODE) {\n      return null;\n    }\n\n    return elementsTreeElement;\n  }\n\n  private ondrop(event: DragEvent): void {\n    event.preventDefault();\n    const treeElement = this.treeElementFromEventInternal(event);\n    if (treeElement instanceof ElementsTreeElement) {\n      this.doMove(treeElement);\n    }\n  }\n\n  private doMove(treeElement: ElementsTreeElement): void {\n    if (!this.treeElementBeingDragged) {\n      return;\n    }\n\n    let parentNode;\n    let anchorNode;\n\n    if (treeElement.isClosingTag()) {\n      // Drop onto closing tag -> insert as last child.\n      parentNode = treeElement.node();\n    } else {\n      const dragTargetNode = treeElement.node();\n      parentNode = dragTargetNode.parentNode;\n      anchorNode = dragTargetNode;\n    }\n\n    if (!parentNode || !anchorNode) {\n      return;\n    }\n    const wasExpanded = this.treeElementBeingDragged.expanded;\n    this.treeElementBeingDragged.nodeInternal.moveTo(\n        parentNode, anchorNode, this.selectNodeAfterEdit.bind(this, wasExpanded));\n\n    delete this.treeElementBeingDragged;\n  }\n\n  private ondragend(event: DragEvent): void {\n    event.preventDefault();\n    this.clearDragOverTreeElementMarker();\n    delete this.treeElementBeingDragged;\n  }\n\n  private clearDragOverTreeElementMarker(): void {\n    if (this.dragOverTreeElement) {\n      this.dragOverTreeElement.listItemElement.classList.remove('elements-drag-over');\n      delete this.dragOverTreeElement;\n    }\n  }\n\n  private contextMenuEventFired(event: MouseEvent): void {\n    const treeElement = this.treeElementFromEventInternal(event);\n    if (treeElement instanceof ElementsTreeElement) {\n      this.showContextMenu(treeElement, event);\n    }\n  }\n\n  showContextMenu(treeElement: ElementsTreeElement, event: Event): void {\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const isPseudoElement = Boolean(treeElement.node().pseudoType());\n    const isTag = treeElement.node().nodeType() === Node.ELEMENT_NODE && !isPseudoElement;\n    const node = (event.target as Node | null);\n    if (!node) {\n      return;\n    }\n    let textNode: Element|null = node.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n    if (textNode && textNode.classList.contains('bogus')) {\n      textNode = null;\n    }\n    const commentNode = node.enclosingNodeOrSelfWithClass('webkit-html-comment');\n    contextMenu.saveSection().appendItem(\n        i18nString(UIStrings.storeAsGlobalVariable), this.saveNodeToTempVariable.bind(this, treeElement.node()));\n    if (textNode) {\n      treeElement.populateTextContextMenu(contextMenu, textNode);\n    } else if (isTag) {\n      treeElement.populateTagContextMenu(contextMenu, event);\n    } else if (commentNode) {\n      treeElement.populateNodeContextMenu(contextMenu);\n    } else if (isPseudoElement) {\n      treeElement.populateScrollIntoView(contextMenu);\n    }\n\n    contextMenu.viewSection().appendItem(i18nString(UIStrings.adornerSettings), () => {\n      ElementsPanel.instance().showAdornerSettingsPane();\n    });\n\n    contextMenu.appendApplicableItems(treeElement.node());\n    void contextMenu.show();\n  }\n\n  private async saveNodeToTempVariable(node: SDK.DOMModel.DOMNode): Promise<void> {\n    const remoteObjectForConsole = await node.resolveToObject();\n    await SDK.ConsoleModel.ConsoleModel.instance().saveToTempVariable(\n        UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext), remoteObjectForConsole);\n  }\n\n  runPendingUpdates(): void {\n    this.updateModifiedNodes();\n  }\n\n  private onKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n    const node = this.selectedDOMNode();\n    if (!node) {\n      return;\n    }\n    const treeElement = this.treeElementByNode.get(node);\n    if (!treeElement) {\n      return;\n    }\n\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(keyboardEvent) && node.parentNode) {\n      if (keyboardEvent.key === 'ArrowUp' && node.previousSibling) {\n        node.moveTo(node.parentNode, node.previousSibling, this.selectNodeAfterEdit.bind(this, treeElement.expanded));\n        keyboardEvent.consume(true);\n        return;\n      }\n      if (keyboardEvent.key === 'ArrowDown' && node.nextSibling) {\n        node.moveTo(\n            node.parentNode, node.nextSibling.nextSibling, this.selectNodeAfterEdit.bind(this, treeElement.expanded));\n        keyboardEvent.consume(true);\n        return;\n      }\n    }\n  }\n\n  toggleEditAsHTML(node: SDK.DOMModel.DOMNode, startEditing?: boolean, callback?: (() => void)): void {\n    const treeElement = this.treeElementByNode.get(node);\n    if (!treeElement || !treeElement.hasEditableNode()) {\n      return;\n    }\n\n    if (node.pseudoType()) {\n      return;\n    }\n\n    const parentNode = node.parentNode;\n    const index = node.index;\n    const wasExpanded = treeElement.expanded;\n\n    treeElement.toggleEditAsHTML(editingFinished.bind(this), startEditing);\n\n    function editingFinished(this: ElementsTreeOutline, success: boolean): void {\n      if (callback) {\n        callback();\n      }\n      if (!success) {\n        return;\n      }\n\n      // Select it and expand if necessary. We force tree update so that it processes dom events and is up to date.\n      this.runPendingUpdates();\n\n      if (!index) {\n        return;\n      }\n\n      const children = parentNode && parentNode.children();\n      const newNode = children ? children[index] || parentNode : parentNode;\n      if (!newNode) {\n        return;\n      }\n\n      this.selectDOMNode(newNode, true);\n\n      if (wasExpanded) {\n        const newTreeItem = this.findTreeElement(newNode);\n        if (newTreeItem) {\n          newTreeItem.expand();\n        }\n      }\n    }\n  }\n\n  selectNodeAfterEdit(wasExpanded: boolean, error: string|null, newNode: SDK.DOMModel.DOMNode|null): ElementsTreeElement\n      |null {\n    if (error) {\n      return null;\n    }\n\n    // Select it and expand if necessary. We force tree update so that it processes dom events and is up to date.\n    this.runPendingUpdates();\n\n    if (!newNode) {\n      return null;\n    }\n\n    this.selectDOMNode(newNode, true);\n\n    const newTreeItem = this.findTreeElement(newNode);\n    if (wasExpanded) {\n      if (newTreeItem) {\n        newTreeItem.expand();\n      }\n    }\n    return newTreeItem;\n  }\n\n  /**\n   * Runs a script on the node's remote object that toggles a class name on\n   * the node and injects a stylesheet into the head of the node's document\n   * containing a rule to set \"visibility: hidden\" on the class and all it's\n   * ancestors.\n   */\n  async toggleHideElement(node: SDK.DOMModel.DOMNode): Promise<void> {\n    const pseudoType = node.pseudoType();\n    const effectiveNode = pseudoType ? node.parentNode : node;\n    if (!effectiveNode) {\n      return;\n    }\n\n    const hidden = node.marker('hidden-marker');\n    const object = await effectiveNode.resolveToObject('');\n\n    if (!object) {\n      return;\n    }\n\n    await object.callFunction(\n        (toggleClassAndInjectStyleRule as (this: Object, ...arg1: unknown[]) => void),\n        [{value: pseudoType}, {value: !hidden}]);\n    object.release();\n    node.setMarker('hidden-marker', hidden ? null : true);\n\n    function toggleClassAndInjectStyleRule(this: Element, pseudoType: string|null, hidden: boolean): void {\n      const classNamePrefix = '__web-inspector-hide';\n      const classNameSuffix = '-shortcut__';\n      const styleTagId = '__web-inspector-hide-shortcut-style__';\n      const selectors = [];\n      selectors.push('.__web-inspector-hide-shortcut__');\n      selectors.push('.__web-inspector-hide-shortcut__ *');\n      selectors.push('.__web-inspector-hidebefore-shortcut__::before');\n      selectors.push('.__web-inspector-hideafter-shortcut__::after');\n      const selector = selectors.join(', ');\n      const ruleBody = '    visibility: hidden !important;';\n      const rule = '\\n' + selector + '\\n{\\n' + ruleBody + '\\n}\\n';\n      const className = classNamePrefix + (pseudoType || '') + classNameSuffix;\n      this.classList.toggle(className, hidden);\n\n      let localRoot: Element|HTMLHeadElement = this;\n      while (localRoot.parentNode) {\n        localRoot = (localRoot.parentNode as Element);\n      }\n      if (localRoot.nodeType === Node.DOCUMENT_NODE) {\n        localRoot = document.head;\n      }\n\n      let style = localRoot.querySelector('style#' + styleTagId);\n      if (style) {\n        return;\n      }\n\n      style = document.createElement('style');\n      style.id = styleTagId;\n      style.textContent = rule;\n\n      localRoot.appendChild(style);\n    }\n  }\n\n  isToggledToHidden(node: SDK.DOMModel.DOMNode): boolean {\n    return Boolean(node.marker('hidden-marker'));\n  }\n\n  private reset(): void {\n    this.rootDOMNode = null;\n    this.selectDOMNode(null, false);\n    this.imagePreviewPopover.hide();\n    delete this.clipboardNodeData;\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    this.updateRecords.clear();\n  }\n\n  wireToDOMModel(domModel: SDK.DOMModel.DOMModel): void {\n    elementsTreeOutlineByDOMModel.set(domModel, this);\n    domModel.addEventListener(SDK.DOMModel.Events.MarkersChanged, this.markersChanged, this);\n    domModel.addEventListener(SDK.DOMModel.Events.NodeInserted, this.nodeInserted, this);\n    domModel.addEventListener(SDK.DOMModel.Events.NodeRemoved, this.nodeRemoved, this);\n    domModel.addEventListener(SDK.DOMModel.Events.AttrModified, this.attributeModified, this);\n    domModel.addEventListener(SDK.DOMModel.Events.AttrRemoved, this.attributeRemoved, this);\n    domModel.addEventListener(SDK.DOMModel.Events.CharacterDataModified, this.characterDataModified, this);\n    domModel.addEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdated, this);\n    domModel.addEventListener(SDK.DOMModel.Events.ChildNodeCountUpdated, this.childNodeCountUpdated, this);\n    domModel.addEventListener(SDK.DOMModel.Events.DistributedNodesChanged, this.distributedNodesChanged, this);\n    domModel.addEventListener(SDK.DOMModel.Events.TopLayerElementsChanged, this.topLayerElementsChanged, this);\n  }\n\n  unwireFromDOMModel(domModel: SDK.DOMModel.DOMModel): void {\n    domModel.removeEventListener(SDK.DOMModel.Events.MarkersChanged, this.markersChanged, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.NodeInserted, this.nodeInserted, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.NodeRemoved, this.nodeRemoved, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.AttrModified, this.attributeModified, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.AttrRemoved, this.attributeRemoved, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.CharacterDataModified, this.characterDataModified, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdated, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.ChildNodeCountUpdated, this.childNodeCountUpdated, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.DistributedNodesChanged, this.distributedNodesChanged, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.TopLayerElementsChanged, this.topLayerElementsChanged, this);\n    elementsTreeOutlineByDOMModel.delete(domModel);\n  }\n\n  private addUpdateRecord(node: SDK.DOMModel.DOMNode): UpdateRecord {\n    let record = this.updateRecords.get(node);\n    if (!record) {\n      record = new UpdateRecord();\n      this.updateRecords.set(node, record);\n    }\n    return record;\n  }\n\n  private updateRecordForHighlight(node: SDK.DOMModel.DOMNode): UpdateRecord|null {\n    if (!this.visible) {\n      return null;\n    }\n    return this.updateRecords.get(node) || null;\n  }\n\n  private documentUpdated(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMModel>): void {\n    const domModel = event.data;\n    this.reset();\n    if (domModel.existingDocument()) {\n      this.rootDOMNode = domModel.existingDocument();\n    }\n  }\n\n  private attributeModified(event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode, name: string}>):\n      void {\n    const {node} = event.data;\n    this.addUpdateRecord(node).attributeModified(event.data.name);\n    this.updateModifiedNodesSoon();\n  }\n\n  private attributeRemoved(event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode, name: string}>):\n      void {\n    const {node} = event.data;\n    this.addUpdateRecord(node).attributeRemoved(event.data.name);\n    this.updateModifiedNodesSoon();\n  }\n\n  private characterDataModified(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    this.addUpdateRecord(node).charDataModified();\n    // Text could be large and force us to render itself as the child in the tree outline.\n    if (node.parentNode && node.parentNode.firstChild === node.parentNode.lastChild) {\n      this.addUpdateRecord(node.parentNode).childrenModified();\n    }\n    this.updateModifiedNodesSoon();\n  }\n\n  private nodeInserted(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    this.addUpdateRecord((node.parentNode as SDK.DOMModel.DOMNode)).nodeInserted(node);\n    this.updateModifiedNodesSoon();\n  }\n\n  private nodeRemoved(\n      event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode, parent: SDK.DOMModel.DOMNode}>): void {\n    const {node, parent} = event.data;\n    this.resetClipboardIfNeeded(node);\n    this.addUpdateRecord(parent).nodeRemoved(node);\n    this.updateModifiedNodesSoon();\n  }\n\n  private childNodeCountUpdated(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    this.addUpdateRecord(node).childrenModified();\n    this.updateModifiedNodesSoon();\n  }\n\n  private distributedNodesChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    this.addUpdateRecord(node).childrenModified();\n    this.updateModifiedNodesSoon();\n  }\n\n  private updateModifiedNodesSoon(): void {\n    if (!this.updateRecords.size) {\n      return;\n    }\n    if (this.updateModifiedNodesTimeout) {\n      return;\n    }\n    this.updateModifiedNodesTimeout = window.setTimeout(this.updateModifiedNodes.bind(this), 50);\n  }\n\n  private updateModifiedNodes(): void {\n    if (this.updateModifiedNodesTimeout) {\n      clearTimeout(this.updateModifiedNodesTimeout);\n      delete this.updateModifiedNodesTimeout;\n    }\n\n    const updatedNodes = [...this.updateRecords.keys()];\n    const hidePanelWhileUpdating = updatedNodes.length > 10;\n\n    let treeOutlineContainerElement;\n    let originalScrollTop;\n    if (hidePanelWhileUpdating) {\n      treeOutlineContainerElement = (this.element.parentNode as Element | null);\n      originalScrollTop = treeOutlineContainerElement ? treeOutlineContainerElement.scrollTop : 0;\n      this.elementInternal.classList.add('hidden');\n    }\n    const rootNodeUpdateRecords = this.rootDOMNodeInternal && this.updateRecords.get(this.rootDOMNodeInternal);\n    if (rootNodeUpdateRecords && rootNodeUpdateRecords.hasChangedChildren()) {\n      // Document's children have changed, perform total update.\n      this.update();\n    } else {\n      for (const [node, record] of this.updateRecords) {\n        if (record.hasChangedChildren()) {\n          this.updateModifiedParentNode((node as SDK.DOMModel.DOMNode));\n        } else {\n          this.updateModifiedNode((node as SDK.DOMModel.DOMNode));\n        }\n      }\n    }\n\n    if (hidePanelWhileUpdating) {\n      this.elementInternal.classList.remove('hidden');\n      if (treeOutlineContainerElement && originalScrollTop) {\n        treeOutlineContainerElement.scrollTop = originalScrollTop;\n      }\n    }\n\n    this.updateRecords.clear();\n    this.fireElementsTreeUpdated(updatedNodes);\n  }\n\n  private updateModifiedNode(node: SDK.DOMModel.DOMNode): void {\n    const treeElement = this.findTreeElement(node);\n    if (treeElement) {\n      treeElement.updateTitle(this.updateRecordForHighlight(node));\n    }\n  }\n\n  private updateModifiedParentNode(node: SDK.DOMModel.DOMNode): void {\n    const parentTreeElement = this.findTreeElement(node);\n    if (parentTreeElement) {\n      parentTreeElement.setExpandable(this.hasVisibleChildren(node));\n      parentTreeElement.updateTitle(this.updateRecordForHighlight(node));\n      if (populatedTreeElements.has(parentTreeElement)) {\n        this.updateChildren(parentTreeElement);\n      }\n    }\n  }\n\n  populateTreeElement(treeElement: ElementsTreeElement): Promise<void> {\n    if (treeElement.childCount() || !treeElement.isExpandable()) {\n      return Promise.resolve();\n    }\n\n    return new Promise<void>(resolve => {\n             treeElement.node().getChildNodes(() => {\n               populatedTreeElements.add(treeElement);\n               this.updateModifiedParentNode(treeElement.node());\n               resolve();\n             });\n           })\n        .then(() => {\n          if (treeElement.node().nodeName() === 'BODY') {\n            void this.createTopLayerContainer(treeElement);\n          }\n        });\n  }\n\n  async createTopLayerContainer(bodyElement: ElementsTreeElement): Promise<void> {\n    if (!this.topLayerContainer) {\n      this.topLayerContainer = new TopLayerContainer(bodyElement);\n    }\n    this.topLayerContainer.updateBody(bodyElement);\n    await this.updateTopLayerContainer();\n  }\n\n  async updateTopLayerContainer(): Promise<void> {\n    if (this.topLayerContainer) {\n      const bodyElement = this.topLayerContainer.bodyElement;\n      if (!bodyElement.children().includes(this.topLayerContainer) && !this.topLayerContainer.parent &&\n          !this.topLayerContainer.treeOutline) {\n        bodyElement.insertChild(this.topLayerContainer, bodyElement.childCount() - 1);\n      }\n      this.topLayerContainer.removeChildren();\n      const topLayerElementsExists = await this.topLayerContainer.addTopLayerElementsAsChildren();\n      if (!topLayerElementsExists) {\n        bodyElement.removeChild(this.topLayerContainer);\n      }\n    }\n  }\n\n  private createElementTreeElement(node: SDK.DOMModel.DOMNode, isClosingTag?: boolean): ElementsTreeElement {\n    const treeElement = new ElementsTreeElement(node, isClosingTag);\n    treeElement.setExpandable(!isClosingTag && this.hasVisibleChildren(node));\n    if (node.nodeType() === Node.ELEMENT_NODE && node.parentNode && node.parentNode.nodeType() === Node.DOCUMENT_NODE &&\n        !node.parentNode.parentNode) {\n      treeElement.setCollapsible(false);\n    }\n\n    if (node.hasAssignedSlot()) {\n      treeElement.createSlotLink(node.assignedSlot);\n    }\n\n    treeElement.selectable = Boolean(this.selectEnabled);\n    return treeElement;\n  }\n\n  private showChild(treeElement: ElementsTreeElement, child: SDK.DOMModel.DOMNode): ElementsTreeElement|null {\n    if (treeElement.isClosingTag()) {\n      return null;\n    }\n\n    const index = this.visibleChildren(treeElement.node()).indexOf(child);\n    if (index === -1) {\n      return null;\n    }\n\n    if (index >= treeElement.expandedChildrenLimit()) {\n      this.setExpandedChildrenLimit(treeElement, index + 1);\n    }\n    return treeElement.childAt(index) as ElementsTreeElement;\n  }\n\n  private visibleChildren(node: SDK.DOMModel.DOMNode): SDK.DOMModel.DOMNode[] {\n    let visibleChildren = ElementsTreeElement.visibleShadowRoots(node);\n\n    const contentDocument = node.contentDocument();\n    if (contentDocument) {\n      visibleChildren.push(contentDocument);\n    }\n\n    const templateContent = node.templateContent();\n    if (templateContent) {\n      visibleChildren.push(templateContent);\n    }\n\n    visibleChildren.push(...node.pageTransitionPseudoElements());\n\n    const markerPseudoElement = node.markerPseudoElement();\n    if (markerPseudoElement) {\n      visibleChildren.push(markerPseudoElement);\n    }\n\n    const beforePseudoElement = node.beforePseudoElement();\n    if (beforePseudoElement) {\n      visibleChildren.push(beforePseudoElement);\n    }\n\n    if (node.childNodeCount()) {\n      // Children may be stale when the outline is not wired to receive DOMModel updates.\n      let children: SDK.DOMModel.DOMNode[] = node.children() || [];\n      if (!this.showHTMLCommentsSetting.get()) {\n        children = children.filter(n => n.nodeType() !== Node.COMMENT_NODE);\n      }\n      visibleChildren = visibleChildren.concat(children);\n    }\n\n    const afterPseudoElement = node.afterPseudoElement();\n    if (afterPseudoElement) {\n      visibleChildren.push(afterPseudoElement);\n    }\n\n    return visibleChildren;\n  }\n\n  private hasVisibleChildren(node: SDK.DOMModel.DOMNode): boolean {\n    if (node.isIframe()) {\n      return true;\n    }\n    if (node.isPortal()) {\n      return true;\n    }\n    if (node.contentDocument()) {\n      return true;\n    }\n    if (node.templateContent()) {\n      return true;\n    }\n    if (ElementsTreeElement.visibleShadowRoots(node).length) {\n      return true;\n    }\n    if (node.hasPseudoElements()) {\n      return true;\n    }\n    if (node.isInsertionPoint()) {\n      return true;\n    }\n    return Boolean(node.childNodeCount()) && !ElementsTreeElement.canShowInlineText(node);\n  }\n\n  private createExpandAllButtonTreeElement(treeElement: ElementsTreeElement): UI.TreeOutline.TreeElement {\n    const button = UI.UIUtils.createTextButton('', handleLoadAllChildren.bind(this));\n    button.value = '';\n    const expandAllButtonElement = new UI.TreeOutline.TreeElement(button);\n    expandAllButtonElement.selectable = false;\n    expandAllButtonElement.button = button;\n    return expandAllButtonElement;\n\n    function handleLoadAllChildren(this: ElementsTreeOutline, event: Event): void {\n      const visibleChildCount = this.visibleChildren(treeElement.node()).length;\n      this.setExpandedChildrenLimit(\n          treeElement, Math.max(visibleChildCount, treeElement.expandedChildrenLimit() + InitialChildrenLimit));\n      event.consume();\n    }\n  }\n\n  setExpandedChildrenLimit(treeElement: ElementsTreeElement, expandedChildrenLimit: number): void {\n    if (treeElement.expandedChildrenLimit() === expandedChildrenLimit) {\n      return;\n    }\n\n    treeElement.setExpandedChildrenLimit(expandedChildrenLimit);\n    if (treeElement.treeOutline && !this.treeElementsBeingUpdated.has(treeElement)) {\n      this.updateModifiedParentNode(treeElement.node());\n    }\n  }\n\n  private updateChildren(treeElement: ElementsTreeElement): void {\n    if (!treeElement.isExpandable()) {\n      if (!treeElement.treeOutline) {\n        return;\n      }\n      const selectedTreeElement = treeElement.treeOutline.selectedTreeElement;\n      if (selectedTreeElement && selectedTreeElement.hasAncestor(treeElement)) {\n        treeElement.select(true);\n      }\n      treeElement.removeChildren();\n      return;\n    }\n\n    console.assert(!treeElement.isClosingTag());\n\n    this.innerUpdateChildren(treeElement);\n  }\n\n  insertChildElement(\n      treeElement: ElementsTreeElement|TopLayerContainer, child: SDK.DOMModel.DOMNode, index: number,\n      isClosingTag?: boolean): ElementsTreeElement {\n    const newElement = this.createElementTreeElement(child, isClosingTag);\n    treeElement.insertChild(newElement, index);\n    return newElement;\n  }\n\n  private moveChild(treeElement: ElementsTreeElement, child: ElementsTreeElement, targetIndex: number): void {\n    if (treeElement.indexOfChild(child) === targetIndex) {\n      return;\n    }\n    const wasSelected = child.selected;\n    if (child.parent) {\n      child.parent.removeChild(child);\n    }\n    treeElement.insertChild(child, targetIndex);\n    if (wasSelected) {\n      child.select();\n    }\n  }\n\n  private innerUpdateChildren(treeElement: ElementsTreeElement): void {\n    if (this.treeElementsBeingUpdated.has(treeElement)) {\n      return;\n    }\n\n    this.treeElementsBeingUpdated.add(treeElement);\n\n    const node = treeElement.node();\n    const visibleChildren = this.visibleChildren(node);\n    const visibleChildrenSet = new Set<SDK.DOMModel.DOMNode>(visibleChildren);\n\n    // Remove any tree elements that no longer have this node as their parent and save\n    // all existing elements that could be reused. This also removes closing tag element.\n    const existingTreeElements = new Map<SDK.DOMModel.DOMNode, UI.TreeOutline.TreeElement&ElementsTreeElement>();\n    for (let i = treeElement.childCount() - 1; i >= 0; --i) {\n      const existingTreeElement = treeElement.childAt(i);\n      if (!(existingTreeElement instanceof ElementsTreeElement)) {\n        // Remove expand all button and shadow host toolbar.\n        treeElement.removeChildAtIndex(i);\n        continue;\n      }\n      const elementsTreeElement = (existingTreeElement as ElementsTreeElement);\n      const existingNode = elementsTreeElement.node();\n\n      if (visibleChildrenSet.has(existingNode)) {\n        existingTreeElements.set(existingNode, existingTreeElement);\n        continue;\n      }\n\n      treeElement.removeChildAtIndex(i);\n    }\n\n    for (let i = 0; i < visibleChildren.length && i < treeElement.expandedChildrenLimit(); ++i) {\n      const child = visibleChildren[i];\n      const existingTreeElement = existingTreeElements.get(child) || this.findTreeElement(child);\n      if (existingTreeElement && existingTreeElement !== treeElement) {\n        // If an existing element was found, just move it.\n        this.moveChild(treeElement, existingTreeElement, i);\n      } else {\n        // No existing element found, insert a new element.\n        const newElement = this.insertChildElement(treeElement, child, i);\n        if (this.updateRecordForHighlight(node) && treeElement.expanded) {\n          ElementsTreeElement.animateOnDOMUpdate(newElement);\n        }\n        // If a node was inserted in the middle of existing list dynamically we might need to increase the limit.\n        if (treeElement.childCount() > treeElement.expandedChildrenLimit()) {\n          this.setExpandedChildrenLimit(treeElement, treeElement.expandedChildrenLimit() + 1);\n        }\n      }\n    }\n\n    // Update expand all button.\n    const expandedChildCount = treeElement.childCount();\n    if (visibleChildren.length > expandedChildCount) {\n      const targetButtonIndex = expandedChildCount;\n      if (!treeElement.expandAllButtonElement) {\n        treeElement.expandAllButtonElement = this.createExpandAllButtonTreeElement(treeElement);\n      }\n      treeElement.insertChild(treeElement.expandAllButtonElement, targetButtonIndex);\n      treeElement.expandAllButtonElement.title =\n          i18nString(UIStrings.showAllNodesDMore, {PH1: visibleChildren.length - expandedChildCount});\n    } else if (treeElement.expandAllButtonElement) {\n      treeElement.expandAllButtonElement = null;\n    }\n\n    // Insert shortcuts to distributed children.\n    if (node.isInsertionPoint()) {\n      for (const distributedNode of node.distributedNodes()) {\n        treeElement.appendChild(new ShortcutTreeElement(distributedNode));\n      }\n    }\n\n    // Insert close tag.\n    if (node.nodeType() === Node.ELEMENT_NODE && !node.pseudoType() && treeElement.isExpandable()) {\n      this.insertChildElement(treeElement, node, treeElement.childCount(), true);\n    }\n\n    this.treeElementsBeingUpdated.delete(treeElement);\n  }\n\n  private markersChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    const treeElement = this.treeElementByNode.get(node);\n    if (treeElement) {\n      treeElement.updateDecorations();\n    }\n  }\n\n  private async topLayerElementsChanged(): Promise<void> {\n    await this.updateTopLayerContainer();\n  }\n\n  private static treeOutlineSymbol = Symbol('treeOutline');\n}\n\nexport namespace ElementsTreeOutline {\n  // TODO(crbug.com/1167717): Make this a const enum again\n  // eslint-disable-next-line rulesdir/const_enum\n  export enum Events {\n    SelectedNodeChanged = 'SelectedNodeChanged',\n    ElementsTreeUpdated = 'ElementsTreeUpdated',\n  }\n\n  export type EventTypes = {\n    [Events.SelectedNodeChanged]: {node: SDK.DOMModel.DOMNode|null, focus: boolean},\n    [Events.ElementsTreeUpdated]: SDK.DOMModel.DOMNode[],\n  };\n}\n\n// clang-format off\nexport const MappedCharToEntity = new Map<string, string>([\n  ['\\xA0', 'nbsp'],\n  ['\\xAD', 'shy'],\n  ['\\u2002', 'ensp'],\n  ['\\u2003', 'emsp'],\n  ['\\u2009', 'thinsp'],\n  ['\\u200A', 'hairsp'],\n  ['\\u200B', 'ZeroWidthSpace'],\n  ['\\u200C', 'zwnj'],\n  ['\\u200D', 'zwj'],\n  ['\\u200E', 'lrm'],\n  ['\\u200F', 'rlm'],\n  ['\\u202A', '#x202A'],\n  ['\\u202B', '#x202B'],\n  ['\\u202C', '#x202C'],\n  ['\\u202D', '#x202D'],\n  ['\\u202E', '#x202E'],\n  ['\\u2060', 'NoBreak'],\n  ['\\uFEFF', '#xFEFF'],\n]);\n// clang-format on\n\nexport class UpdateRecord {\n  private modifiedAttributes?: Set<string>;\n  private removedAttributes?: Set<string>;\n  private hasChangedChildrenInternal?: boolean;\n  private hasRemovedChildrenInternal?: boolean;\n  private charDataModifiedInternal?: boolean;\n\n  attributeModified(attrName: string): void {\n    if (this.removedAttributes && this.removedAttributes.has(attrName)) {\n      this.removedAttributes.delete(attrName);\n    }\n    if (!this.modifiedAttributes) {\n      this.modifiedAttributes = (new Set() as Set<string>);\n    }\n    this.modifiedAttributes.add(attrName);\n  }\n\n  attributeRemoved(attrName: string): void {\n    if (this.modifiedAttributes && this.modifiedAttributes.has(attrName)) {\n      this.modifiedAttributes.delete(attrName);\n    }\n    if (!this.removedAttributes) {\n      this.removedAttributes = (new Set() as Set<string>);\n    }\n    this.removedAttributes.add(attrName);\n  }\n\n  nodeInserted(_node: SDK.DOMModel.DOMNode): void {\n    this.hasChangedChildrenInternal = true;\n  }\n\n  nodeRemoved(_node: SDK.DOMModel.DOMNode): void {\n    this.hasChangedChildrenInternal = true;\n    this.hasRemovedChildrenInternal = true;\n  }\n\n  charDataModified(): void {\n    this.charDataModifiedInternal = true;\n  }\n\n  childrenModified(): void {\n    this.hasChangedChildrenInternal = true;\n  }\n\n  isAttributeModified(attributeName: string): boolean {\n    return this.modifiedAttributes !== null && this.modifiedAttributes !== undefined &&\n        this.modifiedAttributes.has(attributeName);\n  }\n\n  hasRemovedAttributes(): boolean {\n    return this.removedAttributes !== null && this.removedAttributes !== undefined &&\n        Boolean(this.removedAttributes.size);\n  }\n\n  isCharDataModified(): boolean {\n    return Boolean(this.charDataModifiedInternal);\n  }\n\n  hasChangedChildren(): boolean {\n    return Boolean(this.hasChangedChildrenInternal);\n  }\n\n  hasRemovedChildren(): boolean {\n    return Boolean(this.hasRemovedChildrenInternal);\n  }\n}\n\nlet rendererInstance: Renderer;\n\nexport class Renderer implements UI.UIUtils.Renderer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): Renderer {\n    const {forceNew} = opts;\n    if (!rendererInstance || forceNew) {\n      rendererInstance = new Renderer();\n    }\n    return rendererInstance;\n  }\n\n  async render(object: Object): Promise<{\n    node: Node,\n    tree: UI.TreeOutline.TreeOutline|null,\n  }|null> {\n    let node: SDK.DOMModel.DOMNode|(SDK.DOMModel.DOMNode | null)|null = null;\n\n    if (object instanceof SDK.DOMModel.DOMNode) {\n      node = (object as SDK.DOMModel.DOMNode);\n    } else if (object instanceof SDK.DOMModel.DeferredDOMNode) {\n      node = await (object as SDK.DOMModel.DeferredDOMNode).resolvePromise();\n    }\n\n    if (!node) {\n      // Can't render not-a-node, or couldn't resolve deferred node.\n      return null;\n    }\n\n    const treeOutline = new ElementsTreeOutline(\n        /* omitRootDOMNode: */ false, /* selectEnabled: */ true, /* hideGutter: */ true);\n    treeOutline.rootDOMNode = node;\n    const firstChild = treeOutline.firstChild();\n    if (firstChild && !firstChild.isExpandable()) {\n      treeOutline.element.classList.add('single-node');\n    }\n    treeOutline.setVisible(true);\n    // @ts-ignore used in console_test_runner\n    treeOutline.element.treeElementForTest = firstChild;\n    treeOutline.setShowSelectionOnKeyboardFocus(/* show: */ true, /* preventTabOrder: */ true);\n    return {node: treeOutline.element, tree: treeOutline};\n  }\n}\n\nexport class ShortcutTreeElement extends UI.TreeOutline.TreeElement {\n  private readonly nodeShortcut: SDK.DOMModel.DOMNodeShortcut;\n  private hoveredInternal?: boolean;\n  constructor(nodeShortcut: SDK.DOMModel.DOMNodeShortcut) {\n    super('');\n    this.listItemElement.createChild('div', 'selection fill');\n    const title = this.listItemElement.createChild('span', 'elements-tree-shortcut-title');\n    let text = nodeShortcut.nodeName.toLowerCase();\n    if (nodeShortcut.nodeType === Node.ELEMENT_NODE) {\n      text = '<' + text + '>';\n    }\n    title.textContent = '\\u21AA ' + text;\n\n    const link = (linkifyDeferredNodeReference(nodeShortcut.deferredNode) as Element);\n    UI.UIUtils.createTextChild(this.listItemElement, ' ');\n    link.classList.add('elements-tree-shortcut-link');\n    link.textContent = i18nString(UIStrings.reveal);\n    this.listItemElement.appendChild(link);\n    this.nodeShortcut = nodeShortcut;\n  }\n\n  get hovered(): boolean {\n    return Boolean(this.hoveredInternal);\n  }\n\n  set hovered(x: boolean) {\n    if (this.hoveredInternal === x) {\n      return;\n    }\n    this.hoveredInternal = x;\n    this.listItemElement.classList.toggle('hovered', x);\n  }\n\n  deferredNode(): SDK.DOMModel.DeferredDOMNode {\n    return this.nodeShortcut.deferredNode;\n  }\n\n  domModel(): SDK.DOMModel.DOMModel {\n    return this.nodeShortcut.deferredNode.domModel();\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    if (!selectedByUser) {\n      return true;\n    }\n    this.nodeShortcut.deferredNode.highlight();\n    this.nodeShortcut.deferredNode.resolve(resolved.bind(this));\n    function resolved(this: ShortcutTreeElement, node: SDK.DOMModel.DOMNode|null): void {\n      if (node && this.treeOutline instanceof ElementsTreeOutline) {\n        this.treeOutline.selectedDOMNodeInternal = node;\n        this.treeOutline.selectedNodeChanged(false);\n      }\n    }\n    return true;\n  }\n}\n\nexport interface MultilineEditorController {\n  cancel: () => void;\n  commit: () => void;\n  resize: () => void;\n}\n\nexport interface ClipboardData {\n  node: SDK.DOMModel.DOMNode;\n  isCut: boolean;\n}\n"]}