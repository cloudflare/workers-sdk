{"version":3,"file":"ElementStatePaneWidget.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ElementStatePaneWidget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ElementsPanel} from './ElementsPanel.js';\nimport elementStatePaneWidgetStyles from './elementStatePaneWidget.css.js';\n\nconst UIStrings = {\n  /**\n  * @description Title of a section in the Element State Pane Widget of the Elements panel. The\n  * controls in this section allow users to force a particular state on the selected element, e.g. a\n  * focused state via :focus or a hover state via :hover.\n  */\n  forceElementState: 'Force element state',\n  /**\n  * @description Tooltip text in Element State Pane Widget of the Elements panel. For a button that\n  * opens a tool that toggles the various states of the selected element on/off.\n  */\n  toggleElementState: 'Toggle Element State',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementStatePaneWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ElementStatePaneWidget extends UI.Widget.Widget {\n  private readonly inputs: HTMLInputElement[];\n  private readonly inputStates: WeakMap<HTMLInputElement, string>;\n  private cssModel?: SDK.CSSModel.CSSModel|null;\n  constructor() {\n    super(true);\n\n    this.contentElement.className = 'styles-element-state-pane';\n    UI.UIUtils.createTextChild(this.contentElement.createChild('div'), i18nString(UIStrings.forceElementState));\n    const table = document.createElement('table');\n    table.classList.add('source-code');\n    UI.ARIAUtils.markAsPresentation(table);\n\n    const inputs: HTMLInputElement[] = [];\n    this.inputs = inputs;\n\n    this.inputStates = new WeakMap();\n\n    const clickListener = (event: MouseEvent): void => {\n      const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n      if (!node || !(event.target instanceof HTMLInputElement)) {\n        return;\n      }\n      const state = this.inputStates.get(event.target);\n      if (!state) {\n        return;\n      }\n      node.domModel().cssModel().forcePseudoState(node, state, event.target.checked);\n    };\n\n    const createCheckbox = (state: string): Element => {\n      const td = document.createElement('td');\n      const label = UI.UIUtils.CheckboxLabel.create(':' + state);\n      const input = label.checkboxElement;\n      this.inputStates.set(input, state);\n      input.addEventListener('click', (clickListener as EventListener), false);\n      inputs.push(input);\n      td.appendChild(label);\n      return td;\n    };\n\n    let tr = table.createChild('tr');\n    tr.appendChild(createCheckbox('active'));\n    tr.appendChild(createCheckbox('hover'));\n\n    tr = table.createChild('tr');\n    tr.appendChild(createCheckbox('focus'));\n    tr.appendChild(createCheckbox('visited'));\n\n    tr = table.createChild('tr');\n    tr.appendChild(createCheckbox('focus-within'));\n    tr.appendChild(createCheckbox('focus-visible'));\n\n    tr = table.createChild('tr');\n    tr.appendChild(createCheckbox('target'));\n\n    this.contentElement.appendChild(table);\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n  }\n\n  private updateModel(cssModel: SDK.CSSModel.CSSModel|null): void {\n    if (this.cssModel === cssModel) {\n      return;\n    }\n    if (this.cssModel) {\n      this.cssModel.removeEventListener(SDK.CSSModel.Events.PseudoStateForced, this.update, this);\n    }\n    this.cssModel = cssModel;\n    if (this.cssModel) {\n      this.cssModel.addEventListener(SDK.CSSModel.Events.PseudoStateForced, this.update, this);\n    }\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([elementStatePaneWidgetStyles]);\n    this.update();\n  }\n\n  private update(): void {\n    let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (node) {\n      node = node.enclosingElementOrSelf();\n    }\n\n    this.updateModel(node ? node.domModel().cssModel() : null);\n    if (node) {\n      const nodePseudoState = node.domModel().cssModel().pseudoState(node);\n      for (const input of this.inputs) {\n        input.disabled = Boolean(node.pseudoType());\n        const state = this.inputStates.get(input);\n        input.checked = nodePseudoState && state !== undefined ? nodePseudoState.indexOf(state) >= 0 : false;\n      }\n    } else {\n      for (const input of this.inputs) {\n        input.disabled = true;\n        input.checked = false;\n      }\n    }\n    ButtonProvider.instance().item().setToggled(this.inputs.some(input => input.checked));\n  }\n}\n\nlet buttonProviderInstance: ButtonProvider;\n\nexport class ButtonProvider implements UI.Toolbar.Provider {\n  private readonly button: UI.Toolbar.ToolbarToggle;\n  private view: ElementStatePaneWidget;\n  private constructor() {\n    this.button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleElementState), '');\n    this.button.setText(i18n.i18n.lockedString(':hov'));\n    this.button.setToggleWithDot(true);\n    this.button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.clicked, this);\n    this.button.element.classList.add('monospace');\n    this.view = new ElementStatePaneWidget();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ButtonProvider {\n    const {forceNew} = opts;\n    if (!buttonProviderInstance || forceNew) {\n      buttonProviderInstance = new ButtonProvider();\n    }\n\n    return buttonProviderInstance;\n  }\n\n  private clicked(): void {\n    ElementsPanel.instance().showToolbarPane(!this.view.isShowing() ? this.view : null, null);\n  }\n\n  item(): UI.Toolbar.ToolbarToggle {\n    return this.button;\n  }\n}\n"]}