{"version":3,"file":"ComputedStyleTrace.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/ComputedStyleTrace.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,gBAAgB,MAAM,2CAA2C,CAAC;AAC9E,OAAO,KAAK,OAAO,MAAM,kCAAkC,CAAC;AAC5D,OAAO,wBAAwB,MAAM,6BAA6B,CAAC;AAEnE,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,OAAO,CAAC;AAS/B,MAAM,OAAO,kBAAmB,SAAQ,WAAW;IACjD,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,+BAA+B,CAAC;IACnE,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,SAAS,GAAG,EAAE,CAAC;IACf,OAAO,GAAG,KAAK,CAAC;IAChB,mBAAmB,GAA8B,GAAG,EAAE,GAAE,CAAC,CAAC;IAC1D,eAAe,CAAQ;IAEvB,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAC/D,CAAC;IAED,IAAI,IAAI,CAAC,IAA4B;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,qDAAqD;QACrD,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAA;yCAC0B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU;oCACzC,IAAI,CAAC,mBAAmB;0CAClB,IAAI,CAAC,mBAAmB;uCAC3B,IAAI,CAAC,SAAS;mCAClB,IAAI,CAAC,eAAe;;KAElD,EAAE,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QACH,kBAAkB;IACpB,CAAC;;AAGH,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,+BAA+B,EAAE,kBAAkB,CAAC,CAAC","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport computedStyleTraceStyles from './computedStyleTrace.css.js';\n\nconst {render, html} = LitHtml;\n\nexport interface ComputedStyleTraceData {\n  selector: string;\n  active: boolean;\n  onNavigateToSource: (event?: Event) => void;\n  ruleOriginNode?: Node;\n}\n\nexport class ComputedStyleTrace extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-computed-style-trace`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #selector = '';\n  #active = false;\n  #onNavigateToSource: ((event?: Event) => void) = () => {};\n  #ruleOriginNode?: Node;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [computedStyleTraceStyles];\n  }\n\n  set data(data: ComputedStyleTraceData) {\n    this.#selector = data.selector;\n    this.#active = data.active;\n    this.#onNavigateToSource = data.onNavigateToSource;\n    this.#ruleOriginNode = data.ruleOriginNode;\n    this.#render();\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=\"computed-style-trace ${this.#active ? 'active' : 'inactive'}\">\n        <span class=\"goto\" @click=${this.#onNavigateToSource}></span>\n        <slot name=\"trace-value\" @click=${this.#onNavigateToSource}></slot>\n        <span class=\"trace-selector\">${this.#selector}</span>\n        <span class=\"trace-link\">${this.#ruleOriginNode}</span>\n      </div>\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-computed-style-trace', ComputedStyleTrace);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-computed-style-trace': ComputedStyleTrace;\n  }\n}\n"]}