{"version":3,"file":"CSSHintDetailsView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/CSSHintDetailsView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,gBAAgB,MAAM,2CAA2C,CAAC;AAC9E,OAAO,KAAK,OAAO,MAAM,kCAAkC,CAAC;AAC5D,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AAEnD,OAAO,wBAAwB,MAAM,6BAA6B,CAAC;AAEnE,MAAM,SAAS,GAAG;IAChB;;QAEI;IACF,SAAS,EAAE,YAAY;CAC1B,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kDAAkD,EAAE,SAAS,CAAC,CAAC;AACxG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,EAAC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAC,GAAG,OAAO,CAAC;AAS3C,MAAM,OAAO,kBAAmB,SAAQ,WAAW;IAC/C,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,gCAAgC,CAAC;IACpE,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAC5C,cAAc,CAAO;IAE9B,YAAY,aAAmB;QAC3B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,wBAAwB,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,OAAO;QACH,MAAM,CAAC,IAAI,CAAA;;;8BAGW,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,cAAc,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;;kBAExH,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAA;;0BAE1C,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;0BAClE,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAA;4DACX,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE;kCAChE,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;;yBAExC,CAAA,CAAC,CAAC,EAAE;;iBAEZ,CAAC,CAAC,CAAC,EAAE;;SAEb,EAAE,IAAI,CAAC,OAAO,EAAE;YACb,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACT,CAAC;;AAGL,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,gCAAgC,EAAE,kBAAkB,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\n\nimport cssHintDetailsViewStyles from './cssHintDetailsView.css.js';\n\nconst UIStrings = {\n  /**\n    *@description Text for button that redirects to CSS property documentation.\n    */\n    learnMore: 'Learn More',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/CSSHintDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html, Directives} = LitHtml;\n\ninterface Hint {\n    getHintPrefix(): string;\n    getHintMessage(): string;\n    getPossibleFixMessage(): string|null;\n    getLearnMoreLink(): string|null;\n}\n\nexport class CSSHintDetailsView extends HTMLElement {\n    static readonly litTagName = LitHtml.literal`devtools-css-hint-details-view`;\n    readonly #shadow = this.attachShadow({mode: 'open'});\n    readonly #authoringHint: Hint;\n\n    constructor(authoringHint: Hint) {\n        super();\n        this.#authoringHint = authoringHint;\n        this.#shadow.adoptedStyleSheets = [cssHintDetailsViewStyles];\n        this.#render();\n    }\n\n    #render(): void {\n        render(html`\n            <div class=\"hint-popup-wrapper\">\n                <div class=\"hint-popup-reason\">\n                    <strong>${this.#authoringHint.getHintPrefix()}:</strong> ${Directives.unsafeHTML(this.#authoringHint.getHintMessage())}\n                </div>\n                ${this.#authoringHint.getPossibleFixMessage() ? html`\n                    <div class=\"hint-popup-possible-fix\">\n                        ${Directives.unsafeHTML(this.#authoringHint.getPossibleFixMessage())}\n                        ${this.#authoringHint.getLearnMoreLink() ? html`\n                            <x-link id='learn-more' href='${this.#authoringHint.getLearnMoreLink()}' class='clickable underlined unbreakable-text'}>\n                                ${i18nString(UIStrings.learnMore)}\n                            </x-link>\n                        `: ''}\n                    </div>\n                ` : ''}\n            </div>\n        `, this.#shadow, {\n            host: this,\n          });\n    }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-css-hint-details-view', CSSHintDetailsView);\n\ndeclare global {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    interface HTMLElementTagNameMap {\n      'devtools-css-hint-details-view': CSSHintDetailsView;\n    }\n}\n"]}