{"version":3,"file":"LayoutPane.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/LayoutPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport type {BooleanSetting, EnumSetting, Setting} from './LayoutPaneUtils.js';\nimport type {LayoutElement} from './LayoutPaneUtils.js';\n\nimport layoutPaneStyles from '../layoutPane.css.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as NodeText from '../../../ui/components/node_text/node_text.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport inspectorCommonStyles from '../../../ui/legacy/inspectorCommon.css.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nconst UIStrings = {\n  /**\n  *@description Title of the input to select the overlay color for an element using the color picker\n  */\n  chooseElementOverlayColor: 'Choose the overlay color for this element',\n  /**\n  *@description Title of the show element button in the Layout pane of the Elements panel\n  */\n  showElementInTheElementsPanel: 'Show element in the Elements panel',\n  /**\n  *@description Title of a section on CSS Grid tooling\n  */\n  grid: 'Grid',\n  /**\n  *@description Title of a section in the Layout Sidebar pane of the Elements panel\n  */\n  overlayDisplaySettings: 'Overlay display settings',\n  /**\n  *@description Title of a section in Layout sidebar pane\n  */\n  gridOverlays: 'Grid overlays',\n  /**\n  *@description Message in the Layout panel informing users that no CSS Grid layouts were found on the page\n  */\n  noGridLayoutsFoundOnThisPage: 'No grid layouts found on this page',\n  /**\n  *@description Title of the Flexbox section in the Layout panel\n  */\n  flexbox: 'Flexbox',\n  /**\n  *@description Title of a section in the Layout panel\n  */\n  flexboxOverlays: 'Flexbox overlays',\n  /**\n  *@description Text in the Layout panel, when no flexbox elements are found\n  */\n  noFlexboxLayoutsFoundOnThisPage: 'No flexbox layouts found on this page',\n  /**\n  *@description Screen reader announcement when opening color picker tool.\n  */\n  colorPickerOpened: 'Color picker opened.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/LayoutPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport {LayoutElement};\n\nconst {render, html} = LitHtml;\n\nexport class SettingChangedEvent extends Event {\n  static readonly eventName = 'settingchanged';\n  data: {setting: string, value: string|boolean};\n\n  constructor(setting: string, value: string|boolean) {\n    super(SettingChangedEvent.eventName, {});\n    this.data = {setting, value};\n  }\n}\n\ninterface HTMLInputElementEvent extends Event {\n  target: HTMLInputElement;\n}\n\nfunction isEnumSetting(setting: Setting): setting is EnumSetting {\n  return setting.type === Common.Settings.SettingType.ENUM;\n}\n\nfunction isBooleanSetting(setting: Setting): setting is BooleanSetting {\n  return setting.type === Common.Settings.SettingType.BOOLEAN;\n}\n\nexport interface LayoutPaneData {\n  settings: Setting[];\n  gridElements: LayoutElement[];\n  flexContainerElements?: LayoutElement[];\n}\n\nexport class LayoutPane extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-layout-pane`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #settings: Readonly<Setting[]> = [];\n  #gridElements: Readonly<LayoutElement[]> = [];\n  #flexContainerElements?: Readonly<LayoutElement[]> = [];\n\n  constructor() {\n    super();\n    this.#shadow.adoptedStyleSheets = [\n      Input.checkboxStyles,\n      layoutPaneStyles,\n      inspectorCommonStyles,\n    ];\n  }\n\n  set data(data: LayoutPaneData) {\n    this.#settings = data.settings;\n    this.#gridElements = data.gridElements;\n    this.#flexContainerElements = data.flexContainerElements;\n    this.#render();\n  }\n\n  #onSummaryKeyDown(event: KeyboardEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const summaryElement = event.target as HTMLElement;\n    const detailsElement = summaryElement.parentElement as HTMLDetailsElement;\n    if (!detailsElement) {\n      throw new Error('<details> element is not found for a <summary> element');\n    }\n    switch (event.key) {\n      case 'ArrowLeft':\n        detailsElement.open = false;\n        break;\n      case 'ArrowRight':\n        detailsElement.open = true;\n        break;\n    }\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <details open>\n        <summary class=\"header\" @keydown=${this.#onSummaryKeyDown}>\n          ${i18nString(UIStrings.grid)}\n        </summary>\n        <div class=\"content-section\">\n          <h3 class=\"content-section-title\">${i18nString(UIStrings.overlayDisplaySettings)}</h3>\n          <div class=\"select-settings\">\n            ${this.#getEnumSettings().map(setting => this.#renderEnumSetting(setting))}\n          </div>\n          <div class=\"checkbox-settings\">\n            ${this.#getBooleanSettings().map(setting => this.#renderBooleanSetting(setting))}\n          </div>\n        </div>\n        ${this.#gridElements ?\n          html`<div class=\"content-section\">\n            <h3 class=\"content-section-title\">\n              ${this.#gridElements.length ? i18nString(UIStrings.gridOverlays) : i18nString(UIStrings.noGridLayoutsFoundOnThisPage)}\n            </h3>\n            ${this.#gridElements.length ?\n              html`<div class=\"elements\">\n                ${this.#gridElements.map(element => this.#renderElement(element))}\n              </div>` : ''}\n          </div>` : ''}\n      </details>\n      ${this.#flexContainerElements !== undefined ?\n        html`\n        <details open>\n          <summary class=\"header\" @keydown=${this.#onSummaryKeyDown}>\n            ${i18nString(UIStrings.flexbox)}\n          </summary>\n          ${this.#flexContainerElements ?\n            html`<div class=\"content-section\">\n              <h3 class=\"content-section-title\">\n                ${this.#flexContainerElements.length ? i18nString(UIStrings.flexboxOverlays) : i18nString(UIStrings.noFlexboxLayoutsFoundOnThisPage)}\n              </h3>\n              ${this.#flexContainerElements.length ?\n                html`<div class=\"elements\">\n                  ${this.#flexContainerElements.map(element => this.#renderElement(element))}\n                </div>` : ''}\n            </div>` : ''}\n        </details>\n        `\n      : ''}\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n\n  #getEnumSettings(): EnumSetting[] {\n    return this.#settings.filter(isEnumSetting);\n  }\n\n  #getBooleanSettings(): BooleanSetting[] {\n    return this.#settings.filter(isBooleanSetting);\n  }\n\n  #onBooleanSettingChange(setting: BooleanSetting, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    this.dispatchEvent(new SettingChangedEvent(setting.name, event.target.checked));\n  }\n\n  #onEnumSettingChange(setting: EnumSetting, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    this.dispatchEvent(new SettingChangedEvent(setting.name, event.target.value));\n  }\n\n  #onElementToggle(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.toggle(event.target.checked);\n  }\n\n  #onElementClick(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.reveal();\n  }\n\n  #onColorChange(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.setColor(event.target.value);\n    this.#render();\n  }\n\n  #onElementMouseEnter(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.highlight();\n  }\n\n  #onElementMouseLeave(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.hideHighlight();\n  }\n\n  #renderElement(element: LayoutElement): LitHtml.TemplateResult {\n    const onElementToggle = this.#onElementToggle.bind(this, element);\n    const onElementClick = this.#onElementClick.bind(this, element);\n    const onColorChange = this.#onColorChange.bind(this, element);\n    const onMouseEnter = this.#onElementMouseEnter.bind(this, element);\n    const onMouseLeave = this.#onElementMouseLeave.bind(this, element);\n    const onColorLabelKeyUp = (event: KeyboardEvent): void => {\n      // Handle Enter and Space events to make the color picker accessible.\n      if (event.key !== 'Enter' && event.key !== ' ') {\n        return;\n      }\n      const target = event.target as HTMLLabelElement;\n      const input = target.querySelector('input') as HTMLInputElement;\n      input.click();\n      UI.ARIAUtils.alert(i18nString(UIStrings.colorPickerOpened));\n      event.preventDefault();\n    };\n    const onColorLabelKeyDown = (event: KeyboardEvent): void => {\n      // Prevent default scrolling when the Space key is pressed.\n      if (event.key === ' ') {\n        event.preventDefault();\n      }\n    };\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`<div class=\"element\">\n      <label data-element=\"true\" class=\"checkbox-label\">\n        <input data-input=\"true\" type=\"checkbox\" .checked=${element.enabled} @change=${onElementToggle} />\n        <span class=\"node-text-container\" data-label=\"true\" @mouseenter=${onMouseEnter} @mouseleave=${onMouseLeave}>\n          <${NodeText.NodeText.NodeText.litTagName} .data=${{\n            nodeId: element.domId,\n            nodeTitle: element.name,\n            nodeClasses: element.domClasses,\n          } as NodeText.NodeText.NodeTextData}></${NodeText.NodeText.NodeText.litTagName}>\n        </span>\n      </label>\n      <label @keyup=${onColorLabelKeyUp} @keydown=${onColorLabelKeyDown} tabindex=\"0\" title=${i18nString(UIStrings.chooseElementOverlayColor)} class=\"color-picker-label\" style=\"background: ${element.color};\">\n        <input @change=${onColorChange} @input=${onColorChange} tabindex=\"-1\" class=\"color-picker\" type=\"color\" value=${element.color} />\n      </label>\n      <button tabindex=\"0\" @click=${onElementClick} title=${i18nString(UIStrings.showElementInTheElementsPanel)} class=\"show-element\"></button>\n    </div>`;\n    // clang-format on\n  }\n\n  #renderBooleanSetting(setting: BooleanSetting): LitHtml.TemplateResult {\n    const onBooleanSettingChange = this.#onBooleanSettingChange.bind(this, setting);\n    return html`<label data-boolean-setting=\"true\" class=\"checkbox-label\" title=${setting.title}>\n      <input data-input=\"true\" type=\"checkbox\" .checked=${setting.value} @change=${onBooleanSettingChange} />\n      <span data-label=\"true\">${setting.title}</span>\n    </label>`;\n  }\n\n  #renderEnumSetting(setting: EnumSetting): LitHtml.TemplateResult {\n    const onEnumSettingChange = this.#onEnumSettingChange.bind(this, setting);\n    return html`<label data-enum-setting=\"true\" class=\"select-label\" title=${setting.title}>\n      <select class=\"chrome-select\" data-input=\"true\" @change=${onEnumSettingChange}>\n        ${\n        setting.options.map(\n            opt => html`<option value=${opt.value} .selected=${setting.value === opt.value}>${opt.title}</option>`)}\n      </select>\n    </label>`;\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-layout-pane', LayoutPane);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-layout-pane': LayoutPane;\n  }\n}\n"]}