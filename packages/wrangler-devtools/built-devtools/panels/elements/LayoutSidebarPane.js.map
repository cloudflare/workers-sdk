{"version":3,"file":"LayoutSidebarPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/LayoutSidebarPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ElementsComponents from './components/components.js';\n\nimport {ElementsPanel} from './ElementsPanel.js';\n\nconst nodeToLayoutElement = (node: SDK.DOMModel.DOMNode): ElementsComponents.LayoutPane.LayoutElement => {\n  const className = node.getAttribute('class');\n  const nodeId = node.id;\n  return {\n    id: nodeId,\n    color: '#000',\n    name: node.localName(),\n    domId: node.getAttribute('id'),\n    domClasses: className ? className.split(/\\s+/).filter(s => Boolean(s)) : undefined,\n    enabled: false,\n    reveal: (): void => {\n      void ElementsPanel.instance().revealAndSelectNode(node, true, true);\n      void node.scrollIntoView();\n    },\n    highlight: (): void => {\n      node.highlight();\n    },\n    hideHighlight: (): void => {\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    },\n    toggle: (_value: boolean): never => {\n      throw new Error('Not implemented');\n    },\n    setColor(_value: string): never {\n      throw new Error('Not implemented');\n    },\n  };\n};\n\nconst gridNodesToElements = (nodes: SDK.DOMModel.DOMNode[]): ElementsComponents.LayoutPane.LayoutElement[] => {\n  return nodes.map(node => {\n    const layoutElement = nodeToLayoutElement(node);\n    const nodeId = node.id;\n    return {\n      ...layoutElement,\n      color: node.domModel().overlayModel().colorOfGridInPersistentOverlay(nodeId) || '#000',\n      enabled: node.domModel().overlayModel().isHighlightedGridInPersistentOverlay(nodeId),\n      toggle: (value: boolean): void => {\n        if (value) {\n          node.domModel().overlayModel().highlightGridInPersistentOverlay(nodeId);\n        } else {\n          node.domModel().overlayModel().hideGridInPersistentOverlay(nodeId);\n        }\n      },\n      setColor(value: string): void {\n        this.color = value;\n        node.domModel().overlayModel().setColorOfGridInPersistentOverlay(nodeId, value);\n      },\n    };\n  });\n};\n\nconst flexContainerNodesToElements = (nodes: SDK.DOMModel.DOMNode[]): ElementsComponents.LayoutPane.LayoutElement[] => {\n  return nodes.map(node => {\n    const layoutElement = nodeToLayoutElement(node);\n    const nodeId = node.id;\n    return {\n      ...layoutElement,\n      color: node.domModel().overlayModel().colorOfFlexInPersistentOverlay(nodeId) || '#000',\n      enabled: node.domModel().overlayModel().isHighlightedFlexContainerInPersistentOverlay(nodeId),\n      toggle: (value: boolean): void => {\n        if (value) {\n          node.domModel().overlayModel().highlightFlexContainerInPersistentOverlay(nodeId);\n        } else {\n          node.domModel().overlayModel().hideFlexContainerInPersistentOverlay(nodeId);\n        }\n      },\n      setColor(value: string): void {\n        this.color = value;\n        node.domModel().overlayModel().setColorOfFlexInPersistentOverlay(nodeId, value);\n      },\n    };\n  });\n};\n\nlet layoutSidebarPaneInstance: LayoutSidebarPane;\nexport class LayoutSidebarPane extends UI.ThrottledWidget.ThrottledWidget {\n  private layoutPane: ElementsComponents.LayoutPane.LayoutPane;\n  private readonly settings: string[];\n  private readonly uaShadowDOMSetting: Common.Settings.Setting<boolean>;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly boundOnSettingChanged: (event: any) => void;\n  private domModels: SDK.DOMModel.DOMModel[];\n\n  constructor() {\n    super(true /* isWebComponent */);\n    this.layoutPane = new ElementsComponents.LayoutPane.LayoutPane();\n    this.contentElement.appendChild(this.layoutPane);\n    this.settings = ['showGridLineLabels', 'showGridTrackSizes', 'showGridAreas', 'extendGridLines'];\n    this.uaShadowDOMSetting = Common.Settings.Settings.instance().moduleSetting('showUAShadowDOM');\n    this.boundOnSettingChanged = this.onSettingChanged.bind(this);\n    this.domModels = [];\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): LayoutSidebarPane {\n    const {forceNew} = opts;\n    if (!layoutSidebarPaneInstance || forceNew) {\n      layoutSidebarPaneInstance = new LayoutSidebarPane();\n    }\n\n    return layoutSidebarPaneInstance;\n  }\n\n  modelAdded(domModel: SDK.DOMModel.DOMModel): void {\n    const overlayModel = domModel.overlayModel();\n    overlayModel.addEventListener(SDK.OverlayModel.Events.PersistentGridOverlayStateChanged, this.update, this);\n    overlayModel.addEventListener(\n        SDK.OverlayModel.Events.PersistentFlexContainerOverlayStateChanged, this.update, this);\n    this.domModels.push(domModel);\n  }\n\n  modelRemoved(domModel: SDK.DOMModel.DOMModel): void {\n    const overlayModel = domModel.overlayModel();\n    overlayModel.removeEventListener(SDK.OverlayModel.Events.PersistentGridOverlayStateChanged, this.update, this);\n    overlayModel.removeEventListener(\n        SDK.OverlayModel.Events.PersistentFlexContainerOverlayStateChanged, this.update, this);\n    this.domModels = this.domModels.filter(model => model !== domModel);\n  }\n\n  private async fetchNodesByStyle(style: {\n    name: string,\n    value: string,\n  }[]): Promise<SDK.DOMModel.DOMNode[]> {\n    const showUAShadowDOM = this.uaShadowDOMSetting.get();\n\n    const nodes = [];\n    for (const domModel of this.domModels) {\n      try {\n        const nodeIds = await domModel.getNodesByStyle(style, true /* pierce */);\n        for (const nodeId of nodeIds) {\n          const node = domModel.nodeForId(nodeId);\n          if (node !== null && (showUAShadowDOM || !node.ancestorUserAgentShadowRoot())) {\n            nodes.push(node);\n          }\n        }\n      } catch (error) {\n        // TODO(crbug.com/1167706): Sometimes in E2E tests the layout panel is updated after a DOM node\n        // has been removed. This causes an error that a node has not been found.\n        // We can skip nodes that resulted in an error.\n        console.warn(error);\n      }\n    }\n\n    return nodes;\n  }\n\n  private async fetchGridNodes(): Promise<SDK.DOMModel.DOMNode[]> {\n    return await this.fetchNodesByStyle([{name: 'display', value: 'grid'}, {name: 'display', value: 'inline-grid'}]);\n  }\n\n  private async fetchFlexContainerNodes(): Promise<SDK.DOMModel.DOMNode[]> {\n    return await this.fetchNodesByStyle([{name: 'display', value: 'flex'}, {name: 'display', value: 'inline-flex'}]);\n  }\n\n  private mapSettings(): ElementsComponents.LayoutPaneUtils.Setting[] {\n    const settings = [];\n    for (const settingName of this.settings) {\n      const setting = Common.Settings.Settings.instance().moduleSetting(settingName);\n      const settingValue = setting.get();\n      const settingType = setting.type();\n      if (!settingType) {\n        throw new Error('A setting provided to LayoutSidebarPane does not have a setting type');\n      }\n      if (settingType !== Common.Settings.SettingType.BOOLEAN && settingType !== Common.Settings.SettingType.ENUM) {\n        throw new Error('A setting provided to LayoutSidebarPane does not have a supported setting type');\n      }\n      const mappedSetting = {\n        type: settingType,\n        name: setting.name,\n        title: setting.title(),\n      };\n      if (typeof settingValue === 'boolean') {\n        settings.push({\n          ...mappedSetting,\n          value: settingValue,\n          options: setting.options().map(opt => ({\n                                           ...opt,\n                                           value: (opt.value as boolean),\n                                         })),\n        });\n      } else if (typeof settingValue === 'string') {\n        settings.push({\n          ...mappedSetting,\n          value: settingValue,\n          options: setting.options().map(opt => ({\n                                           ...opt,\n                                           value: (opt.value as string),\n                                         })),\n        });\n      }\n    }\n    return settings;\n  }\n\n  async doUpdate(): Promise<void> {\n    this.layoutPane.data = {\n      gridElements: gridNodesToElements(await this.fetchGridNodes()),\n      flexContainerElements: flexContainerNodesToElements(await this.fetchFlexContainerNodes()),\n      settings: this.mapSettings(),\n    };\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onSettingChanged(event: any): void {\n    Common.Settings.Settings.instance().moduleSetting(event.data.setting).set(event.data.value);\n  }\n\n  wasShown(): void {\n    for (const setting of this.settings) {\n      Common.Settings.Settings.instance().moduleSetting(setting).addChangeListener(this.update, this);\n    }\n    this.layoutPane.addEventListener('settingchanged', this.boundOnSettingChanged);\n    for (const domModel of this.domModels) {\n      this.modelRemoved(domModel);\n    }\n    this.domModels = [];\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DOMModel.DOMModel, this);\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n    this.uaShadowDOMSetting.addChangeListener(this.update, this);\n    this.update();\n  }\n\n  willHide(): void {\n    for (const setting of this.settings) {\n      Common.Settings.Settings.instance().moduleSetting(setting).removeChangeListener(this.update, this);\n    }\n    this.layoutPane.removeEventListener('settingchanged', this.boundOnSettingChanged);\n    SDK.TargetManager.TargetManager.instance().unobserveModels(SDK.DOMModel.DOMModel, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n    this.uaShadowDOMSetting.removeChangeListener(this.update, this);\n  }\n}\n"]}