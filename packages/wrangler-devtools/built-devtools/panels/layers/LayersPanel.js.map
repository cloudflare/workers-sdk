{"version":3,"file":"LayersPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/layers/LayersPanel.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\n\nimport {LayerPaintProfilerView} from './LayerPaintProfilerView.js';\nimport {Events, LayerTreeModel} from './LayerTreeModel.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for the details of something\n  */\n  details: 'Details',\n  /**\n  *@description Title of the Profiler tool\n  */\n  profiler: 'Profiler',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layers/LayersPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet layersPanelInstance: LayersPanel;\n\nexport class LayersPanel extends UI.Panel.PanelWithSidebar implements SDK.TargetManager.Observer {\n  private model: LayerTreeModel|null;\n  private readonly layerViewHost: LayerViewer.LayerViewHost.LayerViewHost;\n  private readonly layerTreeOutline: LayerViewer.LayerTreeOutline.LayerTreeOutline;\n  private readonly rightSplitWidget: UI.SplitWidget.SplitWidget;\n  private readonly layers3DView: LayerViewer.Layers3DView.Layers3DView;\n  private tabbedPane: UI.TabbedPane.TabbedPane;\n  private readonly layerDetailsView: LayerViewer.LayerDetailsView.LayerDetailsView;\n  private readonly paintProfilerView: LayerPaintProfilerView;\n  private readonly updateThrottler: Common.Throttler.Throttler;\n  private layerBeingProfiled?: SDK.LayerTreeBase.Layer|null;\n  constructor() {\n    super('layers', 225);\n    this.model = null;\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n    this.layerViewHost = new LayerViewer.LayerViewHost.LayerViewHost();\n    this.layerTreeOutline = new LayerViewer.LayerTreeOutline.LayerTreeOutline(this.layerViewHost);\n    this.layerTreeOutline.addEventListener(\n        LayerViewer.LayerTreeOutline.Events.PaintProfilerRequested, this.onPaintProfileRequested, this);\n    this.panelSidebarElement().appendChild(this.layerTreeOutline.element);\n    this.setDefaultFocusedElement(this.layerTreeOutline.element);\n\n    this.rightSplitWidget = new UI.SplitWidget.SplitWidget(false, true, 'layerDetailsSplitViewState');\n    this.splitWidget().setMainWidget(this.rightSplitWidget);\n\n    this.layers3DView = new LayerViewer.Layers3DView.Layers3DView(this.layerViewHost);\n    this.rightSplitWidget.setMainWidget(this.layers3DView);\n    this.layers3DView.addEventListener(\n        LayerViewer.Layers3DView.Events.PaintProfilerRequested, this.onPaintProfileRequested, this);\n    this.layers3DView.addEventListener(LayerViewer.Layers3DView.Events.ScaleChanged, this.onScaleChanged, this);\n\n    this.tabbedPane = new UI.TabbedPane.TabbedPane();\n    this.rightSplitWidget.setSidebarWidget(this.tabbedPane);\n\n    this.layerDetailsView = new LayerViewer.LayerDetailsView.LayerDetailsView(this.layerViewHost);\n    this.layerDetailsView.addEventListener(\n        LayerViewer.LayerDetailsView.Events.PaintProfilerRequested, this.onPaintProfileRequested, this);\n    this.tabbedPane.appendTab(DetailsViewTabs.Details, i18nString(UIStrings.details), this.layerDetailsView);\n\n    this.paintProfilerView = new LayerPaintProfilerView(this.showImage.bind(this));\n    this.tabbedPane.addEventListener(UI.TabbedPane.Events.TabClosed, this.onTabClosed, this);\n    this.updateThrottler = new Common.Throttler.Throttler(100);\n  }\n\n  static instance(opts = {forceNew: null}): LayersPanel {\n    const {forceNew} = opts;\n    if (!layersPanelInstance || forceNew) {\n      layersPanelInstance = new LayersPanel();\n    }\n\n    return layersPanelInstance;\n  }\n\n  focus(): void {\n    this.layerTreeOutline.focus();\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    if (this.model) {\n      this.model.enable();\n    }\n  }\n\n  willHide(): void {\n    if (this.model) {\n      void this.model.disable();\n    }\n    super.willHide();\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (this.model) {\n      return;\n    }\n    this.model = target.model(LayerTreeModel);\n    if (!this.model) {\n      return;\n    }\n    this.model.addEventListener(Events.LayerTreeChanged, this.onLayerTreeUpdated, this);\n    this.model.addEventListener(Events.LayerPainted, this.onLayerPainted, this);\n    if (this.isShowing()) {\n      this.model.enable();\n    }\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    if (!this.model || this.model.target() !== target) {\n      return;\n    }\n    this.model.removeEventListener(Events.LayerTreeChanged, this.onLayerTreeUpdated, this);\n    this.model.removeEventListener(Events.LayerPainted, this.onLayerPainted, this);\n    void this.model.disable();\n    this.model = null;\n  }\n\n  private onLayerTreeUpdated(): void {\n    void this.updateThrottler.schedule(this.update.bind(this));\n  }\n\n  private update(): Promise<void> {\n    if (this.model) {\n      this.layerViewHost.setLayerTree(this.model.layerTree());\n      const resourceModel = this.model.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n      if (resourceModel) {\n        const mainFrame = resourceModel.mainFrame;\n        if (mainFrame) {\n          const url = mainFrame.url;\n          // Add the currently visualized url as an attribute to make it accessibles to e2e tests\n          this.element.setAttribute('test-current-url', url);\n        }\n      }\n    }\n    return Promise.resolve();\n  }\n\n  private onLayerPainted({data: layer}: Common.EventTarget.EventTargetEvent<SDK.LayerTreeBase.Layer>): void {\n    if (!this.model) {\n      return;\n    }\n    const selection = this.layerViewHost.selection();\n    if (selection && selection.layer() === layer) {\n      this.layerDetailsView.update();\n    }\n    this.layers3DView.updateLayerSnapshot(layer);\n  }\n\n  private onPaintProfileRequested({data: selection}:\n                                      Common.EventTarget.EventTargetEvent<LayerViewer.LayerViewHost.Selection>): void {\n    void this.layers3DView.snapshotForSelection(selection).then(snapshotWithRect => {\n      if (!snapshotWithRect) {\n        return;\n      }\n      this.layerBeingProfiled = selection.layer();\n      if (!this.tabbedPane.hasTab(DetailsViewTabs.Profiler)) {\n        this.tabbedPane.appendTab(\n            DetailsViewTabs.Profiler, i18nString(UIStrings.profiler), this.paintProfilerView, undefined, true, true);\n      }\n      this.tabbedPane.selectTab(DetailsViewTabs.Profiler);\n      this.paintProfilerView.profile(snapshotWithRect.snapshot);\n    });\n  }\n\n  private onTabClosed(event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void {\n    if (event.data.tabId !== DetailsViewTabs.Profiler || !this.layerBeingProfiled) {\n      return;\n    }\n    this.paintProfilerView.reset();\n    this.layers3DView.showImageForLayer(this.layerBeingProfiled, undefined);\n    this.layerBeingProfiled = null;\n  }\n\n  private showImage(imageURL?: string): void {\n    if (this.layerBeingProfiled) {\n      this.layers3DView.showImageForLayer(this.layerBeingProfiled, imageURL);\n    }\n  }\n\n  private onScaleChanged(event: Common.EventTarget.EventTargetEvent<number>): void {\n    this.paintProfilerView.setScale(event.data);\n  }\n}\n\nexport const DetailsViewTabs = {\n  Details: 'details',\n  Profiler: 'profiler',\n};\n"]}