{"version":3,"file":"LayerTreeModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/layers/LayerTreeModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class LayerTreeModel extends SDK.SDKModel.SDKModel<EventTypes> {\n  readonly layerTreeAgent: ProtocolProxyApi.LayerTreeApi;\n  readonly paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel;\n  private layerTreeInternal: SDK.LayerTreeBase.LayerTreeBase|null;\n  private readonly throttler: Common.Throttler.Throttler;\n  private enabled?: boolean;\n  private lastPaintRectByLayerId?: Map<string, Protocol.DOM.Rect>;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    this.layerTreeAgent = target.layerTreeAgent();\n    target.registerLayerTreeDispatcher(new LayerTreeDispatcher(this));\n    this.paintProfilerModel =\n        target.model(SDK.PaintProfiler.PaintProfilerModel) as SDK.PaintProfiler.PaintProfilerModel;\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (resourceTreeModel) {\n      resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.MainFrameNavigated, this.onMainFrameNavigated, this);\n    }\n    this.layerTreeInternal = null;\n    this.throttler = new Common.Throttler.Throttler(20);\n  }\n\n  async disable(): Promise<void> {\n    if (!this.enabled) {\n      return;\n    }\n    this.enabled = false;\n    await this.layerTreeAgent.invoke_disable();\n  }\n\n  enable(): void {\n    if (this.enabled) {\n      return;\n    }\n    this.enabled = true;\n    void this.forceEnable();\n  }\n\n  private async forceEnable(): Promise<void> {\n    this.lastPaintRectByLayerId = new Map();\n    if (!this.layerTreeInternal) {\n      this.layerTreeInternal = new AgentLayerTree(this);\n    }\n    await this.layerTreeAgent.invoke_enable();\n  }\n\n  layerTree(): SDK.LayerTreeBase.LayerTreeBase|null {\n    return this.layerTreeInternal;\n  }\n\n  async layerTreeChanged(layers: Protocol.LayerTree.Layer[]|null): Promise<void> {\n    if (!this.enabled) {\n      return;\n    }\n    void this.throttler.schedule(this.innerSetLayers.bind(this, layers));\n  }\n\n  private async innerSetLayers(layers: Protocol.LayerTree.Layer[]|null): Promise<void> {\n    const layerTree = this.layerTreeInternal as AgentLayerTree;\n\n    await layerTree.setLayers(layers);\n\n    if (!this.lastPaintRectByLayerId) {\n      this.lastPaintRectByLayerId = new Map();\n    }\n\n    for (const layerId of this.lastPaintRectByLayerId.keys()) {\n      const lastPaintRect = this.lastPaintRectByLayerId.get(layerId);\n      const layer = layerTree.layerById(layerId);\n      if (layer) {\n        (layer as AgentLayer).setLastPaintRect(lastPaintRect);\n      }\n    }\n\n    this.lastPaintRectByLayerId = new Map();\n\n    this.dispatchEventToListeners(Events.LayerTreeChanged);\n  }\n\n  layerPainted(layerId: string, clipRect: Protocol.DOM.Rect): void {\n    if (!this.enabled) {\n      return;\n    }\n    const layerTree = this.layerTreeInternal as AgentLayerTree;\n    const layer = layerTree.layerById(layerId) as AgentLayer;\n    if (!layer) {\n      if (!this.lastPaintRectByLayerId) {\n        this.lastPaintRectByLayerId = new Map();\n      }\n\n      this.lastPaintRectByLayerId.set(layerId, clipRect);\n      return;\n    }\n    layer.didPaint(clipRect);\n    this.dispatchEventToListeners(Events.LayerPainted, layer);\n  }\n\n  private onMainFrameNavigated(): void {\n    this.layerTreeInternal = null;\n    if (this.enabled) {\n      void this.forceEnable();\n    }\n  }\n}\n\nSDK.SDKModel.SDKModel.register(LayerTreeModel, {capabilities: SDK.Target.Capability.DOM, autostart: false});\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  LayerTreeChanged = 'LayerTreeChanged',\n  LayerPainted = 'LayerPainted',\n}\n\nexport type EventTypes = {\n  [Events.LayerTreeChanged]: void,\n  [Events.LayerPainted]: AgentLayer,\n};\n\nexport class AgentLayerTree extends SDK.LayerTreeBase.LayerTreeBase {\n  private layerTreeModel: LayerTreeModel;\n\n  constructor(layerTreeModel: LayerTreeModel) {\n    super(layerTreeModel.target());\n    this.layerTreeModel = layerTreeModel;\n  }\n\n  async setLayers(payload: Protocol.LayerTree.Layer[]|null): Promise<void> {\n    if (!payload) {\n      this.innerSetLayers(payload);\n      return;\n    }\n    const idsToResolve = new Set<Protocol.DOM.BackendNodeId>();\n    for (let i = 0; i < payload.length; ++i) {\n      const backendNodeId = payload[i].backendNodeId;\n      if (!backendNodeId || this.backendNodeIdToNode().has(backendNodeId)) {\n        continue;\n      }\n      idsToResolve.add(backendNodeId);\n    }\n    await this.resolveBackendNodeIds(idsToResolve);\n    this.innerSetLayers(payload);\n  }\n\n  private innerSetLayers(layers: Protocol.LayerTree.Layer[]|null): void {\n    this.setRoot(null);\n    this.setContentRoot(null);\n    // Payload will be null when not in the composited mode.\n    if (!layers) {\n      return;\n    }\n    let root;\n    const oldLayersById = this.layersById;\n    this.layersById = new Map();\n    for (let i = 0; i < layers.length; ++i) {\n      const layerId = layers[i].layerId;\n      let layer: AgentLayer|(AgentLayer | null) = oldLayersById.get(layerId) as AgentLayer | null;\n      if (layer) {\n        layer.reset(layers[i]);\n      } else {\n        layer = new AgentLayer(this.layerTreeModel, layers[i]);\n      }\n      this.layersById.set(layerId, layer);\n      const backendNodeId = layers[i].backendNodeId;\n      if (backendNodeId) {\n        layer.setNode(this.backendNodeIdToNode().get(backendNodeId) || null);\n      }\n      if (!this.contentRoot() && layer.drawsContent()) {\n        this.setContentRoot(layer);\n      }\n      const parentId = layer.parentId();\n      if (parentId) {\n        const parent = this.layersById.get(parentId);\n        if (!parent) {\n          throw new Error(`Missing parent ${parentId} for layer ${layerId}`);\n        }\n        parent.addChild(layer);\n      } else {\n        if (root) {\n          console.assert(false, 'Multiple root layers');\n        }\n        root = layer;\n      }\n    }\n    if (root) {\n      this.setRoot(root);\n      root.calculateQuad(new WebKitCSSMatrix());\n    }\n  }\n}\n\nexport class AgentLayer implements SDK.LayerTreeBase.Layer {\n  private scrollRectsInternal!: Protocol.LayerTree.ScrollRect[];\n  private quadInternal!: number[];\n  private childrenInternal!: AgentLayer[];\n  private image!: HTMLImageElement|null;\n  private parentInternal!: AgentLayer|null;\n  private layerPayload!: Protocol.LayerTree.Layer;\n  private layerTreeModel: LayerTreeModel;\n  private nodeInternal?: SDK.DOMModel.DOMNode|null;\n  lastPaintRectInternal?: Protocol.DOM.Rect;\n  private paintCountInternal?: number;\n  private stickyPositionConstraintInternal?: SDK.LayerTreeBase.StickyPositionConstraint|null;\n  constructor(layerTreeModel: LayerTreeModel, layerPayload: Protocol.LayerTree.Layer) {\n    this.layerTreeModel = layerTreeModel;\n    this.reset(layerPayload);\n  }\n\n  id(): Protocol.LayerTree.LayerId {\n    return this.layerPayload.layerId;\n  }\n\n  parentId(): Protocol.LayerTree.LayerId|null {\n    return this.layerPayload.parentLayerId || null;\n  }\n\n  parent(): SDK.LayerTreeBase.Layer|null {\n    return this.parentInternal;\n  }\n\n  isRoot(): boolean {\n    return !this.parentId();\n  }\n\n  children(): SDK.LayerTreeBase.Layer[] {\n    return this.childrenInternal;\n  }\n\n  addChild(childParam: SDK.LayerTreeBase.Layer): void {\n    const child = childParam as AgentLayer;\n    if (child.parentInternal) {\n      console.assert(false, 'Child already has a parent');\n    }\n    this.childrenInternal.push(child);\n    child.parentInternal = this;\n  }\n\n  setNode(node: SDK.DOMModel.DOMNode|null): void {\n    this.nodeInternal = node;\n  }\n\n  node(): SDK.DOMModel.DOMNode|null {\n    return this.nodeInternal || null;\n  }\n\n  nodeForSelfOrAncestor(): SDK.DOMModel.DOMNode|null {\n    let layer: (AgentLayer|null)|this = this;\n    for (; layer; layer = layer.parentInternal) {\n      if (layer.nodeInternal) {\n        return layer.nodeInternal;\n      }\n    }\n    return null;\n  }\n\n  offsetX(): number {\n    return this.layerPayload.offsetX;\n  }\n\n  offsetY(): number {\n    return this.layerPayload.offsetY;\n  }\n\n  width(): number {\n    return this.layerPayload.width;\n  }\n\n  height(): number {\n    return this.layerPayload.height;\n  }\n\n  transform(): number[]|null {\n    return this.layerPayload.transform || null;\n  }\n\n  quad(): number[] {\n    return this.quadInternal;\n  }\n\n  anchorPoint(): number[] {\n    return [\n      this.layerPayload.anchorX || 0,\n      this.layerPayload.anchorY || 0,\n      this.layerPayload.anchorZ || 0,\n    ];\n  }\n\n  invisible(): boolean {\n    return this.layerPayload.invisible || false;\n  }\n\n  paintCount(): number {\n    return this.paintCountInternal || this.layerPayload.paintCount;\n  }\n\n  lastPaintRect(): Protocol.DOM.Rect|null {\n    return this.lastPaintRectInternal || null;\n  }\n\n  setLastPaintRect(lastPaintRect?: Protocol.DOM.Rect): void {\n    this.lastPaintRectInternal = lastPaintRect;\n  }\n\n  scrollRects(): Protocol.LayerTree.ScrollRect[] {\n    return this.scrollRectsInternal;\n  }\n\n  stickyPositionConstraint(): SDK.LayerTreeBase.StickyPositionConstraint|null {\n    return this.stickyPositionConstraintInternal || null;\n  }\n\n  async requestCompositingReasonIds(): Promise<string[]> {\n    const reasons = await this.layerTreeModel.layerTreeAgent.invoke_compositingReasons({layerId: this.id()});\n    return reasons.compositingReasonIds || [];\n  }\n\n  drawsContent(): boolean {\n    return this.layerPayload.drawsContent;\n  }\n\n  gpuMemoryUsage(): number {\n    const bytesPerPixel = 4;\n    return this.drawsContent() ? this.width() * this.height() * bytesPerPixel : 0;\n  }\n\n  snapshots(): Promise<SDK.PaintProfiler.SnapshotWithRect|null>[] {\n    const promise = this.layerTreeModel.paintProfilerModel.makeSnapshot(this.id()).then(snapshot => {\n      if (!snapshot) {\n        return null;\n      }\n      return {rect: {x: 0, y: 0, width: this.width(), height: this.height()}, snapshot: snapshot};\n    });\n    return [promise];\n  }\n\n  didPaint(rect: Protocol.DOM.Rect): void {\n    this.lastPaintRectInternal = rect;\n    this.paintCountInternal = this.paintCount() + 1;\n    this.image = null;\n  }\n\n  reset(layerPayload: Protocol.LayerTree.Layer): void {\n    this.nodeInternal = null;\n    this.childrenInternal = [];\n    this.parentInternal = null;\n    this.paintCountInternal = 0;\n    this.layerPayload = layerPayload;\n    this.image = null;\n    this.scrollRectsInternal = this.layerPayload.scrollRects || [];\n    this.stickyPositionConstraintInternal = this.layerPayload.stickyPositionConstraint ?\n        new SDK.LayerTreeBase.StickyPositionConstraint(\n            this.layerTreeModel.layerTree(), this.layerPayload.stickyPositionConstraint) :\n        null;\n  }\n\n  private matrixFromArray(a: number[]): DOMMatrix {\n    function toFixed9(x: number): string {\n      return x.toFixed(9);\n    }\n    return new WebKitCSSMatrix('matrix3d(' + a.map(toFixed9).join(',') + ')');\n  }\n\n  private calculateTransformToViewport(parentTransform: DOMMatrix): DOMMatrix {\n    const offsetMatrix = new WebKitCSSMatrix().translate(this.layerPayload.offsetX, this.layerPayload.offsetY);\n    let matrix: DOMMatrix = offsetMatrix;\n\n    if (this.layerPayload.transform) {\n      const transformMatrix = this.matrixFromArray(this.layerPayload.transform);\n      const anchorVector = new UI.Geometry.Vector(\n          this.layerPayload.width * this.anchorPoint()[0], this.layerPayload.height * this.anchorPoint()[1],\n          this.anchorPoint()[2]);\n      const anchorPoint = UI.Geometry.multiplyVectorByMatrixAndNormalize(anchorVector, matrix);\n      const anchorMatrix = new WebKitCSSMatrix().translate(-anchorPoint.x, -anchorPoint.y, -anchorPoint.z);\n      matrix = anchorMatrix.inverse().multiply(transformMatrix.multiply(anchorMatrix.multiply(matrix)));\n    }\n\n    matrix = parentTransform.multiply(matrix);\n    return matrix;\n  }\n\n  private createVertexArrayForRect(width: number, height: number): number[] {\n    return [0, 0, 0, width, 0, 0, width, height, 0, 0, height, 0];\n  }\n\n  calculateQuad(parentTransform: DOMMatrix): void {\n    const matrix = this.calculateTransformToViewport(parentTransform);\n    this.quadInternal = [];\n    const vertices = this.createVertexArrayForRect(this.layerPayload.width, this.layerPayload.height);\n    for (let i = 0; i < 4; ++i) {\n      const point = UI.Geometry.multiplyVectorByMatrixAndNormalize(\n          new UI.Geometry.Vector(vertices[i * 3], vertices[i * 3 + 1], vertices[i * 3 + 2]), matrix);\n      this.quadInternal.push(point.x, point.y);\n    }\n\n    function calculateQuadForLayer(layer: AgentLayer): void {\n      layer.calculateQuad(matrix);\n    }\n\n    this.childrenInternal.forEach(calculateQuadForLayer);\n  }\n}\n\nclass LayerTreeDispatcher implements ProtocolProxyApi.LayerTreeDispatcher {\n  private readonly layerTreeModel: LayerTreeModel;\n  constructor(layerTreeModel: LayerTreeModel) {\n    this.layerTreeModel = layerTreeModel;\n  }\n\n  layerTreeDidChange({layers}: Protocol.LayerTree.LayerTreeDidChangeEvent): void {\n    void this.layerTreeModel.layerTreeChanged(layers || null);\n  }\n\n  layerPainted({layerId, clip}: Protocol.LayerTree.LayerPaintedEvent): void {\n    this.layerTreeModel.layerPainted(layerId, clip);\n  }\n}\n"]}