{"version":3,"file":"CSSOverviewController.js","sourceRoot":"","sources":["../../../../../../front_end/panels/css_overview/CSSOverviewController.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAM7C,MAAM,OAAO,kBAAmB,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAyB;IACpF,UAAU,CAAS;IACnB;QACE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC;QAC5E,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;IAC3F,CAAC;IAED,0BAA0B;QACxB,IAAI,IAAI,CAAC,UAAU,KAAK,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,EAAE;YACjF,OAAO;SACR;QAED,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC;QAC5E,IAAI,CAAC,wBAAwB,qBAAc,CAAC;IAC9C,CAAC;CACF","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {ContrastIssue} from './CSSOverviewCompletedView.js';\nimport type {UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';\n\nexport class OverviewController extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  currentUrl: string;\n  constructor() {\n    super();\n\n    this.currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.InspectedURLChanged, this.#checkUrlAndResetIfChanged, this);\n  }\n\n  #checkUrlAndResetIfChanged(): void {\n    if (this.currentUrl === SDK.TargetManager.TargetManager.instance().inspectedURL()) {\n      return;\n    }\n\n    this.currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    this.dispatchEventToListeners(Events.Reset);\n  }\n}\n\nexport type PopulateNodesEvent = {\n  type: 'contrast',\n  key: string,\n  section: string|undefined,\n  nodes: ContrastIssue[],\n}|{\n  type: 'color',\n  color: string,\n  section: string | undefined,\n  nodes: {nodeId: Protocol.DOM.BackendNodeId}[],\n}|{\n  type: 'unused-declarations',\n  declaration: string,\n  nodes: UnusedDeclaration[],\n}|{\n  type: 'media-queries',\n  text: string,\n  nodes: Protocol.CSS.CSSMedia[],\n}|{\n  type: 'font-info',\n  name: string,\n  nodes: {nodeId: Protocol.DOM.BackendNodeId}[],\n};\n\nexport type PopulateNodesEventNodes = PopulateNodesEvent['nodes'];\nexport type PopulateNodesEventNodeTypes = PopulateNodesEventNodes[0];\n\nexport const enum Events {\n  RequestOverviewStart = 'RequestOverviewStart',\n  RequestNodeHighlight = 'RequestNodeHighlight',\n  PopulateNodes = 'PopulateNodes',\n  RequestOverviewCancel = 'RequestOverviewCancel',\n  OverviewCompleted = 'OverviewCompleted',\n  Reset = 'Reset',\n}\n\nexport type EventTypes = {\n  [Events.RequestOverviewStart]: void,\n  [Events.RequestNodeHighlight]: number,\n  [Events.PopulateNodes]: {payload: PopulateNodesEvent},\n  [Events.RequestOverviewCancel]: void,\n  [Events.OverviewCompleted]: void,\n  [Events.Reset]: void,\n};\n"]}