{"version":3,"file":"WarningErrorCounter.js","sourceRoot":"","sources":["../../../../../../front_end/panels/console_counters/WarningErrorCounter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description The console error count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The error count refers to the number of errors currently present in the JavaScript console.\n  */\n  sErrors: '{n, plural, =1 {# error} other {# errors}}',\n  /**\n  *@description The console warning count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The warning count refers to the number of warnings currently present in the JavaScript console.\n  */\n  sWarnings: '{n, plural, =1 {# warning} other {# warnings}}',\n  /**\n  *@description Tooltip shown for a main toolbar button that opens the Console panel\n  *@example {2 errors, 1 warning} PH1\n  */\n  openConsoleToViewS: 'Open Console to view {PH1}',\n  /**\n  *@description Title for the issues count in the Issues Error Counter shown in the main toolbar (top-left in DevTools). The issues count refers to the number of issues in the issues tab.\n  */\n  openIssuesToView: '{n, plural, =1 {Open Issues to view # issue:} other {Open Issues to view # issues:}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/console_counters/WarningErrorCounter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet warningErrorCounterInstance: WarningErrorCounter;\nexport class WarningErrorCounter implements UI.Toolbar.Provider {\n  private readonly toolbarItem: UI.Toolbar.ToolbarItemWithCompactLayout;\n  private consoleCounter: IconButton.IconButton.IconButton;\n  private issueCounter: IssueCounter.IssueCounter.IssueCounter;\n  private readonly throttler: Common.Throttler.Throttler;\n  updatingForTest?: boolean;\n\n  private constructor() {\n    WarningErrorCounter.instanceForTest = this;\n\n    const countersWrapper = document.createElement('div');\n    this.toolbarItem = new UI.Toolbar.ToolbarItemWithCompactLayout(countersWrapper);\n    this.toolbarItem.setVisible(false);\n    this.toolbarItem.addEventListener(\n        UI.Toolbar.ToolbarItemWithCompactLayoutEvents.CompactLayoutUpdated, this.onSetCompactLayout, this);\n\n    this.consoleCounter = new IconButton.IconButton.IconButton();\n    countersWrapper.appendChild(this.consoleCounter);\n    this.consoleCounter.data = {\n      clickHandler: Common.Console.Console.instance().show.bind(Common.Console.Console.instance()),\n      groups: [{iconName: 'error_icon'}, {iconName: 'warning_icon'}],\n    };\n\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    this.issueCounter = new IssueCounter.IssueCounter.IssueCounter();\n    countersWrapper.appendChild(this.issueCounter);\n    this.issueCounter.data = {\n      clickHandler: (): void => {\n        Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.StatusBarIssuesCounter);\n        void UI.ViewManager.ViewManager.instance().showView('issues-pane');\n      },\n      issuesManager,\n      displayMode: IssueCounter.IssueCounter.DisplayMode.OnlyMostImportant,\n    };\n\n    this.throttler = new Common.Throttler.Throttler(100);\n\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(\n        SDK.ConsoleModel.Events.ConsoleCleared, this.update, this);\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(SDK.ConsoleModel.Events.MessageAdded, this.update, this);\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(\n        SDK.ConsoleModel.Events.MessageUpdated, this.update, this);\n\n    issuesManager.addEventListener(IssuesManager.IssuesManager.Events.IssuesCountUpdated, this.update, this);\n\n    this.update();\n  }\n\n  onSetCompactLayout(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n    this.setCompactLayout(event.data);\n  }\n\n  setCompactLayout(enable: boolean): void {\n    this.consoleCounter.data = {...this.consoleCounter.data, compact: enable};\n    this.issueCounter.data = {...this.issueCounter.data, compact: enable};\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): WarningErrorCounter {\n    const {forceNew} = opts;\n    if (!warningErrorCounterInstance || forceNew) {\n      warningErrorCounterInstance = new WarningErrorCounter();\n    }\n\n    return warningErrorCounterInstance;\n  }\n\n  private updatedForTest(): void {\n    // Sniffed in tests.\n  }\n\n  private update(): void {\n    this.updatingForTest = true;\n    void this.throttler.schedule(this.updateThrottled.bind(this));\n  }\n\n  get titlesForTesting(): string|null {\n    const button = this.consoleCounter.shadowRoot?.querySelector('button');\n    return button ? button.getAttribute('aria-label') : null;\n  }\n\n  private async updateThrottled(): Promise<void> {\n    const errors = SDK.ConsoleModel.ConsoleModel.instance().errors();\n    const warnings = SDK.ConsoleModel.ConsoleModel.instance().warnings();\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    const issues = issuesManager.numberOfIssues();\n\n    const countToText = (c: number): string|undefined => c === 0 ? undefined : `${c}`;\n\n    /* Update consoleCounter items. */\n    const errorCountTitle = i18nString(UIStrings.sErrors, {n: errors});\n    const warningCountTitle = i18nString(UIStrings.sWarnings, {n: warnings});\n    const newConsoleTexts = [countToText(errors), countToText(warnings)];\n    let consoleSummary = '';\n    if (errors && warnings) {\n      consoleSummary = `${errorCountTitle}, ${warningCountTitle}`;\n    } else if (errors) {\n      consoleSummary = errorCountTitle;\n    } else if (warnings) {\n      consoleSummary = warningCountTitle;\n    }\n    const consoleTitle = i18nString(UIStrings.openConsoleToViewS, {PH1: consoleSummary});\n    const previousData = this.consoleCounter.data;\n\n    this.consoleCounter.data = {\n      ...previousData,\n      groups: previousData.groups.map((g, i) => ({...g, text: newConsoleTexts[i]})),\n      accessibleName: consoleTitle,\n    };\n    // TODO(chromium:1167711): Let the component handle the title and ARIA label.\n    UI.Tooltip.Tooltip.install(this.consoleCounter, consoleTitle);\n    this.consoleCounter.classList.toggle('hidden', !(errors || warnings));\n\n    /* Update issuesCounter items. */\n    const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(issuesManager);\n    const issuesTitleLead = i18nString(UIStrings.openIssuesToView, {n: issues});\n    const issuesTitle = `${issuesTitleLead} ${issueEnumeration}`;\n    // TODO(chromium:1167711): Let the component handle the title and ARIA label.\n    UI.Tooltip.Tooltip.install(this.issueCounter, issuesTitle);\n    this.issueCounter.data = {\n      ...this.issueCounter.data,\n      accessibleName: issuesTitle,\n    };\n    this.issueCounter.classList.toggle('hidden', !issues);\n\n    this.toolbarItem.setVisible(Boolean(errors || warnings || issues));\n\n    UI.InspectorView.InspectorView.instance().toolbarItemResized();\n    this.updatingForTest = false;\n    this.updatedForTest();\n    return;\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return this.toolbarItem;\n  }\n\n  static instanceForTest: WarningErrorCounter|null = null;\n}\n"]}