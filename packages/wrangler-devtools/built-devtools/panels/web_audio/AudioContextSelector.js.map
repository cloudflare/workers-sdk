{"version":3,"file":"AudioContextSelector.js","sourceRoot":"","sources":["../../../../../../front_end/panels/web_audio/AudioContextSelector.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport audioContextSelectorStyles from './audioContextSelector.css.js';\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n  *@description Text that shows there is no recording\n  */\n  noRecordings: '(no recordings)',\n  /**\n  *@description Label prefix for an audio context selection\n  *@example {realtime (1e03ec)} PH1\n  */\n  audioContextS: 'Audio context: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/AudioContextSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class AudioContextSelector extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    UI.SoftDropDown.Delegate<Protocol.WebAudio.BaseAudioContext> {\n  private readonly placeholderText: Platform.UIString.LocalizedString;\n  private readonly items: UI.ListModel.ListModel<Protocol.WebAudio.BaseAudioContext>;\n  private readonly dropDown: UI.SoftDropDown.SoftDropDown<Protocol.WebAudio.BaseAudioContext>;\n  private readonly toolbarItemInternal: UI.Toolbar.ToolbarItem;\n  private selectedContextInternal: Protocol.WebAudio.BaseAudioContext|null;\n  constructor() {\n    super();\n\n    this.placeholderText = i18nString(UIStrings.noRecordings);\n\n    this.items = new UI.ListModel.ListModel();\n\n    this.dropDown = new UI.SoftDropDown.SoftDropDown(this.items, this);\n    this.dropDown.setPlaceholderText(this.placeholderText);\n\n    this.toolbarItemInternal = new UI.Toolbar.ToolbarItem(this.dropDown.element);\n    this.toolbarItemInternal.setEnabled(false);\n    this.toolbarItemInternal.setTitle(i18nString(UIStrings.audioContextS, {PH1: this.placeholderText}));\n    this.items.addEventListener(UI.ListModel.Events.ItemsReplaced, this.onListItemReplaced, this);\n    this.toolbarItemInternal.element.classList.add('toolbar-has-dropdown');\n\n    this.selectedContextInternal = null;\n  }\n\n  private onListItemReplaced(): void {\n    const hasItems = Boolean(this.items.length);\n    this.toolbarItemInternal.setEnabled(hasItems);\n    if (!hasItems) {\n      this.toolbarItemInternal.setTitle(i18nString(UIStrings.audioContextS, {PH1: this.placeholderText}));\n    }\n  }\n\n  contextCreated({data: context}: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    this.items.insert(this.items.length, context);\n\n    // Select if this is the first item.\n    if (this.items.length === 1) {\n      this.dropDown.selectItem(context);\n    }\n  }\n\n  contextDestroyed({data: contextId}: Common.EventTarget.EventTargetEvent<string>): void {\n    const contextIndex =\n        this.items.findIndex((context: Protocol.WebAudio.BaseAudioContext): boolean => context.contextId === contextId);\n    if (contextIndex > -1) {\n      this.items.remove(contextIndex);\n    }\n  }\n\n  contextChanged({data: changedContext}: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>):\n      void {\n    const contextIndex = this.items.findIndex(\n        (context: Protocol.WebAudio.BaseAudioContext): boolean => context.contextId === changedContext.contextId);\n    if (contextIndex > -1) {\n      this.items.replace(contextIndex, changedContext);\n\n      // If the changed context is currently selected by user. Re-select it\n      // because the actual element is replaced with a new one.\n      if (this.selectedContextInternal && this.selectedContextInternal.contextId === changedContext.contextId) {\n        this.dropDown.selectItem(changedContext);\n      }\n    }\n  }\n\n  createElementForItem(item: Protocol.WebAudio.BaseAudioContext): Element {\n    const element = document.createElement('div');\n    const shadowRoot = UI.Utils.createShadowRootWithCoreStyles(\n        element, {cssFile: [audioContextSelectorStyles], delegatesFocus: undefined});\n    const title = shadowRoot.createChild('div', 'title');\n    UI.UIUtils.createTextChild(title, Platform.StringUtilities.trimEndWithMaxLength(this.titleFor(item), 100));\n    return element;\n  }\n\n  selectedContext(): Protocol.WebAudio.BaseAudioContext|null {\n    if (!this.selectedContextInternal) {\n      return null;\n    }\n\n    return this.selectedContextInternal;\n  }\n\n  highlightedItemChanged(\n      from: Protocol.WebAudio.BaseAudioContext|null, to: Protocol.WebAudio.BaseAudioContext|null,\n      fromElement: Element|null, toElement: Element|null): void {\n    if (fromElement) {\n      fromElement.classList.remove('highlighted');\n    }\n    if (toElement) {\n      toElement.classList.add('highlighted');\n    }\n  }\n\n  isItemSelectable(_item: Protocol.WebAudio.BaseAudioContext): boolean {\n    return true;\n  }\n\n  itemSelected(item: Protocol.WebAudio.BaseAudioContext|null): void {\n    if (!item) {\n      return;\n    }\n\n    // It's possible that no context is selected yet.\n    if (!this.selectedContextInternal || this.selectedContextInternal.contextId !== item.contextId) {\n      this.selectedContextInternal = item;\n      this.toolbarItemInternal.setTitle(i18nString(UIStrings.audioContextS, {PH1: this.titleFor(item)}));\n    }\n\n    this.dispatchEventToListeners(Events.ContextSelected, item);\n  }\n\n  reset(): void {\n    this.items.replaceAll([]);\n  }\n\n  titleFor(context: Protocol.WebAudio.BaseAudioContext): string {\n    return `${context.contextType} (${context.contextId.substr(-6)})`;\n  }\n\n  toolbarItem(): UI.Toolbar.ToolbarItem {\n    return this.toolbarItemInternal;\n  }\n}\n\nexport const enum Events {\n  ContextSelected = 'ContextSelected',\n}\n\nexport type EventTypes = {\n  [Events.ContextSelected]: Protocol.WebAudio.BaseAudioContext|null,\n};\n"]}