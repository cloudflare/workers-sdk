{"version":3,"file":"WebAudioView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/web_audio/WebAudioView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport webAudioStyles from './webAudio.css.js';\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as GraphVisualizer from './graph_visualizer/graph_visualizer.js';\n\nimport {ContextDetailBuilder, ContextSummaryBuilder} from './AudioContextContentBuilder.js';\nimport {AudioContextSelector, Events as SelectorEvents} from './AudioContextSelector.js';\nimport {Events as ModelEvents, WebAudioModel} from './WebAudioModel.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Web Audio View\n  */\n  openAPageThatUsesWebAudioApiTo: 'Open a page that uses Web Audio API to start monitoring.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/WebAudioView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet webAudioViewInstance: WebAudioView;\nexport class WebAudioView extends UI.ThrottledWidget.ThrottledWidget implements\n    SDK.TargetManager.SDKModelObserver<WebAudioModel> {\n  private readonly contextSelector: AudioContextSelector;\n  private readonly contentContainer: HTMLElement;\n  private readonly detailViewContainer: HTMLElement;\n  private graphManager: GraphVisualizer.GraphManager.GraphManager;\n  private readonly landingPage: UI.Widget.VBox;\n  private readonly summaryBarContainer: HTMLElement;\n  constructor() {\n    super(true, 1000);\n    this.element.classList.add('web-audio-drawer');\n\n    // Creates the toolbar.\n    const toolbarContainer = this.contentElement.createChild('div', 'web-audio-toolbar-container vbox');\n    this.contextSelector = new AudioContextSelector();\n    const toolbar = new UI.Toolbar.Toolbar('web-audio-toolbar', toolbarContainer);\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('components.collect-garbage'));\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(this.contextSelector.toolbarItem());\n\n    // Create content container\n    this.contentContainer = this.contentElement.createChild('div', 'web-audio-content-container vbox flex-auto');\n\n    // Creates the detail view.\n    this.detailViewContainer = this.contentContainer.createChild('div', 'web-audio-details-container vbox flex-auto');\n\n    this.graphManager = new GraphVisualizer.GraphManager.GraphManager();\n\n    // Creates the landing page.\n    this.landingPage = new UI.Widget.VBox();\n    this.landingPage.contentElement.classList.add('web-audio-landing-page', 'fill');\n    this.landingPage.contentElement.appendChild(UI.Fragment.html`\n  <div>\n  <p>${i18nString(UIStrings.openAPageThatUsesWebAudioApiTo)}</p>\n  </div>\n  `);\n    this.landingPage.show(this.detailViewContainer);\n\n    // Creates the summary bar.\n    this.summaryBarContainer = this.contentContainer.createChild('div', 'web-audio-summary-container');\n\n    this.contextSelector.addEventListener(\n        SelectorEvents.ContextSelected,\n        (event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext|null>): void => {\n          const context = event.data;\n          if (context) {\n            this.updateDetailView(context);\n          }\n          void this.doUpdate();\n        });\n\n    SDK.TargetManager.TargetManager.instance().observeModels(WebAudioModel, this);\n  }\n\n  static instance(opts = {forceNew: null}): WebAudioView {\n    const {forceNew} = opts;\n    if (!webAudioViewInstance || forceNew) {\n      webAudioViewInstance = new WebAudioView();\n    }\n\n    return webAudioViewInstance;\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([webAudioStyles]);\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this.addEventListeners(model);\n    }\n  }\n\n  willHide(): void {\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this.removeEventListeners(model);\n    }\n  }\n\n  modelAdded(webAudioModel: WebAudioModel): void {\n    if (this.isShowing()) {\n      this.addEventListeners(webAudioModel);\n    }\n  }\n\n  modelRemoved(webAudioModel: WebAudioModel): void {\n    this.removeEventListeners(webAudioModel);\n  }\n\n  async doUpdate(): Promise<void> {\n    await this.pollRealtimeData();\n    this.update();\n  }\n\n  private addEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.ensureEnabled();\n    webAudioModel.addEventListener(ModelEvents.ContextCreated, this.contextCreated, this);\n    webAudioModel.addEventListener(ModelEvents.ContextDestroyed, this.contextDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.ContextChanged, this.contextChanged, this);\n    webAudioModel.addEventListener(ModelEvents.ModelReset, this.reset, this);\n    webAudioModel.addEventListener(ModelEvents.ModelSuspend, this.suspendModel, this);\n    webAudioModel.addEventListener(ModelEvents.AudioListenerCreated, this.audioListenerCreated, this);\n    webAudioModel.addEventListener(ModelEvents.AudioListenerWillBeDestroyed, this.audioListenerWillBeDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.AudioNodeCreated, this.audioNodeCreated, this);\n    webAudioModel.addEventListener(ModelEvents.AudioNodeWillBeDestroyed, this.audioNodeWillBeDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.AudioParamCreated, this.audioParamCreated, this);\n    webAudioModel.addEventListener(ModelEvents.AudioParamWillBeDestroyed, this.audioParamWillBeDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.NodesConnected, this.nodesConnected, this);\n    webAudioModel.addEventListener(ModelEvents.NodesDisconnected, this.nodesDisconnected, this);\n    webAudioModel.addEventListener(ModelEvents.NodeParamConnected, this.nodeParamConnected, this);\n    webAudioModel.addEventListener(ModelEvents.NodeParamDisconnected, this.nodeParamDisconnected, this);\n  }\n\n  private removeEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.removeEventListener(ModelEvents.ContextCreated, this.contextCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.ContextDestroyed, this.contextDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.ContextChanged, this.contextChanged, this);\n    webAudioModel.removeEventListener(ModelEvents.ModelReset, this.reset, this);\n    webAudioModel.removeEventListener(ModelEvents.ModelSuspend, this.suspendModel, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioListenerCreated, this.audioListenerCreated, this);\n    webAudioModel.removeEventListener(\n        ModelEvents.AudioListenerWillBeDestroyed, this.audioListenerWillBeDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioNodeCreated, this.audioNodeCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioNodeWillBeDestroyed, this.audioNodeWillBeDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioParamCreated, this.audioParamCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioParamWillBeDestroyed, this.audioParamWillBeDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.NodesConnected, this.nodesConnected, this);\n    webAudioModel.removeEventListener(ModelEvents.NodesDisconnected, this.nodesDisconnected, this);\n    webAudioModel.removeEventListener(ModelEvents.NodeParamConnected, this.nodeParamConnected, this);\n    webAudioModel.removeEventListener(ModelEvents.NodeParamDisconnected, this.nodeParamDisconnected, this);\n  }\n\n  private contextCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    const context = event.data;\n    this.graphManager.createContext(context.contextId);\n    this.contextSelector.contextCreated(event);\n  }\n\n  private contextDestroyed(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.GraphObjectId>): void {\n    const contextId = event.data;\n    this.graphManager.destroyContext(contextId);\n    this.contextSelector.contextDestroyed(event);\n  }\n\n  private contextChanged(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    const context = event.data;\n    if (!this.graphManager.hasContext(context.contextId)) {\n      return;\n    }\n\n    this.contextSelector.contextChanged(event);\n  }\n\n  private reset(): void {\n    if (this.landingPage.isShowing()) {\n      this.landingPage.detach();\n    }\n    this.contextSelector.reset();\n    this.detailViewContainer.removeChildren();\n    this.landingPage.show(this.detailViewContainer);\n    this.graphManager.clearGraphs();\n  }\n\n  private suspendModel(): void {\n    this.graphManager.clearGraphs();\n  }\n\n  private audioListenerCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioListener>): void {\n    const listener = event.data;\n    const graph = this.graphManager.getGraph(listener.contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addNode({\n      nodeId: listener.listenerId,\n      nodeType: 'Listener',\n      numberOfInputs: 0,\n      numberOfOutputs: 0,\n    });\n  }\n\n  private audioListenerWillBeDestroyed(\n      event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioListenerWillBeDestroyedEvent>): void {\n    const {contextId, listenerId} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeNode(listenerId);\n  }\n\n  private audioNodeCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioNode>): void {\n    const node = event.data;\n    const graph = this.graphManager.getGraph(node.contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addNode({\n      nodeId: node.nodeId,\n      nodeType: node.nodeType,\n      numberOfInputs: node.numberOfInputs,\n      numberOfOutputs: node.numberOfOutputs,\n    });\n  }\n\n  private audioNodeWillBeDestroyed(\n      event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioNodeWillBeDestroyedEvent>): void {\n    const {contextId, nodeId} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeNode(nodeId);\n  }\n\n  private audioParamCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioParam>): void {\n    const param = event.data;\n    const graph = this.graphManager.getGraph(param.contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addParam({\n      paramId: param.paramId,\n      paramType: param.paramType,\n      nodeId: param.nodeId,\n    });\n  }\n\n  private audioParamWillBeDestroyed(\n      event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioParamWillBeDestroyedEvent>): void {\n    const {contextId, paramId} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeParam(paramId);\n  }\n\n  private nodesConnected(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.NodesConnectedEvent>): void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addNodeToNodeConnection({\n      sourceId,\n      destinationId,\n      sourceOutputIndex,\n      destinationInputIndex,\n    });\n  }\n\n  private nodesDisconnected(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.NodesDisconnectedEvent>):\n      void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeNodeToNodeConnection({\n      sourceId,\n      destinationId,\n      sourceOutputIndex,\n      destinationInputIndex,\n    });\n  }\n\n  private nodeParamConnected(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.NodeParamConnectedEvent>):\n      void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    // Since the destinationId is AudioParamId, we need to find the nodeId as the\n    // real destinationId.\n    const nodeId = graph.getNodeIdByParamId(destinationId);\n    if (!nodeId) {\n      return;\n    }\n    graph.addNodeToParamConnection({\n      sourceId,\n      destinationId: nodeId,\n      sourceOutputIndex,\n      destinationParamId: destinationId,\n    });\n  }\n\n  private nodeParamDisconnected(\n      event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.NodeParamDisconnectedEvent>): void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    // Since the destinationId is AudioParamId, we need to find the nodeId as the\n    // real destinationId.\n    const nodeId = graph.getNodeIdByParamId(destinationId);\n    if (!nodeId) {\n      return;\n    }\n    graph.removeNodeToParamConnection({\n      sourceId,\n      destinationId: nodeId,\n      sourceOutputIndex,\n      destinationParamId: destinationId,\n    });\n  }\n\n  private updateDetailView(context: Protocol.WebAudio.BaseAudioContext): void {\n    if (this.landingPage.isShowing()) {\n      this.landingPage.detach();\n    }\n    const detailBuilder = new ContextDetailBuilder(context);\n    this.detailViewContainer.removeChildren();\n    this.detailViewContainer.appendChild(detailBuilder.getFragment());\n  }\n\n  private updateSummaryBar(contextId: string, contextRealtimeData: Protocol.WebAudio.ContextRealtimeData): void {\n    const summaryBuilder = new ContextSummaryBuilder(contextId, contextRealtimeData);\n    this.summaryBarContainer.removeChildren();\n    this.summaryBarContainer.appendChild(summaryBuilder.getFragment());\n  }\n\n  private clearSummaryBar(): void {\n    this.summaryBarContainer.removeChildren();\n  }\n\n  private async pollRealtimeData(): Promise<void> {\n    const context = this.contextSelector.selectedContext();\n    if (!context) {\n      this.clearSummaryBar();\n      return;\n    }\n\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      // Display summary only for real-time context.\n      if (context.contextType === 'realtime') {\n        if (!this.graphManager.hasContext(context.contextId)) {\n          continue;\n        }\n        const realtimeData = await model.requestRealtimeData(context.contextId);\n        if (realtimeData) {\n          this.updateSummaryBar(context.contextId, realtimeData);\n        }\n      } else {\n        this.clearSummaryBar();\n      }\n    }\n  }\n}\n"]}