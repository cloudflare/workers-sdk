{"version":3,"file":"AudioContextContentBuilder.js","sourceRoot":"","sources":["../../../../../../front_end/panels/web_audio/AudioContextContentBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n  *@description The current state of an item\n  */\n  state: 'State',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  sampleRate: 'Sample Rate',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  callbackBufferSize: 'Callback Buffer Size',\n  /**\n  * @description Label in the Audio Context Content Builder for the maximum number of output channels\n  * that this Audio Context has.\n  */\n  maxOutputChannels: 'Max Output Channels',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  currentTime: 'Current Time',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  callbackInterval: 'Callback Interval',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  renderCapacity: 'Render Capacity',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/AudioContextContentBuilder.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ContextDetailBuilder {\n  private readonly fragment: DocumentFragment;\n  private readonly container: HTMLDivElement;\n  constructor(context: Protocol.WebAudio.BaseAudioContext) {\n    this.fragment = document.createDocumentFragment();\n    this.container = document.createElement('div');\n    this.container.classList.add('context-detail-container');\n    this.fragment.appendChild(this.container);\n    this.build(context);\n  }\n\n  private build(context: Protocol.WebAudio.BaseAudioContext): void {\n    const title = context.contextType === 'realtime' ? i18n.i18n.lockedString('AudioContext') :\n                                                       i18n.i18n.lockedString('OfflineAudioContext');\n    this.addTitle(title, context.contextId);\n    this.addEntry(i18nString(UIStrings.state), context.contextState);\n    this.addEntry(i18nString(UIStrings.sampleRate), context.sampleRate, 'Hz');\n    if (context.contextType === 'realtime') {\n      this.addEntry(i18nString(UIStrings.callbackBufferSize), context.callbackBufferSize, 'frames');\n    }\n    this.addEntry(i18nString(UIStrings.maxOutputChannels), context.maxOutputChannelCount, 'ch');\n  }\n\n  private addTitle(title: string, subtitle: string): void {\n    this.container.appendChild(UI.Fragment.html`\n  <div class=\"context-detail-header\">\n  <div class=\"context-detail-title\">${title}</div>\n  <div class=\"context-detail-subtitle\">${subtitle}</div>\n  </div>\n  `);\n  }\n\n  private addEntry(entry: string, value: string|number, unit?: string|undefined): void {\n    const valueWithUnit = value + (unit ? ` ${unit}` : '');\n    this.container.appendChild(UI.Fragment.html`\n  <div class=\"context-detail-row\">\n  <div class=\"context-detail-row-entry\">${entry}</div>\n  <div class=\"context-detail-row-value\">${valueWithUnit}</div>\n  </div>\n  `);\n  }\n\n  getFragment(): DocumentFragment {\n    return this.fragment;\n  }\n}\n\nexport class ContextSummaryBuilder {\n  private readonly fragment: DocumentFragment;\n  constructor(contextId: string, contextRealtimeData: Protocol.WebAudio.ContextRealtimeData) {\n    const time = contextRealtimeData.currentTime.toFixed(3);\n    const mean = (contextRealtimeData.callbackIntervalMean * 1000).toFixed(3);\n    const stddev = (Math.sqrt(contextRealtimeData.callbackIntervalVariance) * 1000).toFixed(3);\n    const capacity = (contextRealtimeData.renderCapacity * 100).toFixed(3);\n    this.fragment = document.createDocumentFragment();\n    this.fragment.appendChild(UI.Fragment.html`\n  <div class=\"context-summary-container\">\n  <span>${i18nString(UIStrings.currentTime)}: ${time} s</span>\n  <span>\\u2758</span>\n  <span>${i18nString(UIStrings.callbackInterval)}: μ = ${mean} ms, σ = ${stddev} ms</span>\n  <span>\\u2758</span>\n  <span>${i18nString(UIStrings.renderCapacity)}: ${capacity} %</span>\n  </div>\n  `);\n  }\n\n  getFragment(): DocumentFragment {\n    return this.fragment;\n  }\n}\n"]}