{"version":3,"file":"SourceOrderView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/accessibility/SourceOrderView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,EAAC,oBAAoB,EAAC,MAAM,2BAA2B,CAAC;AAE/D,MAAM,SAAS,GAAG;IAChB;;;;MAIE;IACF,iBAAiB,EAAE,qBAAqB;IACxC;;MAEE;IACF,wBAAwB,EAAE,uCAAuC;IACjE;;MAEE;IACF,4BAA4B,EAAE,iFAAiF;IAC/G;;;MAGE;IACF,eAAe,EAAE,mBAAmB;CACrC,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,yCAAyC,EAAE,SAAS,CAAC,CAAC;AAC/F,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE,MAAM,4BAA4B,GAAG,GAAG,CAAC;AAEzC,MAAM,OAAO,eAAgB,SAAQ,oBAAoB;IACtC,UAAU,CAAU;IACpB,OAAO,CAAU;IAC1B,OAAO,CAAU;IACjB,aAAa,CAA2B;IACxC,eAAe,CAAmB;IAClC,YAAY,CAAqC;IACzD;QACE,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAE/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,CAAC;QAClF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,sBAAsB,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa;YACd,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5G,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QAE1D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAC1D,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QACvF,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,IAA+B;QAChD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;SAC7C;QACD,IAAI,CAAC,eAAe,CAAC,OAAO,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO;SACR;QAED,IAAI,gBAAgB,GAAG,KAAK,CAAC;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACtD,IAAI,UAAU,GAAG,CAAC,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;gBACjC,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;aAC9C;YACD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAA4B,CAAC;YACxE,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC;SACnF;QAED,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,GAAG,4BAA4B,CAAC,CAAC;QACnF,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,CAAC;QACjE,IAAI,gBAAgB,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC;YAChE,IAAI,CAAC,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5C,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;IACH,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YAC5C,OAAO;SACR;QAED,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;YAChC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;YAC/E,IAAI,CAAC,YAAY,CAAC,6BAA6B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpE;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,wBAAwB,EAAE,CAAC;SAC9C;IACH,CAAC;CACF","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {AccessibilitySubPane} from './AccessibilitySubPane.js';\n\nconst UIStrings = {\n  /**\n  * @description Name of a tool which allows the developer to view the contents of the page in the\n  * 'source order' (the order in which the HTML elements show up in the source code). In the\n  * Accessibility panel.\n  */\n  sourceOrderViewer: 'Source Order Viewer',\n  /**\n  *@description Text in Source Order Viewer of the Accessibility panel shown when the selected node has no child elements\n  */\n  noSourceOrderInformation: 'No source order information available',\n  /**\n  *@description Text in Source Order Viewer of the Accessibility panel shown when the selected node has many child elements\n  */\n  thereMayBeADelayInDisplaying: 'There may be a delay in displaying source order for elements with many children',\n  /**\n  * @description Checkbox label in Source Order Viewer of the Accessibility panel. Source order\n  * means the order in which the HTML elements show up in the source code.\n  */\n  showSourceOrder: 'Show source order',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/accessibility/SourceOrderView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst MAX_CHILD_ELEMENTS_THRESHOLD = 300;\n\nexport class SourceOrderPane extends AccessibilitySubPane {\n  private readonly noNodeInfo: Element;\n  private readonly warning: Element;\n  private checked: boolean;\n  private checkboxLabel: UI.UIUtils.CheckboxLabel;\n  private checkboxElement: HTMLInputElement;\n  private overlayModel: SDK.OverlayModel.OverlayModel|null;\n  constructor() {\n    super(i18nString(UIStrings.sourceOrderViewer));\n\n    this.noNodeInfo = this.createInfo(i18nString(UIStrings.noSourceOrderInformation));\n    this.warning = this.createInfo(i18nString(UIStrings.thereMayBeADelayInDisplaying));\n    this.warning.id = 'source-order-warning';\n    this.checked = false;\n    this.checkboxLabel =\n        UI.UIUtils.CheckboxLabel.create(/* title */ i18nString(UIStrings.showSourceOrder), /* checked */ false);\n    this.checkboxElement = this.checkboxLabel.checkboxElement;\n\n    this.checkboxLabel.classList.add('source-order-checkbox');\n    this.checkboxElement.addEventListener('click', this.checkboxClicked.bind(this), false);\n    this.element.appendChild(this.checkboxLabel);\n\n    this.nodeInternal = null;\n    this.overlayModel = null;\n  }\n\n  async setNodeAsync(node: SDK.DOMModel.DOMNode|null): Promise<void> {\n    if (!this.checkboxLabel.classList.contains('hidden')) {\n      this.checked = this.checkboxElement.checked;\n    }\n    this.checkboxElement.checked = false;\n    this.checkboxClicked();\n    super.setNode(node);\n    if (!this.nodeInternal) {\n      this.overlayModel = null;\n      return;\n    }\n\n    let foundSourceOrder = false;\n    const childCount = this.nodeInternal.childNodeCount();\n    if (childCount > 0) {\n      if (!this.nodeInternal.children()) {\n        await this.nodeInternal.getSubtree(1, false);\n      }\n      const children = this.nodeInternal.children() as SDK.DOMModel.DOMNode[];\n      foundSourceOrder = children.some(child => child.nodeType() === Node.ELEMENT_NODE);\n    }\n\n    this.noNodeInfo.classList.toggle('hidden', foundSourceOrder);\n    this.warning.classList.toggle('hidden', childCount < MAX_CHILD_ELEMENTS_THRESHOLD);\n    this.checkboxLabel.classList.toggle('hidden', !foundSourceOrder);\n    if (foundSourceOrder) {\n      this.overlayModel = this.nodeInternal.domModel().overlayModel();\n      this.checkboxElement.checked = this.checked;\n      this.checkboxClicked();\n    } else {\n      this.overlayModel = null;\n    }\n  }\n\n  private checkboxClicked(): void {\n    if (!this.nodeInternal || !this.overlayModel) {\n      return;\n    }\n\n    if (this.checkboxElement.checked) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.SourceOrderViewActivated);\n      this.overlayModel.highlightSourceOrderInOverlay(this.nodeInternal);\n    } else {\n      this.overlayModel.hideSourceOrderInOverlay();\n    }\n  }\n}\n"]}