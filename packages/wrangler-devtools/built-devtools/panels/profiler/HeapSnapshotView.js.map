{"version":3,"file":"HeapSnapshotView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/HeapSnapshotView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as HeapSnapshotModel from '../../models/heap_snapshot_model/heap_snapshot_model.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {HeapSnapshotSortableDataGrid} from './HeapSnapshotDataGrids.js';\nimport {\n  AllocationDataGrid,\n  HeapSnapshotSortableDataGridEvents,\n  HeapSnapshotConstructorsDataGrid,\n  HeapSnapshotDiffDataGrid,\n  HeapSnapshotRetainmentDataGrid,\n  HeapSnapshotContainmentDataGrid,\n} from './HeapSnapshotDataGrids.js';\nimport type {AllocationGridNode, HeapSnapshotGridNode} from './HeapSnapshotGridNodes.js';\nimport {HeapSnapshotGenericObjectNode} from './HeapSnapshotGridNodes.js';\nimport type {HeapSnapshotProxy} from './HeapSnapshotProxy.js';\nimport {HeapSnapshotWorkerProxy} from './HeapSnapshotProxy.js';\nimport type {IdsRangeChangedEvent} from './HeapTimelineOverview.js';\nimport {HeapTimelineOverview, Events, Samples} from './HeapTimelineOverview.js';\nimport * as ModuleUIStrings from './ModuleUIStrings.js';\nimport type {DataDisplayDelegate} from './ProfileHeader.js';\nimport {\n  Events as ProfileHeaderEvents,\n  ProfileEvents as ProfileTypeEvents,\n  ProfileHeader,\n  ProfileType,\n} from './ProfileHeader.js';\nimport {ProfileSidebarTreeElement} from './ProfileSidebarTreeElement.js';\nimport {instance} from './ProfileTypeRegistry.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to find an item\n  */\n  find: 'Find',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  containment: 'Containment',\n  /**\n  *@description Retaining paths title text content in Heap Snapshot View of a profiler tool\n  */\n  retainers: 'Retainers',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allocationStack: 'Allocation stack',\n  /**\n  *@description Screen reader label for a select box that chooses the perspective in the Memory panel when vieweing a Heap Snapshot\n  */\n  perspective: 'Perspective',\n  /**\n  *@description Screen reader label for a select box that chooses the snapshot to use as a base in the Memory panel when vieweing a Heap Snapshot\n  */\n  baseSnapshot: 'Base snapshot',\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  * @description Filter label text in the Memory tool to filter by JavaScript class names for a heap\n  * snapshot.\n  */\n  classFilter: 'Class filter',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  code: 'Code',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  strings: 'Strings',\n  /**\n  *@description Label on a pie chart in the statistics view for the Heap Snapshot tool\n  */\n  jsArrays: 'JS arrays',\n  /**\n  *@description Label on a pie chart in the statistics view for the Heap Snapshot tool\n  */\n  typedArrays: 'Typed arrays',\n  /**\n  *@description Label on a pie chart in the statistics view for the Heap Snapshot tool\n  */\n  systemObjects: 'System objects',\n  /**\n  *@description The reported total size used in the selected time frame of the allocation sampling profile\n  *@example {3 MB} PH1\n  */\n  selectedSizeS: 'Selected size: {PH1}',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allObjects: 'All objects',\n  /**\n  *@description Title in Heap Snapshot View of a profiler tool\n  *@example {Profile 2} PH1\n  */\n  objectsAllocatedBeforeS: 'Objects allocated before {PH1}',\n  /**\n  *@description Title in Heap Snapshot View of a profiler tool\n  *@example {Profile 1} PH1\n  *@example {Profile 2} PH2\n  */\n  objectsAllocatedBetweenSAndS: 'Objects allocated between {PH1} and {PH2}',\n  /**\n  *@description Text for the summary view\n  */\n  summary: 'Summary',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  comparison: 'Comparison',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allocation: 'Allocation',\n  /**\n  *@description Title text content in Heap Snapshot View of a profiler tool\n  */\n  liveObjects: 'Live objects',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  statistics: 'Statistics',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  heapSnapshot: 'Heap snapshot',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  takeHeapSnapshot: 'Take heap snapshot',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  heapSnapshots: 'HEAP SNAPSHOTS',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  heapSnapshotProfilesShowMemory:\n      'Heap snapshot profiles show memory distribution among your page\\'s JavaScript objects and related DOM nodes.',\n  /**\n  *@description Label for a checkbox in the heap snapshot view of the profiler tool. The \"heap snapshot\" contains the\n  * current state of JavaScript memory. With this checkbox enabled, the snapshot also includes internal data that is\n  * specific to Chrome (hence implementation-specific).\n  */\n  exposeInternals: 'Expose internals (includes additional implementation-specific details)',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  * This option turns on inclusion of numerical values in the heap snapshot.\n  */\n  captureNumericValue: 'Include numerical values in capture',\n  /**\n  *@description Progress update that the profiler is capturing a snapshot of the heap\n  */\n  snapshotting: 'Snapshotting…',\n  /**\n  *@description Profile title in Heap Snapshot View of a profiler tool\n  *@example {1} PH1\n  */\n  snapshotD: 'Snapshot {PH1}',\n  /**\n  *@description Text for a percentage value\n  *@example {13.0} PH1\n  */\n  percentagePlaceholder: '{PH1}%',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allocationInstrumentationOn: 'Allocation instrumentation on timeline',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  stopRecordingHeapProfile: 'Stop recording heap profile',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  startRecordingHeapProfile: 'Start recording heap profile',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool.\n  * A stack trace is a list of functions that were called.\n  * This option turns on recording of a stack trace at each allocation.\n  * The recording itself is a somewhat expensive operation, so turning this option on, the website's performance may be affected negatively (e.g. everything becomes slower).\n  */\n  recordAllocationStacksExtra: 'Record stack traces of allocations (extra performance overhead)',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  */\n  recording: 'Recording…',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  allocationTimelines: 'ALLOCATION TIMELINES',\n  /**\n  *@description Description for the 'Allocation timeline' tool in the Memory panel.\n  */\n  AllocationTimelinesShowInstrumented:\n      'Allocation timelines show instrumented JavaScript memory allocations over time. Once profile is recorded you can select a time interval to see objects that were allocated within it and still alive by the end of recording. Use this profile type to isolate memory leaks.',\n  /**\n  *@description Text when something is loading\n  */\n  loading: 'Loading…',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  *@example {30} PH1\n  */\n  savingD: 'Saving… {PH1}%',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  *@example {1,021} PH1\n  */\n  sKb: '{PH1} kB',\n  /**\n  *@description Text in Heap Snapshot View of a profiler tool\n  */\n  heapMemoryUsage: 'Heap memory usage',\n  /**\n  *@description Text of a DOM element in Heap Snapshot View of a profiler tool\n  */\n  stackWasNotRecordedForThisObject:\n      'Stack was not recorded for this object because it had been allocated before this profile recording started.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/HeapSnapshotView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// The way this is handled is to workaround the strings inside the heap_snapshot_worker\n// If strings are removed from inside the worker strings can be declared in this module\n// as any other.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst moduleUIstr_ = i18n.i18n.registerUIStrings('panels/profiler/ModuleUIStrings.ts', ModuleUIStrings.UIStrings);\nconst moduleI18nString = i18n.i18n.getLocalizedString.bind(undefined, moduleUIstr_);\nexport class HeapSnapshotView extends UI.View.SimpleView implements DataDisplayDelegate, UI.SearchableView.Searchable {\n  searchResults: number[];\n  profile: HeapProfileHeader;\n  readonly linkifier: Components.Linkifier.Linkifier;\n  readonly parentDataDisplayDelegate: DataDisplayDelegate;\n  readonly searchableViewInternal: UI.SearchableView.SearchableView;\n  readonly splitWidget: UI.SplitWidget.SplitWidget;\n  readonly containmentDataGrid: HeapSnapshotContainmentDataGrid;\n  readonly containmentWidget: DataGrid.DataGrid.DataGridWidget<HeapSnapshotGridNode>;\n  readonly statisticsView: HeapSnapshotStatisticsView;\n  readonly constructorsDataGrid: HeapSnapshotConstructorsDataGrid;\n  readonly constructorsWidget: DataGrid.DataGrid.DataGridWidget<HeapSnapshotGridNode>;\n  readonly diffDataGrid: HeapSnapshotDiffDataGrid;\n  readonly diffWidget: DataGrid.DataGrid.DataGridWidget<HeapSnapshotGridNode>;\n  readonly allocationDataGrid: AllocationDataGrid|null;\n  readonly allocationWidget: DataGrid.DataGrid.DataGridWidget<HeapSnapshotGridNode>|undefined;\n  readonly allocationStackView: HeapAllocationStackView|undefined;\n  readonly tabbedPane: UI.TabbedPane.TabbedPane|undefined;\n  readonly retainmentDataGrid: HeapSnapshotRetainmentDataGrid;\n  readonly retainmentWidget: DataGrid.DataGrid.DataGridWidget<HeapSnapshotGridNode>;\n  readonly objectDetailsView: UI.Widget.VBox;\n  readonly perspectives: (SummaryPerspective|ComparisonPerspective|ContainmentPerspective|AllocationPerspective|\n                          StatisticsPerspective)[];\n  readonly comparisonPerspective: ComparisonPerspective;\n  readonly perspectiveSelect: UI.Toolbar.ToolbarComboBox;\n  baseSelect: UI.Toolbar.ToolbarComboBox;\n  readonly filterSelect: UI.Toolbar.ToolbarComboBox;\n  readonly classNameFilter: UI.Toolbar.ToolbarInput;\n  readonly selectedSizeText: UI.Toolbar.ToolbarText;\n  readonly popoverHelper: UI.PopoverHelper.PopoverHelper;\n  currentPerspectiveIndex: number;\n  currentPerspective: SummaryPerspective|ComparisonPerspective|ContainmentPerspective|AllocationPerspective|\n      StatisticsPerspective;\n  dataGrid: HeapSnapshotSortableDataGrid|null;\n  readonly searchThrottler: Common.Throttler.Throttler;\n  baseProfile!: HeapProfileHeader|null;\n  trackingOverviewGrid?: HeapTimelineOverview;\n  currentSearchResultIndex: number = -1;\n  currentQuery?: HeapSnapshotModel.HeapSnapshotModel.SearchConfig;\n  constructor(dataDisplayDelegate: DataDisplayDelegate, profile: HeapProfileHeader) {\n    super(i18nString(UIStrings.heapSnapshot));\n\n    this.searchResults = [];\n\n    this.element.classList.add('heap-snapshot-view');\n    this.profile = profile;\n    this.linkifier = new Components.Linkifier.Linkifier();\n    const profileType = profile.profileType();\n\n    profileType.addEventListener(HeapSnapshotProfileTypeEvents.SnapshotReceived, this.onReceiveSnapshot, this);\n    profileType.addEventListener(ProfileTypeEvents.RemoveProfileHeader, this.onProfileHeaderRemoved, this);\n\n    const isHeapTimeline = profileType.id === TrackingHeapSnapshotProfileType.TypeId;\n    if (isHeapTimeline) {\n      this.createOverview();\n    }\n    const hasAllocationStacks = instance.trackingHeapSnapshotProfileType.recordAllocationStacksSetting().get();\n\n    this.parentDataDisplayDelegate = dataDisplayDelegate;\n\n    this.searchableViewInternal = new UI.SearchableView.SearchableView(this, null);\n    this.searchableViewInternal.setPlaceholder(i18nString(UIStrings.find), i18nString(UIStrings.find));\n    this.searchableViewInternal.show(this.element);\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(false, true, 'heapSnapshotSplitViewState', 200, 200);\n    this.splitWidget.show(this.searchableViewInternal.element);\n\n    const heapProfilerModel = profile.heapProfilerModel();\n    this.containmentDataGrid = new HeapSnapshotContainmentDataGrid(\n        heapProfilerModel, this, /* displayName */ i18nString(UIStrings.containment));\n    this.containmentDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, this.selectionChanged, this);\n    this.containmentWidget = this.containmentDataGrid.asWidget();\n    this.containmentWidget.setMinimumSize(50, 25);\n\n    this.statisticsView = new HeapSnapshotStatisticsView();\n\n    this.constructorsDataGrid = new HeapSnapshotConstructorsDataGrid(heapProfilerModel, this);\n    this.constructorsDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, this.selectionChanged, this);\n    this.constructorsWidget = this.constructorsDataGrid.asWidget();\n    this.constructorsWidget.setMinimumSize(50, 25);\n\n    this.diffDataGrid = new HeapSnapshotDiffDataGrid(heapProfilerModel, this);\n    this.diffDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, this.selectionChanged, this);\n    this.diffWidget = this.diffDataGrid.asWidget();\n    this.diffWidget.setMinimumSize(50, 25);\n\n    this.allocationDataGrid = null;\n\n    if (isHeapTimeline && hasAllocationStacks) {\n      this.allocationDataGrid = new AllocationDataGrid(heapProfilerModel, this);\n      this.allocationDataGrid.addEventListener(\n          DataGrid.DataGrid.Events.SelectedNode, this.onSelectAllocationNode, this);\n      this.allocationWidget = this.allocationDataGrid.asWidget();\n      this.allocationWidget.setMinimumSize(50, 25);\n\n      this.allocationStackView = new HeapAllocationStackView(heapProfilerModel);\n      this.allocationStackView.setMinimumSize(50, 25);\n\n      this.tabbedPane = new UI.TabbedPane.TabbedPane();\n    }\n\n    this.retainmentDataGrid = new HeapSnapshotRetainmentDataGrid(heapProfilerModel, this);\n    this.retainmentWidget = this.retainmentDataGrid.asWidget();\n    this.retainmentWidget.setMinimumSize(50, 21);\n    this.retainmentWidget.element.classList.add('retaining-paths-view');\n\n    let splitWidgetResizer;\n    if (this.allocationStackView) {\n      this.tabbedPane = new UI.TabbedPane.TabbedPane();\n\n      this.tabbedPane.appendTab('retainers', i18nString(UIStrings.retainers), this.retainmentWidget);\n      this.tabbedPane.appendTab('allocation-stack', i18nString(UIStrings.allocationStack), this.allocationStackView);\n\n      splitWidgetResizer = this.tabbedPane.headerElement();\n      this.objectDetailsView = this.tabbedPane;\n    } else {\n      const retainmentViewHeader = document.createElement('div');\n      retainmentViewHeader.classList.add('heap-snapshot-view-resizer');\n      const retainingPathsTitleDiv = retainmentViewHeader.createChild('div', 'title');\n      retainmentViewHeader.createChild('div', 'verticalResizerIcon');\n      const retainingPathsTitle = retainingPathsTitleDiv.createChild('span');\n      retainingPathsTitle.textContent = i18nString(UIStrings.retainers);\n\n      splitWidgetResizer = retainmentViewHeader;\n      this.objectDetailsView = new UI.Widget.VBox();\n      this.objectDetailsView.element.appendChild(retainmentViewHeader);\n      this.retainmentWidget.show(this.objectDetailsView.element);\n    }\n    this.splitWidget.hideDefaultResizer();\n    this.splitWidget.installResizer(splitWidgetResizer);\n\n    this.retainmentDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, this.inspectedObjectChanged, this);\n    this.retainmentDataGrid.reset();\n\n    this.perspectives = [];\n    this.comparisonPerspective = new ComparisonPerspective();\n    this.perspectives.push(new SummaryPerspective());\n    if (profile.profileType() !== instance.trackingHeapSnapshotProfileType) {\n      this.perspectives.push(this.comparisonPerspective);\n    }\n    this.perspectives.push(new ContainmentPerspective());\n    if (this.allocationWidget) {\n      this.perspectives.push(new AllocationPerspective());\n    }\n    this.perspectives.push(new StatisticsPerspective());\n\n    this.perspectiveSelect =\n        new UI.Toolbar.ToolbarComboBox(this.onSelectedPerspectiveChanged.bind(this), i18nString(UIStrings.perspective));\n    this.updatePerspectiveOptions();\n\n    this.baseSelect = new UI.Toolbar.ToolbarComboBox(this.changeBase.bind(this), i18nString(UIStrings.baseSnapshot));\n    this.baseSelect.setVisible(false);\n    this.updateBaseOptions();\n\n    this.filterSelect = new UI.Toolbar.ToolbarComboBox(this.changeFilter.bind(this), i18nString(UIStrings.filter));\n    this.filterSelect.setVisible(false);\n    this.updateFilterOptions();\n\n    this.classNameFilter = new UI.Toolbar.ToolbarInput(i18nString(UIStrings.classFilter));\n    this.classNameFilter.setVisible(false);\n    this.constructorsDataGrid.setNameFilter(this.classNameFilter);\n    this.diffDataGrid.setNameFilter(this.classNameFilter);\n\n    this.selectedSizeText = new UI.Toolbar.ToolbarText();\n\n    this.popoverHelper = new UI.PopoverHelper.PopoverHelper(this.element, this.getPopoverRequest.bind(this));\n    this.popoverHelper.setDisableOnClick(true);\n    this.popoverHelper.setHasPadding(true);\n    this.element.addEventListener('scroll', this.popoverHelper.hidePopover.bind(this.popoverHelper), true);\n\n    this.currentPerspectiveIndex = 0;\n    this.currentPerspective = this.perspectives[0];\n    this.currentPerspective.activate(this);\n    this.dataGrid = this.currentPerspective.masterGrid(this);\n\n    void this.populate();\n    this.searchThrottler = new Common.Throttler.Throttler(0);\n\n    for (const existingProfile of this.profiles()) {\n      existingProfile.addEventListener(ProfileHeaderEvents.ProfileTitleChanged, this.updateControls, this);\n    }\n  }\n\n  createOverview(): void {\n    const profileType = this.profile.profileType();\n    this.trackingOverviewGrid = new HeapTimelineOverview();\n    this.trackingOverviewGrid.addEventListener(Events.IdsRangeChanged, this.onIdsRangeChanged.bind(this));\n    if (!this.profile.fromFile() && profileType.profileBeingRecorded() === this.profile) {\n      (profileType as TrackingHeapSnapshotProfileType)\n          .addEventListener(TrackingHeapSnapshotProfileTypeEvents.HeapStatsUpdate, this.onHeapStatsUpdate, this);\n      (profileType as TrackingHeapSnapshotProfileType)\n          .addEventListener(TrackingHeapSnapshotProfileTypeEvents.TrackingStopped, this.onStopTracking, this);\n      this.trackingOverviewGrid.start();\n    }\n  }\n\n  onStopTracking(): void {\n    const profileType = this.profile.profileType() as TrackingHeapSnapshotProfileType;\n    profileType.removeEventListener(\n        TrackingHeapSnapshotProfileTypeEvents.HeapStatsUpdate, this.onHeapStatsUpdate, this);\n    profileType.removeEventListener(TrackingHeapSnapshotProfileTypeEvents.TrackingStopped, this.onStopTracking, this);\n    if (this.trackingOverviewGrid) {\n      this.trackingOverviewGrid.stop();\n    }\n  }\n\n  onHeapStatsUpdate({data: samples}: Common.EventTarget.EventTargetEvent<Samples>): void {\n    if (this.trackingOverviewGrid) {\n      this.trackingOverviewGrid.setSamples(samples);\n    }\n  }\n\n  searchableView(): UI.SearchableView.SearchableView {\n    return this.searchableViewInternal;\n  }\n\n  showProfile(profile: ProfileHeader|null): UI.Widget.Widget|null {\n    return this.parentDataDisplayDelegate.showProfile(profile);\n  }\n\n  showObject(snapshotObjectId: string, perspectiveName: string): void {\n    if (Number(snapshotObjectId) <= this.profile.maxJSObjectId) {\n      void this.selectLiveObject(perspectiveName, snapshotObjectId);\n    } else {\n      this.parentDataDisplayDelegate.showObject(snapshotObjectId, perspectiveName);\n    }\n  }\n\n  async linkifyObject(nodeIndex: number): Promise<Element|null> {\n    const heapProfilerModel = this.profile.heapProfilerModel();\n    // heapProfilerModel is null if snapshot was loaded from file\n    if (!heapProfilerModel) {\n      return null;\n    }\n    const location = await this.profile.getLocation(nodeIndex);\n    if (!location) {\n      return null;\n    }\n    const debuggerModel = heapProfilerModel.runtimeModel().debuggerModel();\n    const rawLocation = debuggerModel.createRawLocationByScriptId(\n        String(location.scriptId) as Protocol.Runtime.ScriptId, location.lineNumber, location.columnNumber);\n    if (!rawLocation) {\n      return null;\n    }\n    const script = rawLocation.script();\n    const sourceURL = script && script.sourceURL;\n    return sourceURL && this.linkifier ? this.linkifier.linkifyRawLocation(rawLocation, sourceURL) : null;\n  }\n\n  async populate(): Promise<void> {\n    const heapSnapshotProxy = await this.profile.loadPromise;\n\n    void this.retrieveStatistics(heapSnapshotProxy);\n    if (this.dataGrid) {\n      void this.dataGrid.setDataSource(heapSnapshotProxy, 0);\n    }\n\n    if (this.profile.profileType().id === TrackingHeapSnapshotProfileType.TypeId && this.profile.fromFile()) {\n      const samples = await heapSnapshotProxy.getSamples();\n      if (samples) {\n        console.assert(Boolean(samples.timestamps.length));\n        const profileSamples = new Samples();\n        profileSamples.sizes = samples.sizes;\n        profileSamples.ids = samples.lastAssignedIds;\n        profileSamples.timestamps = samples.timestamps;\n        profileSamples.max = samples.sizes;\n        profileSamples.totalTime = Math.max(samples.timestamps[samples.timestamps.length - 1] || 0, 10000);\n        if (this.trackingOverviewGrid) {\n          this.trackingOverviewGrid.setSamples(profileSamples);\n        }\n      }\n    }\n\n    const list = this.profiles();\n    const profileIndex = list.indexOf(this.profile);\n    this.baseSelect.setSelectedIndex(Math.max(0, profileIndex - 1));\n    if (this.trackingOverviewGrid) {\n      this.trackingOverviewGrid.updateGrid();\n    }\n  }\n\n  async retrieveStatistics(heapSnapshotProxy: HeapSnapshotProxy):\n      Promise<HeapSnapshotModel.HeapSnapshotModel.Statistics> {\n    const statistics = await heapSnapshotProxy.getStatistics();\n\n    const records = [\n      {value: statistics.code, color: '#f77', title: i18nString(UIStrings.code)},\n      {value: statistics.strings, color: '#5e5', title: i18nString(UIStrings.strings)},\n      {value: statistics.jsArrays, color: '#7af', title: i18nString(UIStrings.jsArrays)},\n      {value: statistics.native, color: '#fc5', title: i18nString(UIStrings.typedArrays)},\n      {value: statistics.system, color: '#98f', title: i18nString(UIStrings.systemObjects)},\n    ];\n    this.statisticsView.setTotalAndRecords(statistics.total, records);\n    return statistics;\n  }\n\n  onIdsRangeChanged(event: Common.EventTarget.EventTargetEvent<IdsRangeChangedEvent>): void {\n    const {minId, maxId} = event.data;\n    this.selectedSizeText.setText(\n        i18nString(UIStrings.selectedSizeS, {PH1: Platform.NumberUtilities.bytesToString(event.data.size)}));\n    if (this.constructorsDataGrid.snapshot) {\n      this.constructorsDataGrid.setSelectionRange(minId, maxId);\n    }\n  }\n\n  async toolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    const result: UI.Toolbar.ToolbarItem[] = [this.perspectiveSelect, this.classNameFilter];\n    if (this.profile.profileType() !== instance.trackingHeapSnapshotProfileType) {\n      result.push(this.baseSelect, this.filterSelect);\n    }\n    result.push(this.selectedSizeText);\n    return result;\n  }\n\n  willHide(): void {\n    this.currentSearchResultIndex = -1;\n    this.popoverHelper.hidePopover();\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return false;\n  }\n\n  searchCanceled(): void {\n    this.currentSearchResultIndex = -1;\n    this.searchResults = [];\n  }\n\n  selectRevealedNode(node: HeapSnapshotGridNode|null): void {\n    if (node) {\n      node.select();\n    }\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    const nextQuery = new HeapSnapshotModel.HeapSnapshotModel.SearchConfig(\n        searchConfig.query.trim(), searchConfig.caseSensitive, searchConfig.isRegex, shouldJump,\n        jumpBackwards || false);\n\n    void this.searchThrottler.schedule(this.performSearchInternal.bind(this, nextQuery));\n  }\n\n  async performSearchInternal(nextQuery: HeapSnapshotModel.HeapSnapshotModel.SearchConfig): Promise<void> {\n    // Call searchCanceled since it will reset everything we need before doing a new search.\n    this.searchCanceled();\n\n    if (!this.currentPerspective.supportsSearch()) {\n      return;\n    }\n\n    this.currentQuery = nextQuery;\n    const query = nextQuery.query.trim();\n\n    if (!query) {\n      return;\n    }\n\n    if (query.charAt(0) === '@') {\n      const snapshotNodeId = parseInt(query.substring(1), 10);\n      if (isNaN(snapshotNodeId)) {\n        return;\n      }\n      if (!this.dataGrid) {\n        return;\n      }\n      const node = await this.dataGrid.revealObjectByHeapSnapshotId(String(snapshotNodeId));\n      this.selectRevealedNode(node);\n      return;\n    }\n\n    if (!this.profile.snapshotProxy || !this.dataGrid) {\n      return;\n    }\n\n    const filter = this.dataGrid.nodeFilter();\n    this.searchResults = filter ? await this.profile.snapshotProxy.search(this.currentQuery, filter) : [];\n\n    this.searchableViewInternal.updateSearchMatchesCount(this.searchResults.length);\n    if (this.searchResults.length) {\n      this.currentSearchResultIndex = nextQuery.jumpBackward ? this.searchResults.length - 1 : 0;\n    }\n    await this.jumpToSearchResult(this.currentSearchResultIndex);\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this.searchResults.length) {\n      return;\n    }\n    this.currentSearchResultIndex = (this.currentSearchResultIndex + 1) % this.searchResults.length;\n    void this.searchThrottler.schedule(this.jumpToSearchResult.bind(this, this.currentSearchResultIndex));\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this.searchResults.length) {\n      return;\n    }\n    this.currentSearchResultIndex =\n        (this.currentSearchResultIndex + this.searchResults.length - 1) % this.searchResults.length;\n    void this.searchThrottler.schedule(this.jumpToSearchResult.bind(this, this.currentSearchResultIndex));\n  }\n\n  async jumpToSearchResult(searchResultIndex: number): Promise<void> {\n    this.searchableViewInternal.updateCurrentMatchIndex(searchResultIndex);\n    if (searchResultIndex === -1) {\n      return;\n    }\n    if (!this.dataGrid) {\n      return;\n    }\n    const node = await this.dataGrid.revealObjectByHeapSnapshotId(String(this.searchResults[searchResultIndex]));\n    this.selectRevealedNode(node);\n  }\n\n  refreshVisibleData(): void {\n    if (!this.dataGrid) {\n      return;\n    }\n    let child: (HeapSnapshotGridNode|null) = (this.dataGrid.rootNode().children[0] as HeapSnapshotGridNode | null);\n    while (child) {\n      child.refresh();\n      child = (child.traverseNextNode(false, null, true) as HeapSnapshotGridNode | null);\n    }\n  }\n\n  changeBase(): void {\n    if (this.baseProfile === this.profiles()[this.baseSelect.selectedIndex()]) {\n      return;\n    }\n    this.baseProfile = (this.profiles()[this.baseSelect.selectedIndex()] as HeapProfileHeader);\n    const dataGrid = (this.dataGrid as HeapSnapshotDiffDataGrid);\n    // Change set base data source only if main data source is already set.\n    if (dataGrid.snapshot) {\n      void this.baseProfile.loadPromise.then(dataGrid.setBaseDataSource.bind(dataGrid));\n    }\n\n    if (!this.currentQuery || !this.searchResults) {\n      return;\n    }\n\n    // The current search needs to be performed again. First negate out previous match\n    // count by calling the search finished callback with a negative number of matches.\n    // Then perform the search again with the same query and callback.\n    this.performSearch(this.currentQuery, false);\n  }\n\n  changeFilter(): void {\n    const profileIndex = this.filterSelect.selectedIndex() - 1;\n    if (!this.dataGrid) {\n      return;\n    }\n    (this.dataGrid as HeapSnapshotConstructorsDataGrid)\n        .filterSelectIndexChanged((this.profiles() as HeapProfileHeader[]), profileIndex);\n\n    if (!this.currentQuery || !this.searchResults) {\n      return;\n    }\n\n    // The current search needs to be performed again. First negate out previous match\n    // count by calling the search finished callback with a negative number of matches.\n    // Then perform the search again with the same query and callback.\n    this.performSearch(this.currentQuery, false);\n  }\n\n  profiles(): ProfileHeader[] {\n    return this.profile.profileType().getProfiles();\n  }\n\n  selectionChanged(event: Common.EventTarget.EventTargetEvent<DataGrid.DataGrid.DataGridNode<HeapSnapshotGridNode>>):\n      void {\n    const selectedNode = (event.data as HeapSnapshotGridNode);\n    this.setSelectedNodeForDetailsView(selectedNode);\n    this.inspectedObjectChanged(event);\n  }\n\n  onSelectAllocationNode(\n      event: Common.EventTarget.EventTargetEvent<DataGrid.DataGrid.DataGridNode<HeapSnapshotGridNode>>): void {\n    const selectedNode = (event.data as AllocationGridNode);\n    this.constructorsDataGrid.setAllocationNodeId(selectedNode.allocationNodeId());\n    this.setSelectedNodeForDetailsView(null);\n  }\n\n  inspectedObjectChanged(\n      event: Common.EventTarget.EventTargetEvent<DataGrid.DataGrid.DataGridNode<HeapSnapshotGridNode>>): void {\n    const selectedNode = (event.data as HeapSnapshotGridNode);\n    const heapProfilerModel = this.profile.heapProfilerModel();\n    if (heapProfilerModel && selectedNode instanceof HeapSnapshotGenericObjectNode) {\n      void heapProfilerModel.addInspectedHeapObject(\n          String(selectedNode.snapshotNodeId) as Protocol.HeapProfiler.HeapSnapshotObjectId);\n    }\n  }\n\n  setSelectedNodeForDetailsView(nodeItem: HeapSnapshotGridNode|null): void {\n    const dataSource = nodeItem && nodeItem.retainersDataSource();\n    if (dataSource) {\n      void this.retainmentDataGrid.setDataSource(dataSource.snapshot, dataSource.snapshotNodeIndex);\n      if (this.allocationStackView) {\n        void this.allocationStackView.setAllocatedObject(dataSource.snapshot, dataSource.snapshotNodeIndex);\n      }\n    } else {\n      if (this.allocationStackView) {\n        this.allocationStackView.clear();\n      }\n      this.retainmentDataGrid.reset();\n    }\n  }\n\n  async changePerspectiveAndWait(perspectiveTitle: string): Promise<void> {\n    const perspectiveIndex = this.perspectives.findIndex(perspective => perspective.title() === perspectiveTitle);\n    if (perspectiveIndex === -1 || this.currentPerspectiveIndex === perspectiveIndex) {\n      return;\n    }\n    const dataGrid = this.perspectives[perspectiveIndex].masterGrid(this);\n\n    if (!dataGrid) {\n      return;\n    }\n\n    const promise = dataGrid.once(HeapSnapshotSortableDataGridEvents.ContentShown);\n\n    const option = this.perspectiveSelect.options().find(option => option.value === String(perspectiveIndex));\n    this.perspectiveSelect.select((option as Element));\n    this.changePerspective(perspectiveIndex);\n    await promise;\n  }\n\n  async updateDataSourceAndView(): Promise<void> {\n    const dataGrid = this.dataGrid;\n    if (!dataGrid || dataGrid.snapshot) {\n      return;\n    }\n\n    const snapshotProxy = await this.profile.loadPromise;\n\n    if (this.dataGrid !== dataGrid) {\n      return;\n    }\n    if (dataGrid.snapshot !== snapshotProxy) {\n      void dataGrid.setDataSource(snapshotProxy, 0);\n    }\n    if (dataGrid !== this.diffDataGrid) {\n      return;\n    }\n    if (!this.baseProfile) {\n      this.baseProfile = (this.profiles()[this.baseSelect.selectedIndex()] as HeapProfileHeader);\n    }\n\n    const baseSnapshotProxy = await this.baseProfile.loadPromise;\n\n    if (this.diffDataGrid.baseSnapshot !== baseSnapshotProxy) {\n      this.diffDataGrid.setBaseDataSource(baseSnapshotProxy);\n    }\n  }\n\n  onSelectedPerspectiveChanged(event: Event): void {\n    this.changePerspective(Number((event.target as HTMLSelectElement).selectedOptions[0].value));\n  }\n\n  changePerspective(selectedIndex: number): void {\n    if (selectedIndex === this.currentPerspectiveIndex) {\n      return;\n    }\n\n    this.currentPerspectiveIndex = selectedIndex;\n\n    this.currentPerspective.deactivate(this);\n    const perspective = this.perspectives[selectedIndex];\n    this.currentPerspective = perspective;\n    this.dataGrid = (perspective.masterGrid(this) as HeapSnapshotSortableDataGrid);\n    perspective.activate(this);\n\n    this.refreshVisibleData();\n    if (this.dataGrid) {\n      this.dataGrid.updateWidths();\n    }\n\n    void this.updateDataSourceAndView();\n\n    if (!this.currentQuery || !this.searchResults) {\n      return;\n    }\n\n    // The current search needs to be performed again. First negate out previous match\n    // count by calling the search finished callback with a negative number of matches.\n    // Then perform the search again the with same query and callback.\n    this.performSearch(this.currentQuery, false);\n  }\n\n  async selectLiveObject(perspectiveName: string, snapshotObjectId: string): Promise<void> {\n    await this.changePerspectiveAndWait(perspectiveName);\n    if (!this.dataGrid) {\n      return;\n    }\n    const node = await this.dataGrid.revealObjectByHeapSnapshotId(snapshotObjectId);\n    if (node) {\n      node.select();\n    } else {\n      Common.Console.Console.instance().error('Cannot find corresponding heap snapshot node');\n    }\n  }\n\n  getPopoverRequest(event: Event): UI.PopoverHelper.PopoverRequest|null {\n    const span = UI.UIUtils.enclosingNodeOrSelfWithNodeName((event.target as Node), 'span');\n    const row = UI.UIUtils.enclosingNodeOrSelfWithNodeName((event.target as Node), 'tr');\n    if (!row) {\n      return null;\n    }\n    if (!this.dataGrid) {\n      return null;\n    }\n    const node = this.dataGrid.dataGridNodeFromNode(row) || this.containmentDataGrid.dataGridNodeFromNode(row) ||\n        this.constructorsDataGrid.dataGridNodeFromNode(row) || this.diffDataGrid.dataGridNodeFromNode(row) ||\n        (this.allocationDataGrid && this.allocationDataGrid.dataGridNodeFromNode(row)) ||\n        this.retainmentDataGrid.dataGridNodeFromNode(row);\n    const heapProfilerModel = this.profile.heapProfilerModel();\n    if (!node || !span || !heapProfilerModel) {\n      return null;\n    }\n    let objectPopoverHelper: ObjectUI.ObjectPopoverHelper.ObjectPopoverHelper|null;\n    return {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-expect-error\n      box: span.boxInWindow(),\n      show: async(popover: UI.GlassPane.GlassPane): Promise<boolean> => {\n        if (!heapProfilerModel) {\n          return false;\n        }\n        const remoteObject = await (node as HeapSnapshotGridNode).queryObjectContent(heapProfilerModel, 'popover');\n        if (!remoteObject) {\n          return false;\n        }\n        objectPopoverHelper =\n            await ObjectUI.ObjectPopoverHelper.ObjectPopoverHelper.buildObjectPopover(remoteObject, popover);\n        if (!objectPopoverHelper) {\n          heapProfilerModel.runtimeModel().releaseObjectGroup('popover');\n          return false;\n        }\n        return true;\n      },\n      hide: (): void => {\n        heapProfilerModel.runtimeModel().releaseObjectGroup('popover');\n        if (objectPopoverHelper) {\n          objectPopoverHelper.dispose();\n        }\n      },\n    };\n  }\n\n  updatePerspectiveOptions(): void {\n    const multipleSnapshots = this.profiles().length > 1;\n    this.perspectiveSelect.removeOptions();\n    this.perspectives.forEach((perspective, index) => {\n      if (multipleSnapshots || perspective !== this.comparisonPerspective) {\n        this.perspectiveSelect.createOption(perspective.title(), String(index));\n      }\n    });\n  }\n\n  updateBaseOptions(): void {\n    const list = this.profiles();\n    const selectedIndex = this.baseSelect.selectedIndex();\n\n    this.baseSelect.removeOptions();\n    for (const item of list) {\n      this.baseSelect.createOption(item.title);\n    }\n\n    if (selectedIndex > -1) {\n      this.baseSelect.setSelectedIndex(selectedIndex);\n    }\n  }\n\n  updateFilterOptions(): void {\n    const list = this.profiles();\n    const selectedIndex = this.filterSelect.selectedIndex();\n\n    this.filterSelect.removeOptions();\n    this.filterSelect.createOption(i18nString(UIStrings.allObjects));\n    for (let i = 0; i < list.length; ++i) {\n      let title;\n      if (!i) {\n        title = i18nString(UIStrings.objectsAllocatedBeforeS, {PH1: list[i].title});\n      } else {\n        title = i18nString(UIStrings.objectsAllocatedBetweenSAndS, {PH1: list[i - 1].title, PH2: list[i].title});\n      }\n      this.filterSelect.createOption(title);\n    }\n\n    if (selectedIndex > -1) {\n      this.filterSelect.setSelectedIndex(selectedIndex);\n    }\n  }\n\n  updateControls(): void {\n    this.updatePerspectiveOptions();\n    this.updateBaseOptions();\n    this.updateFilterOptions();\n  }\n\n  onReceiveSnapshot(event: Common.EventTarget.EventTargetEvent<ProfileHeader>): void {\n    this.updateControls();\n    const profile = event.data;\n    profile.addEventListener(ProfileHeaderEvents.ProfileTitleChanged, this.updateControls, this);\n  }\n\n  onProfileHeaderRemoved(event: Common.EventTarget.EventTargetEvent<ProfileHeader>): void {\n    const profile = event.data;\n    profile.removeEventListener(ProfileHeaderEvents.ProfileTitleChanged, this.updateControls, this);\n\n    if (this.profile === profile) {\n      this.detach();\n      this.profile.profileType().removeEventListener(\n          HeapSnapshotProfileTypeEvents.SnapshotReceived, this.onReceiveSnapshot, this);\n      this.profile.profileType().removeEventListener(\n          ProfileTypeEvents.RemoveProfileHeader, this.onProfileHeaderRemoved, this);\n      this.dispose();\n    } else {\n      this.updateControls();\n    }\n  }\n\n  dispose(): void {\n    this.linkifier.dispose();\n    this.popoverHelper.dispose();\n    if (this.allocationStackView) {\n      this.allocationStackView.clear();\n      if (this.allocationDataGrid) {\n        this.allocationDataGrid.dispose();\n      }\n    }\n    this.onStopTracking();\n    if (this.trackingOverviewGrid) {\n      this.trackingOverviewGrid.removeEventListener(Events.IdsRangeChanged, this.onIdsRangeChanged.bind(this));\n    }\n  }\n}\n\nexport class Perspective {\n  readonly titleInternal: string;\n  constructor(title: string) {\n    this.titleInternal = title;\n  }\n\n  activate(_heapSnapshotView: HeapSnapshotView): void {\n  }\n\n  deactivate(heapSnapshotView: HeapSnapshotView): void {\n    heapSnapshotView.baseSelect.setVisible(false);\n    heapSnapshotView.filterSelect.setVisible(false);\n    heapSnapshotView.classNameFilter.setVisible(false);\n    if (heapSnapshotView.trackingOverviewGrid) {\n      heapSnapshotView.trackingOverviewGrid.detach();\n    }\n    if (heapSnapshotView.allocationWidget) {\n      heapSnapshotView.allocationWidget.detach();\n    }\n    if (heapSnapshotView.statisticsView) {\n      heapSnapshotView.statisticsView.detach();\n    }\n\n    heapSnapshotView.splitWidget.detach();\n    heapSnapshotView.splitWidget.detachChildWidgets();\n  }\n\n  masterGrid(_heapSnapshotView: HeapSnapshotView): HeapSnapshotSortableDataGrid|null {\n    return null;\n  }\n\n  title(): string {\n    return this.titleInternal;\n  }\n\n  supportsSearch(): boolean {\n    return false;\n  }\n}\n\nexport class SummaryPerspective extends Perspective {\n  constructor() {\n    super(i18nString(UIStrings.summary));\n  }\n\n  activate(heapSnapshotView: HeapSnapshotView): void {\n    heapSnapshotView.splitWidget.setMainWidget(heapSnapshotView.constructorsWidget);\n    heapSnapshotView.splitWidget.setSidebarWidget(heapSnapshotView.objectDetailsView);\n    heapSnapshotView.splitWidget.show(heapSnapshotView.searchableViewInternal.element);\n    heapSnapshotView.filterSelect.setVisible(true);\n    heapSnapshotView.classNameFilter.setVisible(true);\n    if (!heapSnapshotView.trackingOverviewGrid) {\n      return;\n    }\n    heapSnapshotView.trackingOverviewGrid.show(\n        heapSnapshotView.searchableViewInternal.element, heapSnapshotView.splitWidget.element);\n    heapSnapshotView.trackingOverviewGrid.update();\n    heapSnapshotView.trackingOverviewGrid.updateGrid();\n  }\n\n  masterGrid(heapSnapshotView: HeapSnapshotView): HeapSnapshotSortableDataGrid {\n    return heapSnapshotView.constructorsDataGrid;\n  }\n\n  supportsSearch(): boolean {\n    return true;\n  }\n}\n\nexport class ComparisonPerspective extends Perspective {\n  constructor() {\n    super(i18nString(UIStrings.comparison));\n  }\n\n  activate(heapSnapshotView: HeapSnapshotView): void {\n    heapSnapshotView.splitWidget.setMainWidget(heapSnapshotView.diffWidget);\n    heapSnapshotView.splitWidget.setSidebarWidget(heapSnapshotView.objectDetailsView);\n    heapSnapshotView.splitWidget.show(heapSnapshotView.searchableViewInternal.element);\n    heapSnapshotView.baseSelect.setVisible(true);\n    heapSnapshotView.classNameFilter.setVisible(true);\n  }\n\n  masterGrid(heapSnapshotView: HeapSnapshotView): HeapSnapshotSortableDataGrid {\n    return heapSnapshotView.diffDataGrid;\n  }\n\n  supportsSearch(): boolean {\n    return true;\n  }\n}\n\nexport class ContainmentPerspective extends Perspective {\n  constructor() {\n    super(i18nString(UIStrings.containment));\n  }\n\n  activate(heapSnapshotView: HeapSnapshotView): void {\n    heapSnapshotView.splitWidget.setMainWidget(heapSnapshotView.containmentWidget);\n    heapSnapshotView.splitWidget.setSidebarWidget(heapSnapshotView.objectDetailsView);\n    heapSnapshotView.splitWidget.show(heapSnapshotView.searchableViewInternal.element);\n  }\n\n  masterGrid(heapSnapshotView: HeapSnapshotView): HeapSnapshotSortableDataGrid {\n    return heapSnapshotView.containmentDataGrid;\n  }\n}\n\nexport class AllocationPerspective extends Perspective {\n  readonly allocationSplitWidget: UI.SplitWidget.SplitWidget;\n  constructor() {\n    super(i18nString(UIStrings.allocation));\n    this.allocationSplitWidget =\n        new UI.SplitWidget.SplitWidget(false, true, 'heapSnapshotAllocationSplitViewState', 200, 200);\n    this.allocationSplitWidget.setSidebarWidget(new UI.Widget.VBox());\n  }\n\n  activate(heapSnapshotView: HeapSnapshotView): void {\n    if (heapSnapshotView.allocationWidget) {\n      this.allocationSplitWidget.setMainWidget(heapSnapshotView.allocationWidget);\n    }\n    heapSnapshotView.splitWidget.setMainWidget(heapSnapshotView.constructorsWidget);\n    heapSnapshotView.splitWidget.setSidebarWidget(heapSnapshotView.objectDetailsView);\n\n    const allocatedObjectsView = new UI.Widget.VBox();\n    const resizer = document.createElement('div');\n    resizer.classList.add('heap-snapshot-view-resizer');\n    const title = resizer.createChild('div', 'title').createChild('span');\n    resizer.createChild('div', 'verticalResizerIcon');\n    title.textContent = i18nString(UIStrings.liveObjects);\n    this.allocationSplitWidget.hideDefaultResizer();\n    this.allocationSplitWidget.installResizer(resizer);\n    allocatedObjectsView.element.appendChild(resizer);\n    heapSnapshotView.splitWidget.show(allocatedObjectsView.element);\n    this.allocationSplitWidget.setSidebarWidget(allocatedObjectsView);\n\n    this.allocationSplitWidget.show(heapSnapshotView.searchableViewInternal.element);\n\n    heapSnapshotView.constructorsDataGrid.clear();\n    if (heapSnapshotView.allocationDataGrid) {\n      const selectedNode = (heapSnapshotView.allocationDataGrid.selectedNode as AllocationGridNode);\n      if (selectedNode) {\n        heapSnapshotView.constructorsDataGrid.setAllocationNodeId(selectedNode.allocationNodeId());\n      }\n    }\n  }\n\n  deactivate(heapSnapshotView: HeapSnapshotView): void {\n    this.allocationSplitWidget.detach();\n    super.deactivate(heapSnapshotView);\n  }\n\n  masterGrid(heapSnapshotView: HeapSnapshotView): HeapSnapshotSortableDataGrid|null {\n    return heapSnapshotView.allocationDataGrid;\n  }\n}\n\nexport class StatisticsPerspective extends Perspective {\n  constructor() {\n    super(i18nString(UIStrings.statistics));\n  }\n\n  activate(heapSnapshotView: HeapSnapshotView): void {\n    heapSnapshotView.statisticsView.show(heapSnapshotView.searchableViewInternal.element);\n  }\n\n  masterGrid(_heapSnapshotView: HeapSnapshotView): HeapSnapshotSortableDataGrid|null {\n    return null;\n  }\n}\n\nexport class HeapSnapshotProfileType extends\n    Common.ObjectWrapper.eventMixin<HeapSnapshotProfileTypeEventTypes, typeof ProfileType>(ProfileType)\n        implements SDK.TargetManager.SDKModelObserver<SDK.HeapProfilerModel.HeapProfilerModel> {\n  readonly exposeInternals: Common.Settings.Setting<boolean>;\n  readonly captureNumericValue: Common.Settings.Setting<boolean>;\n  customContentInternal: HTMLElement|null;\n  constructor(id?: string, title?: string) {\n    super(id || HeapSnapshotProfileType.TypeId, title || i18nString(UIStrings.heapSnapshot));\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.HeapProfilerModel.HeapProfilerModel, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.HeapProfilerModel.HeapProfilerModel, SDK.HeapProfilerModel.Events.ResetProfiles, this.resetProfiles, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.HeapProfilerModel.HeapProfilerModel, SDK.HeapProfilerModel.Events.AddHeapSnapshotChunk,\n        this.addHeapSnapshotChunk, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.HeapProfilerModel.HeapProfilerModel, SDK.HeapProfilerModel.Events.ReportHeapSnapshotProgress,\n        this.reportHeapSnapshotProgress, this);\n    this.exposeInternals = Common.Settings.Settings.instance().createSetting('exposeInternals', false);\n    this.captureNumericValue = Common.Settings.Settings.instance().createSetting('captureNumericValue', false);\n    this.customContentInternal = null;\n  }\n\n  modelAdded(heapProfilerModel: SDK.HeapProfilerModel.HeapProfilerModel): void {\n    void heapProfilerModel.enable();\n  }\n\n  modelRemoved(_heapProfilerModel: SDK.HeapProfilerModel.HeapProfilerModel): void {\n  }\n\n  getProfiles(): HeapProfileHeader[] {\n    return super.getProfiles() as HeapProfileHeader[];\n  }\n\n  fileExtension(): string {\n    return '.heapsnapshot';\n  }\n\n  get buttonTooltip(): Common.UIString.LocalizedString {\n    return i18nString(UIStrings.takeHeapSnapshot);\n  }\n\n  isInstantProfile(): boolean {\n    return true;\n  }\n\n  buttonClicked(): boolean {\n    void this.takeHeapSnapshot();\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ProfilesHeapProfileTaken);\n    return false;\n  }\n\n  get treeItemTitle(): Common.UIString.LocalizedString {\n    return i18nString(UIStrings.heapSnapshots);\n  }\n\n  get description(): Common.UIString.LocalizedString {\n    return i18nString(UIStrings.heapSnapshotProfilesShowMemory);\n  }\n\n  customContent(): Element|null {\n    const optionsContainer = document.createElement('div');\n    const showOptionToExposeInternalsInHeapSnapshot =\n        Root.Runtime.experiments.isEnabled('showOptionToExposeInternalsInHeapSnapshot');\n    const omitParagraphElement = !showOptionToExposeInternalsInHeapSnapshot;\n    if (showOptionToExposeInternalsInHeapSnapshot) {\n      const exposeInternalsInHeapSnapshotCheckbox = UI.SettingsUI.createSettingCheckbox(\n          i18nString(UIStrings.exposeInternals), this.exposeInternals, omitParagraphElement);\n      optionsContainer.appendChild(exposeInternalsInHeapSnapshotCheckbox);\n    }\n    const captureNumericValueCheckbox = UI.SettingsUI.createSettingCheckbox(\n        UIStrings.captureNumericValue, this.captureNumericValue, omitParagraphElement);\n    optionsContainer.appendChild(captureNumericValueCheckbox);\n    this.customContentInternal = optionsContainer;\n    return optionsContainer;\n  }\n\n  setCustomContentEnabled(enable: boolean): void {\n    if (this.customContentInternal) {\n      this.customContentInternal.querySelectorAll('[is=dt-checkbox]').forEach(label => {\n        (label as UI.UIUtils.CheckboxLabel).checkboxElement.disabled = !enable;\n      });\n    }\n  }\n\n  createProfileLoadedFromFile(title: string): ProfileHeader {\n    return new HeapProfileHeader(null, this, title);\n  }\n\n  async takeHeapSnapshot(): Promise<void> {\n    if (this.profileBeingRecorded()) {\n      return;\n    }\n    const heapProfilerModel = UI.Context.Context.instance().flavor(SDK.HeapProfilerModel.HeapProfilerModel);\n    if (!heapProfilerModel) {\n      return;\n    }\n\n    let profile: HeapProfileHeader = new HeapProfileHeader(heapProfilerModel, this);\n    this.setProfileBeingRecorded(profile);\n    this.addProfile(profile);\n    profile.updateStatus(i18nString(UIStrings.snapshotting));\n\n    await heapProfilerModel.takeHeapSnapshot({\n      reportProgress: true,\n      captureNumericValue: this.captureNumericValue.get(),\n      exposeInternals: this.exposeInternals.get(),\n    });\n    profile = this.profileBeingRecorded() as HeapProfileHeader;\n    if (!profile) {\n      return;\n    }\n    profile.title = i18nString(UIStrings.snapshotD, {PH1: profile.uid});\n    profile.finishLoad();\n    this.setProfileBeingRecorded(null);\n    this.dispatchEventToListeners(ProfileTypeEvents.ProfileComplete, profile);\n  }\n\n  addHeapSnapshotChunk(event: Common.EventTarget.EventTargetEvent<string>): void {\n    const profile = (this.profileBeingRecorded() as HeapProfileHeader | null);\n    if (!profile) {\n      return;\n    }\n    profile.transferChunk(event.data);\n  }\n\n  reportHeapSnapshotProgress(event: Common.EventTarget.EventTargetEvent<SDK.HeapProfilerModel.HeapSnapshotProgress>):\n      void {\n    const profile = (this.profileBeingRecorded() as HeapProfileHeader | null);\n    if (!profile) {\n      return;\n    }\n    const {done, total, finished} = event.data;\n    profile.updateStatus(i18nString(UIStrings.percentagePlaceholder, {PH1: ((done / total) * 100).toFixed(0)}), true);\n    if (finished) {\n      profile.prepareToLoad();\n    }\n  }\n\n  resetProfiles(event: Common.EventTarget.EventTargetEvent<SDK.HeapProfilerModel.HeapProfilerModel>): void {\n    const heapProfilerModel = event.data;\n    for (const profile of this.getProfiles()) {\n      if (profile.heapProfilerModel() === heapProfilerModel) {\n        this.removeProfile(profile);\n      }\n    }\n  }\n\n  snapshotReceived(profile: ProfileHeader): void {\n    if (this.profileBeingRecorded() === profile) {\n      this.setProfileBeingRecorded(null);\n    }\n    this.dispatchEventToListeners(HeapSnapshotProfileTypeEvents.SnapshotReceived, profile);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly TypeId: string = 'HEAP';\n  // TODO(crbug.com/1228674): Remove event string once its no longer used in web tests.\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly SnapshotReceived = 'SnapshotReceived';\n}\n\nexport const enum HeapSnapshotProfileTypeEvents {\n  SnapshotReceived = 'SnapshotReceived',\n}\n\nexport type HeapSnapshotProfileTypeEventTypes = {\n  [HeapSnapshotProfileTypeEvents.SnapshotReceived]: ProfileHeader,\n};\n\nexport class TrackingHeapSnapshotProfileType extends\n    Common.ObjectWrapper.eventMixin<TrackingHeapSnapshotProfileTypeEventTypes, typeof HeapSnapshotProfileType>(\n        HeapSnapshotProfileType) {\n  readonly recordAllocationStacksSettingInternal: Common.Settings.Setting<boolean>;\n  customContentInternal: UI.UIUtils.CheckboxLabel|null;\n  recording: boolean;\n  profileSamples?: Samples|null;\n\n  constructor() {\n    super(TrackingHeapSnapshotProfileType.TypeId, i18nString(UIStrings.allocationInstrumentationOn));\n    this.recordAllocationStacksSettingInternal =\n        Common.Settings.Settings.instance().createSetting('recordAllocationStacks', false);\n    this.customContentInternal = null;\n    this.recording = false;\n  }\n\n  modelAdded(heapProfilerModel: SDK.HeapProfilerModel.HeapProfilerModel): void {\n    super.modelAdded(heapProfilerModel);\n    heapProfilerModel.addEventListener(SDK.HeapProfilerModel.Events.HeapStatsUpdate, this.heapStatsUpdate, this);\n    heapProfilerModel.addEventListener(SDK.HeapProfilerModel.Events.LastSeenObjectId, this.lastSeenObjectId, this);\n  }\n\n  modelRemoved(heapProfilerModel: SDK.HeapProfilerModel.HeapProfilerModel): void {\n    super.modelRemoved(heapProfilerModel);\n    heapProfilerModel.removeEventListener(SDK.HeapProfilerModel.Events.HeapStatsUpdate, this.heapStatsUpdate, this);\n    heapProfilerModel.removeEventListener(SDK.HeapProfilerModel.Events.LastSeenObjectId, this.lastSeenObjectId, this);\n  }\n\n  heapStatsUpdate(event: Common.EventTarget.EventTargetEvent<SDK.HeapProfilerModel.HeapStatsUpdateSamples>): void {\n    if (!this.profileSamples) {\n      return;\n    }\n    const samples = event.data;\n    let index;\n    for (let i = 0; i < samples.length; i += 3) {\n      index = samples[i];\n      const size = samples[i + 2];\n      this.profileSamples.sizes[index] = size;\n      if (!this.profileSamples.max[index]) {\n        this.profileSamples.max[index] = size;\n      }\n    }\n  }\n\n  lastSeenObjectId(event: Common.EventTarget.EventTargetEvent<SDK.HeapProfilerModel.LastSeenObjectId>): void {\n    const profileSamples = this.profileSamples;\n    if (!profileSamples) {\n      return;\n    }\n    const {lastSeenObjectId, timestamp} = event.data;\n    const currentIndex = Math.max(profileSamples.ids.length, profileSamples.max.length - 1);\n    profileSamples.ids[currentIndex] = lastSeenObjectId;\n    if (!profileSamples.max[currentIndex]) {\n      profileSamples.max[currentIndex] = 0;\n      profileSamples.sizes[currentIndex] = 0;\n    }\n    profileSamples.timestamps[currentIndex] = timestamp;\n    if (profileSamples.totalTime < timestamp - profileSamples.timestamps[0]) {\n      profileSamples.totalTime *= 2;\n    }\n    if (this.profileSamples) {\n      this.dispatchEventToListeners(TrackingHeapSnapshotProfileTypeEvents.HeapStatsUpdate, this.profileSamples);\n    }\n    const profile = this.profileBeingRecorded();\n    if (profile) {\n      profile.updateStatus(null, true);\n    }\n  }\n\n  hasTemporaryView(): boolean {\n    return true;\n  }\n\n  get buttonTooltip(): Common.UIString.LocalizedString {\n    return this.recording ? i18nString(UIStrings.stopRecordingHeapProfile) :\n                            i18nString(UIStrings.startRecordingHeapProfile);\n  }\n\n  isInstantProfile(): boolean {\n    return false;\n  }\n\n  buttonClicked(): boolean {\n    return this.toggleRecording();\n  }\n\n  startRecordingProfile(): void {\n    if (this.profileBeingRecorded()) {\n      return;\n    }\n    const heapProfilerModel = this.addNewProfile();\n    if (!heapProfilerModel) {\n      return;\n    }\n    void heapProfilerModel.startTrackingHeapObjects(this.recordAllocationStacksSettingInternal.get());\n  }\n\n  customContent(): Element|null {\n    const checkboxSetting = UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.recordAllocationStacksExtra), this.recordAllocationStacksSettingInternal, true);\n    this.customContentInternal = (checkboxSetting as UI.UIUtils.CheckboxLabel);\n    return checkboxSetting;\n  }\n\n  setCustomContentEnabled(enable: boolean): void {\n    if (this.customContentInternal) {\n      this.customContentInternal.checkboxElement.disabled = !enable;\n    }\n  }\n\n  recordAllocationStacksSetting(): Common.Settings.Setting<boolean> {\n    return this.recordAllocationStacksSettingInternal;\n  }\n\n  addNewProfile(): SDK.HeapProfilerModel.HeapProfilerModel|null {\n    const heapProfilerModel = UI.Context.Context.instance().flavor(SDK.HeapProfilerModel.HeapProfilerModel);\n    if (!heapProfilerModel) {\n      return null;\n    }\n    this.setProfileBeingRecorded(new HeapProfileHeader(heapProfilerModel, this, undefined));\n    this.profileSamples = new Samples();\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.profileBeingRecorded() as any)._profileSamples = this.profileSamples;\n    this.recording = true;\n    this.addProfile((this.profileBeingRecorded() as ProfileHeader));\n    (this.profileBeingRecorded() as HeapProfileHeader).updateStatus(i18nString(UIStrings.recording));\n    this.dispatchEventToListeners(TrackingHeapSnapshotProfileTypeEvents.TrackingStarted);\n    return heapProfilerModel;\n  }\n\n  async stopRecordingProfile(): Promise<void> {\n    let profile: HeapProfileHeader = (this.profileBeingRecorded() as HeapProfileHeader);\n    profile.updateStatus(i18nString(UIStrings.snapshotting));\n    const stopPromise =\n        (profile.heapProfilerModel() as SDK.HeapProfilerModel.HeapProfilerModel).stopTrackingHeapObjects(true);\n    this.recording = false;\n    this.dispatchEventToListeners(TrackingHeapSnapshotProfileTypeEvents.TrackingStopped);\n    await stopPromise;\n    profile = (this.profileBeingRecorded() as HeapProfileHeader);\n    if (!profile) {\n      return;\n    }\n    profile.finishLoad();\n    this.profileSamples = null;\n    this.setProfileBeingRecorded(null);\n    this.dispatchEventToListeners(ProfileTypeEvents.ProfileComplete, profile);\n  }\n\n  toggleRecording(): boolean {\n    if (this.recording) {\n      void this.stopRecordingProfile();\n    } else {\n      this.startRecordingProfile();\n    }\n    return this.recording;\n  }\n\n  fileExtension(): string {\n    return '.heaptimeline';\n  }\n\n  get treeItemTitle(): Common.UIString.LocalizedString {\n    return i18nString(UIStrings.allocationTimelines);\n  }\n\n  get description(): Common.UIString.LocalizedString {\n    return i18nString(UIStrings.AllocationTimelinesShowInstrumented);\n  }\n\n  resetProfiles(event: Common.EventTarget.EventTargetEvent<SDK.HeapProfilerModel.HeapProfilerModel>): void {\n    const wasRecording = this.recording;\n    // Clear current profile to avoid stopping backend.\n    this.setProfileBeingRecorded(null);\n    super.resetProfiles(event);\n    this.profileSamples = null;\n    if (wasRecording) {\n      this.addNewProfile();\n    }\n  }\n\n  profileBeingRecordedRemoved(): void {\n    void this.stopRecordingProfile();\n    this.profileSamples = null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly TypeId = 'HEAP-RECORD';\n  // TODO(crbug.com/1228674): Remove event strings once they are no longer used in web tests.\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly HeapStatsUpdate = 'HeapStatsUpdate';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly TrackingStarted = 'TrackingStarted';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly TrackingStopped = 'TrackingStopped';\n}\n\nexport const enum TrackingHeapSnapshotProfileTypeEvents {\n  HeapStatsUpdate = 'HeapStatsUpdate',\n  TrackingStarted = 'TrackingStarted',\n  TrackingStopped = 'TrackingStopped',\n}\n\nexport type TrackingHeapSnapshotProfileTypeEventTypes = {\n  [TrackingHeapSnapshotProfileTypeEvents.HeapStatsUpdate]: Samples,\n  [TrackingHeapSnapshotProfileTypeEvents.TrackingStarted]: void,\n  [TrackingHeapSnapshotProfileTypeEvents.TrackingStopped]: void,\n};\n\nexport class HeapProfileHeader extends ProfileHeader {\n  readonly heapProfilerModelInternal: SDK.HeapProfilerModel.HeapProfilerModel|null;\n  maxJSObjectId: number;\n  workerProxy: HeapSnapshotWorkerProxy|null;\n  receiver: Common.StringOutputStream.OutputStream|null;\n  snapshotProxy: HeapSnapshotProxy|null;\n  readonly loadPromise: Promise<HeapSnapshotProxy>;\n  fulfillLoad?: (value: HeapSnapshotProxy|PromiseLike<HeapSnapshotProxy>) => void;\n  totalNumberOfChunks: number;\n  bufferedWriter: Bindings.TempFile.TempFile|null;\n  onTempFileReady: (() => void)|null;\n  failedToCreateTempFile?: boolean;\n  wasDisposed?: boolean;\n  fileName?: Platform.DevToolsPath.RawPathString;\n\n  constructor(\n      heapProfilerModel: SDK.HeapProfilerModel.HeapProfilerModel|null, type: HeapSnapshotProfileType, title?: string) {\n    super(type, title || i18nString(UIStrings.snapshotD, {PH1: type.nextProfileUid()}));\n    this.heapProfilerModelInternal = heapProfilerModel;\n    this.maxJSObjectId = -1;\n    this.workerProxy = null;\n    this.receiver = null;\n    this.snapshotProxy = null;\n    this.loadPromise = new Promise(resolve => {\n      this.fulfillLoad = resolve;\n    });\n    this.totalNumberOfChunks = 0;\n    this.bufferedWriter = null;\n    this.onTempFileReady = null;\n  }\n\n  heapProfilerModel(): SDK.HeapProfilerModel.HeapProfilerModel|null {\n    return this.heapProfilerModelInternal;\n  }\n\n  async getLocation(nodeIndex: number): Promise<HeapSnapshotModel.HeapSnapshotModel.Location|null> {\n    if (!this.snapshotProxy) {\n      return null;\n    }\n    return this.snapshotProxy.getLocation(nodeIndex);\n  }\n\n  createSidebarTreeElement(dataDisplayDelegate: DataDisplayDelegate): ProfileSidebarTreeElement {\n    return new ProfileSidebarTreeElement(dataDisplayDelegate, this, 'heap-snapshot-sidebar-tree-item');\n  }\n\n  createView(dataDisplayDelegate: DataDisplayDelegate): HeapSnapshotView {\n    return new HeapSnapshotView(dataDisplayDelegate, this);\n  }\n\n  prepareToLoad(): void {\n    console.assert(!this.receiver, 'Already loading');\n    this.setupWorker();\n    this.updateStatus(i18nString(UIStrings.loading), true);\n  }\n\n  finishLoad(): void {\n    if (!this.wasDisposed && this.receiver) {\n      void this.receiver.close();\n    }\n    if (!this.bufferedWriter) {\n      return;\n    }\n    this.didWriteToTempFile(this.bufferedWriter);\n  }\n\n  didWriteToTempFile(tempFile: Bindings.TempFile.TempFile): void {\n    if (this.wasDisposed) {\n      if (tempFile) {\n        tempFile.remove();\n      }\n      return;\n    }\n    this.tempFile = tempFile;\n    if (!tempFile) {\n      this.failedToCreateTempFile = true;\n    }\n    if (this.onTempFileReady) {\n      this.onTempFileReady();\n      this.onTempFileReady = null;\n    }\n  }\n\n  setupWorker(): void {\n    console.assert(!this.workerProxy, 'HeapSnapshotWorkerProxy already exists');\n    this.workerProxy = new HeapSnapshotWorkerProxy(this.handleWorkerEvent.bind(this));\n    this.workerProxy.addEventListener(HeapSnapshotWorkerProxy.Events.Wait, event => {\n      this.updateStatus(null, event.data);\n    }, this);\n    this.receiver = this.workerProxy.createLoader(this.uid, this.snapshotReceived.bind(this));\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleWorkerEvent(eventName: string, data: any): void {\n    if (HeapSnapshotModel.HeapSnapshotModel.HeapSnapshotProgressEvent.BrokenSnapshot === eventName) {\n      const error = (data as string);\n      Common.Console.Console.instance().error(error);\n      return;\n    }\n\n    if (HeapSnapshotModel.HeapSnapshotModel.HeapSnapshotProgressEvent.Update !== eventName) {\n      return;\n    }\n    const serializedMessage = (data as string);\n    const messageObject = i18n.i18n.deserializeUIString(serializedMessage);\n    // We know all strings from the worker are declared inside a single file so we can\n    // use a custom function.\n    this.updateStatus(moduleI18nString(messageObject.string, messageObject.values));\n  }\n\n  dispose(): void {\n    if (this.workerProxy) {\n      this.workerProxy.dispose();\n    }\n    this.removeTempFile();\n    this.wasDisposed = true;\n  }\n\n  didCompleteSnapshotTransfer(): void {\n    if (!this.snapshotProxy) {\n      return;\n    }\n    this.updateStatus(Platform.NumberUtilities.bytesToString(this.snapshotProxy.totalSize), false);\n  }\n\n  transferChunk(chunk: string): void {\n    if (!this.bufferedWriter) {\n      this.bufferedWriter = new Bindings.TempFile.TempFile();\n    }\n    this.bufferedWriter.write([chunk]);\n\n    ++this.totalNumberOfChunks;\n    if (this.receiver) {\n      void this.receiver.write(chunk);\n    }\n  }\n\n  snapshotReceived(snapshotProxy: HeapSnapshotProxy): void {\n    if (this.wasDisposed) {\n      return;\n    }\n    this.receiver = null;\n    this.snapshotProxy = snapshotProxy;\n    this.maxJSObjectId = snapshotProxy.maxJSObjectId();\n    this.didCompleteSnapshotTransfer();\n    if (this.workerProxy) {\n      this.workerProxy.startCheckingForLongRunningCalls();\n    }\n    this.notifySnapshotReceived();\n  }\n\n  notifySnapshotReceived(): void {\n    if (this.snapshotProxy && this.fulfillLoad) {\n      this.fulfillLoad(this.snapshotProxy);\n    }\n    (this.profileType() as HeapSnapshotProfileType).snapshotReceived(this);\n    if (this.canSaveToFile()) {\n      this.dispatchEventToListeners(ProfileHeaderEvents.ProfileReceived);\n    }\n  }\n\n  canSaveToFile(): boolean {\n    return !this.fromFile() && Boolean(this.snapshotProxy);\n  }\n\n  saveToFile(): void {\n    const fileOutputStream = new Bindings.FileUtils.FileOutputStream();\n    this.fileName = this.fileName ||\n        'Heap-' + Platform.DateUtilities.toISO8601Compact(new Date()) + this.profileType().fileExtension() as\n            Platform.DevToolsPath.RawPathString;\n    const onOpen = async(accepted: boolean): Promise<void> => {\n      if (!accepted) {\n        return;\n      }\n      if (this.failedToCreateTempFile) {\n        Common.Console.Console.instance().error('Failed to open temp file with heap snapshot');\n        void fileOutputStream.close();\n        return;\n      }\n      if (this.tempFile) {\n        const error = (await this.tempFile.copyToOutputStream(fileOutputStream, this.onChunkTransferred.bind(this)) as {\n          message: string,\n        } | null);\n        if (error) {\n          Common.Console.Console.instance().error('Failed to read heap snapshot from temp file: ' + error.message);\n        }\n        this.didCompleteSnapshotTransfer();\n        return;\n      }\n      this.onTempFileReady = (): void => {\n        void onOpen(accepted);\n      };\n      this.updateSaveProgress(0, 1);\n    };\n\n    void fileOutputStream.open(this.fileName).then(onOpen.bind(this));\n  }\n\n  onChunkTransferred(reader: Bindings.FileUtils.ChunkedReader): void {\n    this.updateSaveProgress(reader.loadedSize(), reader.fileSize());\n  }\n\n  updateSaveProgress(value: number, total: number): void {\n    const percentValue = ((total && value / total) * 100).toFixed(0);\n    this.updateStatus(i18nString(UIStrings.savingD, {PH1: percentValue}));\n  }\n\n  async loadFromFile(file: File): Promise<DOMError|null> {\n    this.updateStatus(i18nString(UIStrings.loading), true);\n    this.setupWorker();\n    const reader = new Bindings.FileUtils.ChunkedFileReader(file, 10000000);\n    const success = await reader.read((this.receiver as Common.StringOutputStream.OutputStream));\n    if (!success) {\n      const error = (reader.error() as {\n        message: string,\n      } | null);\n      if (error) {\n        this.updateStatus(error.message);\n      }\n    }\n    return success ? null : reader.error();\n  }\n\n  override profileType(): HeapSnapshotProfileType {\n    return super.profileType() as HeapSnapshotProfileType;\n  }\n}\n\nexport class HeapSnapshotStatisticsView extends UI.Widget.VBox {\n  pieChart: PerfUI.PieChart.PieChart;\n  constructor() {\n    super();\n    this.element.classList.add('heap-snapshot-statistics-view');\n    this.pieChart = new PerfUI.PieChart.PieChart();\n    this.setTotalAndRecords(0, []);\n    this.pieChart.classList.add('heap-snapshot-stats-pie-chart');\n    this.element.appendChild(this.pieChart);\n  }\n\n  static valueFormatter(value: number): string {\n    return i18nString(UIStrings.sKb, {PH1: Platform.NumberUtilities.withThousandsSeparator(Math.round(value / 1000))});\n  }\n\n  setTotalAndRecords(total: number, records: PerfUI.PieChart.Slice[]): void {\n    this.pieChart.data = {\n      chartName: i18nString(UIStrings.heapMemoryUsage),\n      size: 150,\n      formatter: HeapSnapshotStatisticsView.valueFormatter,\n      showLegend: true,\n      total,\n      slices: records,\n    };\n  }\n}\n\nexport class HeapAllocationStackView extends UI.Widget.Widget {\n  readonly heapProfilerModel: SDK.HeapProfilerModel.HeapProfilerModel|null;\n  readonly linkifier: Components.Linkifier.Linkifier;\n  frameElements: HTMLElement[];\n  constructor(heapProfilerModel: SDK.HeapProfilerModel.HeapProfilerModel|null) {\n    super();\n    this.heapProfilerModel = heapProfilerModel;\n    this.linkifier = new Components.Linkifier.Linkifier();\n    this.frameElements = [];\n  }\n\n  onContextMenu(link: Element, event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    if (!contextMenu.containsTarget(link)) {\n      contextMenu.appendApplicableItems(link);\n    }\n    void contextMenu.show();\n    event.consume(true);\n  }\n\n  onStackViewKeydown(event: KeyboardEvent): void {\n    const target = (event.target as HTMLElement | null);\n    if (!target) {\n      return;\n    }\n    if (event.key === 'Enter') {\n      const link = stackFrameToURLElement.get(target);\n      if (!link) {\n        return;\n      }\n      const linkInfo = Components.Linkifier.Linkifier.linkInfo(link);\n      if (!linkInfo) {\n        return;\n      }\n      if (Components.Linkifier.Linkifier.invokeFirstAction(linkInfo)) {\n        event.consume(true);\n      }\n      return;\n    }\n\n    let navDown;\n    const keyboardEvent = (event as KeyboardEvent);\n    if (keyboardEvent.key === 'ArrowUp') {\n      navDown = false;\n    } else if (keyboardEvent.key === 'ArrowDown') {\n      navDown = true;\n    } else {\n      return;\n    }\n\n    const index = this.frameElements.indexOf(target);\n    if (index === -1) {\n      return;\n    }\n    const nextIndex = navDown ? index + 1 : index - 1;\n    if (nextIndex < 0 || nextIndex >= this.frameElements.length) {\n      return;\n    }\n\n    const nextFrame = this.frameElements[nextIndex];\n    nextFrame.tabIndex = 0;\n    target.tabIndex = -1;\n    nextFrame.focus();\n    event.consume(true);\n  }\n\n  async setAllocatedObject(snapshot: HeapSnapshotProxy, snapshotNodeIndex: number): Promise<void> {\n    this.clear();\n    const frames = await snapshot.allocationStack(snapshotNodeIndex);\n\n    if (!frames) {\n      const stackDiv = this.element.createChild('div', 'no-heap-allocation-stack');\n      UI.UIUtils.createTextChild(stackDiv, i18nString(UIStrings.stackWasNotRecordedForThisObject));\n      return;\n    }\n\n    const stackDiv = this.element.createChild('div', 'heap-allocation-stack');\n    stackDiv.addEventListener('keydown', this.onStackViewKeydown.bind(this), false);\n    for (const frame of frames) {\n      const frameDiv = (stackDiv.createChild('div', 'stack-frame') as HTMLElement);\n      this.frameElements.push(frameDiv);\n      frameDiv.tabIndex = -1;\n      const name = frameDiv.createChild('div');\n      name.textContent = UI.UIUtils.beautifyFunctionName(frame.functionName);\n      if (!frame.scriptId) {\n        continue;\n      }\n      const target = this.heapProfilerModel ? this.heapProfilerModel.target() : null;\n      const options = {columnNumber: frame.column - 1, inlineFrameIndex: 0};\n      const urlElement = this.linkifier.linkifyScriptLocation(\n          target, String(frame.scriptId) as Protocol.Runtime.ScriptId,\n          frame.scriptName as Platform.DevToolsPath.UrlString, frame.line - 1, options);\n      frameDiv.appendChild(urlElement);\n      stackFrameToURLElement.set(frameDiv, urlElement);\n      frameDiv.addEventListener('contextmenu', this.onContextMenu.bind(this, urlElement));\n    }\n    this.frameElements[0].tabIndex = 0;\n  }\n\n  clear(): void {\n    this.element.removeChildren();\n    this.frameElements = [];\n    this.linkifier.reset();\n  }\n}\n\nconst stackFrameToURLElement = new WeakMap<HTMLElement, HTMLElement>();\n"]}