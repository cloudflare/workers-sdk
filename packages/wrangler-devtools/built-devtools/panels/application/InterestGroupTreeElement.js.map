{"version":3,"file":"InterestGroupTreeElement.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/InterestGroupTreeElement.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAIhD,OAAO,EAAC,2BAA2B,EAAC,MAAM,kCAAkC,CAAC;AAE7E,OAAO,EAAC,wBAAwB,EAAC,MAAM,+BAA+B,CAAC;AAEvE,MAAM,SAAS,GAAG;IAChB;;;;;MAKE;IACF,cAAc,EAAE,iBAAiB;CAClC,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,gDAAgD,EAAE,SAAS,CAAC,CAAC;AACtG,MAAM,CAAC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAE7E,MAAM,OAAO,wBAAyB,SAAQ,2BAA2B;IAC/D,IAAI,CAA2B;IAEvC,YAAY,YAA4B;QACtC,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC;QACjE,MAAM,iBAAiB,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;QAC3F,IAAI,CAAC,eAAe,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,IAAI,OAAO;QACT,OAAO,oBAAuD,CAAC;IACjE,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,KAAa,EAAE,IAAY;QACvD,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;QAC3E,IAAI,CAAC,UAAU,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QACD,MAAM,QAAQ,GACV,MAAM,UAAU,CAAC,YAAY,EAAE,CAAC,8BAA8B,CAAC,EAAC,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;QACzG,OAAO,QAAQ,CAAC,OAAO,CAAC;IAC1B,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC;QACtG,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ,CAAC,KAAkD;QACzD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;CACF","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\nimport {InterestGroupStorageView} from './InterestGroupStorageView.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for an item in the Application Panel Sidebar of the Application panel\n  * An interest group is an ad targeting group stored on the browser that can\n  * be used to show a certain set of advertisements in the future as the\n  * outcome of a FLEDGE auction. (https://developer.chrome.com/blog/fledge-api/)\n  */\n  interestGroups: 'Interest Groups',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/InterestGroupTreeElement.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class InterestGroupTreeElement extends ApplicationPanelTreeElement {\n  private view: InterestGroupStorageView;\n\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.interestGroups), false);\n    const interestGroupIcon = UI.Icon.Icon.create('mediumicon-database', 'resource-tree-item');\n    this.setLeadingIcons([interestGroupIcon]);\n    this.view = new InterestGroupStorageView(this);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'interest-groups://' as Platform.DevToolsPath.UrlString;\n  }\n\n  async getInterestGroupDetails(owner: string, name: string): Promise<Protocol.Storage.InterestGroupDetails|null> {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return null;\n    }\n    const response =\n        await mainTarget.storageAgent().invoke_getInterestGroupDetails({'ownerOrigin': owner, 'name': name});\n    return response.details;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.interest_groups]);\n    return false;\n  }\n\n  addEvent(event: Protocol.Storage.InterestGroupAccessedEvent): void {\n    this.view.addEvent(event);\n  }\n\n  clearEvents(): void {\n    this.view.clearEvents();\n  }\n}\n"]}