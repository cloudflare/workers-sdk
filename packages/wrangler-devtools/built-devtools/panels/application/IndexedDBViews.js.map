{"version":3,"file":"IndexedDBViews.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/IndexedDBViews.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../core/i18n/i18n.js';\n\nimport indexedDBViewsStyles from './indexedDBViews.css.js';\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {\n  Database, DatabaseId, Entry, Index, IndexedDBModel, ObjectStore, ObjectStoreMetadata} from './IndexedDBModel.js';\n\nconst UIStrings = {\n  /**\n  *@description Text when something is loading\n  */\n  loading: 'Loading…',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  */\n  securityOrigin: 'Security origin',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  */\n  version: 'Version',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  */\n  objectStores: 'Object stores',\n  /**\n  *@description Text of button in Indexed DBViews of the Application panel\n  */\n  deleteDatabase: 'Delete database',\n  /**\n  *@description Text of button in Indexed DBViews of the Application panel\n  */\n  refreshDatabase: 'Refresh database',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  *@example {msb} PH1\n  */\n  pleaseConfirmDeleteOfSDatabase: 'Please confirm delete of \"{PH1}\" database.',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  */\n  idb: 'IDB',\n  /**\n  *@description Text to refresh the page\n  */\n  refresh: 'Refresh',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon delete button in the Indexed DBViews of the Application panel\n  */\n  deleteSelected: 'Delete selected',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon clear button in the Indexed DBViews of the Application panel\n  */\n  clearObjectStore: 'Clear object store',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  */\n  dataMayBeStale: 'Data may be stale',\n  /**\n  *@description Title of needs refresh in indexed dbviews of the application panel\n  */\n  someEntriesMayHaveBeenModified: 'Some entries may have been modified',\n  /**\n  *@description Text in DOMStorage Items View of the Application panel\n  */\n  keyString: 'Key',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  */\n  primaryKey: 'Primary key',\n  /**\n  *@description Text for the value of something\n  */\n  valueString: 'Value',\n  /**\n  *@description Data grid name for Indexed DB data grids\n  */\n  indexedDb: 'Indexed DB',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  */\n  keyPath: 'Key path: ',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon play back button in the Indexed DBViews of the Application panel\n  */\n  showPreviousPage: 'Show previous page',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon play button in the Indexed DBViews of the Application panel\n  */\n  showNextPage: 'Show next page',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  */\n  startFromKey: 'Start from key',\n  /**\n  *@description Text in Context menu for expanding objects in IndexedDB tables\n  */\n  expandRecursively: 'Expand Recursively',\n  /**\n  *@description Text in Context menu for collapsing objects in IndexedDB tables\n  */\n  collapse: 'Collapse',\n  /**\n  *@description Span text content in Indexed DBViews of the Application panel\n  *@example {2} PH1\n  */\n  totalEntriesS: 'Total entries: {PH1}',\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  *@example {2} PH1\n  */\n  keyGeneratorValueS: 'Key generator value: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/IndexedDBViews.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class IDBDatabaseView extends UI.Widget.VBox {\n  private readonly model: IndexedDBModel;\n  private database!: Database;\n  private readonly reportView: UI.ReportView.ReportView;\n  private securityOriginElement: HTMLElement;\n  private versionElement: HTMLElement;\n  private objectStoreCountElement: HTMLElement;\n  private readonly clearButton: HTMLButtonElement;\n  private readonly refreshButton: HTMLButtonElement;\n  constructor(model: IndexedDBModel, database: Database|null) {\n    super();\n\n    this.model = model;\n    const databaseName = database ? database.databaseId.name : i18nString(UIStrings.loading);\n\n    this.contentElement.classList.add('indexed-db-container');\n\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.reportView = new UI.ReportView.ReportView(databaseName);\n    this.reportView.show(this.contentElement);\n\n    this.reportView.element.classList.add('indexed-db-header');\n\n    const bodySection = this.reportView.appendSection('');\n    this.securityOriginElement = bodySection.appendField(i18nString(UIStrings.securityOrigin));\n    this.versionElement = bodySection.appendField(i18nString(UIStrings.version));\n    this.objectStoreCountElement = bodySection.appendField(i18nString(UIStrings.objectStores));\n\n    const footer = this.reportView.appendSection('').appendRow();\n    this.clearButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.deleteDatabase), () => this.deleteDatabase(), i18nString(UIStrings.deleteDatabase));\n    footer.appendChild(this.clearButton);\n\n    this.refreshButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.refreshDatabase), () => this.refreshDatabaseButtonClicked(),\n        i18nString(UIStrings.refreshDatabase));\n    footer.appendChild(this.refreshButton);\n\n    if (database) {\n      this.update(database);\n    }\n  }\n\n  private refreshDatabase(): void {\n    this.securityOriginElement.textContent = this.database.databaseId.securityOrigin;\n    if (this.versionElement) {\n      this.versionElement.textContent = this.database.version.toString();\n    }\n\n    this.objectStoreCountElement.textContent = this.database.objectStores.size.toString();\n  }\n\n  private refreshDatabaseButtonClicked(): void {\n    this.model.refreshDatabase(this.database.databaseId);\n  }\n\n  update(database: Database): void {\n    this.database = database;\n    this.reportView.setTitle(this.database.databaseId.name);\n    this.refreshDatabase();\n    this.updatedForTests();\n  }\n\n  private updatedForTests(): void {\n    // Sniffed in tests.\n  }\n\n  private async deleteDatabase(): Promise<void> {\n    const ok = await UI.UIUtils.ConfirmDialog.show(\n        i18nString(UIStrings.pleaseConfirmDeleteOfSDatabase, {PH1: this.database.databaseId.name}), this.element);\n    if (ok) {\n      void this.model.deleteDatabase(this.database.databaseId);\n    }\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.reportView.registerCSSFiles([indexedDBViewsStyles]);\n    this.registerCSSFiles([indexedDBViewsStyles]);\n  }\n}\n\nexport class IDBDataView extends UI.View.SimpleView {\n  private readonly model: IndexedDBModel;\n  private readonly databaseId: DatabaseId;\n  private isIndex: boolean;\n  private readonly refreshObjectStoreCallback: () => void;\n  private readonly refreshButton: UI.Toolbar.ToolbarButton;\n  private readonly deleteSelectedButton: UI.Toolbar.ToolbarButton;\n  private readonly clearButton: UI.Toolbar.ToolbarButton;\n  private readonly needsRefresh: UI.Toolbar.ToolbarItem;\n  private clearingObjectStore: boolean;\n  private pageSize: number;\n  private skipCount: number;\n  private entries: Entry[];\n  private objectStore!: ObjectStore;\n  private index!: Index|null;\n  private keyInput!: UI.Toolbar.ToolbarInput;\n  private dataGrid!: DataGrid.DataGrid.DataGridImpl<unknown>;\n  private lastPageSize!: number;\n  private lastSkipCount!: number;\n  private pageBackButton!: UI.Toolbar.ToolbarButton;\n  private pageForwardButton!: UI.Toolbar.ToolbarButton;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private lastKey?: any;\n  private summaryBarElement?: HTMLElement;\n\n  constructor(\n      model: IndexedDBModel, databaseId: DatabaseId, objectStore: ObjectStore, index: Index|null,\n      refreshObjectStoreCallback: () => void) {\n    super(i18nString(UIStrings.idb));\n\n    this.model = model;\n    this.databaseId = databaseId;\n    this.isIndex = Boolean(index);\n    this.refreshObjectStoreCallback = refreshObjectStoreCallback;\n\n    this.element.classList.add('indexed-db-data-view', 'storage-view');\n\n    this.refreshButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.refresh), 'largeicon-refresh');\n    this.refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.refreshButtonClicked, this);\n\n    this.deleteSelectedButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.deleteSelected), 'largeicon-delete');\n    this.deleteSelectedButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      void this.deleteButtonClicked(null);\n    });\n\n    this.clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearObjectStore), 'largeicon-clear');\n    this.clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      void this.clearButtonClicked();\n    }, this);\n\n    this.needsRefresh = new UI.Toolbar.ToolbarItem(\n        UI.UIUtils.createIconLabel(i18nString(UIStrings.dataMayBeStale), 'smallicon-warning'));\n    this.needsRefresh.setVisible(false);\n    this.needsRefresh.setTitle(i18nString(UIStrings.someEntriesMayHaveBeenModified));\n    this.clearingObjectStore = false;\n\n    this.createEditorToolbar();\n\n    this.pageSize = 50;\n    this.skipCount = 0;\n\n    this.update(objectStore, index);\n    this.entries = [];\n  }\n\n  private createDataGrid(): DataGrid.DataGrid.DataGridImpl<unknown> {\n    const keyPath = this.isIndex && this.index ? this.index.keyPath : this.objectStore.keyPath;\n\n    const columns = ([] as DataGrid.DataGrid.ColumnDescriptor[]);\n\n    // Create column defaults so that we avoid repetition below.\n    const columnDefaults = {\n      title: undefined,\n      titleDOMFragment: undefined,\n      sortable: false,\n      sort: undefined,\n      align: undefined,\n      width: undefined,\n      fixedWidth: undefined,\n      editable: undefined,\n      nonSelectable: undefined,\n      longText: undefined,\n      disclosure: undefined,\n      weight: undefined,\n      allowInSortByEvenWhenHidden: undefined,\n      dataType: undefined,\n      defaultWeight: undefined,\n    };\n    columns.push(\n        ({...columnDefaults, id: 'number', title: '#', sortable: false, width: '50px'} as\n         DataGrid.DataGrid.ColumnDescriptor));\n    columns.push(({\n      ...columnDefaults,\n      id: 'key',\n      titleDOMFragment: this.keyColumnHeaderFragment(i18nString(UIStrings.keyString), keyPath),\n      sortable: false,\n    } as DataGrid.DataGrid.ColumnDescriptor));\n    if (this.isIndex) {\n      columns.push(({\n        ...columnDefaults,\n        id: 'primaryKey',\n        titleDOMFragment: this.keyColumnHeaderFragment(i18nString(UIStrings.primaryKey), this.objectStore.keyPath),\n        sortable: false,\n      } as DataGrid.DataGrid.ColumnDescriptor));\n    }\n    const title = i18nString(UIStrings.valueString);\n    columns.push(({...columnDefaults, id: 'value', title, sortable: false} as DataGrid.DataGrid.ColumnDescriptor));\n\n    const dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: i18nString(UIStrings.indexedDb),\n      columns,\n      deleteCallback: this.deleteButtonClicked.bind(this),\n      refreshCallback: this.updateData.bind(this, true),\n      editCallback: undefined,\n    });\n    dataGrid.setStriped(true);\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, () => this.updateToolbarEnablement(), this);\n    return dataGrid;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private keyColumnHeaderFragment(prefix: string, keyPath: any): DocumentFragment {\n    const keyColumnHeaderFragment = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(keyColumnHeaderFragment, prefix);\n    if (keyPath === null) {\n      return keyColumnHeaderFragment;\n    }\n\n    UI.UIUtils.createTextChild(keyColumnHeaderFragment, ' (' + i18nString(UIStrings.keyPath));\n    if (Array.isArray(keyPath)) {\n      UI.UIUtils.createTextChild(keyColumnHeaderFragment, '[');\n      for (let i = 0; i < keyPath.length; ++i) {\n        if (i !== 0) {\n          UI.UIUtils.createTextChild(keyColumnHeaderFragment, ', ');\n        }\n        keyColumnHeaderFragment.appendChild(this.keyPathStringFragment(keyPath[i]));\n      }\n      UI.UIUtils.createTextChild(keyColumnHeaderFragment, ']');\n    } else {\n      const keyPathString = (keyPath as string);\n      keyColumnHeaderFragment.appendChild(this.keyPathStringFragment(keyPathString));\n    }\n    UI.UIUtils.createTextChild(keyColumnHeaderFragment, ')');\n    return keyColumnHeaderFragment;\n  }\n\n  private keyPathStringFragment(keyPathString: string): DocumentFragment {\n    const keyPathStringFragment = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(keyPathStringFragment, '\"');\n    const keyPathSpan = keyPathStringFragment.createChild('span', 'source-code indexed-db-key-path');\n    keyPathSpan.textContent = keyPathString;\n    UI.UIUtils.createTextChild(keyPathStringFragment, '\"');\n    return keyPathStringFragment;\n  }\n\n  private createEditorToolbar(): void {\n    const editorToolbar = new UI.Toolbar.Toolbar('data-view-toolbar', this.element);\n\n    editorToolbar.appendToolbarItem(this.refreshButton);\n\n    editorToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSeparator());\n\n    this.pageBackButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.showPreviousPage), 'largeicon-play-back');\n    this.pageBackButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.pageBackButtonClicked, this);\n    editorToolbar.appendToolbarItem(this.pageBackButton);\n\n    this.pageForwardButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.showNextPage), 'largeicon-play');\n    this.pageForwardButton.setEnabled(false);\n    this.pageForwardButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.pageForwardButtonClicked, this);\n    editorToolbar.appendToolbarItem(this.pageForwardButton);\n\n    this.keyInput = new UI.Toolbar.ToolbarInput(i18nString(UIStrings.startFromKey), '', 0.5);\n    this.keyInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this.updateData.bind(this, false));\n    editorToolbar.appendToolbarItem(this.keyInput);\n    editorToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSeparator());\n    editorToolbar.appendToolbarItem(this.clearButton);\n    editorToolbar.appendToolbarItem(this.deleteSelectedButton);\n\n    editorToolbar.appendToolbarItem(this.needsRefresh);\n  }\n\n  private pageBackButtonClicked(): void {\n    this.skipCount = Math.max(0, this.skipCount - this.pageSize);\n    this.updateData(false);\n  }\n\n  private pageForwardButtonClicked(): void {\n    this.skipCount = this.skipCount + this.pageSize;\n    this.updateData(false);\n  }\n\n  private populateContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu, gridNode: DataGrid.DataGrid.DataGridNode<unknown>): void {\n    const node = (gridNode as IDBDataGridNode);\n    if (node.valueObjectPresentation) {\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.expandRecursively), () => {\n        if (!node.valueObjectPresentation) {\n          return;\n        }\n        void node.valueObjectPresentation.objectTreeElement().expandRecursively();\n      });\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.collapse), () => {\n        if (!node.valueObjectPresentation) {\n          return;\n        }\n        node.valueObjectPresentation.objectTreeElement().collapse();\n      });\n    }\n  }\n\n  refreshData(): void {\n    this.updateData(true);\n  }\n\n  update(objectStore: ObjectStore, index: Index|null): void {\n    this.objectStore = objectStore;\n    this.index = index;\n\n    if (this.dataGrid) {\n      this.dataGrid.asWidget().detach();\n    }\n    this.dataGrid = this.createDataGrid();\n    this.dataGrid.setRowContextMenuCallback(this.populateContextMenu.bind(this));\n    this.dataGrid.asWidget().show(this.element);\n\n    this.skipCount = 0;\n    this.updateData(true);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private parseKey(keyString: string): any {\n    let result;\n    try {\n      result = JSON.parse(keyString);\n    } catch (e) {\n      result = keyString;\n    }\n    return result;\n  }\n\n  private updateData(force: boolean): void {\n    const key = this.parseKey(this.keyInput.value());\n    const pageSize = this.pageSize;\n    let skipCount: 0|number = this.skipCount;\n    let selected = this.dataGrid.selectedNode ? this.dataGrid.selectedNode.data['number'] : 0;\n    selected = Math.max(selected, this.skipCount);  // Page forward should select top entry\n    this.clearButton.setEnabled(!this.isIndex);\n\n    if (!force && this.lastKey === key && this.lastPageSize === pageSize && this.lastSkipCount === skipCount) {\n      return;\n    }\n\n    if (this.lastKey !== key || this.lastPageSize !== pageSize) {\n      skipCount = 0;\n      this.skipCount = 0;\n    }\n    this.lastKey = key;\n    this.lastPageSize = pageSize;\n    this.lastSkipCount = skipCount;\n\n    function callback(this: IDBDataView, entries: Entry[], hasMore: boolean): void {\n      this.clear();\n      this.entries = entries;\n      let selectedNode: IDBDataGridNode|null = null;\n      for (let i = 0; i < entries.length; ++i) {\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: any = {};\n        data['number'] = i + skipCount;\n        data['key'] = entries[i].key;\n        data['primaryKey'] = entries[i].primaryKey;\n        data['value'] = entries[i].value;\n\n        const node = new IDBDataGridNode(data);\n        this.dataGrid.rootNode().appendChild(node);\n        if (data['number'] <= selected) {\n          selectedNode = node;\n        }\n      }\n\n      if (selectedNode) {\n        selectedNode.select();\n      }\n      this.pageBackButton.setEnabled(Boolean(skipCount));\n      this.pageForwardButton.setEnabled(hasMore);\n      this.needsRefresh.setVisible(false);\n      this.updateToolbarEnablement();\n      this.updatedDataForTests();\n    }\n\n    const idbKeyRange = key ? window.IDBKeyRange.lowerBound(key) : null;\n    if (this.isIndex && this.index) {\n      this.model.loadIndexData(\n          this.databaseId, this.objectStore.name, this.index.name, idbKeyRange, skipCount, pageSize,\n          callback.bind(this));\n    } else {\n      this.model.loadObjectStoreData(\n          this.databaseId, this.objectStore.name, idbKeyRange, skipCount, pageSize, callback.bind(this));\n    }\n    void this.model.getMetadata(this.databaseId, this.objectStore).then(this.updateSummaryBar.bind(this));\n  }\n\n  private updateSummaryBar(metadata: ObjectStoreMetadata|null): void {\n    if (!this.summaryBarElement) {\n      this.summaryBarElement = this.element.createChild('div', 'object-store-summary-bar');\n    }\n    this.summaryBarElement.removeChildren();\n    if (!metadata) {\n      return;\n    }\n\n    const separator = '\\u2002\\u2758\\u2002';\n\n    const span = this.summaryBarElement.createChild('span');\n    span.textContent = i18nString(UIStrings.totalEntriesS, {PH1: String(metadata.entriesCount)});\n\n    if (this.objectStore.autoIncrement) {\n      span.textContent += separator;\n      span.textContent += i18nString(UIStrings.keyGeneratorValueS, {PH1: String(metadata.keyGeneratorValue)});\n    }\n  }\n\n  private updatedDataForTests(): void {\n    // Sniffed in tests.\n  }\n\n  private refreshButtonClicked(): void {\n    this.updateData(true);\n  }\n\n  private async clearButtonClicked(): Promise<void> {\n    this.clearButton.setEnabled(false);\n    this.clearingObjectStore = true;\n    await this.model.clearObjectStore(this.databaseId, this.objectStore.name);\n    this.clearingObjectStore = false;\n    this.clearButton.setEnabled(true);\n    this.updateData(true);\n  }\n\n  markNeedsRefresh(): void {\n    // We expect that calling clearObjectStore() will cause the backend to send us an update.\n    if (this.clearingObjectStore) {\n      return;\n    }\n    this.needsRefresh.setVisible(true);\n  }\n\n  private async deleteButtonClicked(node: DataGrid.DataGrid.DataGridNode<unknown>|null): Promise<void> {\n    if (!node) {\n      node = this.dataGrid.selectedNode;\n      if (!node) {\n        return;\n      }\n    }\n    const key = (this.isIndex ? node.data.primaryKey : node.data.key as SDK.RemoteObject.RemoteObject);\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const keyValue = (key.value as string | number | any[] | Date);\n    await this.model.deleteEntries(this.databaseId, this.objectStore.name, window.IDBKeyRange.only(keyValue));\n    this.refreshObjectStoreCallback();\n  }\n\n  clear(): void {\n    this.dataGrid.rootNode().removeChildren();\n    this.entries = [];\n  }\n\n  private updateToolbarEnablement(): void {\n    const empty = !this.dataGrid || this.dataGrid.rootNode().children.length === 0;\n    this.deleteSelectedButton.setEnabled(!empty && this.dataGrid.selectedNode !== null);\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([indexedDBViewsStyles]);\n  }\n}\n\nexport class IDBDataGridNode extends DataGrid.DataGrid.DataGridNode<unknown> {\n  selectable: boolean;\n  valueObjectPresentation: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection|null;\n  constructor(data: {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [x: string]: any,\n  }) {\n    super(data, false);\n    this.selectable = true;\n    this.valueObjectPresentation = null;\n  }\n\n  createCell(columnIdentifier: string): HTMLElement {\n    const cell = super.createCell(columnIdentifier);\n    const value = (this.data[columnIdentifier] as SDK.RemoteObject.RemoteObject);\n\n    switch (columnIdentifier) {\n      case 'value': {\n        cell.removeChildren();\n        const objectPropSection =\n            ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.defaultObjectPropertiesSection(\n                value, undefined /* linkifier */, true /* skipProto */, true /* readOnly */);\n        cell.appendChild(objectPropSection.element);\n        this.valueObjectPresentation = objectPropSection;\n        break;\n      }\n      case 'key':\n      case 'primaryKey': {\n        cell.removeChildren();\n        const objectElement = ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.defaultObjectPresentation(\n            value, undefined /* linkifier */, true /* skipProto */, true /* readOnly */);\n        cell.appendChild(objectElement);\n        break;\n      }\n      default: {\n      }\n    }\n\n    return cell;\n  }\n}\n"]}