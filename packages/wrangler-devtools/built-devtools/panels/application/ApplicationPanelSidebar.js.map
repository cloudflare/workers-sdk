{"version":3,"file":"ApplicationPanelSidebar.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ApplicationPanelSidebar.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,QAAQ,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,KAAK,WAAW,MAAM,yDAAyD,CAAC;AACvF,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,EAAC,2BAA2B,EAAE,6BAA6B,EAAC,MAAM,mCAAmC,CAAC;AAC7G,OAAO,EAAC,2BAA2B,EAAE,qCAAqC,EAAC,MAAM,kCAAkC,CAAC;AACpH,OAAO,EAAC,eAAe,EAAC,MAAM,sBAAsB,CAAC;AACrD,OAAO,EAAC,sBAAsB,EAAC,MAAM,6BAA6B,CAAC;AACnE,OAAO,EAAC,qBAAqB,EAAC,MAAM,4BAA4B,CAAC;AACjE,OAAO,KAAK,qBAAqB,MAAM,4BAA4B,CAAC;AACpE,OAAO,sBAAsB,MAAM,2BAA2B,CAAC;AAG/D,OAAO,EAAC,aAAa,EAAE,MAAM,IAAI,mBAAmB,EAAC,MAAM,oBAAoB,CAAC;AAChF,OAAO,EAAC,iBAAiB,EAAE,MAAM,IAAI,uBAAuB,EAAC,MAAM,wBAAwB,CAAC;AAC5F,OAAO,EAAC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AAEzD,OAAO,EAAC,eAAe,EAAE,MAAM,IAAI,qBAAqB,EAAC,MAAM,sBAAsB,CAAC;AAEtF,OAAO,EAAC,MAAM,IAAI,oBAAoB,EAAE,cAAc,EAAC,MAAM,qBAAqB,CAAC;AACnF,OAAO,EAAC,eAAe,EAAE,WAAW,EAAC,MAAM,qBAAqB,CAAC;AACjE,OAAO,EAAC,yBAAyB,EAAqC,MAAM,gCAAgC,CAAC;AAC7G,OAAO,EAAC,wBAAwB,EAAC,MAAM,+BAA+B,CAAC;AACvE,OAAO,EAAC,uBAAuB,EAAE,iBAAiB,EAAC,MAAM,8BAA8B,CAAC;AAExF,OAAO,EAAC,kBAAkB,EAAC,MAAM,yBAAyB,CAAC;AAC3D,OAAO,EAAC,WAAW,EAAC,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAC,sBAAsB,EAAC,MAAM,6BAA6B,CAAC;AACnE,OAAO,EAAC,uBAAuB,EAAC,MAAM,8BAA8B,CAAC;AAErE,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,WAAW,EAAE,aAAa;IAC1B;;MAEE;IACF,OAAO,EAAE,SAAS;IAClB;;MAEE;IACF,YAAY,EAAE,eAAe;IAC7B;;MAEE;IACF,cAAc,EAAE,iBAAiB;IACjC;;MAEE;IACF,MAAM,EAAE,SAAS;IACjB;;MAEE;IACF,OAAO,EAAE,SAAS;IAClB;;MAEE;IACF,KAAK,EAAE,OAAO;IACd;;MAEE;IACF,kBAAkB,EAAE,qBAAqB;IACzC;;MAEE;IACF,MAAM,EAAE,QAAQ;IAChB;;MAEE;IACF,QAAQ,EAAE,UAAU;IACpB;;MAEE;IACF,SAAS,EAAE,WAAW;IACtB;;MAEE;IACF,gBAAgB,EAAE,mBAAmB;IACrC;;;MAGE;IACF,aAAa,EAAE,wBAAwB;IACvC;;;MAGE;IACF,QAAQ,EAAE,gBAAgB;IAC1B;;MAEE;IACF,KAAK,EAAE,OAAO;IACd;;;MAGE;IACF,QAAQ,EAAE,iBAAiB;IAC3B;;MAEE;IACF,UAAU,EAAE,aAAa;IACzB;;;MAGE;IACF,wBAAwB,EAAE,mCAAmC;IAC7D;;MAEE;IACF,aAAa,EAAE,gBAAgB;IAC/B;;MAEE;IACF,UAAU,EAAE,aAAa;IACzB;;MAEE;IACF,oBAAoB,EAAE,wBAAwB;IAC9C;;MAEE;IACF,+BAA+B,EAC3B,uFAAuF;IAC3F;;MAEE;IACF,kBAAkB,EAAE,sBAAsB;IAC1C;;MAEE;IACF,MAAM,EAAE,QAAQ;CACjB,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,+CAA+C,EAAE,SAAS,CAAC,CAAC;AACrG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,SAAS,mBAAmB,CAAC,QAAyC;IACpE,IAAI,QAAQ,KAAK,MAAM,EAAE;QACvB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;KAC9C;AACH,CAAC;AAED,MAAM,OAAO,uBAAwB,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IACzD,KAAK,CAAiB;IACL,WAAW,CAAqC;IAChD,sBAAsB,CAA6B;IACpE,yBAAyB,CAA4B;IACrD,2BAA2B,CAAwC;IACnE,6BAA6B,CAAwC;IACrE,wBAAwB,CAAuB;IAC/C,wBAAwB,CAA2B;IACnD,wBAAwB,CAAwC;IAChE,qBAAqB,CAAwC;IAC7D,sBAAsB,CAAyB;IAC/C,2BAA2B,CAAgC;IACnD,+BAA+B,CAA+B;IACtE,0BAA0B,CAAyC;IACnE,yBAAyB,CAAyC;IAClE,wBAAwB,CAAyC;IACjE,yBAAyB,CAAyC;IAClE,iCAAiC,CAAyC;IAC1E,wBAAwB,CAAyC;IACjE,uBAAuB,CAAoC;IAC1C,gBAAgB,CAAmB;IACnC,kBAAkB,CAEhC;IACK,kBAAkB,CAAgD;IACzD,oBAAoB,CAAkD;IAC/E,sBAAsB,CAAyC;IAC/D,OAAO,CAEb;IACM,MAAM,CAAqB;IAC3B,aAAa,CAAsB;IACnC,sBAAsB,CAAoB;IAElD,YAAY,KAAqB;QAC/B,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAE5D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACrD,mEAAmE;QACnE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAEtG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAE1D,MAAM,uBAAuB,GAAG,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAClE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;QAC9E,MAAM,mBAAmB,GAAG,IAAI,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;QAC7D,IAAI,CAAC,yBAAyB,GAAG,IAAI,yBAAyB,CAAC,KAAK,CAAC,CAAC;QACtE,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACxE,MAAM,uBAAuB,GAAG,IAAI,uBAAuB,CAAC,KAAK,CAAC,CAAC;QACnE,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;QAEjE,MAAM,mBAAmB,GAAG,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC1D,MAAM,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QACvE,IAAI,CAAC,2BAA2B;YAC5B,IAAI,qCAAqC,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,cAAc,CAAC,CAAC;QACzG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CACpC,sFAC+B,CAAC,CAAC;QACrC,MAAM,gBAAgB,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;QACvF,IAAI,CAAC,2BAA2B,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAErE,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QACjE,IAAI,CAAC,6BAA6B;YAC9B,IAAI,qCAAqC,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,gBAAgB,CAAC,CAAC;QAC7G,IAAI,CAAC,6BAA6B,CAAC,OAAO,CACtC,wFAC+B,CAAC,CAAC;QACrC,MAAM,kBAAkB,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;QACzF,IAAI,CAAC,6BAA6B,CAAC,eAAe,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAEzE,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACnE,IAAI,CAAC,wBAAwB,GAAG,IAAI,oBAAoB,CAAC,KAAK,CAAC,CAAC;QAChE,IAAI,CAAC,wBAAwB,CAAC,OAAO,CACjC,mFAC+B,CAAC,CAAC;QACrC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC9D,IAAI,CAAC,wBAAwB;YACzB,IAAI,qCAAqC,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC;QAChG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CACjC,gFAC+B,CAAC,CAAC;QACrC,MAAM,YAAY,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;QACtF,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QAE9D,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC9D,IAAI,CAAC,qBAAqB;YACtB,IAAI,qCAAqC,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,CAAC;QAC/F,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAC9B,iFAC+B,CAAC,CAAC;QACrC,MAAM,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;QAClF,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACzD,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAE3D,IAAI,CAAC,sBAAsB,GAAG,IAAI,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAChE,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAE5D,IAAI,CAAC,wBAAwB,GAAG,IAAI,wBAAwB,CAAC,KAAK,CAAC,CAAC;QACpE,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAE9D,MAAM,iBAAiB,GAAG,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QACnE,IAAI,CAAC,2BAA2B,GAAG,IAAI,6BAA6B,CAAC,KAAK,CAAC,CAAC;QAC5E,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAE/D,IAAI,CAAC,+BAA+B,GAAG,IAAI,2BAA2B,CAAC,KAAK,CAAC,CAAC;QAC9E,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAEnE,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE;YAC5D,MAAM,6BAA6B,GAAG,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;YAC/E,MAAM,4BAA4B,GAAG,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,CAAC,CAAC;YAE3F,IAAI,CAAC,0BAA0B;gBAC3B,IAAI,4BAA4B,CAAC,KAAK,0CAAyD,CAAC;YACpG,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAC1E,IAAI,CAAC,yBAAyB;gBAC1B,IAAI,4BAA4B,CAAC,KAAK,wCAAwD,CAAC;YACnG,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAEzE,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,iCAAiC,CAAC,EAAE;gBACzE,IAAI,CAAC,wBAAwB;oBACzB,IAAI,4BAA4B,CAAC,KAAK,sCAAuD,CAAC;gBAClG,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;aACzE;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,kCAAkC,CAAC,EAAE;gBAC1E,IAAI,CAAC,yBAAyB;oBAC1B,IAAI,4BAA4B,CAAC,KAAK,wCAAwD,CAAC;gBACnG,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;aAC1E;YACD,IAAI,CAAC,iCAAiC;gBAClC,IAAI,4BAA4B,CAAC,KAAK,wDAAgE,CAAC;YAC3G,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;YACjF,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,iCAAiC,CAAC,EAAE;gBACzE,IAAI,CAAC,wBAAwB;oBACzB,IAAI,4BAA4B,CAAC,KAAK,sCAAuD,CAAC;gBAClG,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;aACzE;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,uBAAuB,CAAC,EAAE;gBAC/D,IAAI,CAAC,uBAAuB,GAAG,IAAI,uBAAuB,CAAC,KAAK,CAAC,CAAC;gBAClE,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;aACxE;SACF;QACD,MAAM,qBAAqB,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC3D,MAAM,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,CAAC;QAC3E,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;QAE1E,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,oBAAoB,GAAG,IAAI,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,sBAAsB,GAAG,IAAI,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QAClG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QAEpG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAChE,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EACzG,IAAI,CAAC,CAAC;QAEV,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACrB,mBAAmB,CAAC,MAAM,EAAE,CAAC;SAC9B;QAED,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,eAAe,EAAE;YACxE,UAAU,EAAE,CAAC,KAAsB,EAAQ,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;YAC9E,YAAY,EAAE,CAAC,KAAsB,EAAQ,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;SACnF,CAAC,CAAC;QACH,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,cAAc,EAAE;YACvE,UAAU,EAAE,CAAC,KAAqB,EAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;YAC3D,YAAY,EAAE,CAAC,KAAqB,EAAQ,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,KAAK,CAAC;SAC5G,CAAC,CAAC;QACH,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,yBAAyB,EAAE;YAClF,UAAU,EAAE,CAAC,KAAgC,EAAQ,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;YAC3F,YAAY,EAAE,CAAC,KAAgC,EAAQ,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;SAChG,CAAC,CAAC;QACH,qGAAqG;QACrG,aAAa;QACb,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,cAAc,CAAC;IACrD,CAAC;IAEO,iBAAiB,CAAC,KAAa;QACrC,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAChE,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACrE,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAClC,WAAW,CAAC,UAAU,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC1C,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QACvE,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,WAAW,CAAC,MAAyB;QACnC,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO;SACR;QACD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACjD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YACjG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SACnG;QAED,MAAM,kBAAkB,GAAG,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACnE,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,gBAAgB,kDAA+C,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;SACnH;QAED,MAAM,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAChF,IAAI,CAAC,iBAAiB,EAAE;YACtB,OAAO;SACR;QAED,IAAI,iBAAiB,CAAC,qBAAqB,EAAE,EAAE;YAC7C,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QAED,iBAAiB,CAAC,gBAAgB,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9G,iBAAiB,CAAC,gBAAgB,CAC9B,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,uBAAuB,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACxF,CAAC;IAED,aAAa,CAAC,MAAyB;QACrC,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YAC1B,OAAO;SACR;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;QAEnB,MAAM,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAChF,IAAI,iBAAiB,EAAE;YACrB,iBAAiB,CAAC,mBAAmB,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACjH,iBAAiB,CAAC,mBAAmB,CACjC,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,uBAAuB,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;SACvF;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YACpG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACrG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;QAED,MAAM,kBAAkB,GAAG,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACnE,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,mBAAmB,kDACY,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;SACnF;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAEO,UAAU;QAChB,KAAK,MAAM,KAAK,IAAI,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE;YACpE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;SAC7B;QACD,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACvF,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,MAAM,EAAE,CAAC;SAC7B;QAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,uBAAuB,CAAC,uBAAuB,CAAC,CAAC;QAChH,IAAI,iBAAiB,EAAE;YACrB,iBAAiB,CAAC,MAAM,EAAE,CAAC;SAC5B;QACD,MAAM,uBAAuB,GACzB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,uBAAuB,CAAC,uBAAuB,CAAC,IAAI,IAAI,CAAC;QAClG,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;QACrE,MAAM,sBAAsB,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,IAAI,CAAC;QAChG,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE;YAC5D,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;YACtG,IAAI,CAAC,yBAAyB,IAAI,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;YACpG,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,iCAAiC,CAAC,IAAI,IAAI,CAAC,wBAAwB,EAAE;gBAC1G,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;aAClE;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,kCAAkC,CAAC,IAAI,IAAI,CAAC,yBAAyB,EAAE;gBAC5G,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;aACnE;YACD,IAAI,CAAC,iCAAiC;gBAClC,IAAI,CAAC,iCAAiC,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;YAC9E,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,iCAAiC,CAAC,IAAI,IAAI,CAAC,wBAAwB,EAAE;gBAC1G,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;aAClE;SACF;IACH,CAAC;IAEO,oBAAoB,CAAC,KAAsB;QACjD,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxD,KAAK,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC1F,KAAK,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAChG,CAAC;IAEO,sBAAsB,CAAC,KAAsB;QACnD,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3D,KAAK,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC7F,KAAK,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACnG,CAAC;IAEO,uBAAuB,CAAC,KAAgC;QAC9D,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,KAAK,CAAC,gBAAgB,kDAA+C,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;IACvG,CAAC;IAEO,yBAAyB,CAAC,KAAgC;QAChE,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,KAAK,CAAC,mBAAmB,kDAA+C,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;IAC1G,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAEO,WAAW;QACjB,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE;YACxD,SAAS,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,aAAa,EAAE,KAAK,CAAC,EAAE;gBAC3E,KAAK,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YACxC,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;QACD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;QAClC,IAAI,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC;QAC/C,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAEO,gBAAgB,CAAC,KAAsE;QAC7F,6EAA6E;QAC7E,0EAA0E;QAC1E,0EAA0E;QAC1E,4EAA4E;QAC5E,gEAAgE;QAChE,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACrB,OAAO;SACR;QACD,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC;QAC3B,MAAM,WAAW,GAAG,CAAC,OAAmE,CAAC,CAAC;QAC1F,KAAK,IAAI,MAAM,GAAG,OAAO,CAAC,MAAyE,EAC9F,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE;YAC5E,WAAW,CAAC,IAAI,CAAC,MAAqC,CAAC,CAAC;SACzD;QAED,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAM,WAAW,CAAC,CAAC,CAAiC,CAAC,OAAO,EAAE;YACnG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBAC5B,IAAI,CAAC,GAAG,CAAC,EAAE;oBACT,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;iBACzB;gBACD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;oBAC5B,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;iBACzB;aACF;YACD,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;SACL;IACH,CAAC;IAEO,KAAK;QACX,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;QAC5C,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;IAC9C,CAAC;IAEO,cAAc,CAAC,KAAmF;QACxG,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;QAEzB,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE;YACtB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;QACD,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAEO,aAAa,CAAC,EAAC,IAAI,EAAE,QAAQ,EAA6D;QAChG,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACpE,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;QAC7D,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;IACjE,CAAC;IAEO,mBAAmB,CAAC,KAAuF;QAEjH,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAEO,iBAAiB,CAAC,KAA8C;QACtE,+DAA+D;QAC/D,gEAAgE;QAChE,uCAAuC;QACvC,MAAM,UAAU,GAAG,KAAK,CAAC,cAAc,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC;QACvD,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,MAAM,IAAI,SAAS,CAAC,MAAM,KAAK,OAAO,IAAI,SAAS,CAAC,MAAM,KAAK,MAAM,CAAC,EAAE;YAC9G,OAAO;SACR;QAED,MAAM,MAAM,GAAG,SAAS,CAAC,cAAc,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;YAC5B,MAAM,uBAAuB,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YACjF,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;SACjE;IACH,CAAC;IAEO,eAAe,CAAC,KAAsD;QAC5E,MAAM,UAAU,GAAI,KAAK,CAAC,IAAmB,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IAEO,aAAa,CAAC,UAAsB;QAC1C,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7D,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;QAErF,MAAM,qBAAqB,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAChF,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC;QACnE,IAAI,UAAU,CAAC,cAAc,EAAE;YAC7B,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;SACrE;aAAM;YACL,IAAI,CAAC,6BAA6B,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;SACvE;IACH,CAAC;IAEO,iBAAiB,CAAC,KAAsD;QAC9E,MAAM,UAAU,GAAI,KAAK,CAAC,IAAmB,CAAC;QAC9C,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEO,gBAAgB,CAAC,UAAsB;QAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO;SACR;QACD,MAAM,WAAW,GAAG,WAAW,CAAC,QAAQ,CAAC;QACzC,MAAM,qBAAqB,GAAG,WAAW,CAAC,MAAM,CAAC;QACjD,IAAI,qBAAqB,EAAE;YACzB,qBAAqB,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAC/C,IAAI,WAAW,EAAE;gBACf,qBAAqB,CAAC,MAAM,EAAE,CAAC;aAChC;SACF;QACD,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,QAA+B;QAC5C,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAC5B,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC5D,WAAW,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC;SACrC;IACH,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,QAA+B,EAAE,IAAa,EAAE,MAAe;QAChF,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACrE,CAAC;IAED,SAAS,CAAC,KAA8C;QACtD,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,YAAY,CAAC,QAA+B,EAAE,SAAkB;QAC9D,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QAED,IAAI,IAAI,CAAC;QACT,IAAI,SAAS,EAAE;YACb,IAAI,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,EAAE;gBACf,UAAU,GAAI,EAEZ,CAAC;gBACH,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;aACnD;YACD,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,EAAE;gBACT,IAAI,GAAG,IAAI,iBAAiB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;gBAClD,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;aAC9B;SACF;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE;gBACT,IAAI,GAAG,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC;gBACvC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,aAAa,EAAE,KAAK,CAAC,EAAE;oBACnE,KAAK,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBACxC,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;SACF;QAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,IAAsB;QACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEO,aAAa,CAAC,IAAsB;QAC1C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEO,KAAK,CAAC,oBAAoB,CAAC,KAAiE;QAClG,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC;QAE5B,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QAED,MAAM,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACrE,IAAI,CAAC,oBAAoB,EAAE;YACzB,OAAO;SACR;QAED,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;QAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEzD,IAAI,CAAC,UAAU,EAAE;YACf,OAAO;SACR;QAED,MAAM,cAAc,GAAG,IAAI,GAAG,EAAU,CAAC;QACzC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,MAAM,UAAU,GAAG,MAAM,QAAQ,CAAC,UAAU,EAAE,CAAC;QAE/C,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;YAClC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SAC/B;QAED,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;YAClC,IAAI,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE;gBACpC,IAAI,KAAK,CAAC,WAAW,KAAK,UAAU,CAAC,SAAS,CAAC,EAAE;oBAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACtB;gBACD,OAAO,UAAU,CAAC,SAAS,CAAC,CAAC;aAC9B;SACF;QAED,MAAM,oBAAoB,CAAC,cAAc,EAAE,CAAC;IAC9C,CAAC;IAEO,WAAW,CAAC,KAAiB;QACnC,MAAM,cAAc,GAAI,KAAK,CAAC,MAAe,CAAC;QAC9C,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO;SACR;QAED,MAAM,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,+BAA+B,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAClF,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QAED,MAAM,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,4BAA4B,CAAC,QAAQ,CAAC,CAAC;QAClF,IAAI,IAAI,CAAC,sBAAsB,KAAK,OAAO,EAAE;YAC3C,OAAO;SACR;QAED,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,OAAO,GAAG,KAAK,CAAC;YAC5C,OAAO,IAAI,CAAC,sBAAsB,CAAC;SACpC;QAED,IAAI,OAAO,YAAY,gBAAgB,EAAE;YACvC,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC;YACtC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAEO,YAAY,CAAC,MAAkB;QACrC,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,OAAO,GAAG,KAAK,CAAC;YAC5C,OAAO,IAAI,CAAC,sBAAsB,CAAC;SACpC;IACH,CAAC;IACD,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;IAC9D,CAAC;CACF;AAED,MAAM,OAAO,4BAA6B,SAAQ,2BAA2B;IACnE,WAAW,CAAyC;IACpD,IAAI,CAA6B;IACjC,KAAK,CAA8B;IACnC,gBAAgB,CAAU;IAElC,YAAY,YAA4B,EAAE,WAAmD;QAC3F,KAAK,CAAC,YAAY,EAAE,qBAAqB,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC;QAE3E,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,4CAA4C;QAC5C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,MAAM,qBAAqB,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,oBAAoB,CAAC,CAAC;QAC5F,IAAI,CAAC,eAAe,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAChD,CAAC;IAEO,WAAW;QACjB,QAAQ,IAAI,CAAC,WAAW,EAAE;YACxB;gBACE,OAAO,kBAAkB,CAAC;YAC5B;gBACE,OAAO,iBAAiB,CAAC;YAC3B;gBACE,OAAO,kBAAkB,CAAC;YAC5B;gBACE,OAAO,iBAAiB,CAAC;YAC3B;gBACE,OAAO,oBAAoB,CAAC;YAC9B;gBACE,OAAO,qBAAqB,CAAC;YAC/B;gBACE,OAAO,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,WAAW,iCAAiC,CAAC,CAAC;gBAC5E,OAAO,kBAAkB,CAAC;SAC7B;IACH,CAAC;IAED,UAAU,CAAC,KAAkC;QAC3C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,8DAA8D;QAC9D,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC;IAED,IAAI,OAAO;QACT,OAAO,wBAAwB,IAAI,CAAC,WAAW,EAAqC,CAAC;IACvF,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACrE;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1E,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QACtE,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,MAAM,OAAO,mBAAoB,SAAQ,2BAA2B;IACjD,OAAO,CAA0B;IACjC,QAAQ,CAAwB;IACjD,YAAY,OAAgC,EAAE,QAA+B;QAC3E,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;QAC9E,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAoC,CAAC;IAC1F,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9F,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ;QACN,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QACpD,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,IAAI,wBAAwB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;SACxF;IACH,CAAC;CACF;AAED,MAAM,OAAO,wBAAyB,SAAQ,2BAA2B;IACtD,OAAO,CAA0B;IACjC,QAAQ,CAAwB;IAChC,SAAS,CAAS;IAEnC,YAAY,OAAgC,EAAE,QAA+B,EAAE,SAAiB;QAC9F,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;QAC3E,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAClD,CAAC;IACtC,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9F,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,MAAM,OAAO,yBAA0B,SAAQ,2BAA2B;IAChE,IAAI,CAAsB;IAElC,YAAY,YAA4B;QACtC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,KAAK,CAAC,CAAC;QACtE,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,2BAA2B,EAAE,oBAAoB,CAAC,CAAC;QACpF,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,oBAAuD,CAAC;IACjE,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,kBAAkB,EAAE,CAAC;SACtC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC;QACtG,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,MAAM,OAAO,sBAAuB,SAAQ,2BAA2B;IAC7D,IAAI,CAAmB;IAC/B,YAAY,YAA4B;QACtC,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;QAC3D,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;QAC9E,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,aAAgD,CAAC;IAC1D,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,eAAe,EAAE,CAAC;SACnC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;QACnG,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,MAAM,OAAO,uBAAwB,SAAQ,2BAA2B;IAC9D,IAAI,CAAe;IAC3B,YAAY,YAA4B;QACtC,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;QAC1D,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;QAC9E,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,kBAAqD,CAAC;IAC/D,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,EAAE,CAAC;SAC/B;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9F,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,MAAM,OAAO,oBAAqB,SAAQ,qCAAqC;IACrE,uBAAuB,CAA2B;IAC1D,YAAY,YAA4B;QACtC,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC,CAAC;QAClE,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;QAC9E,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEO,UAAU;QAChB,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,cAAc,EAAE,oBAAoB,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACnF,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,cAAc,EAAE,oBAAoB,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACvF,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,cAAc,EAAE,oBAAoB,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACrF,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,cAAc,EAAE,oBAAoB,CAAC,uBAAuB,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;QACtG,6FAA6F;QAC7F,kGAAkG;QAClG,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAElC,KAAK,MAAM,cAAc,IAAI,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE;YAC9F,MAAM,SAAS,GAAG,cAAc,CAAC,SAAS,EAAE,CAAC;YAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACzC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;SACF;IACH,CAAC;IAED,uBAAuB,CAAC,KAAqB;QAC3C,MAAM,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QACxG,KAAK,MAAM,sBAAsB,IAAI,uBAAuB,EAAE;YAC5D,IAAI,CAAC,4BAA4B,CAAC,sBAAsB,CAAC,CAAC;SAC3D;IACH,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACrG,CAAC;IAEO,sBAAsB,CAAC,KAAiB;QAC9C,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1D,WAAW,CAAC,cAAc,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClH,KAAK,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,KAAK,MAAM,cAAc,IAAI,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE;YAC9F,KAAK,cAAc,CAAC,oBAAoB,EAAE,CAAC;SAC5C;IACH,CAAC;IAEO,cAAc,CAAC,EACrB,IAAI,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,GAC4D;QACrF,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IACvC,CAAC;IAEO,YAAY,CAAC,KAAqB,EAAE,UAAsB;QAChE,MAAM,sBAAsB,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;QAClG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;QACzC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEO,gBAAgB,CAAC,EACvB,IAAI,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,GAC4D;QACrF,MAAM,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAC9E,IAAI,CAAC,sBAAsB,EAAE;YAC3B,OAAO;SACR;QACD,IAAI,CAAC,4BAA4B,CAAC,sBAAsB,CAAC,CAAC;IAC5D,CAAC;IAEO,4BAA4B,CAAC,sBAA8C;QACjF,sBAAsB,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;QACzC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,uBAAuB,EAAE,sBAAsB,CAAC,CAAC;QAC5F,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEO,eAAe,CACnB,EAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAC,EACiE;QAC3G,MAAM,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;QACvF,IAAI,CAAC,sBAAsB,EAAE;YAC3B,OAAO;SACR;QACD,sBAAsB,CAAC,MAAM,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QACxD,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAEO,sBAAsB;QAC5B,yBAAyB;IAC3B,CAAC;IAEO,uBAAuB,CAAC,EAC9B,IAAI,EAAE,EAAC,UAAU,EAAE,eAAe,EAAE,KAAK,EAAC,GACoE;QAE9G,MAAM,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAC9E,IAAI,CAAC,sBAAsB,EAAE;YAC3B,OAAO;SACR;QACD,sBAAsB,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;IAClE,CAAC;IAEO,sBAAsB,CAAC,KAAqB,EAAE,UAAsB;QAC1E,OAAO,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC;IAC9G,CAAC;CACF;AAED,MAAM,OAAO,sBAAuB,SAAQ,2BAA2B;IACrE,KAAK,CAAiB;IACtB,UAAU,CAAa;IACN,0BAA0B,CAAyC;IAC5E,QAAQ,CAA0B;IAClC,IAAI,CAAmB;IAE/B,YAAY,YAA4B,EAAE,KAAqB,EAAE,UAAsB;QACrF,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC,IAAI,GAAG,KAAK,GAAG,UAAU,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QAChF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,0BAA0B,GAAG,IAAI,GAAG,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;QAC9E,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,sBAAsB,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IACxG,CAAC;IAED,IAAI,OAAO;QACT,OAAO,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAC5C,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACrG,CAAC;IAEO,sBAAsB,CAAC,KAAiB;QAC9C,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1D,WAAW,CAAC,cAAc,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClH,KAAK,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED,uBAAuB,CAAC,eAAuB;QAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACzE,IAAI,WAAW,EAAE;YACf,WAAW,CAAC,gBAAgB,EAAE,CAAC;SAChC;IACH,CAAC;IAED,MAAM,CAAC,QAAgC,EAAE,cAAuB;QAC9D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,MAAM,gBAAgB,GAAG,IAAI,GAAG,EAAU,CAAC;QAC3C,KAAK,MAAM,eAAe,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3E,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACpE,IAAI,CAAC,WAAW,EAAE;gBAChB,SAAS;aACV;YACD,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,WAAW,GAAG,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACxE,IAAI,CAAC,WAAW,EAAE;gBAChB,WAAW,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;gBAC3G,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;gBACnE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;aAC/B;YACD,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;SACjD;QACD,KAAK,MAAM,eAAe,IAAI,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,EAAE;YACpE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;gBAC1C,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;aAC1C;SACF;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC5B;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,aAAa;QACnB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5D,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7D,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,EAAC,GAAG,EAAE,OAAO,EAAC,CAAC,CAAC;SACpE;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAC,GAAG,EAAE,OAAO,EAAC,CAAC,CAAC;SAC/D;IACH,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QACjG,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,kBAAkB,CAAC,eAAuB;QAChD,MAAM,sBAAsB,GAAG,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACpF,IAAI,sBAAsB,EAAE;YAC1B,sBAAsB,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;SAC1C;QACD,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,KAAK;QACH,KAAK,MAAM,eAAe,IAAI,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,EAAE;YACpE,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;SAC1C;IACH,CAAC;CACF;AAED,MAAM,OAAO,yBAA0B,SAAQ,2BAA2B;IAChE,KAAK,CAAiB;IACtB,UAAU,CAAa;IACd,oBAAoB,CAAmC;IAChE,WAAW,CAAc;IACzB,IAAI,CAAmB;IAE/B,YAAY,YAA4B,EAAE,KAAqB,EAAE,UAAsB,EAAE,WAAwB;QAC/G,KAAK,CAAC,YAAY,EAAE,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,oBAAoB,GAAG,IAAI,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;QAC3E,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAC1E,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACrG,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC9B;QACD,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,EAAE;YAC5D,WAAW,CAAC,gBAAgB,EAAE,CAAC;SAChC;IACH,CAAC;IAEO,sBAAsB,CAAC,KAAiB;QAC9C,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1D,WAAW,CAAC,cAAc,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvG,KAAK,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEO,kBAAkB;QACxB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;SACzB;QACD,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,EAAE;YAC5D,WAAW,CAAC,YAAY,EAAE,CAAC;SAC5B;IACH,CAAC;IAEO,KAAK,CAAC,gBAAgB;QAC5B,MAAM,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC1E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,WAAwB,EAAE,cAAuB;QACtD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,MAAM,UAAU,GAAG,IAAI,GAAG,EAAU,CAAC;QACrC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YACrD,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,EAAE;gBAChB,WAAW,GAAG,IAAI,mBAAmB,CACjC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,EACzE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;gBACvD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;aAC/B;YACD,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;SAC7D;QACD,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,EAAE;YACxD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aAC9B;SACF;QACD,KAAK,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,EAAE;YAC1E,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBAC9B,IAAI,CAAC,WAAW,CAAE,WAAmC,CAAC,CAAC;gBACvD,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAE,SAAoB,CAAC,CAAC;aACzD;SACF;QAED,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACrB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;QAED,IAAI,IAAI,CAAC,IAAI,IAAI,cAAc,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,aAAa;QACnB,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QACrD,IAAI,aAAa,GAAG,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAC,GAAG,EAAE,aAAa,EAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACvG,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;YAClC,aAAa,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;SACjE;QACD,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;IAC/B,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI;gBACL,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC9G;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QACjG,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,YAAY,CAAC,SAAiB;QACpC,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAClE,IAAI,gBAAgB,EAAE;YACpB,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK;QACH,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,EAAE;YACxD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACnB;IACH,CAAC;CACF;AAED,MAAM,OAAO,mBAAoB,SAAQ,2BAA2B;IAC1D,KAAK,CAAiB;IACtB,UAAU,CAAa;IACvB,WAAW,CAAc;IACzB,KAAK,CAAQ;IACb,kBAAkB,CAAa;IAC/B,IAAI,CAAe;IAE3B,YACI,YAA4B,EAAE,KAAqB,EAAE,UAAsB,EAAE,WAAwB,EACrG,KAAY,EAAE,kBAA8B;QAC9C,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC/C,CAAC;IAED,IAAI,OAAO;QACT,OAAO,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI;YAC7G,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAuC,CAAC;IAC/D,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC9B;IACH,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;SACzB;IACH,CAAC;IAED,MAAM,CAAC,WAAwB,EAAE,KAAY,EAAE,cAAuB;QACpE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,IAAI,CAAC,IAAI,IAAI,cAAc,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,aAAa;QACnB,MAAM,YAAY,GAAG,EAAE,CAAC;QACxB,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QAC/C,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAC,GAAG,EAAE,aAAa,EAAC,CAAC,CAAC,CAAC;QACxE,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACrB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;SACrD;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;YACzB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACjH;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QACjG,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK;QACH,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACnB;IACH,CAAC;CACF;AAED,MAAM,OAAO,qBAAsB,SAAQ,2BAA2B;IACnD,UAAU,CAAa;IACxC,YAAY,YAA4B,EAAE,UAAsB;QAC9D,KAAK,CACD,YAAY,EACZ,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;YAC3B,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAC9G,KAAK,CAAC,CAAC;QACX,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;QAC3E,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,GAAG;YACtD,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAoC,CAAC;IAChG,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;QAClG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACrG,CAAC;IAEO,sBAAsB,CAAC,KAAiB;QAC9C,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1D,WAAW,CAAC,cAAc,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;QACpG,KAAK,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;CACF;AAED,MAAM,OAAO,iBAAkB,SAAQ,2BAA2B;IAC/C,MAAM,CAAoB;IAC1B,oBAAoB,CAAS;IAE9C,YAAY,YAA4B,EAAE,KAA8C,EAAE,YAAoB;QAC5G,KAAK,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;QAC3F,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,CAAC;QACjD,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,wBAAwB,EAAE,EAAC,GAAG,EAAE,YAAY,EAAC,CAAC,CAAC;QACnF,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;QAC5E,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,YAAY,GAAG,IAAI,CAAC,oBAAuD,CAAC;IACrF,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACrG,CAAC;IAEO,sBAAsB,CAAC,KAAY;QACzC,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1D,WAAW,CAAC,cAAc,EAAE,CAAC,UAAU,CACnC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACjH,KAAK,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACxE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9F,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,MAAM,OAAO,mBAAoB,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IAC7C,WAAW,CAA6B;IACxC,WAAW,CAAmB;IAEtC;QACE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,OAAO,CAAC,IAA0C;QAChD,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC1C;QACD,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC7C;IACH,CAAC;CACF;AAED,MAAM,OAAO,gBAAgB;IAC3B,KAAK,CAAiB;IACL,WAAW,CAA6B;IACjD,qBAAqB,CAAgC;IACrD,sBAAsB,CAAgC;IAE9D,YAAY,YAA4B,EAAE,WAAuC;QAC/E,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAC;QACnF,IAAI,CAAC,qBAAqB,GAAG,IAAI,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,sBAAsB,GAAG,IAAI,GAAG,EAAE,CAAC;QAExC,MAAM,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC9D,YAAY,CAAC,gBAAgB,CACzB,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;QAClG,YAAY,CAAC,gBAAgB,CACzB,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QACjG,YAAY,CAAC,gBAAgB,CACzB,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;QAClG,YAAY,CAAC,gBAAgB,CACzB,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;QAEnG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,EACzG,IAAI,CAAC,CAAC;QACV,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,EAC9G,IAAI,CAAC,CAAC;QACV,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAC9G,IAAI,CAAC,CAAC;QAEV,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAEhE,KAAK,MAAM,KAAK,IAAI,YAAY,CAAC,YAAY,EAAE,EAAE;YAC/C,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;gBAC7C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAChC;YACD,MAAM,kBAAkB,GAAG,KAAK,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;YAC/G,IAAI,kBAAkB,EAAE;gBACtB,KAAK,MAAM,UAAU,IAAI,kBAAkB,CAAC,WAAW,EAAE,EAAE;oBACzD,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;iBACvC;aACF;SACF;IACH,CAAC;IAED,WAAW,CAAC,MAAyB;QACnC,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE;YAC/F,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAC/B;IACH,CAAC;IAEO,KAAK,CAAC,WAAW,CAAC,MAAyB;QACjD,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QAC3C,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QACD,MAAM,cAAc,GAAG,YAAY,CAAC,EAAE,EAAE,CAAC;QACzC,MAAM,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzE,MAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC;QAC7B,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QAC9B,MAAM,EAAC,UAAU,EAAC,GAAG,MAAM,YAAY,CAAC,WAAW,EAAE,CAAC,oBAAoB,CAAC,EAAC,QAAQ,EAAC,CAAC,CAAC;QACvF,IAAI,gBAAgB,IAAI,UAAU,EAAE;YAClC,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,aAAa,CAAC,OAA0B;IACxC,CAAC;IAEO,kBAAkB,CAAC,KAA8C;QACvE,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,WAAW,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE;YAClE,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAEO,WAAW,CAAC,KAAmD;QACrE,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,KAAK,CAAC;SACd;QACD,IAAI,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE;YAC1D,OAAO,KAAK,CAAC;SACd;QACD,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,KAAK,CAAC;SACd;QACD,WAAW,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,QAA+B,EAAE,IAAa,EAAE,MAAe;QAClF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE;YACvC,OAAO;SACR;QACD,MAAM,mBAAmB,GAAG,wBAAwB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC3E,IAAI,mBAAmB,EAAE;YACvB,MAAM,mBAAmB,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACxD;IACH,CAAC;IAED,oBAAoB,CAAC,KAA8C;QACjE,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAClE,gBAAgB,EAAE,MAAM,EAAE,CAAC;QAC3B,gBAAgB,EAAE,MAAM,EAAE,CAAC;IAC7B,CAAC;IAEO,UAAU,CAAC,KAA8C;QAC/D,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,MAAM,iBAAiB,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1G,IAAI,CAAC,iBAAiB,EAAE;YACtB,OAAO;SACR;QAED,MAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACjE,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC5C,IAAI,eAAe,CAAC,MAAM,EAAE;gBAC1B,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;aACrD;SACF;QAED,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC3D,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;QAC3D,MAAM,QAAQ,GAAG,KAAK,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAC9C,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;SAC7D;QACD,iBAAiB,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QAEhD,KAAK,MAAM,QAAQ,IAAI,KAAK,CAAC,SAAS,EAAE,EAAE;YACxC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SAC9B;IACH,CAAC;IAEO,aAAa,CAAC,OAA8B;QAClD,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjE,IAAI,CAAC,gBAAgB,EAAE;YACrB,OAAO;SACR;QAED,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,gBAAgB,CAAC,MAAM,EAAE;YAC3B,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;SACvD;IACH,CAAC;IAEO,cAAc,CAAC,KAA8C;QACnE,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAClE,IAAI,gBAAgB,EAAE;YACpB,KAAK,gBAAgB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SAC7C;IACH,CAAC;IAEO,aAAa,CAAC,QAA+B;QACnD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QACD,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC1E,IAAI,CAAC,gBAAgB,EAAE;YACrB,uDAAuD;YACvD,wCAAwC;YACxC,OAAO;SACR;QACD,gBAAgB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAEO,YAAY,CAAC,KAAsE;QACzF,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;QAC9B,+EAA+E;QAC/E,IAAI,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,IAAI,KAAK,MAAM,EAAE;YACrD,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC7E,IAAI,gBAAgB,EAAE;gBACpB,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;gBACvE,gBAAgB,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;aAC3C;SACF;IACH,CAAC;IAEO,eAAe,CAAC,KAAoE;QAC1F,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC;QAC5B,MAAM,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACnE,IAAI,gBAAgB,EAAE;YACpB,gBAAgB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC9C;IACH,CAAC;IAEO,aAAa,CAAC,KAAsE;QAC1F,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;QAC9B,+EAA+E;QAC/E,IAAI,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,IAAI,KAAK,MAAM,EAAE;YACrD,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC7E,IAAI,gBAAgB,EAAE;gBACpB,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;aAC5C;SACF;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QAClC,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;QACnC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;IACtC,CAAC;CACF;AAED,MAAM,OAAO,gBAAiB,SAAQ,2BAA2B;IACvD,OAAO,CAAmB;IAC1B,KAAK,CAA0C;IAC/C,OAAO,CAAS;IACP,gBAAgB,CAAqD;IACrE,sBAAsB,CAAwC;IACvE,oBAAoB,CAAwD;IAC5E,oBAAoB,CAAmD;IACvE,IAAI,CAA+D;IAE3E,YAAY,OAAyB,EAAE,KAA8C;QACnF,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,sBAAsB,GAAG,IAAI,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,oBAAoB,GAAG,IAAI,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,oBAAoB,GAAG,IAAI,GAAG,EAAE,CAAC;QACtC,KAAK,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,mBAAmB,CAAC,KAA8C;QAEhE,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE;YACtB,OAAO,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,kBAAkB,CAAC;SACjF;QACD,OAAO,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,mCAAmC,CAAC,CAAC,CAAC,2BAA2B,CAAC;IACpG,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,KAA8C;QACjE,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;QAClE,IAAI,KAAK,CAAC,cAAc,EAAE,EAAE;YAC1B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,WAAW,EAAE,EAAE;YACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YACjC,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,sEAAsE;gBACtE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACzB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC1B;SACF;QACD,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;QAElC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QAED,0EAA0E;QAC1E,uEAAuE;QACvE,qCAAqC;QACrC,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE;YACtB,MAAM,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC;YACrE,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;gBAC5B,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE;oBACnD,MAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC;oBAC7B,mBAAmB,CAAC,QAAQ,CAAC,CAAC;oBAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,CAAC;oBAC/D,MAAM,UAAU,GAAG,CAAC,MAAM,KAAK,CAAC,oBAAoB,CAAC,EAAC,QAAQ,EAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBAC7E,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;iBAChC;aACF;SACF;IACH,CAAC;IAED,IAAI,OAAO;QACT,4EAA4E;QAC5E,wEAAwE;QACxE,mEAAmE;QACnE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;YAC3B,OAAO,UAA6C,CAAC;SACtD;QACD,OAAO,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAoC,CAAC;IACnF,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrF;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACpB;QACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACpG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEzB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACjD,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;QACrD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,OAAO,CAAC,OAAgB;QAC1B,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAC9C,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACjD,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;SACtD;IACH,CAAC;IAED,cAAc,CAAC,QAA+B;QAC5C,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;QACzC,IAAI,UAAU,IAAI,GAAG,IAAI,UAAU,IAAI,GAAG,EAAE;YAC1C,OAAO;SACR;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC7C,MAAM,YAAY,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC;QACzC,IAAI,eAAe,GACf,YAAY,KAAK,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACjH,IAAI,CAAC,eAAe,EAAE;YACpB,eAAe,GAAG,IAAI,qCAAqC,CACvD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,YAAY,EAAE,YAAY,KAAK,QAAQ,CAAC,CAAC;YAC7G,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,eAAe,CAAC,CAAC;YAChE,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;SAC9E;QACD,MAAM,mBAAmB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACvF,eAAe,CAAC,WAAW,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;QAC5F,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;IACrE,CAAC;IAED,YAAY,CAAC,UAAsC;QACjD,MAAM,WAAW,GAAG,eAAe,CAAC;QACpC,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC7D,IAAI,CAAC,eAAe,EAAE;YACpB,eAAe,GAAG,IAAI,qCAAqC,CACvD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,WAAW,CAAC,CAAC;YAC1E,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;YACxD,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;SAC9E;QACD,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YACvD,MAAM,iBAAiB,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;YACrF,eAAe,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;YAC/C,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;SACvE;IACH,CAAC;IAED,aAAa,CAAC,UAAsC;QAClD,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,aAAa,CAAC;QAC7F,MAAM,YAAY,GAAG,UAAU,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC3C,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC7F,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC7D,IAAI,CAAC,eAAe,EAAE;YACpB,eAAe,GAAG,IAAI,qCAAqC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;YAC3G,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;YACxD,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;SAC9E;QACD,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YACvD,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;YAChF,eAAe,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;YAC/C,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;SACvE;IACH,CAAC;IAED,aAAa,CAAC,UAAsC;QAClD,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC7E,IAAI,CAAC,iBAAiB,EAAE;YACtB,OAAO;SACR;QACD,IAAI,iBAAiB,CAAC,KAAK,KAAK,UAAU,CAAC,KAAK,EAAE;YAChD,iBAAiB,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;SAC5C;QACD,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IAED,eAAe,CAAC,QAAkC;QAChD,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAClE,IAAI,iBAAiB,EAAE;YACrB,iBAAiB,CAAC,YAAY,EAAE,CAAC;SAClC;IACH,CAAC;IAED,WAAW,CACP,WAAuC,EACvC,aACY,gBAAgB,CAAC,wBAAwB;QACvD,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IAC7C,CAAC;IAED;;;OAGG;IACK,MAAM,CAAC,wBAAwB,CACnC,YAAwC,EAAE,YAAwC;QACpF,SAAS,UAAU,CAAC,WAAuC;YACzD,IAAI,WAAW,YAAY,qCAAqC,EAAE;gBAChE,OAAO,CAAC,CAAC;aACV;YACD,IAAI,WAAW,YAAY,gBAAgB,EAAE;gBAC3C,OAAO,CAAC,CAAC;aACV;YACD,OAAO,CAAC,CAAC;QACX,CAAC;QAED,MAAM,WAAW,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;QAC7C,MAAM,WAAW,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;QAC7C,OAAO,WAAW,GAAG,WAAW,IAAI,YAAY,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3G,CAAC;CACF;AAED,MAAM,kCAAkC,GAAG,IAAI,OAAO,EAAmD,CAAC;AAE1G,MAAM,OAAO,wBAAyB,SAAQ,2BAA2B;IACtD,KAAK,CAAiB;IAC/B,QAAQ,CAAwB;IAChC,cAAc,CAAiC;IAEvD,YAAY,YAA4B,EAAE,QAA+B;QACvE,KAAK,CACD,YAAY,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACnH,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC;QAC5B,kCAAkC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAE5D,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,0BAA0B,CAAC,CAAC;QACpF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC;QACjF,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,QAA+B;QAChD,OAAO,kCAAkC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IAC3B,CAAC;IAEO,cAAc;QACpB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,OAAO,IAAI,CAAC,cAAc,CAAC;SAC5B;QACD,MAAM,WAAW,GAAG,WAAW,CAAC,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACnH,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5C,IAAI,IAAI,EAAE;gBACR,OAAO,IAAI,CAAC;aACb;YACD,OAAO,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;YAC7B,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,+BAA+B,CAAC,EAAE,IAAI,CAAC,CAAC;SAC1F;aAAM;YACL,KAAK,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;QACrG,OAAO,KAAK,CAAC;IACf,CAAC;IAED,UAAU,CAAC,MAAa;QACtB,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACzF,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QACvF,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACrG,CAAC;IAEO,WAAW,CAAC,KAAgB;QAClC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;YACvB,OAAO,KAAK,CAAC;SACd;QACD,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;QACtE,KAAK,CAAC,YAAY,CAAC,aAAa,GAAG,MAAM,CAAC;QAC1C,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,sBAAsB,CAAC,KAAiB;QAC9C,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1D,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,KAAK,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,UAAmB,EAAE,YAAqB;QAC7D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,CAAC,IAAI,YAAY,WAAW,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAC5G,OAAO;SACR;QACD,IAAI,CAAC,cAAc,CAAC,EAAC,UAAU,EAAE,YAAY,EAAC,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;CACF;AAED,MAAM,sBAAuB,SAAQ,2BAA2B;IACtD,UAAU,CAA6B;IACvC,cAAc,CAAU;IACxB,IAAI,CAA+B;IAE3C,YAAY,YAA4B,EAAE,UAAsC;QAC9E,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,KAAK,CAAC,CAAC;QACzF,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;IAC9C,CAAC;IAED,UAAU,CAAC,eAAwB;QACjC,MAAM,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,kBAAkB,CAAC;QAClF,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,UAAsC;QAC3C,IAAI,UAAU,CAAC,eAAe,KAAK,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE;YAClE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACpB;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACpB;IACH,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SAC/E;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACpB;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;QACnG,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,GAAsC,CAAC;IAChE,CAAC;CACF;AAED,MAAM,iBAAkB,SAAQ,2BAA2B;IACjD,UAAU,CAA6B;IACvC,IAAI,CAAyB;IAErC,YAAY,YAA4B,EAAE,UAAsC;QAC9E,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;QAC/F,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,2BAA2B,EAAE,0BAA0B,CAAC,CAAC;QAC1F,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,QAAQ,CAAC,cAAwB;QAC/B,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACpD;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACpB;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;QACnG,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,GAAsC,CAAC;IAChE,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008, 2010 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {BackForwardCacheTreeElement, ServiceWorkerCacheTreeElement} from './ApplicationPanelCacheSection.js';\nimport {ApplicationPanelTreeElement, ExpandableApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport {AppManifestView} from './AppManifestView.js';\nimport {BackgroundServiceModel} from './BackgroundServiceModel.js';\nimport {BackgroundServiceView} from './BackgroundServiceView.js';\nimport * as ApplicationComponents from './components/components.js';\nimport resourcesSidebarStyles from './resourcesSidebar.css.js';\n\nimport type {Database as DatabaseModelDatabase} from './DatabaseModel.js';\nimport {DatabaseModel, Events as DatabaseModelEvents} from './DatabaseModel.js';\nimport {DatabaseQueryView, Events as DatabaseQueryViewEvents} from './DatabaseQueryView.js';\nimport {DatabaseTableView} from './DatabaseTableView.js';\nimport type {DOMStorage} from './DOMStorageModel.js';\nimport {DOMStorageModel, Events as DOMStorageModelEvents} from './DOMStorageModel.js';\nimport type {Database as IndexedDBModelDatabase, DatabaseId, Index, ObjectStore} from './IndexedDBModel.js';\nimport {Events as IndexedDBModelEvents, IndexedDBModel} from './IndexedDBModel.js';\nimport {IDBDatabaseView, IDBDataView} from './IndexedDBViews.js';\nimport {InterestGroupStorageModel, Events as InterestGroupModelEvents} from './InterestGroupStorageModel.js';\nimport {InterestGroupTreeElement} from './InterestGroupTreeElement.js';\nimport {OpenedWindowDetailsView, WorkerDetailsView} from './OpenedWindowDetailsView.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\nimport {ServiceWorkersView} from './ServiceWorkersView.js';\nimport {StorageView} from './StorageView.js';\nimport {TrustTokensTreeElement} from './TrustTokensTreeElement.js';\nimport {ReportingApiTreeElement} from './ReportingApiTreeElement.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  application: 'Application',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  storage: 'Storage',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  localStorage: 'Local Storage',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  sessionStorage: 'Session Storage',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  webSql: 'Web SQL',\n  /**\n  *@description Text for web cookies\n  */\n  cookies: 'Cookies',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  cache: 'Cache',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  backgroundServices: 'Background Services',\n  /**\n  *@description Text for rendering frames\n  */\n  frames: 'Frames',\n  /**\n  *@description Text that appears on a button for the manifest resource type filter.\n  */\n  manifest: 'Manifest',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  indexeddb: 'IndexedDB',\n  /**\n  *@description A context menu item in the Application Panel Sidebar of the Application panel\n  */\n  refreshIndexeddb: 'Refresh IndexedDB',\n  /**\n  *@description Tooltip in Application Panel Sidebar of the Application panel\n  *@example {1.0} PH1\n  */\n  versionSEmpty: 'Version: {PH1} (empty)',\n  /**\n  *@description Tooltip in Application Panel Sidebar of the Application panel\n  *@example {1.0} PH1\n  */\n  versionS: 'Version: {PH1}',\n  /**\n  *@description Text to clear content\n  */\n  clear: 'Clear',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  *@example {\"key path\"} PH1\n  */\n  keyPathS: 'Key path: {PH1}',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  localFiles: 'Local Files',\n  /**\n  *@description Tooltip in Application Panel Sidebar of the Application panel\n  *@example {https://example.com} PH1\n  */\n  cookiesUsedByFramesFromS: 'Cookies used by frames from {PH1}',\n  /**\n  *@description Text in Frames View of the Application panel\n  */\n  openedWindows: 'Opened Windows',\n  /**\n  *@description Label for plural of worker type: web workers\n  */\n  webWorkers: 'Web Workers',\n  /**\n  *@description Label in frame tree for unavailable document\n  */\n  documentNotAvailable: 'Document not available',\n  /**\n  *@description Description of content of unavailable document in Application panel\n  */\n  theContentOfThisDocumentHasBeen:\n      'The content of this document has been generated dynamically via \\'document.write()\\'.',\n  /**\n  *@description Text in Frames View of the Application panel\n  */\n  windowWithoutTitle: 'Window without title',\n  /**\n  *@description Default name for worker\n  */\n  worker: 'worker',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ApplicationPanelSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction assertNotMainTarget(targetId: Protocol.Target.TargetID|'main'): asserts targetId is Protocol.Target.TargetID {\n  if (targetId === 'main') {\n    throw new Error('Unexpected main target id');\n  }\n}\n\nexport class ApplicationPanelSidebar extends UI.Widget.VBox implements SDK.TargetManager.Observer {\n  panel: ResourcesPanel;\n  private readonly sidebarTree: UI.TreeOutline.TreeOutlineInShadow;\n  private readonly applicationTreeElement: UI.TreeOutline.TreeElement;\n  serviceWorkersTreeElement: ServiceWorkersTreeElement;\n  localStorageListTreeElement: ExpandableApplicationPanelTreeElement;\n  sessionStorageListTreeElement: ExpandableApplicationPanelTreeElement;\n  indexedDBListTreeElement: IndexedDBTreeElement;\n  interestGroupTreeElement: InterestGroupTreeElement;\n  databasesListTreeElement: ExpandableApplicationPanelTreeElement;\n  cookieListTreeElement: ExpandableApplicationPanelTreeElement;\n  trustTokensTreeElement: TrustTokensTreeElement;\n  cacheStorageListTreeElement: ServiceWorkerCacheTreeElement;\n  private backForwardCacheListTreeElement?: BackForwardCacheTreeElement;\n  backgroundFetchTreeElement: BackgroundServiceTreeElement|undefined;\n  backgroundSyncTreeElement: BackgroundServiceTreeElement|undefined;\n  notificationsTreeElement: BackgroundServiceTreeElement|undefined;\n  paymentHandlerTreeElement: BackgroundServiceTreeElement|undefined;\n  periodicBackgroundSyncTreeElement: BackgroundServiceTreeElement|undefined;\n  pushMessagingTreeElement: BackgroundServiceTreeElement|undefined;\n  reportingApiTreeElement: ReportingApiTreeElement|undefined;\n  private readonly resourcesSection: ResourcesSection;\n  private readonly databaseTableViews: Map<DatabaseModelDatabase, {\n    [x: string]: DatabaseTableView,\n  }>;\n  private databaseQueryViews: Map<DatabaseModelDatabase, DatabaseQueryView>;\n  private readonly databaseTreeElements: Map<DatabaseModelDatabase, DatabaseTreeElement>;\n  private domStorageTreeElements: Map<DOMStorage, DOMStorageTreeElement>;\n  private domains: {\n    [x: string]: boolean,\n  };\n  private target?: SDK.Target.Target;\n  private databaseModel?: DatabaseModel|null;\n  private previousHoveredElement?: FrameTreeElement;\n\n  constructor(panel: ResourcesPanel) {\n    super();\n\n    this.panel = panel;\n\n    this.sidebarTree = new UI.TreeOutline.TreeOutlineInShadow();\n    this.sidebarTree.element.classList.add('resources-sidebar');\n\n    this.sidebarTree.element.classList.add('filter-all');\n    // Listener needs to have been set up before the elements are added\n    this.sidebarTree.addEventListener(UI.TreeOutline.Events.ElementAttached, this.treeElementAdded, this);\n\n    this.contentElement.appendChild(this.sidebarTree.element);\n\n    const applicationSectionTitle = i18nString(UIStrings.application);\n    this.applicationTreeElement = this.addSidebarSection(applicationSectionTitle);\n    const manifestTreeElement = new AppManifestTreeElement(panel);\n    this.applicationTreeElement.appendChild(manifestTreeElement);\n    this.serviceWorkersTreeElement = new ServiceWorkersTreeElement(panel);\n    this.applicationTreeElement.appendChild(this.serviceWorkersTreeElement);\n    const clearStorageTreeElement = new ClearStorageTreeElement(panel);\n    this.applicationTreeElement.appendChild(clearStorageTreeElement);\n\n    const storageSectionTitle = i18nString(UIStrings.storage);\n    const storageTreeElement = this.addSidebarSection(storageSectionTitle);\n    this.localStorageListTreeElement =\n        new ExpandableApplicationPanelTreeElement(panel, i18nString(UIStrings.localStorage), 'LocalStorage');\n    this.localStorageListTreeElement.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/localstorage/?utm_source=devtools' as\n        Platform.DevToolsPath.UrlString);\n    const localStorageIcon = UI.Icon.Icon.create('mediumicon-table', 'resource-tree-item');\n    this.localStorageListTreeElement.setLeadingIcons([localStorageIcon]);\n\n    storageTreeElement.appendChild(this.localStorageListTreeElement);\n    this.sessionStorageListTreeElement =\n        new ExpandableApplicationPanelTreeElement(panel, i18nString(UIStrings.sessionStorage), 'SessionStorage');\n    this.sessionStorageListTreeElement.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/sessionstorage/?utm_source=devtools' as\n        Platform.DevToolsPath.UrlString);\n    const sessionStorageIcon = UI.Icon.Icon.create('mediumicon-table', 'resource-tree-item');\n    this.sessionStorageListTreeElement.setLeadingIcons([sessionStorageIcon]);\n\n    storageTreeElement.appendChild(this.sessionStorageListTreeElement);\n    this.indexedDBListTreeElement = new IndexedDBTreeElement(panel);\n    this.indexedDBListTreeElement.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/indexeddb/?utm_source=devtools' as\n        Platform.DevToolsPath.UrlString);\n    storageTreeElement.appendChild(this.indexedDBListTreeElement);\n    this.databasesListTreeElement =\n        new ExpandableApplicationPanelTreeElement(panel, i18nString(UIStrings.webSql), 'Databases');\n    this.databasesListTreeElement.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/websql/?utm_source=devtools' as\n        Platform.DevToolsPath.UrlString);\n    const databaseIcon = UI.Icon.Icon.create('mediumicon-database', 'resource-tree-item');\n    this.databasesListTreeElement.setLeadingIcons([databaseIcon]);\n\n    storageTreeElement.appendChild(this.databasesListTreeElement);\n    this.cookieListTreeElement =\n        new ExpandableApplicationPanelTreeElement(panel, i18nString(UIStrings.cookies), 'Cookies');\n    this.cookieListTreeElement.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/cookies/?utm_source=devtools' as\n        Platform.DevToolsPath.UrlString);\n    const cookieIcon = UI.Icon.Icon.create('mediumicon-cookie', 'resource-tree-item');\n    this.cookieListTreeElement.setLeadingIcons([cookieIcon]);\n    storageTreeElement.appendChild(this.cookieListTreeElement);\n\n    this.trustTokensTreeElement = new TrustTokensTreeElement(panel);\n    storageTreeElement.appendChild(this.trustTokensTreeElement);\n\n    this.interestGroupTreeElement = new InterestGroupTreeElement(panel);\n    storageTreeElement.appendChild(this.interestGroupTreeElement);\n\n    const cacheSectionTitle = i18nString(UIStrings.cache);\n    const cacheTreeElement = this.addSidebarSection(cacheSectionTitle);\n    this.cacheStorageListTreeElement = new ServiceWorkerCacheTreeElement(panel);\n    cacheTreeElement.appendChild(this.cacheStorageListTreeElement);\n\n    this.backForwardCacheListTreeElement = new BackForwardCacheTreeElement(panel);\n    cacheTreeElement.appendChild(this.backForwardCacheListTreeElement);\n\n    if (Root.Runtime.experiments.isEnabled('backgroundServices')) {\n      const backgroundServiceSectionTitle = i18nString(UIStrings.backgroundServices);\n      const backgroundServiceTreeElement = this.addSidebarSection(backgroundServiceSectionTitle);\n\n      this.backgroundFetchTreeElement =\n          new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.BackgroundFetch);\n      backgroundServiceTreeElement.appendChild(this.backgroundFetchTreeElement);\n      this.backgroundSyncTreeElement =\n          new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.BackgroundSync);\n      backgroundServiceTreeElement.appendChild(this.backgroundSyncTreeElement);\n\n      if (Root.Runtime.experiments.isEnabled('backgroundServicesNotifications')) {\n        this.notificationsTreeElement =\n            new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.Notifications);\n        backgroundServiceTreeElement.appendChild(this.notificationsTreeElement);\n      }\n      if (Root.Runtime.experiments.isEnabled('backgroundServicesPaymentHandler')) {\n        this.paymentHandlerTreeElement =\n            new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.PaymentHandler);\n        backgroundServiceTreeElement.appendChild(this.paymentHandlerTreeElement);\n      }\n      this.periodicBackgroundSyncTreeElement =\n          new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.PeriodicBackgroundSync);\n      backgroundServiceTreeElement.appendChild(this.periodicBackgroundSyncTreeElement);\n      if (Root.Runtime.experiments.isEnabled('backgroundServicesPushMessaging')) {\n        this.pushMessagingTreeElement =\n            new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.PushMessaging);\n        backgroundServiceTreeElement.appendChild(this.pushMessagingTreeElement);\n      }\n      if (Root.Runtime.experiments.isEnabled('reportingApiDebugging')) {\n        this.reportingApiTreeElement = new ReportingApiTreeElement(panel);\n        backgroundServiceTreeElement.appendChild(this.reportingApiTreeElement);\n      }\n    }\n    const resourcesSectionTitle = i18nString(UIStrings.frames);\n    const resourcesTreeElement = this.addSidebarSection(resourcesSectionTitle);\n    this.resourcesSection = new ResourcesSection(panel, resourcesTreeElement);\n\n    this.databaseTableViews = new Map();\n    this.databaseQueryViews = new Map();\n    this.databaseTreeElements = new Map();\n    this.domStorageTreeElements = new Map();\n    this.domains = {};\n\n    this.sidebarTree.contentElement.addEventListener('mousemove', this.onmousemove.bind(this), false);\n    this.sidebarTree.contentElement.addEventListener('mouseleave', this.onmouseleave.bind(this), false);\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated, this.frameNavigated,\n        this);\n\n    const selection = this.panel.lastSelectedItemPath();\n    if (!selection.length) {\n      manifestTreeElement.select();\n    }\n\n    SDK.TargetManager.TargetManager.instance().observeModels(DOMStorageModel, {\n      modelAdded: (model: DOMStorageModel): void => this.domStorageModelAdded(model),\n      modelRemoved: (model: DOMStorageModel): void => this.domStorageModelRemoved(model),\n    });\n    SDK.TargetManager.TargetManager.instance().observeModels(IndexedDBModel, {\n      modelAdded: (model: IndexedDBModel): void => model.enable(),\n      modelRemoved: (model: IndexedDBModel): void => this.indexedDBListTreeElement.removeIndexedDBForModel(model),\n    });\n    SDK.TargetManager.TargetManager.instance().observeModels(InterestGroupStorageModel, {\n      modelAdded: (model: InterestGroupStorageModel): void => this.interestGroupModelAdded(model),\n      modelRemoved: (model: InterestGroupStorageModel): void => this.interestGroupModelRemoved(model),\n    });\n    // Work-around for crbug.com/1152713: Something is wrong with custom scrollbars and size containment.\n    // @ts-ignore\n    this.contentElement.style.contain = 'layout style';\n  }\n\n  private addSidebarSection(title: string): UI.TreeOutline.TreeElement {\n    const treeElement = new UI.TreeOutline.TreeElement(title, true);\n    treeElement.listItemElement.classList.add('storage-group-list-item');\n    treeElement.setCollapsible(false);\n    treeElement.selectable = false;\n    this.sidebarTree.appendChild(treeElement);\n    UI.ARIAUtils.setAccessibleName(treeElement.childrenListElement, title);\n    return treeElement;\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (this.target) {\n      return;\n    }\n    this.target = target;\n    this.databaseModel = target.model(DatabaseModel);\n    if (this.databaseModel) {\n      this.databaseModel.addEventListener(DatabaseModelEvents.DatabaseAdded, this.databaseAdded, this);\n      this.databaseModel.addEventListener(DatabaseModelEvents.DatabasesRemoved, this.resetWebSQL, this);\n    }\n\n    const interestGroupModel = target.model(InterestGroupStorageModel);\n    if (interestGroupModel) {\n      interestGroupModel.addEventListener(InterestGroupModelEvents.InterestGroupAccess, this.interestGroupAccess, this);\n    }\n\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return;\n    }\n\n    if (resourceTreeModel.cachedResourcesLoaded()) {\n      this.initialize();\n    }\n\n    resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.CachedResourcesLoaded, this.initialize, this);\n    resourceTreeModel.addEventListener(\n        SDK.ResourceTreeModel.Events.WillLoadCachedResources, this.resetWithFrames, this);\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    if (target !== this.target) {\n      return;\n    }\n    delete this.target;\n\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (resourceTreeModel) {\n      resourceTreeModel.removeEventListener(SDK.ResourceTreeModel.Events.CachedResourcesLoaded, this.initialize, this);\n      resourceTreeModel.removeEventListener(\n          SDK.ResourceTreeModel.Events.WillLoadCachedResources, this.resetWithFrames, this);\n    }\n    if (this.databaseModel) {\n      this.databaseModel.removeEventListener(DatabaseModelEvents.DatabaseAdded, this.databaseAdded, this);\n      this.databaseModel.removeEventListener(DatabaseModelEvents.DatabasesRemoved, this.resetWebSQL, this);\n      this.databaseModel = null;\n    }\n\n    const interestGroupModel = target.model(InterestGroupStorageModel);\n    if (interestGroupModel) {\n      interestGroupModel.removeEventListener(\n          InterestGroupModelEvents.InterestGroupAccess, this.interestGroupAccess, this);\n    }\n\n    this.resetWithFrames();\n  }\n\n  focus(): void {\n    this.sidebarTree.focus();\n  }\n\n  private initialize(): void {\n    for (const frame of SDK.ResourceTreeModel.ResourceTreeModel.frames()) {\n      this.addCookieDocument(frame);\n    }\n    if (this.databaseModel) {\n      this.databaseModel.enable();\n    }\n    const interestGroupModel = this.target && this.target.model(InterestGroupStorageModel);\n    if (interestGroupModel) {\n      interestGroupModel.enable();\n    }\n\n    const cacheStorageModel = this.target && this.target.model(SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel);\n    if (cacheStorageModel) {\n      cacheStorageModel.enable();\n    }\n    const serviceWorkerCacheModel =\n        this.target && this.target.model(SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel) || null;\n    this.cacheStorageListTreeElement.initialize(serviceWorkerCacheModel);\n    const backgroundServiceModel = this.target && this.target.model(BackgroundServiceModel) || null;\n    if (Root.Runtime.experiments.isEnabled('backgroundServices')) {\n      this.backgroundFetchTreeElement && this.backgroundFetchTreeElement.initialize(backgroundServiceModel);\n      this.backgroundSyncTreeElement && this.backgroundSyncTreeElement.initialize(backgroundServiceModel);\n      if (Root.Runtime.experiments.isEnabled('backgroundServicesNotifications') && this.notificationsTreeElement) {\n        this.notificationsTreeElement.initialize(backgroundServiceModel);\n      }\n      if (Root.Runtime.experiments.isEnabled('backgroundServicesPaymentHandler') && this.paymentHandlerTreeElement) {\n        this.paymentHandlerTreeElement.initialize(backgroundServiceModel);\n      }\n      this.periodicBackgroundSyncTreeElement &&\n          this.periodicBackgroundSyncTreeElement.initialize(backgroundServiceModel);\n      if (Root.Runtime.experiments.isEnabled('backgroundServicesPushMessaging') && this.pushMessagingTreeElement) {\n        this.pushMessagingTreeElement.initialize(backgroundServiceModel);\n      }\n    }\n  }\n\n  private domStorageModelAdded(model: DOMStorageModel): void {\n    model.enable();\n    model.storages().forEach(this.addDOMStorage.bind(this));\n    model.addEventListener(DOMStorageModelEvents.DOMStorageAdded, this.domStorageAdded, this);\n    model.addEventListener(DOMStorageModelEvents.DOMStorageRemoved, this.domStorageRemoved, this);\n  }\n\n  private domStorageModelRemoved(model: DOMStorageModel): void {\n    model.storages().forEach(this.removeDOMStorage.bind(this));\n    model.removeEventListener(DOMStorageModelEvents.DOMStorageAdded, this.domStorageAdded, this);\n    model.removeEventListener(DOMStorageModelEvents.DOMStorageRemoved, this.domStorageRemoved, this);\n  }\n\n  private interestGroupModelAdded(model: InterestGroupStorageModel): void {\n    model.enable();\n    model.addEventListener(InterestGroupModelEvents.InterestGroupAccess, this.interestGroupAccess, this);\n  }\n\n  private interestGroupModelRemoved(model: InterestGroupStorageModel): void {\n    model.disable();\n    model.removeEventListener(InterestGroupModelEvents.InterestGroupAccess, this.interestGroupAccess, this);\n  }\n\n  private resetWithFrames(): void {\n    this.resourcesSection.reset();\n    this.reset();\n  }\n\n  private resetWebSQL(): void {\n    for (const queryView of this.databaseQueryViews.values()) {\n      queryView.removeEventListener(DatabaseQueryViewEvents.SchemaUpdated, event => {\n        void this.updateDatabaseTables(event);\n      }, this);\n    }\n    this.databaseTableViews.clear();\n    this.databaseQueryViews.clear();\n    this.databaseTreeElements.clear();\n    this.databasesListTreeElement.removeChildren();\n    this.databasesListTreeElement.setExpandable(false);\n  }\n\n  private treeElementAdded(event: Common.EventTarget.EventTargetEvent<UI.TreeOutline.TreeElement>): void {\n    // On tree item selection its itemURL and those of its parents are persisted.\n    // On reload/navigation we check for matches starting from the root on the\n    // path to the current element. Matching nodes are expanded until we hit a\n    // mismatch. This way we ensure that the longest matching path starting from\n    // the root is expanded, even if we cannot match the whole path.\n    const selection = this.panel.lastSelectedItemPath();\n    if (!selection.length) {\n      return;\n    }\n    const element = event.data;\n    const elementPath = [element as UI.TreeOutline.TreeElement | ApplicationPanelTreeElement];\n    for (let parent = element.parent as UI.TreeOutline.TreeElement | ApplicationPanelTreeElement | null;\n         parent && 'itemURL' in parent && parent.itemURL; parent = parent.parent) {\n      elementPath.push(parent as ApplicationPanelTreeElement);\n    }\n\n    let i = selection.length - 1;\n    let j = elementPath.length - 1;\n    while (i >= 0 && j >= 0 && selection[i] === (elementPath[j] as ApplicationPanelTreeElement).itemURL) {\n      if (!elementPath[j].expanded) {\n        if (i > 0) {\n          elementPath[j].expand();\n        }\n        if (!elementPath[j].selected) {\n          elementPath[j].select();\n        }\n      }\n      i--;\n      j--;\n    }\n  }\n\n  private reset(): void {\n    this.domains = {};\n    this.resetWebSQL();\n    this.cookieListTreeElement.removeChildren();\n    this.interestGroupTreeElement.clearEvents();\n  }\n\n  private frameNavigated(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>): void {\n    const frame = event.data;\n\n    if (frame.isTopFrame()) {\n      this.reset();\n    }\n    this.addCookieDocument(frame);\n  }\n\n  private databaseAdded({data: database}: Common.EventTarget.EventTargetEvent<DatabaseModelDatabase>): void {\n    const databaseTreeElement = new DatabaseTreeElement(this, database);\n    this.databaseTreeElements.set(database, databaseTreeElement);\n    this.databasesListTreeElement.appendChild(databaseTreeElement);\n  }\n\n  private interestGroupAccess(event: Common.EventTarget.EventTargetEvent<Protocol.Storage.InterestGroupAccessedEvent>):\n      void {\n    this.interestGroupTreeElement.addEvent(event.data);\n  }\n\n  private addCookieDocument(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    // In case the current frame was unreachable, show it's cookies\n    // instead of the error interstitials because they might help to\n    // debug why the frame was unreachable.\n    const urlToParse = frame.unreachableUrl() || frame.url;\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(urlToParse);\n    if (!parsedURL || (parsedURL.scheme !== 'http' && parsedURL.scheme !== 'https' && parsedURL.scheme !== 'file')) {\n      return;\n    }\n\n    const domain = parsedURL.securityOrigin();\n    if (!this.domains[domain]) {\n      this.domains[domain] = true;\n      const cookieDomainTreeElement = new CookieTreeElement(this.panel, frame, domain);\n      this.cookieListTreeElement.appendChild(cookieDomainTreeElement);\n    }\n  }\n\n  private domStorageAdded(event: Common.EventTarget.EventTargetEvent<DOMStorage>): void {\n    const domStorage = (event.data as DOMStorage);\n    this.addDOMStorage(domStorage);\n  }\n\n  private addDOMStorage(domStorage: DOMStorage): void {\n    console.assert(!this.domStorageTreeElements.get(domStorage));\n    console.assert(Boolean(domStorage.storageKey) || Boolean(domStorage.securityOrigin));\n\n    const domStorageTreeElement = new DOMStorageTreeElement(this.panel, domStorage);\n    this.domStorageTreeElements.set(domStorage, domStorageTreeElement);\n    if (domStorage.isLocalStorage) {\n      this.localStorageListTreeElement.appendChild(domStorageTreeElement);\n    } else {\n      this.sessionStorageListTreeElement.appendChild(domStorageTreeElement);\n    }\n  }\n\n  private domStorageRemoved(event: Common.EventTarget.EventTargetEvent<DOMStorage>): void {\n    const domStorage = (event.data as DOMStorage);\n    this.removeDOMStorage(domStorage);\n  }\n\n  private removeDOMStorage(domStorage: DOMStorage): void {\n    const treeElement = this.domStorageTreeElements.get(domStorage);\n    if (!treeElement) {\n      return;\n    }\n    const wasSelected = treeElement.selected;\n    const parentListTreeElement = treeElement.parent;\n    if (parentListTreeElement) {\n      parentListTreeElement.removeChild(treeElement);\n      if (wasSelected) {\n        parentListTreeElement.select();\n      }\n    }\n    this.domStorageTreeElements.delete(domStorage);\n  }\n\n  selectDatabase(database: DatabaseModelDatabase): void {\n    if (database) {\n      this.showDatabase(database);\n      const treeElement = this.databaseTreeElements.get(database);\n      treeElement && treeElement.select();\n    }\n  }\n\n  async showResource(resource: SDK.Resource.Resource, line?: number, column?: number): Promise<void> {\n    await this.resourcesSection.revealResource(resource, line, column);\n  }\n\n  showFrame(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    this.resourcesSection.revealAndSelectFrame(frame);\n  }\n\n  showDatabase(database: DatabaseModelDatabase, tableName?: string): void {\n    if (!database) {\n      return;\n    }\n\n    let view;\n    if (tableName) {\n      let tableViews = this.databaseTableViews.get(database);\n      if (!tableViews) {\n        tableViews = ({} as {\n          [x: string]: DatabaseTableView,\n        });\n        this.databaseTableViews.set(database, tableViews);\n      }\n      view = tableViews[tableName];\n      if (!view) {\n        view = new DatabaseTableView(database, tableName);\n        tableViews[tableName] = view;\n      }\n    } else {\n      view = this.databaseQueryViews.get(database);\n      if (!view) {\n        view = new DatabaseQueryView(database);\n        this.databaseQueryViews.set(database, view);\n        view.addEventListener(DatabaseQueryViewEvents.SchemaUpdated, event => {\n          void this.updateDatabaseTables(event);\n        }, this);\n      }\n    }\n\n    this.innerShowView(view);\n  }\n\n  showFileSystem(view: UI.Widget.Widget): void {\n    this.innerShowView(view);\n  }\n\n  private innerShowView(view: UI.Widget.Widget): void {\n    this.panel.showView(view);\n  }\n\n  private async updateDatabaseTables(event: Common.EventTarget.EventTargetEvent<DatabaseModelDatabase>): Promise<void> {\n    const database = event.data;\n\n    if (!database) {\n      return;\n    }\n\n    const databasesTreeElement = this.databaseTreeElements.get(database);\n    if (!databasesTreeElement) {\n      return;\n    }\n\n    databasesTreeElement.invalidateChildren();\n    const tableViews = this.databaseTableViews.get(database);\n\n    if (!tableViews) {\n      return;\n    }\n\n    const tableNamesHash = new Set<string>();\n    const panel = this.panel;\n    const tableNames = await database.tableNames();\n\n    for (const tableName of tableNames) {\n      tableNamesHash.add(tableName);\n    }\n\n    for (const tableName in tableViews) {\n      if (!(tableNamesHash.has(tableName))) {\n        if (panel.visibleView === tableViews[tableName]) {\n          panel.showView(null);\n        }\n        delete tableViews[tableName];\n      }\n    }\n\n    await databasesTreeElement.updateChildren();\n  }\n\n  private onmousemove(event: MouseEvent): void {\n    const nodeUnderMouse = (event.target as Node);\n    if (!nodeUnderMouse) {\n      return;\n    }\n\n    const listNode = UI.UIUtils.enclosingNodeOrSelfWithNodeName(nodeUnderMouse, 'li');\n    if (!listNode) {\n      return;\n    }\n\n    const element = UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(listNode);\n    if (this.previousHoveredElement === element) {\n      return;\n    }\n\n    if (this.previousHoveredElement) {\n      this.previousHoveredElement.hovered = false;\n      delete this.previousHoveredElement;\n    }\n\n    if (element instanceof FrameTreeElement) {\n      this.previousHoveredElement = element;\n      element.hovered = true;\n    }\n  }\n\n  private onmouseleave(_event: MouseEvent): void {\n    if (this.previousHoveredElement) {\n      this.previousHoveredElement.hovered = false;\n      delete this.previousHoveredElement;\n    }\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.sidebarTree.registerCSSFiles([resourcesSidebarStyles]);\n  }\n}\n\nexport class BackgroundServiceTreeElement extends ApplicationPanelTreeElement {\n  private serviceName: Protocol.BackgroundService.ServiceName;\n  private view: BackgroundServiceView|null;\n  private model: BackgroundServiceModel|null;\n  private selectedInternal: boolean;\n\n  constructor(storagePanel: ResourcesPanel, serviceName: Protocol.BackgroundService.ServiceName) {\n    super(storagePanel, BackgroundServiceView.getUIString(serviceName), false);\n\n    this.serviceName = serviceName;\n\n    /* Whether the element has been selected. */\n    this.selectedInternal = false;\n\n    this.view = null;\n\n    this.model = null;\n\n    const backgroundServiceIcon = UI.Icon.Icon.create(this.getIconType(), 'resource-tree-item');\n    this.setLeadingIcons([backgroundServiceIcon]);\n  }\n\n  private getIconType(): string {\n    switch (this.serviceName) {\n      case Protocol.BackgroundService.ServiceName.BackgroundFetch:\n        return 'mediumicon-fetch';\n      case Protocol.BackgroundService.ServiceName.BackgroundSync:\n        return 'mediumicon-sync';\n      case Protocol.BackgroundService.ServiceName.PushMessaging:\n        return 'mediumicon-cloud';\n      case Protocol.BackgroundService.ServiceName.Notifications:\n        return 'mediumicon-bell';\n      case Protocol.BackgroundService.ServiceName.PaymentHandler:\n        return 'mediumicon-payment';\n      case Protocol.BackgroundService.ServiceName.PeriodicBackgroundSync:\n        return 'mediumicon-schedule';\n      default:\n        console.error(`Service ${this.serviceName} does not have a dedicated icon`);\n        return 'mediumicon-table';\n    }\n  }\n\n  initialize(model: BackgroundServiceModel|null): void {\n    this.model = model;\n    // Show the view if the model was initialized after selection.\n    if (this.selectedInternal && !this.view) {\n      this.onselect(false);\n    }\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return `background-service://${this.serviceName}` as Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.selectedInternal = true;\n\n    if (!this.model) {\n      return false;\n    }\n\n    if (!this.view) {\n      this.view = new BackgroundServiceView(this.serviceName, this.model);\n    }\n    this.showView(this.view);\n    UI.Context.Context.instance().setFlavor(BackgroundServiceView, this.view);\n    Host.userMetrics.panelShown('background_service_' + this.serviceName);\n    return false;\n  }\n}\n\nexport class DatabaseTreeElement extends ApplicationPanelTreeElement {\n  private readonly sidebar: ApplicationPanelSidebar;\n  private readonly database: DatabaseModelDatabase;\n  constructor(sidebar: ApplicationPanelSidebar, database: DatabaseModelDatabase) {\n    super(sidebar.panel, database.name, true);\n    this.sidebar = sidebar;\n    this.database = database;\n\n    const icon = UI.Icon.Icon.create('mediumicon-database', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'database://' + encodeURI(this.database.name) as Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.sidebar.showDatabase(this.database);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.web_sql]);\n    return false;\n  }\n\n  onexpand(): void {\n    void this.updateChildren();\n  }\n\n  async updateChildren(): Promise<void> {\n    this.removeChildren();\n    const tableNames = await this.database.tableNames();\n    for (const tableName of tableNames) {\n      this.appendChild(new DatabaseTableTreeElement(this.sidebar, this.database, tableName));\n    }\n  }\n}\n\nexport class DatabaseTableTreeElement extends ApplicationPanelTreeElement {\n  private readonly sidebar: ApplicationPanelSidebar;\n  private readonly database: DatabaseModelDatabase;\n  private readonly tableName: string;\n\n  constructor(sidebar: ApplicationPanelSidebar, database: DatabaseModelDatabase, tableName: string) {\n    super(sidebar.panel, tableName, false);\n    this.sidebar = sidebar;\n    this.database = database;\n    this.tableName = tableName;\n    const icon = UI.Icon.Icon.create('mediumicon-table', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'database://' + encodeURI(this.database.name) + '/' + encodeURI(this.tableName) as\n        Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.sidebar.showDatabase(this.database, this.tableName);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.web_sql]);\n    return false;\n  }\n}\n\nexport class ServiceWorkersTreeElement extends ApplicationPanelTreeElement {\n  private view?: ServiceWorkersView;\n\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18n.i18n.lockedString('Service Workers'), false);\n    const icon = UI.Icon.Icon.create('mediumicon-service-worker', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'service-workers://' as Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new ServiceWorkersView();\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.service_workers]);\n    return false;\n  }\n}\n\nexport class AppManifestTreeElement extends ApplicationPanelTreeElement {\n  private view?: AppManifestView;\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.manifest), false);\n    const icon = UI.Icon.Icon.create('mediumicon-manifest', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'manifest://' as Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new AppManifestView();\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.app_manifest]);\n    return false;\n  }\n}\n\nexport class ClearStorageTreeElement extends ApplicationPanelTreeElement {\n  private view?: StorageView;\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.storage), false);\n    const icon = UI.Icon.Icon.create('mediumicon-database', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'clear-storage://' as Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new StorageView();\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.storage]);\n    return false;\n  }\n}\n\nexport class IndexedDBTreeElement extends ExpandableApplicationPanelTreeElement {\n  private idbDatabaseTreeElements: IDBDatabaseTreeElement[];\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.indexeddb), 'IndexedDB');\n    const icon = UI.Icon.Icon.create('mediumicon-database', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n    this.idbDatabaseTreeElements = [];\n    this.initialize();\n  }\n\n  private initialize(): void {\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        IndexedDBModel, IndexedDBModelEvents.DatabaseAdded, this.indexedDBAdded, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        IndexedDBModel, IndexedDBModelEvents.DatabaseRemoved, this.indexedDBRemoved, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        IndexedDBModel, IndexedDBModelEvents.DatabaseLoaded, this.indexedDBLoaded, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        IndexedDBModel, IndexedDBModelEvents.IndexedDBContentUpdated, this.indexedDBContentUpdated, this);\n    // TODO(szuend): Replace with a Set once two web tests no longer directly access this private\n    //               variable (indexeddb/live-update-indexeddb-content.js, indexeddb/delete-entry.js).\n    this.idbDatabaseTreeElements = [];\n\n    for (const indexedDBModel of SDK.TargetManager.TargetManager.instance().models(IndexedDBModel)) {\n      const databases = indexedDBModel.databases();\n      for (let j = 0; j < databases.length; ++j) {\n        this.addIndexedDB(indexedDBModel, databases[j]);\n      }\n    }\n  }\n\n  removeIndexedDBForModel(model: IndexedDBModel): void {\n    const idbDatabaseTreeElements = this.idbDatabaseTreeElements.filter(element => element.model === model);\n    for (const idbDatabaseTreeElement of idbDatabaseTreeElements) {\n      this.removeIDBDatabaseTreeElement(idbDatabaseTreeElement);\n    }\n  }\n\n  onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.refreshIndexeddb), this.refreshIndexedDB.bind(this));\n    void contextMenu.show();\n  }\n\n  refreshIndexedDB(): void {\n    for (const indexedDBModel of SDK.TargetManager.TargetManager.instance().models(IndexedDBModel)) {\n      void indexedDBModel.refreshDatabaseNames();\n    }\n  }\n\n  private indexedDBAdded({\n    data: {databaseId, model},\n  }: Common.EventTarget.EventTargetEvent<{databaseId: DatabaseId, model: IndexedDBModel}>): void {\n    this.addIndexedDB(model, databaseId);\n  }\n\n  private addIndexedDB(model: IndexedDBModel, databaseId: DatabaseId): void {\n    const idbDatabaseTreeElement = new IDBDatabaseTreeElement(this.resourcesPanel, model, databaseId);\n    this.idbDatabaseTreeElements.push(idbDatabaseTreeElement);\n    this.appendChild(idbDatabaseTreeElement);\n    model.refreshDatabase(databaseId);\n  }\n\n  private indexedDBRemoved({\n    data: {databaseId, model},\n  }: Common.EventTarget.EventTargetEvent<{databaseId: DatabaseId, model: IndexedDBModel}>): void {\n    const idbDatabaseTreeElement = this.idbDatabaseTreeElement(model, databaseId);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    this.removeIDBDatabaseTreeElement(idbDatabaseTreeElement);\n  }\n\n  private removeIDBDatabaseTreeElement(idbDatabaseTreeElement: IDBDatabaseTreeElement): void {\n    idbDatabaseTreeElement.clear();\n    this.removeChild(idbDatabaseTreeElement);\n    Platform.ArrayUtilities.removeElement(this.idbDatabaseTreeElements, idbDatabaseTreeElement);\n    this.setExpandable(this.childCount() > 0);\n  }\n\n  private indexedDBLoaded(\n      {data: {database, model, entriesUpdated}}: Common.EventTarget\n          .EventTargetEvent<{database: IndexedDBModelDatabase, model: IndexedDBModel, entriesUpdated: boolean}>): void {\n    const idbDatabaseTreeElement = this.idbDatabaseTreeElement(model, database.databaseId);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    idbDatabaseTreeElement.update(database, entriesUpdated);\n    this.indexedDBLoadedForTest();\n  }\n\n  private indexedDBLoadedForTest(): void {\n    // For sniffing in tests.\n  }\n\n  private indexedDBContentUpdated({\n    data: {databaseId, objectStoreName, model},\n  }: Common.EventTarget.EventTargetEvent<{databaseId: DatabaseId, objectStoreName: string, model: IndexedDBModel}>):\n      void {\n    const idbDatabaseTreeElement = this.idbDatabaseTreeElement(model, databaseId);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    idbDatabaseTreeElement.indexedDBContentUpdated(objectStoreName);\n  }\n\n  private idbDatabaseTreeElement(model: IndexedDBModel, databaseId: DatabaseId): IDBDatabaseTreeElement|null {\n    return this.idbDatabaseTreeElements.find(x => x.databaseId.equals(databaseId) && x.model === model) || null;\n  }\n}\n\nexport class IDBDatabaseTreeElement extends ApplicationPanelTreeElement {\n  model: IndexedDBModel;\n  databaseId: DatabaseId;\n  private readonly idbObjectStoreTreeElements: Map<string, IDBObjectStoreTreeElement>;\n  private database?: IndexedDBModelDatabase;\n  private view?: IDBDatabaseView;\n\n  constructor(storagePanel: ResourcesPanel, model: IndexedDBModel, databaseId: DatabaseId) {\n    super(storagePanel, databaseId.name + ' - ' + databaseId.securityOrigin, false);\n    this.model = model;\n    this.databaseId = databaseId;\n    this.idbObjectStoreTreeElements = new Map();\n    const icon = UI.Icon.Icon.create('mediumicon-database', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n    this.model.addEventListener(IndexedDBModelEvents.DatabaseNamesRefreshed, this.refreshIndexedDB, this);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'indexedDB://' + this.databaseId.securityOrigin + '/' + this.databaseId.name as\n        Platform.DevToolsPath.UrlString;\n  }\n\n  onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.refreshIndexeddb), this.refreshIndexedDB.bind(this));\n    void contextMenu.show();\n  }\n\n  private refreshIndexedDB(): void {\n    this.model.refreshDatabase(this.databaseId);\n  }\n\n  indexedDBContentUpdated(objectStoreName: string): void {\n    const treeElement = this.idbObjectStoreTreeElements.get(objectStoreName);\n    if (treeElement) {\n      treeElement.markNeedsRefresh();\n    }\n  }\n\n  update(database: IndexedDBModelDatabase, entriesUpdated: boolean): void {\n    this.database = database;\n    const objectStoreNames = new Set<string>();\n    for (const objectStoreName of [...this.database.objectStores.keys()].sort()) {\n      const objectStore = this.database.objectStores.get(objectStoreName);\n      if (!objectStore) {\n        continue;\n      }\n      objectStoreNames.add(objectStore.name);\n      let treeElement = this.idbObjectStoreTreeElements.get(objectStore.name);\n      if (!treeElement) {\n        treeElement = new IDBObjectStoreTreeElement(this.resourcesPanel, this.model, this.databaseId, objectStore);\n        this.idbObjectStoreTreeElements.set(objectStore.name, treeElement);\n        this.appendChild(treeElement);\n      }\n      treeElement.update(objectStore, entriesUpdated);\n    }\n    for (const objectStoreName of this.idbObjectStoreTreeElements.keys()) {\n      if (!objectStoreNames.has(objectStoreName)) {\n        this.objectStoreRemoved(objectStoreName);\n      }\n    }\n\n    if (this.view) {\n      this.view.update(database);\n    }\n\n    this.updateTooltip();\n  }\n\n  private updateTooltip(): void {\n    const version = this.database ? this.database.version : '-';\n    if (Object.keys(this.idbObjectStoreTreeElements).length === 0) {\n      this.tooltip = i18nString(UIStrings.versionSEmpty, {PH1: version});\n    } else {\n      this.tooltip = i18nString(UIStrings.versionS, {PH1: version});\n    }\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.database) {\n      return false;\n    }\n    if (!this.view) {\n      this.view = new IDBDatabaseView(this.model, this.database);\n    }\n\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.indexed_db]);\n    return false;\n  }\n\n  private objectStoreRemoved(objectStoreName: string): void {\n    const objectStoreTreeElement = this.idbObjectStoreTreeElements.get(objectStoreName);\n    if (objectStoreTreeElement) {\n      objectStoreTreeElement.clear();\n      this.removeChild(objectStoreTreeElement);\n    }\n    this.idbObjectStoreTreeElements.delete(objectStoreName);\n    this.updateTooltip();\n  }\n\n  clear(): void {\n    for (const objectStoreName of this.idbObjectStoreTreeElements.keys()) {\n      this.objectStoreRemoved(objectStoreName);\n    }\n  }\n}\n\nexport class IDBObjectStoreTreeElement extends ApplicationPanelTreeElement {\n  private model: IndexedDBModel;\n  private databaseId: DatabaseId;\n  private readonly idbIndexTreeElements: Map<string, IDBIndexTreeElement>;\n  private objectStore: ObjectStore;\n  private view: IDBDataView|null;\n\n  constructor(storagePanel: ResourcesPanel, model: IndexedDBModel, databaseId: DatabaseId, objectStore: ObjectStore) {\n    super(storagePanel, objectStore.name, false);\n    this.model = model;\n    this.databaseId = databaseId;\n    this.idbIndexTreeElements = new Map();\n    this.objectStore = objectStore;\n    this.view = null;\n    const icon = UI.Icon.Icon.create('mediumicon-table', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'indexedDB://' + this.databaseId.securityOrigin + '/' + this.databaseId.name + '/' + this.objectStore.name as\n        Platform.DevToolsPath.UrlString;\n  }\n\n  onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  markNeedsRefresh(): void {\n    if (this.view) {\n      this.view.markNeedsRefresh();\n    }\n    for (const treeElement of this.idbIndexTreeElements.values()) {\n      treeElement.markNeedsRefresh();\n    }\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.clear), this.clearObjectStore.bind(this));\n    void contextMenu.show();\n  }\n\n  private refreshObjectStore(): void {\n    if (this.view) {\n      this.view.refreshData();\n    }\n    for (const treeElement of this.idbIndexTreeElements.values()) {\n      treeElement.refreshIndex();\n    }\n  }\n\n  private async clearObjectStore(): Promise<void> {\n    await this.model.clearObjectStore(this.databaseId, this.objectStore.name);\n    this.update(this.objectStore, true);\n  }\n\n  update(objectStore: ObjectStore, entriesUpdated: boolean): void {\n    this.objectStore = objectStore;\n\n    const indexNames = new Set<string>();\n    for (const index of this.objectStore.indexes.values()) {\n      indexNames.add(index.name);\n      let treeElement = this.idbIndexTreeElements.get(index.name);\n      if (!treeElement) {\n        treeElement = new IDBIndexTreeElement(\n            this.resourcesPanel, this.model, this.databaseId, this.objectStore, index,\n            this.refreshObjectStore.bind(this));\n        this.idbIndexTreeElements.set(index.name, treeElement);\n        this.appendChild(treeElement);\n      }\n      treeElement.update(this.objectStore, index, entriesUpdated);\n    }\n    for (const indexName of this.idbIndexTreeElements.keys()) {\n      if (!indexNames.has(indexName)) {\n        this.indexRemoved(indexName);\n      }\n    }\n    for (const [indexName, treeElement] of this.idbIndexTreeElements.entries()) {\n      if (!indexNames.has(indexName)) {\n        this.removeChild((treeElement as IDBIndexTreeElement));\n        this.idbIndexTreeElements.delete((indexName as string));\n      }\n    }\n\n    if (this.childCount()) {\n      this.expand();\n    }\n\n    if (this.view && entriesUpdated) {\n      this.view.update(this.objectStore, null);\n    }\n\n    this.updateTooltip();\n  }\n\n  private updateTooltip(): void {\n    const keyPathString = this.objectStore.keyPathString;\n    let tooltipString = keyPathString !== null ? i18nString(UIStrings.keyPathS, {PH1: keyPathString}) : '';\n    if (this.objectStore.autoIncrement) {\n      tooltipString += '\\n' + i18n.i18n.lockedString('autoIncrement');\n    }\n    this.tooltip = tooltipString;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view =\n          new IDBDataView(this.model, this.databaseId, this.objectStore, null, this.refreshObjectStore.bind(this));\n    }\n\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.indexed_db]);\n    return false;\n  }\n\n  private indexRemoved(indexName: string): void {\n    const indexTreeElement = this.idbIndexTreeElements.get(indexName);\n    if (indexTreeElement) {\n      indexTreeElement.clear();\n      this.removeChild(indexTreeElement);\n    }\n    this.idbIndexTreeElements.delete(indexName);\n  }\n\n  clear(): void {\n    for (const indexName of this.idbIndexTreeElements.keys()) {\n      this.indexRemoved(indexName);\n    }\n    if (this.view) {\n      this.view.clear();\n    }\n  }\n}\n\nexport class IDBIndexTreeElement extends ApplicationPanelTreeElement {\n  private model: IndexedDBModel;\n  private databaseId: DatabaseId;\n  private objectStore: ObjectStore;\n  private index: Index;\n  private refreshObjectStore: () => void;\n  private view?: IDBDataView;\n\n  constructor(\n      storagePanel: ResourcesPanel, model: IndexedDBModel, databaseId: DatabaseId, objectStore: ObjectStore,\n      index: Index, refreshObjectStore: () => void) {\n    super(storagePanel, index.name, false);\n    this.model = model;\n    this.databaseId = databaseId;\n    this.objectStore = objectStore;\n    this.index = index;\n    this.refreshObjectStore = refreshObjectStore;\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'indexedDB://' + this.databaseId.securityOrigin + '/' + this.databaseId.name + '/' + this.objectStore.name +\n        '/' + this.index.name as Platform.DevToolsPath.UrlString;\n  }\n\n  markNeedsRefresh(): void {\n    if (this.view) {\n      this.view.markNeedsRefresh();\n    }\n  }\n\n  refreshIndex(): void {\n    if (this.view) {\n      this.view.refreshData();\n    }\n  }\n\n  update(objectStore: ObjectStore, index: Index, entriesUpdated: boolean): void {\n    this.objectStore = objectStore;\n    this.index = index;\n\n    if (this.view && entriesUpdated) {\n      this.view.update(this.objectStore, this.index);\n    }\n\n    this.updateTooltip();\n  }\n\n  private updateTooltip(): void {\n    const tooltipLines = [];\n    const keyPathString = this.index.keyPathString;\n    tooltipLines.push(i18nString(UIStrings.keyPathS, {PH1: keyPathString}));\n    if (this.index.unique) {\n      tooltipLines.push(i18n.i18n.lockedString('unique'));\n    }\n    if (this.index.multiEntry) {\n      tooltipLines.push(i18n.i18n.lockedString('multiEntry'));\n    }\n    this.tooltip = tooltipLines.join('\\n');\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new IDBDataView(this.model, this.databaseId, this.objectStore, this.index, this.refreshObjectStore);\n    }\n\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.indexed_db]);\n    return false;\n  }\n\n  clear(): void {\n    if (this.view) {\n      this.view.clear();\n    }\n  }\n}\n\nexport class DOMStorageTreeElement extends ApplicationPanelTreeElement {\n  private readonly domStorage: DOMStorage;\n  constructor(storagePanel: ResourcesPanel, domStorage: DOMStorage) {\n    super(\n        storagePanel,\n        domStorage.securityOrigin ? domStorage.securityOrigin :\n                                    (domStorage.storageKey ? domStorage.storageKey : i18nString(UIStrings.localFiles)),\n        false);\n    this.domStorage = domStorage;\n    const icon = UI.Icon.Icon.create('mediumicon-table', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'storage://' + this.domStorage.securityOrigin + '/' +\n        (this.domStorage.isLocalStorage ? 'local' : 'session') as Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.dom_storage]);\n    this.resourcesPanel.showDOMStorage(this.domStorage);\n    return false;\n  }\n\n  onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.clear), () => this.domStorage.clear());\n    void contextMenu.show();\n  }\n}\n\nexport class CookieTreeElement extends ApplicationPanelTreeElement {\n  private readonly target: SDK.Target.Target;\n  private readonly cookieDomainInternal: string;\n\n  constructor(storagePanel: ResourcesPanel, frame: SDK.ResourceTreeModel.ResourceTreeFrame, cookieDomain: string) {\n    super(storagePanel, cookieDomain ? cookieDomain : i18nString(UIStrings.localFiles), false);\n    this.target = frame.resourceTreeModel().target();\n    this.cookieDomainInternal = cookieDomain;\n    this.tooltip = i18nString(UIStrings.cookiesUsedByFramesFromS, {PH1: cookieDomain});\n    const icon = UI.Icon.Icon.create('mediumicon-cookie', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'cookies://' + this.cookieDomainInternal as Platform.DevToolsPath.UrlString;\n  }\n\n  cookieDomain(): string {\n    return this.cookieDomainInternal;\n  }\n\n  onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.clear), () => this.resourcesPanel.clearCookies(this.target, this.cookieDomainInternal));\n    void contextMenu.show();\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.resourcesPanel.showCookies(this.target, this.cookieDomainInternal);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.cookies]);\n    return false;\n  }\n}\n\nexport class StorageCategoryView extends UI.Widget.VBox {\n  private emptyWidget: UI.EmptyWidget.EmptyWidget;\n  private linkElement: HTMLElement|null;\n\n  constructor() {\n    super();\n\n    this.element.classList.add('storage-view');\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget('');\n    this.linkElement = null;\n    this.emptyWidget.show(this.element);\n  }\n\n  setText(text: string): void {\n    this.emptyWidget.text = text;\n  }\n\n  setLink(link: Platform.DevToolsPath.UrlString|null): void {\n    if (link && !this.linkElement) {\n      this.linkElement = this.emptyWidget.appendLink(link);\n    }\n    if (!link && this.linkElement) {\n      this.linkElement.classList.add('hidden');\n    }\n    if (link && this.linkElement) {\n      this.linkElement.setAttribute('href', link);\n      this.linkElement.classList.remove('hidden');\n    }\n  }\n}\n\nexport class ResourcesSection implements SDK.TargetManager.Observer {\n  panel: ResourcesPanel;\n  private readonly treeElement: UI.TreeOutline.TreeElement;\n  private treeElementForFrameId: Map<string, FrameTreeElement>;\n  private treeElementForTargetId: Map<string, FrameTreeElement>;\n\n  constructor(storagePanel: ResourcesPanel, treeElement: UI.TreeOutline.TreeElement) {\n    this.panel = storagePanel;\n    this.treeElement = treeElement;\n    UI.ARIAUtils.setAccessibleName(this.treeElement.listItemNode, 'Resources Section');\n    this.treeElementForFrameId = new Map();\n    this.treeElementForTargetId = new Map();\n\n    const frameManager = SDK.FrameManager.FrameManager.instance();\n    frameManager.addEventListener(\n        SDK.FrameManager.Events.FrameAddedToTarget, event => this.frameAdded(event.data.frame), this);\n    frameManager.addEventListener(\n        SDK.FrameManager.Events.FrameRemoved, event => this.frameDetached(event.data.frameId), this);\n    frameManager.addEventListener(\n        SDK.FrameManager.Events.FrameNavigated, event => this.frameNavigated(event.data.frame), this);\n    frameManager.addEventListener(\n        SDK.FrameManager.Events.ResourceAdded, event => this.resourceAdded(event.data.resource), this);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ChildTargetManager.ChildTargetManager, SDK.ChildTargetManager.Events.TargetCreated, this.windowOpened,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ChildTargetManager.ChildTargetManager, SDK.ChildTargetManager.Events.TargetInfoChanged, this.windowChanged,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ChildTargetManager.ChildTargetManager, SDK.ChildTargetManager.Events.TargetDestroyed, this.windowDestroyed,\n        this);\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n\n    for (const frame of frameManager.getAllFrames()) {\n      if (!this.treeElementForFrameId.get(frame.id)) {\n        this.addFrameAndParents(frame);\n      }\n      const childTargetManager = frame.resourceTreeModel().target().model(SDK.ChildTargetManager.ChildTargetManager);\n      if (childTargetManager) {\n        for (const targetInfo of childTargetManager.targetInfos()) {\n          this.windowOpened({data: targetInfo});\n        }\n      }\n    }\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (target.type() === SDK.Target.Type.Worker || target.type() === SDK.Target.Type.ServiceWorker) {\n      void this.workerAdded(target);\n    }\n  }\n\n  private async workerAdded(target: SDK.Target.Target): Promise<void> {\n    const parentTarget = target.parentTarget();\n    if (!parentTarget) {\n      return;\n    }\n    const parentTargetId = parentTarget.id();\n    const frameTreeElement = this.treeElementForTargetId.get(parentTargetId);\n    const targetId = target.id();\n    assertNotMainTarget(targetId);\n    const {targetInfo} = await parentTarget.targetAgent().invoke_getTargetInfo({targetId});\n    if (frameTreeElement && targetInfo) {\n      frameTreeElement.workerCreated(targetInfo);\n    }\n  }\n\n  targetRemoved(_target: SDK.Target.Target): void {\n  }\n\n  private addFrameAndParents(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    const parentFrame = frame.parentFrame();\n    if (parentFrame && !this.treeElementForFrameId.get(parentFrame.id)) {\n      this.addFrameAndParents(parentFrame);\n    }\n    this.frameAdded(frame);\n  }\n\n  private expandFrame(frame: SDK.ResourceTreeModel.ResourceTreeFrame|null): boolean {\n    if (!frame) {\n      return false;\n    }\n    let treeElement = this.treeElementForFrameId.get(frame.id);\n    if (!treeElement && !this.expandFrame(frame.parentFrame())) {\n      return false;\n    }\n    treeElement = this.treeElementForFrameId.get(frame.id);\n    if (!treeElement) {\n      return false;\n    }\n    treeElement.expand();\n    return true;\n  }\n\n  async revealResource(resource: SDK.Resource.Resource, line?: number, column?: number): Promise<void> {\n    if (!this.expandFrame(resource.frame())) {\n      return;\n    }\n    const resourceTreeElement = FrameResourceTreeElement.forResource(resource);\n    if (resourceTreeElement) {\n      await resourceTreeElement.revealResource(line, column);\n    }\n  }\n\n  revealAndSelectFrame(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    const frameTreeElement = this.treeElementForFrameId.get(frame.id);\n    frameTreeElement?.reveal();\n    frameTreeElement?.select();\n  }\n\n  private frameAdded(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    const parentFrame = frame.parentFrame();\n    const parentTreeElement = parentFrame ? this.treeElementForFrameId.get(parentFrame.id) : this.treeElement;\n    if (!parentTreeElement) {\n      return;\n    }\n\n    const existingElement = this.treeElementForFrameId.get(frame.id);\n    if (existingElement) {\n      this.treeElementForFrameId.delete(frame.id);\n      if (existingElement.parent) {\n        existingElement.parent.removeChild(existingElement);\n      }\n    }\n\n    const frameTreeElement = new FrameTreeElement(this, frame);\n    this.treeElementForFrameId.set(frame.id, frameTreeElement);\n    const targetId = frame.resourceTreeModel().target().id();\n    if (!this.treeElementForTargetId.get(targetId)) {\n      this.treeElementForTargetId.set(targetId, frameTreeElement);\n    }\n    parentTreeElement.appendChild(frameTreeElement);\n\n    for (const resource of frame.resources()) {\n      this.resourceAdded(resource);\n    }\n  }\n\n  private frameDetached(frameId: Protocol.Page.FrameId): void {\n    const frameTreeElement = this.treeElementForFrameId.get(frameId);\n    if (!frameTreeElement) {\n      return;\n    }\n\n    this.treeElementForFrameId.delete(frameId);\n    if (frameTreeElement.parent) {\n      frameTreeElement.parent.removeChild(frameTreeElement);\n    }\n  }\n\n  private frameNavigated(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    const frameTreeElement = this.treeElementForFrameId.get(frame.id);\n    if (frameTreeElement) {\n      void frameTreeElement.frameNavigated(frame);\n    }\n  }\n\n  private resourceAdded(resource: SDK.Resource.Resource): void {\n    if (!resource.frameId) {\n      return;\n    }\n    const frameTreeElement = this.treeElementForFrameId.get(resource.frameId);\n    if (!frameTreeElement) {\n      // This is a frame's main resource, it will be retained\n      // and re-added by the resource manager;\n      return;\n    }\n    frameTreeElement.appendResource(resource);\n  }\n\n  private windowOpened(event: Common.EventTarget.EventTargetEvent<Protocol.Target.TargetInfo>): void {\n    const targetInfo = event.data;\n    // Events for DevTools windows are ignored because they do not have an openerId\n    if (targetInfo.openerId && targetInfo.type === 'page') {\n      const frameTreeElement = this.treeElementForFrameId.get(targetInfo.openerId);\n      if (frameTreeElement) {\n        this.treeElementForTargetId.set(targetInfo.targetId, frameTreeElement);\n        frameTreeElement.windowOpened(targetInfo);\n      }\n    }\n  }\n\n  private windowDestroyed(event: Common.EventTarget.EventTargetEvent<Protocol.Target.TargetID>): void {\n    const targetId = event.data;\n    const frameTreeElement = this.treeElementForTargetId.get(targetId);\n    if (frameTreeElement) {\n      frameTreeElement.windowDestroyed(targetId);\n      this.treeElementForTargetId.delete(targetId);\n    }\n  }\n\n  private windowChanged(event: Common.EventTarget.EventTargetEvent<Protocol.Target.TargetInfo>): void {\n    const targetInfo = event.data;\n    // Events for DevTools windows are ignored because they do not have an openerId\n    if (targetInfo.openerId && targetInfo.type === 'page') {\n      const frameTreeElement = this.treeElementForFrameId.get(targetInfo.openerId);\n      if (frameTreeElement) {\n        frameTreeElement.windowChanged(targetInfo);\n      }\n    }\n  }\n\n  reset(): void {\n    this.treeElement.removeChildren();\n    this.treeElementForFrameId.clear();\n    this.treeElementForTargetId.clear();\n  }\n}\n\nexport class FrameTreeElement extends ApplicationPanelTreeElement {\n  private section: ResourcesSection;\n  private frame: SDK.ResourceTreeModel.ResourceTreeFrame;\n  private frameId: string;\n  private readonly categoryElements: Map<string, ExpandableApplicationPanelTreeElement>;\n  private readonly treeElementForResource: Map<string, FrameResourceTreeElement>;\n  private treeElementForWindow: Map<Protocol.Target.TargetID, FrameWindowTreeElement>;\n  private treeElementForWorker: Map<Protocol.Target.TargetID, WorkerTreeElement>;\n  private view: ApplicationComponents.FrameDetailsView.FrameDetailsView|null;\n\n  constructor(section: ResourcesSection, frame: SDK.ResourceTreeModel.ResourceTreeFrame) {\n    super(section.panel, '', false);\n    this.section = section;\n    this.frame = frame;\n    this.frameId = frame.id;\n    this.categoryElements = new Map();\n    this.treeElementForResource = new Map();\n    this.treeElementForWindow = new Map();\n    this.treeElementForWorker = new Map();\n    void this.frameNavigated(frame);\n    this.view = null;\n  }\n\n  getIconTypeForFrame(frame: SDK.ResourceTreeModel.ResourceTreeFrame): 'mediumicon-frame-blocked'|'mediumicon-frame'|\n      'mediumicon-frame-embedded-blocked'|'mediumicon-frame-embedded' {\n    if (frame.isTopFrame()) {\n      return frame.unreachableUrl() ? 'mediumicon-frame-blocked' : 'mediumicon-frame';\n    }\n    return frame.unreachableUrl() ? 'mediumicon-frame-embedded-blocked' : 'mediumicon-frame-embedded';\n  }\n\n  async frameNavigated(frame: SDK.ResourceTreeModel.ResourceTreeFrame): Promise<void> {\n    const icon = UI.Icon.Icon.create(this.getIconTypeForFrame(frame));\n    if (frame.unreachableUrl()) {\n      icon.classList.add('red-icon');\n    }\n    this.setLeadingIcons([icon]);\n    this.invalidateChildren();\n\n    this.frameId = frame.id;\n    if (this.title !== frame.displayName()) {\n      this.title = frame.displayName();\n      UI.ARIAUtils.setAccessibleName(this.listItemElement, this.title);\n      if (this.parent) {\n        const parent = this.parent;\n        // Insert frame at new position to preserve correct alphabetical order\n        parent.removeChild(this);\n        parent.appendChild(this);\n      }\n    }\n    this.categoryElements.clear();\n    this.treeElementForResource.clear();\n    this.treeElementForWorker.clear();\n\n    if (this.selected) {\n      this.view = new ApplicationComponents.FrameDetailsView.FrameDetailsView(this.frame);\n      this.showView(this.view);\n    } else {\n      this.view = null;\n    }\n\n    // Service Workers' parent is always the top frame. We need to reconstruct\n    // the service worker tree elements after those navigations which allow\n    // the service workers to stay alive.\n    if (frame.isTopFrame()) {\n      const targets = SDK.TargetManager.TargetManager.instance().targets();\n      for (const target of targets) {\n        if (target.type() === SDK.Target.Type.ServiceWorker) {\n          const targetId = target.id();\n          assertNotMainTarget(targetId);\n          const agent = frame.resourceTreeModel().target().targetAgent();\n          const targetInfo = (await agent.invoke_getTargetInfo({targetId})).targetInfo;\n          this.workerCreated(targetInfo);\n        }\n      }\n    }\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    // This is used to persist over reloads/navigation which frame was selected.\n    // A frame's title can change on DevTools refresh, so we resort to using\n    // the URL instead (even though it is not guaranteed to be unique).\n    if (this.frame.isTopFrame()) {\n      return 'frame://' as Platform.DevToolsPath.UrlString;\n    }\n    return 'frame://' + encodeURI(this.frame.url) as Platform.DevToolsPath.UrlString;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new ApplicationComponents.FrameDetailsView.FrameDetailsView(this.frame);\n    } else {\n      this.view.update();\n    }\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.frame_details]);\n    this.showView(this.view);\n\n    this.listItemElement.classList.remove('hovered');\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    return false;\n  }\n\n  set hovered(hovered: boolean) {\n    if (hovered) {\n      this.listItemElement.classList.add('hovered');\n      void this.frame.highlight();\n    } else {\n      this.listItemElement.classList.remove('hovered');\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n  }\n\n  appendResource(resource: SDK.Resource.Resource): void {\n    const statusCode = resource.statusCode();\n    if (statusCode >= 301 && statusCode <= 303) {\n      return;\n    }\n\n    const resourceType = resource.resourceType();\n    const categoryName = resourceType.name();\n    let categoryElement =\n        resourceType === Common.ResourceType.resourceTypes.Document ? this : this.categoryElements.get(categoryName);\n    if (!categoryElement) {\n      categoryElement = new ExpandableApplicationPanelTreeElement(\n          this.section.panel, resource.resourceType().category().title(), categoryName, categoryName === 'Frames');\n      this.categoryElements.set(resourceType.name(), categoryElement);\n      this.appendChild(categoryElement, FrameTreeElement.presentationOrderCompare);\n    }\n    const resourceTreeElement = new FrameResourceTreeElement(this.section.panel, resource);\n    categoryElement.appendChild(resourceTreeElement, FrameTreeElement.presentationOrderCompare);\n    this.treeElementForResource.set(resource.url, resourceTreeElement);\n  }\n\n  windowOpened(targetInfo: Protocol.Target.TargetInfo): void {\n    const categoryKey = 'OpenedWindows';\n    let categoryElement = this.categoryElements.get(categoryKey);\n    if (!categoryElement) {\n      categoryElement = new ExpandableApplicationPanelTreeElement(\n          this.section.panel, i18nString(UIStrings.openedWindows), categoryKey);\n      this.categoryElements.set(categoryKey, categoryElement);\n      this.appendChild(categoryElement, FrameTreeElement.presentationOrderCompare);\n    }\n    if (!this.treeElementForWindow.get(targetInfo.targetId)) {\n      const windowTreeElement = new FrameWindowTreeElement(this.section.panel, targetInfo);\n      categoryElement.appendChild(windowTreeElement);\n      this.treeElementForWindow.set(targetInfo.targetId, windowTreeElement);\n    }\n  }\n\n  workerCreated(targetInfo: Protocol.Target.TargetInfo): void {\n    const categoryKey = targetInfo.type === 'service_worker' ? 'Service Workers' : 'Web Workers';\n    const categoryName = targetInfo.type === 'service_worker' ? i18n.i18n.lockedString('Service Workers') :\n                                                                i18nString(UIStrings.webWorkers);\n    let categoryElement = this.categoryElements.get(categoryKey);\n    if (!categoryElement) {\n      categoryElement = new ExpandableApplicationPanelTreeElement(this.section.panel, categoryName, categoryKey);\n      this.categoryElements.set(categoryKey, categoryElement);\n      this.appendChild(categoryElement, FrameTreeElement.presentationOrderCompare);\n    }\n    if (!this.treeElementForWorker.get(targetInfo.targetId)) {\n      const workerTreeElement = new WorkerTreeElement(this.section.panel, targetInfo);\n      categoryElement.appendChild(workerTreeElement);\n      this.treeElementForWorker.set(targetInfo.targetId, workerTreeElement);\n    }\n  }\n\n  windowChanged(targetInfo: Protocol.Target.TargetInfo): void {\n    const windowTreeElement = this.treeElementForWindow.get(targetInfo.targetId);\n    if (!windowTreeElement) {\n      return;\n    }\n    if (windowTreeElement.title !== targetInfo.title) {\n      windowTreeElement.title = targetInfo.title;\n    }\n    windowTreeElement.update(targetInfo);\n  }\n\n  windowDestroyed(targetId: Protocol.Target.TargetID): void {\n    const windowTreeElement = this.treeElementForWindow.get(targetId);\n    if (windowTreeElement) {\n      windowTreeElement.windowClosed();\n    }\n  }\n\n  appendChild(\n      treeElement: UI.TreeOutline.TreeElement,\n      comparator: ((arg0: UI.TreeOutline.TreeElement, arg1: UI.TreeOutline.TreeElement) => number)|\n      undefined = FrameTreeElement.presentationOrderCompare): void {\n    super.appendChild(treeElement, comparator);\n  }\n\n  /**\n   * Order elements by type (first frames, then resources, last Document resources)\n   * and then each of these groups in the alphabetical order.\n   */\n  private static presentationOrderCompare(\n      treeElement1: UI.TreeOutline.TreeElement, treeElement2: UI.TreeOutline.TreeElement): number {\n    function typeWeight(treeElement: UI.TreeOutline.TreeElement): number {\n      if (treeElement instanceof ExpandableApplicationPanelTreeElement) {\n        return 2;\n      }\n      if (treeElement instanceof FrameTreeElement) {\n        return 1;\n      }\n      return 3;\n    }\n\n    const typeWeight1 = typeWeight(treeElement1);\n    const typeWeight2 = typeWeight(treeElement2);\n    return typeWeight1 - typeWeight2 || treeElement1.titleAsText().localeCompare(treeElement2.titleAsText());\n  }\n}\n\nconst resourceToFrameResourceTreeElement = new WeakMap<SDK.Resource.Resource, FrameResourceTreeElement>();\n\nexport class FrameResourceTreeElement extends ApplicationPanelTreeElement {\n  private readonly panel: ResourcesPanel;\n  private resource: SDK.Resource.Resource;\n  private previewPromise: Promise<UI.Widget.Widget>|null;\n\n  constructor(storagePanel: ResourcesPanel, resource: SDK.Resource.Resource) {\n    super(\n        storagePanel, resource.isGenerated ? i18nString(UIStrings.documentNotAvailable) : resource.displayName, false);\n    this.panel = storagePanel;\n    this.resource = resource;\n    this.previewPromise = null;\n    this.tooltip = resource.url;\n    resourceToFrameResourceTreeElement.set(this.resource, this);\n\n    const icon = UI.Icon.Icon.create('mediumicon-manifest', 'navigator-file-tree-item');\n    icon.classList.add('navigator-' + resource.resourceType().name() + '-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  static forResource(resource: SDK.Resource.Resource): FrameResourceTreeElement|undefined {\n    return resourceToFrameResourceTreeElement.get(resource);\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return this.resource.url;\n  }\n\n  private preparePreview(): Promise<UI.Widget.Widget> {\n    if (this.previewPromise) {\n      return this.previewPromise;\n    }\n    const viewPromise = SourceFrame.PreviewFactory.PreviewFactory.createPreview(this.resource, this.resource.mimeType);\n    this.previewPromise = viewPromise.then(view => {\n      if (view) {\n        return view;\n      }\n      return new UI.EmptyWidget.EmptyWidget(this.resource.url);\n    });\n    return this.previewPromise;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (this.resource.isGenerated) {\n      this.panel.showCategoryView(i18nString(UIStrings.theContentOfThisDocumentHasBeen), null);\n    } else {\n      void this.panel.scheduleShowView(this.preparePreview());\n    }\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.frame_resource]);\n    return false;\n  }\n\n  ondblclick(_event: Event): boolean {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.resource.url);\n    return false;\n  }\n\n  onattach(): void {\n    super.onattach();\n    this.listItemElement.draggable = true;\n    this.listItemElement.addEventListener('dragstart', this.ondragstart.bind(this), false);\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private ondragstart(event: DragEvent): boolean {\n    if (!event.dataTransfer) {\n      return false;\n    }\n    event.dataTransfer.setData('text/plain', this.resource.content || '');\n    event.dataTransfer.effectAllowed = 'copy';\n    return true;\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.appendApplicableItems(this.resource);\n    void contextMenu.show();\n  }\n\n  async revealResource(lineNumber?: number, columnNumber?: number): Promise<void> {\n    this.revealAndSelect(true);\n    const view = await this.panel.scheduleShowView(this.preparePreview());\n    if (!(view instanceof SourceFrame.ResourceSourceFrame.ResourceSourceFrame) || typeof lineNumber !== 'number') {\n      return;\n    }\n    view.revealPosition({lineNumber, columnNumber}, true);\n  }\n}\n\nclass FrameWindowTreeElement extends ApplicationPanelTreeElement {\n  private targetInfo: Protocol.Target.TargetInfo;\n  private isWindowClosed: boolean;\n  private view: OpenedWindowDetailsView|null;\n\n  constructor(storagePanel: ResourcesPanel, targetInfo: Protocol.Target.TargetInfo) {\n    super(storagePanel, targetInfo.title || i18nString(UIStrings.windowWithoutTitle), false);\n    this.targetInfo = targetInfo;\n    this.isWindowClosed = false;\n    this.view = null;\n    this.updateIcon(targetInfo.canAccessOpener);\n  }\n\n  updateIcon(canAccessOpener: boolean): void {\n    const iconType = canAccessOpener ? 'mediumicon-frame-opened' : 'mediumicon-frame';\n    const icon = UI.Icon.Icon.create(iconType);\n    this.setLeadingIcons([icon]);\n  }\n\n  update(targetInfo: Protocol.Target.TargetInfo): void {\n    if (targetInfo.canAccessOpener !== this.targetInfo.canAccessOpener) {\n      this.updateIcon(targetInfo.canAccessOpener);\n    }\n    this.targetInfo = targetInfo;\n    if (this.view) {\n      this.view.setTargetInfo(targetInfo);\n      this.view.update();\n    }\n  }\n\n  windowClosed(): void {\n    this.listItemElement.classList.add('window-closed');\n    this.isWindowClosed = true;\n    if (this.view) {\n      this.view.setIsWindowClosed(true);\n      this.view.update();\n    }\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new OpenedWindowDetailsView(this.targetInfo, this.isWindowClosed);\n    } else {\n      this.view.update();\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.frame_window]);\n    return false;\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return this.targetInfo.url as Platform.DevToolsPath.UrlString;\n  }\n}\n\nclass WorkerTreeElement extends ApplicationPanelTreeElement {\n  private targetInfo: Protocol.Target.TargetInfo;\n  private view: WorkerDetailsView|null;\n\n  constructor(storagePanel: ResourcesPanel, targetInfo: Protocol.Target.TargetInfo) {\n    super(storagePanel, targetInfo.title || targetInfo.url || i18nString(UIStrings.worker), false);\n    this.targetInfo = targetInfo;\n    this.view = null;\n    const icon = UI.Icon.Icon.create('mediumicon-service-worker', 'navigator-file-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new WorkerDetailsView(this.targetInfo);\n    } else {\n      this.view.update();\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.frame_worker]);\n    return false;\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    return this.targetInfo.url as Platform.DevToolsPath.UrlString;\n  }\n}\n"]}