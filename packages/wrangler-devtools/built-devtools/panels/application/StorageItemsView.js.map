{"version":3,"file":"StorageItemsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/StorageItemsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to refresh the page\n  */\n  refresh: 'Refresh',\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  *@description Text to clear everything\n  */\n  clearAll: 'Clear All',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon delete button in the Service Worker Cache Views of the Application panel\n  */\n  deleteSelected: 'Delete Selected',\n  /**\n   *@description Text that informs screen reader users that the storage table has been refreshed\n   */\n  refreshedStatus: 'Table refreshed',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/StorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class StorageItemsView extends UI.Widget.VBox {\n  private filterRegex: RegExp|null;\n  private readonly refreshButton: UI.Toolbar.ToolbarButton;\n  private readonly mainToolbar: UI.Toolbar.Toolbar;\n  private readonly filterItem: UI.Toolbar.ToolbarInput;\n  private readonly deleteAllButton: UI.Toolbar.ToolbarButton;\n  private readonly deleteSelectedButton: UI.Toolbar.ToolbarButton;\n\n  constructor(_title: string, _filterName: string) {\n    super(false);\n    this.filterRegex = null;\n\n    this.refreshButton = this.addButton(i18nString(UIStrings.refresh), 'largeicon-refresh', () => {\n      this.refreshItems();\n      UI.ARIAUtils.alert(i18nString(UIStrings.refreshedStatus));\n    });\n\n    this.mainToolbar = new UI.Toolbar.Toolbar('top-resources-toolbar', this.element);\n\n    this.filterItem = new UI.Toolbar.ToolbarInput(i18nString(UIStrings.filter), '', 0.4);\n    this.filterItem.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this.filterChanged, this);\n\n    const toolbarSeparator = new UI.Toolbar.ToolbarSeparator();\n    this.deleteAllButton = this.addButton(i18nString(UIStrings.clearAll), 'largeicon-clear', this.deleteAllItems);\n    this.deleteSelectedButton =\n        this.addButton(i18nString(UIStrings.deleteSelected), 'largeicon-delete', this.deleteSelectedItem);\n    this.deleteAllButton.element.id = 'storage-items-delete-all';\n\n    const toolbarItems =\n        [this.refreshButton, this.filterItem, toolbarSeparator, this.deleteAllButton, this.deleteSelectedButton];\n    for (const item of toolbarItems) {\n      this.mainToolbar.appendToolbarItem(item);\n    }\n  }\n\n  setDeleteAllTitle(title: string): void {\n    this.deleteAllButton.setTitle(title);\n  }\n\n  setDeleteAllGlyph(glyph: string): void {\n    this.deleteAllButton.setGlyph(glyph);\n  }\n\n  appendToolbarItem(item: UI.Toolbar.ToolbarItem): void {\n    this.mainToolbar.appendToolbarItem(item);\n  }\n\n  private addButton(label: string, glyph: string, callback: (arg0: Common.EventTarget.EventTargetEvent<Event>) => void):\n      UI.Toolbar.ToolbarButton {\n    const button = new UI.Toolbar.ToolbarButton(label, glyph);\n    button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, callback, this);\n    return button;\n  }\n\n  private filterChanged({data: text}: Common.EventTarget.EventTargetEvent<string|null>): void {\n    this.filterRegex = text ? new RegExp(Platform.StringUtilities.escapeForRegExp(text), 'i') : null;\n    this.refreshItems();\n  }\n\n  filter<T>(items: T[], keyFunction: (arg0: T) => string): T[] {\n    if (this.filterRegex) {\n      const regExp = this.filterRegex;\n      return items.filter(item => regExp.test(keyFunction(item)));\n    }\n    return items;\n  }\n\n  hasFilter(): boolean {\n    return Boolean(this.filterRegex);\n  }\n\n  wasShown(): void {\n    this.refreshItems();\n  }\n\n  setCanDeleteAll(enabled: boolean): void {\n    this.deleteAllButton.setEnabled(enabled);\n  }\n\n  setCanDeleteSelected(enabled: boolean): void {\n    this.deleteSelectedButton.setEnabled(enabled);\n  }\n\n  setCanRefresh(enabled: boolean): void {\n    this.refreshButton.setEnabled(enabled);\n  }\n\n  setCanFilter(enabled: boolean): void {\n    this.filterItem.setEnabled(enabled);\n  }\n\n  deleteAllItems(): void {\n  }\n\n  deleteSelectedItem(): void {\n  }\n\n  refreshItems(): void {\n  }\n}\n"]}