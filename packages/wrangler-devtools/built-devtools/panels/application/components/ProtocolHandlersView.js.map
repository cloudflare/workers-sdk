{"version":3,"file":"ProtocolHandlersView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/ProtocolHandlersView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as Input from '../../../ui/components/input/input.js';\n// inspectorCommonStyles is imported for the chrome-select class that is used for the dropdown\n// eslint-disable-next-line rulesdir/es_modules_import\nimport inspectorCommonStyles from '../../../ui/legacy/inspectorCommon.css.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport protocolHandlersViewStyles from './protocolHandlersView.css.js';\n\nconst PROTOCOL_DOCUMENT_URL = 'https://web.dev/url-protocol-handler/';\nconst UIStrings = {\n  /**\n *@description Status message for when protocol handlers are detected in the manifest\n *@example {protocolhandler/manifest.json} PH1\n */\n  protocolDetected:\n      'Found valid protocol handler registration in the {PH1}. With the app installed, test the registered protocols.',\n  /**\n *@description Status message for when protocol handlers are not detected in the manifest\n *@example {protocolhandler/manifest.json} PH1\n */\n  protocolNotDetected:\n      'Define protocol handlers in the {PH1} to register your app as a handler for custom protocols when your app is installed.',\n  /**\n *@description Text wrapping a link pointing to more information on handling protocol handlers\n *@example {https://example.com/} PH1\n */\n  needHelpReadOur: 'Need help? Read {PH1}.',\n  /**\n *@description Link text for more information on URL protocol handler registrations for PWAs\n */\n  protocolHandlerRegistrations: 'URL protocol handler registration for PWAs',\n  /**\n *@description In text hyperlink to the PWA manifest\n */\n  manifest: 'manifest',\n  /**\n *@description Text for test protocol button\n */\n  testProtocol: 'Test protocol',\n  /**\n  * @description Aria text for screen reader to announce they can select a protocol handler in the dropdown\n  */\n  dropdownLabel: 'Select protocol handler',\n  /**\n  * @description Aria text for screen reader to announce they can enter query parameters or endpoints into the textbox\n  */\n  textboxLabel: 'Query parameter or endpoint for protocol handler',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/ProtocolHandlersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface HTMLSelectElementEvent extends Event {\n  target: HTMLSelectElement;\n}\n\ninterface HTMLInputElementEvent extends Event {\n  target: HTMLInputElement;\n}\n\nexport interface ProtocolHandler {\n  protocol: string;\n  url: string;\n}\n\nexport interface ProtocolHandlersData {\n  protocolHandlers: ProtocolHandler[];\n  manifestLink: Platform.DevToolsPath.UrlString;\n}\n\nexport class ProtocolHandlersView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-protocol-handlers-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #protocolHandlers: ProtocolHandler[] = [];\n  #manifestLink: Platform.DevToolsPath.UrlString = Platform.DevToolsPath.EmptyUrlString;\n  #selectedProtocolState: string = '';\n  #queryInputState: string = '';\n\n  set data(data: ProtocolHandlersData) {\n    const isNewManifest = this.#manifestLink !== data.manifestLink;\n    this.#protocolHandlers = data.protocolHandlers;\n    this.#manifestLink = data.manifestLink;\n    if (isNewManifest) {\n      this.#update();\n    }\n  }\n\n  #update(): void {\n    this.#queryInputState = '';\n    this.#selectedProtocolState = this.#protocolHandlers[0]?.protocol ?? '';\n    this.#render();\n  }\n\n  #renderStatusMessage(): LitHtml.TemplateResult {\n    const manifestInTextLink = UI.XLink.XLink.create(this.#manifestLink, i18nString(UIStrings.manifest));\n    const statusString = this.#protocolHandlers.length > 0 ? UIStrings.protocolDetected : UIStrings.protocolNotDetected;\n    const iconData: IconButton.Icon.IconData = {\n      iconName: this.#protocolHandlers.length > 0 ? 'ic_checkmark_16x16' : 'ic_info_black_18dp',\n      color: this.#protocolHandlers.length > 0 ? 'var( --color-ic-file-image)' : 'var(--color-link)',\n      width: '16px',\n    };\n    return LitHtml.html`\n    <div class=\"protocol-handlers-row status\">\n            <${IconButton.Icon.Icon.litTagName} class=\"inline-icon\" .data=${iconData as IconButton.Icon.IconData}>\n            </${IconButton.Icon.Icon.litTagName}>\n            ${i18n.i18n.getFormatLocalizedString(str_, statusString, {\n      PH1: manifestInTextLink,\n    })}\n    </div>\n    `;\n  }\n\n  #renderProtocolTest(): LitHtml.LitTemplate {\n    if (this.#protocolHandlers.length === 0) {\n      return LitHtml.nothing;\n    }\n    const protocolOptions = this.#protocolHandlers.filter(p => p.protocol)\n                                .map(p => LitHtml.html`<option value=${p.protocol}>${p.protocol}://</option>`);\n    return LitHtml.html`\n       <div class=\"protocol-handlers-row\">\n        <select class=\"chrome-select protocol-select\" @change=${this.#handleProtocolSelect} aria-label=${\n        i18nString(UIStrings.dropdownLabel)}>\n           ${protocolOptions}\n        </select>\n        <input .value=${this.#queryInputState} class=\"devtools-text-input\" type=\"text\" @change=${\n        this.#handleQueryInputChange} aria-label=${i18nString(UIStrings.textboxLabel)}/>\n        <${Buttons.Button.Button.litTagName} .variant=${Buttons.Button.Variant.PRIMARY} @click=${\n        this.#handleTestProtocolClick}>\n            ${i18nString(UIStrings.testProtocol)}\n        </${Buttons.Button.Button.litTagName}>\n        </div>\n      `;\n  }\n\n  #handleProtocolSelect = (evt: HTMLSelectElementEvent): void => {\n    this.#selectedProtocolState = evt.target.value;\n  };\n\n  #handleQueryInputChange = (evt: HTMLInputElementEvent): void => {\n    this.#queryInputState = evt.target.value;\n    this.#render();\n  };\n\n  #handleTestProtocolClick = (): void => {\n    const protocolURL = `${this.#selectedProtocolState}://${this.#queryInputState}` as Platform.DevToolsPath.UrlString;\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(protocolURL);\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.CaptureTestProtocolClicked);\n  };\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [\n      protocolHandlersViewStyles,\n      inspectorCommonStyles,\n      Input.textInputStyles,\n    ];\n  }\n\n  #render(): void {\n    const protocolDocLink =\n        UI.XLink.XLink.create(PROTOCOL_DOCUMENT_URL, i18nString(UIStrings.protocolHandlerRegistrations));\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      ${this.#renderStatusMessage()}\n      <div class=\"protocol-handlers-row\">\n          ${i18n.i18n.getFormatLocalizedString(str_, UIStrings.needHelpReadOur, {PH1: protocolDocLink})}\n      </div>\n      ${this.#renderProtocolTest()}\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-protocol-handlers-view', ProtocolHandlersView);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-protocol-handlers-view': ProtocolHandlersView;\n  }\n}\n"]}