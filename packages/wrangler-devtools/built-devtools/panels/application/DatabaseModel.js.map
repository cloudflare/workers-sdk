{"version":3,"file":"DatabaseModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/DatabaseModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\n\nconst UIStrings = {\n  /**\n  *@description Message in Database Model of the Application panel\n  */\n  databaseNoLongerHasExpected: 'Database no longer has expected version.',\n  /**\n  *@description Message in Database Model of the Application panel\n  *@example {-197} PH1\n  */\n  anUnexpectedErrorSOccurred: 'An unexpected error {PH1} occurred.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/DatabaseModel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class Database {\n  private readonly model: DatabaseModel;\n  private readonly idInternal: Protocol.Database.DatabaseId;\n  private domainInternal: string;\n  private nameInternal: string;\n  private versionInternal: string;\n\n  constructor(model: DatabaseModel, id: Protocol.Database.DatabaseId, domain: string, name: string, version: string) {\n    this.model = model;\n    this.idInternal = id;\n    this.domainInternal = domain;\n    this.nameInternal = name;\n    this.versionInternal = version;\n  }\n\n  get id(): string {\n    return this.idInternal;\n  }\n\n  get name(): string {\n    return this.nameInternal;\n  }\n\n  set name(x: string) {\n    this.nameInternal = x;\n  }\n\n  get version(): string {\n    return this.versionInternal;\n  }\n\n  set version(x: string) {\n    this.versionInternal = x;\n  }\n\n  get domain(): string {\n    return this.domainInternal;\n  }\n\n  set domain(x: string) {\n    this.domainInternal = x;\n  }\n\n  async tableNames(): Promise<string[]> {\n    const {tableNames} = await this.model.agent.invoke_getDatabaseTableNames({databaseId: this.idInternal}) || [];\n    return tableNames.sort();\n  }\n\n  async executeSql(\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      query: string, onSuccess: (arg0: Array<string>, arg1: Array<any>) => void,\n      onError: (arg0: string) => void): Promise<void> {\n    const response = await this.model.agent.invoke_executeSQL({'databaseId': this.idInternal, 'query': query});\n    const error = response.getError() || null;\n    if (error) {\n      onError(error);\n      return;\n    }\n    const sqlError = response.sqlError;\n    if (!sqlError) {\n      // We know from the back-end that if there is no error, neither columnNames nor values can be undefined.\n      onSuccess(response.columnNames || [], response.values || []);\n      return;\n    }\n    let message;\n    if (sqlError.message) {\n      message = sqlError.message;\n    } else if (sqlError.code === 2) {\n      message = i18nString(UIStrings.databaseNoLongerHasExpected);\n    } else {\n      message = i18nString(UIStrings.anUnexpectedErrorSOccurred, {PH1: sqlError.code});\n    }\n    onError(message);\n  }\n}\n\nexport class DatabaseModel extends SDK.SDKModel.SDKModel<EventTypes> {\n  private databasesInternal: Database[];\n  readonly agent: ProtocolProxyApi.DatabaseApi;\n  private enabled?: boolean;\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    this.databasesInternal = [];\n    this.agent = target.databaseAgent();\n    this.target().registerDatabaseDispatcher(new DatabaseDispatcher(this));\n  }\n\n  enable(): void {\n    if (this.enabled) {\n      return;\n    }\n    void this.agent.invoke_enable();\n    this.enabled = true;\n  }\n\n  disable(): void {\n    if (!this.enabled) {\n      return;\n    }\n    this.enabled = false;\n    this.databasesInternal = [];\n    void this.agent.invoke_disable();\n    this.dispatchEventToListeners(Events.DatabasesRemoved);\n  }\n\n  databases(): Database[] {\n    const result = [];\n    for (const database of this.databasesInternal) {\n      result.push(database);\n    }\n    return result;\n  }\n\n  addDatabase(database: Database): void {\n    this.databasesInternal.push(database);\n    this.dispatchEventToListeners(Events.DatabaseAdded, database);\n  }\n}\n\nSDK.SDKModel.SDKModel.register(DatabaseModel, {capabilities: SDK.Target.Capability.DOM, autostart: false});\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  DatabaseAdded = 'DatabaseAdded',\n  DatabasesRemoved = 'DatabasesRemoved',\n}\n\nexport type EventTypes = {\n  [Events.DatabaseAdded]: Database,\n  [Events.DatabasesRemoved]: void,\n};\n\nexport class DatabaseDispatcher implements ProtocolProxyApi.DatabaseDispatcher {\n  private readonly model: DatabaseModel;\n  constructor(model: DatabaseModel) {\n    this.model = model;\n  }\n\n  addDatabase({database}: Protocol.Database.AddDatabaseEvent): void {\n    this.model.addDatabase(new Database(this.model, database.id, database.domain, database.name, database.version));\n  }\n}\n"]}