{"version":3,"file":"DOMStorageItemsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/DOMStorageItemsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Nokia Inc.  All rights reserved.\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {DOMStorage} from './DOMStorageModel.js';\nimport {StorageItemsView} from './StorageItemsView.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in DOMStorage Items View of the Application panel\n  */\n  domStorage: 'DOM Storage',\n  /**\n  *@description Text in DOMStorage Items View of the Application panel\n  */\n  key: 'Key',\n  /**\n  *@description Text for the value of something\n  */\n  value: 'Value',\n  /**\n  *@description Name for the \"DOM Storage Items\" table that shows the content of the DOM Storage.\n  */\n  domStorageItems: 'DOM Storage Items',\n  /**\n   *@description Text for announcing that the \"DOM Storage Items\" table was cleared, that is, all\n   * entries were deleted.\n   */\n  domStorageItemsCleared: 'DOM Storage Items cleared',\n  /**\n  *@description Text in DOMStorage Items View of the Application panel\n  */\n  selectAValueToPreview: 'Select a value to preview',\n  /**\n   *@description Text for announcing a DOM Storage key/value item has been deleted\n   */\n  domStorageItemDeleted: 'The storage item was deleted.',\n  /**\n   *@description Text for announcing number of entries after filtering\n   *@example {5} PH1\n   */\n  domStorageNumberEntries: 'Number of entries shown in table: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/DOMStorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DOMStorageItemsView extends StorageItemsView {\n  private domStorage: DOMStorage;\n  private dataGrid: DataGrid.DataGrid.DataGridImpl<unknown>;\n  private readonly splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly previewPanel: UI.Widget.VBox;\n  private preview: UI.Widget.Widget|null;\n  private previewValue: string|null;\n  private eventListeners: Common.EventTarget.EventDescriptor[];\n\n  constructor(domStorage: DOMStorage) {\n    super(i18nString(UIStrings.domStorage), 'domStoragePanel');\n\n    this.domStorage = domStorage;\n\n    this.element.classList.add('storage-view', 'table');\n\n    const columns = ([\n      {id: 'key', title: i18nString(UIStrings.key), sortable: false, editable: true, longText: true, weight: 50},\n      {id: 'value', title: i18nString(UIStrings.value), sortable: false, editable: true, longText: true, weight: 50},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n    this.dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: i18nString(UIStrings.domStorageItems),\n      columns,\n      editCallback: this.editingCallback.bind(this),\n      deleteCallback: this.deleteCallback.bind(this),\n      refreshCallback: this.refreshItems.bind(this),\n    });\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, event => {\n      void this.previewEntry(event.data);\n    });\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.DeselectedNode, () => {\n      void this.previewEntry(null);\n    });\n    this.dataGrid.setStriped(true);\n    this.dataGrid.setName('DOMStorageItemsView');\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(\n        /* isVertical: */ false, /* secondIsSidebar: */ true, 'domStorageSplitViewState');\n    this.splitWidget.show(this.element);\n\n    this.previewPanel = new UI.Widget.VBox();\n    this.previewPanel.setMinimumSize(0, 50);\n    const resizer = this.previewPanel.element.createChild('div', 'preview-panel-resizer');\n    const dataGridWidget = this.dataGrid.asWidget();\n    dataGridWidget.setMinimumSize(0, 50);\n    this.splitWidget.setMainWidget(dataGridWidget);\n    this.splitWidget.setSidebarWidget(this.previewPanel);\n    this.splitWidget.installResizer(resizer);\n\n    this.preview = null;\n    this.previewValue = null;\n\n    this.showPreview(null, null);\n\n    this.eventListeners = [];\n    this.setStorage(domStorage);\n  }\n\n  setStorage(domStorage: DOMStorage): void {\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n    this.domStorage = domStorage;\n    this.eventListeners = [\n      this.domStorage.addEventListener(DOMStorage.Events.DOMStorageItemsCleared, this.domStorageItemsCleared, this),\n      this.domStorage.addEventListener(DOMStorage.Events.DOMStorageItemRemoved, this.domStorageItemRemoved, this),\n      this.domStorage.addEventListener(DOMStorage.Events.DOMStorageItemAdded, this.domStorageItemAdded, this),\n      this.domStorage.addEventListener(DOMStorage.Events.DOMStorageItemUpdated, this.domStorageItemUpdated, this),\n    ];\n    this.refreshItems();\n  }\n\n  private domStorageItemsCleared(): void {\n    if (!this.isShowing() || !this.dataGrid) {\n      return;\n    }\n\n    this.dataGrid.rootNode().removeChildren();\n    this.dataGrid.addCreationNode(false);\n    UI.ARIAUtils.alert(i18nString(UIStrings.domStorageItemsCleared));\n    this.setCanDeleteSelected(false);\n  }\n\n  private domStorageItemRemoved(event: Common.EventTarget.EventTargetEvent<DOMStorage.DOMStorageItemRemovedEvent>):\n      void {\n    if (!this.isShowing() || !this.dataGrid) {\n      return;\n    }\n\n    const storageData = event.data;\n    const rootNode = this.dataGrid.rootNode();\n    const children = rootNode.children;\n\n    for (let i = 0; i < children.length; ++i) {\n      const childNode = children[i];\n      if (childNode.data.key === storageData.key) {\n        rootNode.removeChild(childNode);\n        this.setCanDeleteSelected(children.length > 1);\n        return;\n      }\n    }\n  }\n\n  private domStorageItemAdded(event: Common.EventTarget.EventTargetEvent<DOMStorage.DOMStorageItemAddedEvent>): void {\n    if (!this.isShowing() || !this.dataGrid) {\n      return;\n    }\n\n    const storageData = event.data;\n    const rootNode = this.dataGrid.rootNode();\n    const children = rootNode.children;\n\n    for (let i = 0; i < children.length; ++i) {\n      if (children[i].data.key === storageData.key) {\n        return;\n      }\n    }\n\n    const childNode = new DataGrid.DataGrid.DataGridNode({key: storageData.key, value: storageData.value}, false);\n    rootNode.insertChild(childNode, children.length - 1);\n  }\n\n  private domStorageItemUpdated(event: Common.EventTarget.EventTargetEvent<DOMStorage.DOMStorageItemUpdatedEvent>):\n      void {\n    if (!this.isShowing() || !this.dataGrid) {\n      return;\n    }\n\n    const storageData = event.data;\n    const childNode = this.dataGrid.rootNode().children.find(\n        (child: DataGrid.DataGrid.DataGridNode<unknown>) => child.data.key === storageData.key);\n    if (!childNode || childNode.data.value === storageData.value) {\n      return;\n    }\n\n    childNode.data.value = storageData.value;\n    childNode.refresh();\n    if (!childNode.selected) {\n      return;\n    }\n    void this.previewEntry(childNode);\n    this.setCanDeleteSelected(true);\n  }\n\n  private showDOMStorageItems(items: string[][]): void {\n    const rootNode = this.dataGrid.rootNode();\n    let selectedKey: null = null;\n    for (const node of rootNode.children) {\n      if (!node.selected) {\n        continue;\n      }\n      selectedKey = node.data.key;\n      break;\n    }\n    rootNode.removeChildren();\n    let selectedNode: DataGrid.DataGrid.DataGridNode<unknown>|null = null;\n    const filteredItems = (item: string[]): string => `${item[0]} ${item[1]}`;\n    const filteredList = this.filter(items, filteredItems);\n    for (const item of filteredList) {\n      const key = item[0];\n      const value = item[1];\n      const node = new DataGrid.DataGrid.DataGridNode({key: key, value: value}, false);\n      node.selectable = true;\n      rootNode.appendChild(node);\n      if (!selectedNode || key === selectedKey) {\n        selectedNode = node;\n      }\n    }\n    if (selectedNode) {\n      selectedNode.selected = true;\n    }\n    this.dataGrid.addCreationNode(false);\n    this.setCanDeleteSelected(Boolean(selectedNode));\n    UI.ARIAUtils.alert(i18nString(UIStrings.domStorageNumberEntries, {PH1: filteredList.length}));\n  }\n\n  deleteSelectedItem(): void {\n    if (!this.dataGrid || !this.dataGrid.selectedNode) {\n      return;\n    }\n\n    this.deleteCallback(this.dataGrid.selectedNode);\n  }\n\n  refreshItems(): void {\n    void this.domStorage.getItems().then(items => items && this.showDOMStorageItems(items));\n  }\n\n  deleteAllItems(): void {\n    this.domStorage.clear();\n    // explicitly clear the view because the event won't be fired when it has no items\n    this.domStorageItemsCleared();\n  }\n\n  private editingCallback(\n      editingNode: DataGrid.DataGrid.DataGridNode<unknown>, columnIdentifier: string, oldText: string,\n      newText: string): void {\n    const domStorage = this.domStorage;\n    if (columnIdentifier === 'key') {\n      if (typeof oldText === 'string') {\n        domStorage.removeItem(oldText);\n      }\n      domStorage.setItem(newText, editingNode.data.value || '');\n      this.removeDupes(editingNode);\n    } else {\n      domStorage.setItem(editingNode.data.key || '', newText);\n    }\n  }\n\n  private removeDupes(masterNode: DataGrid.DataGrid.DataGridNode<unknown>): void {\n    const rootNode = this.dataGrid.rootNode();\n    const children = rootNode.children;\n    for (let i = children.length - 1; i >= 0; --i) {\n      const childNode = children[i];\n      if ((childNode.data.key === masterNode.data.key) && (masterNode !== childNode)) {\n        rootNode.removeChild(childNode);\n      }\n    }\n  }\n\n  private deleteCallback(node: DataGrid.DataGrid.DataGridNode<unknown>): void {\n    if (!node || node.isCreationNode) {\n      return;\n    }\n\n    if (this.domStorage) {\n      this.domStorage.removeItem(node.data.key);\n    }\n\n    UI.ARIAUtils.alert(i18nString(UIStrings.domStorageItemDeleted));\n  }\n\n  private showPreview(preview: UI.Widget.Widget|null, value: string|null): void {\n    if (this.preview && this.previewValue === value) {\n      return;\n    }\n    if (this.preview) {\n      this.preview.detach();\n    }\n    if (!preview) {\n      preview = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.selectAValueToPreview));\n    }\n    this.previewValue = value;\n    this.preview = preview;\n    preview.show(this.previewPanel.contentElement);\n  }\n\n  private async previewEntry(entry: DataGrid.DataGrid.DataGridNode<unknown>|null): Promise<void> {\n    const value = entry && entry.data && entry.data.value;\n    if (entry && entry.data && entry.data.value) {\n      const protocol = this.domStorage.isLocalStorage ? 'localstorage' : 'sessionstorage';\n      const url = `${protocol}://${entry.key}` as Platform.DevToolsPath.UrlString;\n      const provider = TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n          url, Common.ResourceType.resourceTypes.XHR, (value as string));\n      const preview = await SourceFrame.PreviewFactory.PreviewFactory.createPreview(provider, 'text/plain');\n      // Selection could've changed while the preview was loaded\n      if (entry.selected) {\n        this.showPreview(preview, value);\n      }\n    } else {\n      this.showPreview(null, value);\n    }\n  }\n}\n"]}