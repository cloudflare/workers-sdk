{"version":3,"file":"ServiceWorkersView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ServiceWorkersView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport serviceWorkersViewStyles from './serviceWorkersView.css.js';\nimport serviceWorkerUpdateCycleViewStyles from './serviceWorkerUpdateCycleView.css.js';\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\n\nimport {ServiceWorkerUpdateCycleView} from './ServiceWorkerUpdateCycleView.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for linking to other Service Worker registrations\n  */\n  serviceWorkersFromOtherOrigins: 'Service workers from other origins',\n  /**\n  *@description Title of update on reload setting in service workers view of the application panel\n  */\n  updateOnReload: 'Update on reload',\n  /**\n  *@description Tooltip text that appears on the setting when hovering over it in Service Workers View of the Application panel\n  */\n  onPageReloadForceTheService: 'On page reload, force the `service worker` to update, and activate it',\n  /**\n  *@description Title of bypass service worker setting in service workers view of the application panel\n  */\n  bypassForNetwork: 'Bypass for network',\n  /**\n  *@description Tooltip text that appears on the setting when hovering over it in Service Workers View of the Application panel\n  */\n  bypassTheServiceWorkerAndLoad: 'Bypass the `service worker` and load resources from the network',\n  /**\n  *@description Screen reader title for a section of the Service Workers view of the Application panel\n  *@example {https://example.com} PH1\n  */\n  serviceWorkerForS: '`Service worker` for {PH1}',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  */\n  testPushMessageFromDevtools: 'Test push message from DevTools.',\n  /**\n  *@description Button label for service worker network requests\n  */\n  networkRequests: 'Network requests',\n  /**\n   * @description Label for a button in the Service Workers View of the Application panel.\n   * Imperative noun. Clicking the button will refresh the list of service worker registrations.\n   */\n  update: 'Update',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  */\n  unregisterServiceWorker: 'Unregister service worker',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  */\n  unregister: 'Unregister',\n  /**\n  *@description Text for the source of something\n  */\n  source: 'Source',\n  /**\n  *@description Text for the status of something\n  */\n  status: 'Status',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  */\n  clients: 'Clients',\n  /**\n  * @description Text in Service Workers View of the Application panel. Label for a section of the\n  * tool which allows the developer to send a test push message to the service worker.\n  */\n  pushString: 'Push',\n  /**\n  * @description Text in Service Workers View of the Application panel. Placeholder text for where\n  * the user can type in the data they want to push to the service worker i.e. the 'push data'. Noun\n  * phrase.\n  */\n  pushData: 'Push data',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  */\n  syncString: 'Sync',\n  /**\n  *@description Placeholder text for the input box where a user is asked for a test tag to sync. This is used as a compound noun, not as a verb.\n  */\n  syncTag: 'Sync tag',\n  /**\n  *@description Text for button in Service Workers View of the Application panel that dispatches a periodicsync event\n  */\n  periodicSync: 'Periodic Sync',\n  /**\n  *@description Default tag for a periodicsync event in Service Workers View of the Application panel\n  */\n  periodicSyncTag: 'Periodic Sync tag',\n  /**\n  *@description Aria accessible name in Service Workers View of the Application panel\n  *@example {3} PH1\n  */\n  sRegistrationErrors: '{PH1} registration errors',\n  /**\n  * @description Text in Service Workers View of the Application panel. The Date/time that a service\n  * worker version update was received by the webpage.\n  * @example {7/3/2019, 3:38:37 PM} PH1\n  */\n  receivedS: 'Received {PH1}',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  *@example {example.com} PH1\n  */\n  sDeleted: '{PH1} - deleted',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  *@example {1} PH1\n  *@example {stopped} PH2\n  */\n  sActivatedAndIsS: '#{PH1} activated and is {PH2}',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  */\n  stopString: 'stop',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  */\n  inspect: 'inspect',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  */\n  startString: 'start',\n  /**\n  * @description Text in Service Workers View of the Application panel. Service workers have\n  * different versions, which are labelled with numbers e.g. version #2. This text indicates that a\n  * particular version is now redundant (it was replaced by a newer version). # means 'number' here.\n  * @example {2} PH1\n  */\n  sIsRedundant: '#{PH1} is redundant',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  *@example {2} PH1\n  */\n  sWaitingToActivate: '#{PH1} waiting to activate',\n  /**\n  *@description Text in Service Workers View of the Application panel\n  *@example {2} PH1\n  */\n  sTryingToInstall: '#{PH1} trying to install',\n  /**\n  *@description Text in Service Workers Update Timeline. Update is a noun.\n  */\n  updateCycle: 'Update Cycle',\n  /**\n  *@description Text of a DOM element in Service Workers View of the Application panel\n  *@example {example.com} PH1\n  */\n  workerS: 'Worker: {PH1}',\n  /**\n  *@description Link text in Service Workers View of the Application panel. When the link is clicked,\n  * the focus is moved to the service worker's client page.\n  */\n  focus: 'focus',\n  /**\n  *@description Link to view all the Service Workers that have been registered.\n  */\n  seeAllRegistrations: 'See all registrations',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ServiceWorkersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet throttleDisabledForDebugging = false;\nexport const setThrottleDisabledForDebugging = (enable: boolean): void => {\n  throttleDisabledForDebugging = enable;\n};\n\nexport class ServiceWorkersView extends UI.Widget.VBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.ServiceWorkerManager.ServiceWorkerManager> {\n  private currentWorkersView: UI.ReportView.ReportView;\n  private readonly toolbar: UI.Toolbar.Toolbar;\n  private readonly sections: Map<SDK.ServiceWorkerManager.ServiceWorkerRegistration, Section>;\n  private manager: SDK.ServiceWorkerManager.ServiceWorkerManager|null;\n  private securityOriginManager: SDK.SecurityOriginManager.SecurityOriginManager|null;\n  private readonly sectionToRegistration:\n      WeakMap<UI.ReportView.Section, SDK.ServiceWorkerManager.ServiceWorkerRegistration>;\n  private readonly eventListeners:\n      Map<SDK.ServiceWorkerManager.ServiceWorkerManager, Common.EventTarget.EventDescriptor[]>;\n\n  constructor() {\n    super(true);\n\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.currentWorkersView = new UI.ReportView.ReportView(i18n.i18n.lockedString('Service Workers'));\n    this.currentWorkersView.setBodyScrollable(false);\n    this.contentElement.classList.add('service-worker-list');\n    this.currentWorkersView.show(this.contentElement);\n    this.currentWorkersView.element.classList.add('service-workers-this-origin');\n\n    this.toolbar = this.currentWorkersView.createToolbar();\n    this.toolbar.makeWrappable(true /* growVertically */);\n\n    this.sections = new Map();\n\n    this.manager = null;\n    this.securityOriginManager = null;\n\n    this.sectionToRegistration = new WeakMap();\n\n    const othersDiv = this.contentElement.createChild('div', 'service-workers-other-origin');\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    const othersView = new UI.ReportView.ReportView();\n    othersView.setHeaderVisible(false);\n    othersView.show(othersDiv);\n    const othersSection = othersView.appendSection(i18nString(UIStrings.serviceWorkersFromOtherOrigins));\n    const othersSectionRow = othersSection.appendRow();\n    const seeOthers =\n        UI.Fragment\n            .html`<a class=\"devtools-link\" role=\"link\" tabindex=\"0\" href=\"chrome://serviceworker-internals\" target=\"_blank\" style=\"display: inline; cursor: pointer;\">${\n                i18nString(UIStrings.seeAllRegistrations)}</a>`;\n    self.onInvokeElement(seeOthers, event => {\n      const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n      mainTarget && mainTarget.targetAgent().invoke_createTarget({url: 'chrome://serviceworker-internals?devtools'});\n      event.consume(true);\n    });\n    othersSectionRow.appendChild(seeOthers);\n\n    this.toolbar.appendToolbarItem(\n        MobileThrottling.ThrottlingManager.throttlingManager().createOfflineToolbarCheckbox());\n    const updateOnReloadSetting =\n        Common.Settings.Settings.instance().createSetting('serviceWorkerUpdateOnReload', false);\n    updateOnReloadSetting.setTitle(i18nString(UIStrings.updateOnReload));\n    const forceUpdate =\n        new UI.Toolbar.ToolbarSettingCheckbox(updateOnReloadSetting, i18nString(UIStrings.onPageReloadForceTheService));\n    this.toolbar.appendToolbarItem(forceUpdate);\n    const bypassServiceWorkerSetting = Common.Settings.Settings.instance().createSetting('bypassServiceWorker', false);\n    bypassServiceWorkerSetting.setTitle(i18nString(UIStrings.bypassForNetwork));\n    const fallbackToNetwork = new UI.Toolbar.ToolbarSettingCheckbox(\n        bypassServiceWorkerSetting, i18nString(UIStrings.bypassTheServiceWorkerAndLoad));\n    this.toolbar.appendToolbarItem(fallbackToNetwork);\n\n    this.eventListeners = new Map();\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ServiceWorkerManager.ServiceWorkerManager, this);\n    this.updateListVisibility();\n\n    const drawerChangeHandler = (event: Event): void => {\n      // @ts-ignore: No support for custom event listener\n      const isDrawerOpen = event.detail && event.detail.isDrawerOpen;\n      if (this.manager && !isDrawerOpen) {\n        const {serviceWorkerNetworkRequestsPanelStatus: {isOpen, openedAt}} = this.manager;\n        if (isOpen) {\n          const networkLocation = UI.ViewManager.ViewManager.instance().locationNameForViewId('network');\n          UI.ViewManager.ViewManager.instance().showViewInLocation('network', networkLocation, false);\n          void Common.Revealer.reveal(NetworkForward.UIFilter.UIRequestFilter.filters([]));\n\n          const currentTime = Date.now();\n          const timeDifference = currentTime - openedAt;\n          if (timeDifference < 2000) {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.ServiceWorkerNetworkRequestClosedQuickly);\n          }\n\n          this.manager.serviceWorkerNetworkRequestsPanelStatus = {\n            isOpen: false,\n            openedAt: 0,\n          };\n        }\n      }\n    };\n    document.body.addEventListener(UI.InspectorView.Events.DrawerChange, drawerChangeHandler);\n  }\n\n  modelAdded(serviceWorkerManager: SDK.ServiceWorkerManager.ServiceWorkerManager): void {\n    if (this.manager) {\n      return;\n    }\n    this.manager = serviceWorkerManager;\n    this.securityOriginManager =\n        (serviceWorkerManager.target().model(SDK.SecurityOriginManager.SecurityOriginManager) as\n         SDK.SecurityOriginManager.SecurityOriginManager);\n\n    for (const registration of this.manager.registrations().values()) {\n      this.updateRegistration(registration);\n    }\n\n    this.eventListeners.set(serviceWorkerManager, [\n      this.manager.addEventListener(\n          SDK.ServiceWorkerManager.Events.RegistrationUpdated, this.registrationUpdated, this),\n      this.manager.addEventListener(\n          SDK.ServiceWorkerManager.Events.RegistrationDeleted, this.registrationDeleted, this),\n      this.securityOriginManager.addEventListener(\n          SDK.SecurityOriginManager.Events.SecurityOriginAdded, this.updateSectionVisibility, this),\n      this.securityOriginManager.addEventListener(\n          SDK.SecurityOriginManager.Events.SecurityOriginRemoved, this.updateSectionVisibility, this),\n    ]);\n  }\n\n  modelRemoved(serviceWorkerManager: SDK.ServiceWorkerManager.ServiceWorkerManager): void {\n    if (!this.manager || this.manager !== serviceWorkerManager) {\n      return;\n    }\n\n    Common.EventTarget.removeEventListeners(this.eventListeners.get(serviceWorkerManager) || []);\n    this.eventListeners.delete(serviceWorkerManager);\n    this.manager = null;\n    this.securityOriginManager = null;\n  }\n\n  private getTimeStamp(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration): number {\n    const versions = registration.versionsByMode();\n\n    let timestamp: number|undefined = 0;\n\n    const active = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Active);\n    const installing = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Installing);\n    const waiting = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Waiting);\n    const redundant = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Redundant);\n\n    if (active) {\n      timestamp = active.scriptResponseTime;\n    } else if (waiting) {\n      timestamp = waiting.scriptResponseTime;\n    } else if (installing) {\n      timestamp = installing.scriptResponseTime;\n    } else if (redundant) {\n      timestamp = redundant.scriptResponseTime;\n    }\n\n    return timestamp || 0;\n  }\n\n  private updateSectionVisibility(): void {\n    let hasThis = false;\n    const movedSections = [];\n    for (const section of this.sections.values()) {\n      const expectedView = this.getReportViewForOrigin(section.registration.securityOrigin);\n      hasThis = hasThis || expectedView === this.currentWorkersView;\n      if (section.section.parentWidget() !== expectedView) {\n        movedSections.push(section);\n      }\n    }\n\n    for (const section of movedSections) {\n      const registration = section.registration;\n      this.removeRegistrationFromList(registration);\n      this.updateRegistration(registration, true);\n    }\n\n    this.currentWorkersView.sortSections((aSection, bSection) => {\n      const aRegistration = this.sectionToRegistration.get(aSection);\n      const bRegistration = this.sectionToRegistration.get(bSection);\n      const aTimestamp = aRegistration ? this.getTimeStamp(aRegistration) : 0;\n      const bTimestamp = bRegistration ? this.getTimeStamp(bRegistration) : 0;\n      // the newest (largest timestamp value) should be the first\n      return bTimestamp - aTimestamp;\n    });\n\n    for (const section of this.sections.values()) {\n      if (section.section.parentWidget() === this.currentWorkersView ||\n          this.isRegistrationVisible(section.registration)) {\n        section.section.showWidget();\n      } else {\n        section.section.hideWidget();\n      }\n    }\n    this.contentElement.classList.toggle('service-worker-has-current', Boolean(hasThis));\n    this.updateListVisibility();\n  }\n\n  private registrationUpdated(\n      event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerManager.ServiceWorkerRegistration>): void {\n    this.updateRegistration(event.data);\n    this.gcRegistrations();\n  }\n\n  private gcRegistrations(): void {\n    if (!this.manager || !this.securityOriginManager) {\n      return;\n    }\n    let hasNonDeletedRegistrations = false;\n    const securityOrigins = new Set<string>(this.securityOriginManager.securityOrigins());\n    for (const registration of this.manager.registrations().values()) {\n      if (!securityOrigins.has(registration.securityOrigin) && !this.isRegistrationVisible(registration)) {\n        continue;\n      }\n      if (!registration.canBeRemoved()) {\n        hasNonDeletedRegistrations = true;\n        break;\n      }\n    }\n\n    if (!hasNonDeletedRegistrations) {\n      return;\n    }\n\n    for (const registration of this.manager.registrations().values()) {\n      const visible = securityOrigins.has(registration.securityOrigin) || this.isRegistrationVisible(registration);\n      if (!visible && registration.canBeRemoved()) {\n        this.removeRegistrationFromList(registration);\n      }\n    }\n  }\n\n  private getReportViewForOrigin(origin: string): UI.ReportView.ReportView|null {\n    if (this.securityOriginManager &&\n        (this.securityOriginManager.securityOrigins().includes(origin) ||\n         this.securityOriginManager.unreachableMainSecurityOrigin() === origin)) {\n      return this.currentWorkersView;\n    }\n    return null;\n  }\n\n  private updateRegistration(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration, skipUpdate?: boolean):\n      void {\n    let section = this.sections.get(registration);\n    if (!section) {\n      const title = registration.scopeURL;\n      const reportView = this.getReportViewForOrigin(registration.securityOrigin);\n      if (!reportView) {\n        return;\n      }\n      const uiSection = reportView.appendSection(title);\n      uiSection.setUiGroupTitle(i18nString(UIStrings.serviceWorkerForS, {PH1: title}));\n      this.sectionToRegistration.set(uiSection, registration);\n      section = new Section((this.manager as SDK.ServiceWorkerManager.ServiceWorkerManager), uiSection, registration);\n      this.sections.set(registration, section);\n    }\n    if (skipUpdate) {\n      return;\n    }\n    this.updateSectionVisibility();\n    section.scheduleUpdate();\n  }\n\n  private registrationDeleted(\n      event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerManager.ServiceWorkerRegistration>): void {\n    this.removeRegistrationFromList(event.data);\n  }\n\n  private removeRegistrationFromList(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration): void {\n    const section = this.sections.get(registration);\n    if (section) {\n      section.section.detach();\n    }\n    this.sections.delete(registration);\n    this.updateSectionVisibility();\n  }\n\n  private isRegistrationVisible(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration): boolean {\n    if (!registration.scopeURL) {\n      return true;\n    }\n    return false;\n  }\n\n  private updateListVisibility(): void {\n    this.contentElement.classList.toggle('service-worker-list-empty', this.sections.size === 0);\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([\n      serviceWorkersViewStyles,\n    ]);\n  }\n}\n\nexport class Section {\n  private manager: SDK.ServiceWorkerManager.ServiceWorkerManager;\n  section: UI.ReportView.Section;\n  registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration;\n  private fingerprint: symbol|null;\n  private readonly pushNotificationDataSetting: Common.Settings.Setting<string>;\n  private readonly syncTagNameSetting: Common.Settings.Setting<string>;\n  private readonly periodicSyncTagNameSetting: Common.Settings.Setting<string>;\n  private readonly toolbar: UI.Toolbar.Toolbar;\n  private readonly updateCycleView: ServiceWorkerUpdateCycleView;\n  private readonly networkRequests: UI.Toolbar.ToolbarButton;\n  private readonly updateButton: UI.Toolbar.ToolbarButton;\n  private readonly deleteButton: UI.Toolbar.ToolbarButton;\n  private sourceField: Element;\n  private readonly statusField: Element;\n  private readonly clientsField: Element;\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private readonly clientInfoCache: Map<string, Protocol.Target.TargetInfo>;\n  private readonly throttler: Common.Throttler.Throttler;\n  private updateCycleField?: Element;\n\n  constructor(\n      manager: SDK.ServiceWorkerManager.ServiceWorkerManager, section: UI.ReportView.Section,\n      registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration) {\n    this.manager = manager;\n    this.section = section;\n    this.registration = registration;\n    this.fingerprint = null;\n    this.pushNotificationDataSetting = Common.Settings.Settings.instance().createLocalSetting(\n        'pushData', i18nString(UIStrings.testPushMessageFromDevtools));\n    this.syncTagNameSetting =\n        Common.Settings.Settings.instance().createLocalSetting('syncTagName', 'test-tag-from-devtools');\n    this.periodicSyncTagNameSetting =\n        Common.Settings.Settings.instance().createLocalSetting('periodicSyncTagName', 'test-tag-from-devtools');\n\n    this.toolbar = section.createToolbar();\n    this.toolbar.renderAsLinks();\n\n    this.updateCycleView = new ServiceWorkerUpdateCycleView(registration);\n    this.networkRequests = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.networkRequests), undefined, i18nString(UIStrings.networkRequests));\n    this.networkRequests.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.networkRequestsClicked, this);\n    this.toolbar.appendToolbarItem(this.networkRequests);\n    this.updateButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.update), undefined, i18nString(UIStrings.update));\n    this.updateButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.updateButtonClicked, this);\n    this.toolbar.appendToolbarItem(this.updateButton);\n    this.deleteButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.unregisterServiceWorker), undefined, i18nString(UIStrings.unregister));\n    this.deleteButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.unregisterButtonClicked, this);\n    this.toolbar.appendToolbarItem(this.deleteButton);\n\n    // Preserve the order.\n    this.sourceField = this.wrapWidget(this.section.appendField(i18nString(UIStrings.source)));\n    this.statusField = this.wrapWidget(this.section.appendField(i18nString(UIStrings.status)));\n    this.clientsField = this.wrapWidget(this.section.appendField(i18nString(UIStrings.clients)));\n    this.createSyncNotificationField(\n        i18nString(UIStrings.pushString), this.pushNotificationDataSetting.get(), i18nString(UIStrings.pushData),\n        this.push.bind(this));\n    this.createSyncNotificationField(\n        i18nString(UIStrings.syncString), this.syncTagNameSetting.get(), i18nString(UIStrings.syncTag),\n        this.sync.bind(this));\n    this.createSyncNotificationField(\n        i18nString(UIStrings.periodicSync), this.periodicSyncTagNameSetting.get(),\n        i18nString(UIStrings.periodicSyncTag), tag => this.periodicSync(tag));\n    this.createUpdateCycleField();\n\n    this.linkifier = new Components.Linkifier.Linkifier();\n    this.clientInfoCache = new Map();\n    this.throttler = new Common.Throttler.Throttler(500);\n  }\n\n  private createSyncNotificationField(\n      label: string, initialValue: string, placeholder: string, callback: (arg0: string) => void): void {\n    const form =\n        this.wrapWidget(this.section.appendField(label)).createChild('form', 'service-worker-editor-with-button');\n    const editor = UI.UIUtils.createInput('source-code service-worker-notification-editor');\n    form.appendChild(editor);\n    const button = UI.UIUtils.createTextButton(label);\n    button.type = 'submit';\n    form.appendChild(button);\n\n    editor.value = initialValue;\n    editor.placeholder = placeholder;\n    UI.ARIAUtils.setAccessibleName(editor, label);\n\n    form.addEventListener('submit', (e: Event) => {\n      callback(editor.value || '');\n      e.consume(true);\n    });\n  }\n\n  scheduleUpdate(): void {\n    if (throttleDisabledForDebugging) {\n      void this.update();\n      return;\n    }\n    void this.throttler.schedule(this.update.bind(this));\n  }\n\n  private targetForVersionId(versionId: string): SDK.Target.Target|null {\n    const version = this.manager.findVersion(versionId);\n    if (!version || !version.targetId) {\n      return null;\n    }\n    return SDK.TargetManager.TargetManager.instance().targetById(version.targetId);\n  }\n\n  private addVersion(versionsStack: Element, icon: string, label: string): Element {\n    const installingEntry = versionsStack.createChild('div', 'service-worker-version');\n    installingEntry.createChild('div', icon);\n    const statusString = installingEntry.createChild('span', 'service-worker-version-string');\n    statusString.textContent = label;\n    UI.ARIAUtils.markAsAlert(statusString);\n    return installingEntry;\n  }\n\n  private updateClientsField(version: SDK.ServiceWorkerManager.ServiceWorkerVersion): void {\n    this.clientsField.removeChildren();\n    this.section.setFieldVisible(i18nString(UIStrings.clients), Boolean(version.controlledClients.length));\n    for (const client of version.controlledClients) {\n      const clientLabelText = this.clientsField.createChild('div', 'service-worker-client');\n      const info = this.clientInfoCache.get(client);\n      if (info) {\n        this.updateClientInfo(clientLabelText, info);\n      }\n      void this.manager.target()\n          .targetAgent()\n          .invoke_getTargetInfo({targetId: client})\n          .then(this.onClientInfo.bind(this, clientLabelText));\n    }\n  }\n\n  private updateSourceField(version: SDK.ServiceWorkerManager.ServiceWorkerVersion): void {\n    this.sourceField.removeChildren();\n    const fileName = Common.ParsedURL.ParsedURL.extractName(version.scriptURL);\n    const name = this.sourceField.createChild('div', 'report-field-value-filename');\n    const link = Components.Linkifier.Linkifier.linkifyURL(\n        version.scriptURL, ({text: fileName} as Components.Linkifier.LinkifyURLOptions));\n    link.tabIndex = 0;\n    name.appendChild(link);\n    if (this.registration.errors.length) {\n      const errorsLabel = UI.UIUtils.createIconLabel(String(this.registration.errors.length), 'smallicon-error');\n      errorsLabel.classList.add('devtools-link', 'link');\n      errorsLabel.tabIndex = 0;\n      UI.ARIAUtils.setAccessibleName(\n          errorsLabel, i18nString(UIStrings.sRegistrationErrors, {PH1: this.registration.errors.length}));\n      self.onInvokeElement(errorsLabel, () => Common.Console.Console.instance().show());\n      name.appendChild(errorsLabel);\n    }\n    if (version.scriptResponseTime !== undefined) {\n      this.sourceField.createChild('div', 'report-field-value-subtitle').textContent =\n          i18nString(UIStrings.receivedS, {PH1: new Date(version.scriptResponseTime * 1000).toLocaleString()});\n    }\n  }\n\n  private update(): Promise<void> {\n    const fingerprint = this.registration.fingerprint();\n    if (fingerprint === this.fingerprint) {\n      return Promise.resolve();\n    }\n    this.fingerprint = fingerprint;\n\n    this.toolbar.setEnabled(!this.registration.isDeleted);\n\n    const versions = this.registration.versionsByMode();\n    const scopeURL = this.registration.scopeURL;\n    const title = this.registration.isDeleted ? i18nString(UIStrings.sDeleted, {PH1: scopeURL}) : scopeURL;\n    this.section.setTitle(title);\n\n    const active = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Active);\n    const waiting = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Waiting);\n    const installing = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Installing);\n    const redundant = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Redundant);\n\n    this.statusField.removeChildren();\n    const versionsStack = this.statusField.createChild('div', 'service-worker-version-stack');\n    versionsStack.createChild('div', 'service-worker-version-stack-bar');\n\n    if (active) {\n      this.updateSourceField(active);\n      const localizedRunningStatus =\n          SDK.ServiceWorkerManager.ServiceWorkerVersion.RunningStatus[active.currentState.runningStatus]();\n      // TODO(l10n): Don't concatenate strings here.\n      const activeEntry = this.addVersion(\n          versionsStack, 'service-worker-active-circle',\n          i18nString(UIStrings.sActivatedAndIsS, {PH1: active.id, PH2: localizedRunningStatus}));\n\n      if (active.isRunning() || active.isStarting()) {\n        this.createLink(activeEntry, i18nString(UIStrings.stopString), this.stopButtonClicked.bind(this, active.id));\n        if (!this.targetForVersionId(active.id)) {\n          this.createLink(activeEntry, i18nString(UIStrings.inspect), this.inspectButtonClicked.bind(this, active.id));\n        }\n      } else if (active.isStartable()) {\n        this.createLink(activeEntry, i18nString(UIStrings.startString), this.startButtonClicked.bind(this));\n      }\n      this.updateClientsField(active);\n    } else if (redundant) {\n      this.updateSourceField(redundant);\n      this.addVersion(\n          versionsStack, 'service-worker-redundant-circle', i18nString(UIStrings.sIsRedundant, {PH1: redundant.id}));\n      this.updateClientsField(redundant);\n    }\n\n    if (waiting) {\n      const waitingEntry = this.addVersion(\n          versionsStack, 'service-worker-waiting-circle', i18nString(UIStrings.sWaitingToActivate, {PH1: waiting.id}));\n      this.createLink(waitingEntry, i18n.i18n.lockedString('skipWaiting'), this.skipButtonClicked.bind(this));\n      if (waiting.scriptResponseTime !== undefined) {\n        waitingEntry.createChild('div', 'service-worker-subtitle').textContent =\n            i18nString(UIStrings.receivedS, {PH1: new Date(waiting.scriptResponseTime * 1000).toLocaleString()});\n      }\n      if (!this.targetForVersionId(waiting.id) && (waiting.isRunning() || waiting.isStarting())) {\n        this.createLink(waitingEntry, i18nString(UIStrings.inspect), this.inspectButtonClicked.bind(this, waiting.id));\n      }\n    }\n    if (installing) {\n      const installingEntry = this.addVersion(\n          versionsStack, 'service-worker-installing-circle',\n          i18nString(UIStrings.sTryingToInstall, {PH1: installing.id}));\n      if (installing.scriptResponseTime !== undefined) {\n        installingEntry.createChild('div', 'service-worker-subtitle').textContent = i18nString(UIStrings.receivedS, {\n          PH1: new Date(installing.scriptResponseTime * 1000).toLocaleString(),\n        });\n      }\n      if (!this.targetForVersionId(installing.id) && (installing.isRunning() || installing.isStarting())) {\n        this.createLink(\n            installingEntry, i18nString(UIStrings.inspect), this.inspectButtonClicked.bind(this, installing.id));\n      }\n    }\n\n    this.updateCycleView.refresh();\n\n    return Promise.resolve();\n  }\n\n  private createLink(parent: Element, title: string, listener: () => void, className?: string, useCapture?: boolean):\n      Element {\n    const button = document.createElement('button');\n    if (className) {\n      button.className = className;\n    }\n    button.classList.add('link', 'devtools-link');\n    button.textContent = title;\n    button.tabIndex = 0;\n    button.addEventListener('click', listener, useCapture);\n    parent.appendChild(button);\n    return button;\n  }\n\n  private unregisterButtonClicked(): void {\n    this.manager.deleteRegistration(this.registration.id);\n  }\n\n  private createUpdateCycleField(): void {\n    this.updateCycleField = this.wrapWidget(this.section.appendField(i18nString(UIStrings.updateCycle)));\n    this.updateCycleField.appendChild(this.updateCycleView.tableElement);\n  }\n\n  private updateButtonClicked(): void {\n    void this.manager.updateRegistration(this.registration.id);\n  }\n\n  private networkRequestsClicked(): void {\n    const applicationTabLocation = UI.ViewManager.ViewManager.instance().locationNameForViewId('resources');\n    const networkTabLocation = applicationTabLocation === 'drawer-view' ? 'panel' : 'drawer-view';\n    UI.ViewManager.ViewManager.instance().showViewInLocation('network', networkTabLocation);\n\n    void Common.Revealer.reveal(NetworkForward.UIFilter.UIRequestFilter.filters([\n      {\n        filterType: NetworkForward.UIFilter.FilterType.Is,\n        filterValue: NetworkForward.UIFilter.IsFilterType.ServiceWorkerIntercepted,\n      },\n    ]));\n\n    const requests = Logs.NetworkLog.NetworkLog.instance().requests();\n    let lastRequest: SDK.NetworkRequest.NetworkRequest|null = null;\n    if (Array.isArray(requests)) {\n      for (const request of requests) {\n        if (!lastRequest && request.fetchedViaServiceWorker) {\n          lastRequest = request;\n        }\n        if (request.fetchedViaServiceWorker && lastRequest &&\n            lastRequest.responseReceivedTime < request.responseReceivedTime) {\n          lastRequest = request;\n        }\n      }\n    }\n    if (lastRequest) {\n      const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.tab(\n          lastRequest, NetworkForward.UIRequestLocation.UIRequestTabs.Timing, {clearFilter: false});\n      void Common.Revealer.reveal(requestLocation);\n    }\n\n    this.manager.serviceWorkerNetworkRequestsPanelStatus = {\n      isOpen: true,\n      openedAt: Date.now(),\n    };\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ServiceWorkerNetworkRequestClicked);\n  }\n\n  private push(data: string): void {\n    this.pushNotificationDataSetting.set(data);\n    void this.manager.deliverPushMessage(this.registration.id, data);\n  }\n\n  private sync(tag: string): void {\n    this.syncTagNameSetting.set(tag);\n    void this.manager.dispatchSyncEvent(this.registration.id, tag, true);\n  }\n\n  private periodicSync(tag: string): void {\n    this.periodicSyncTagNameSetting.set(tag);\n    void this.manager.dispatchPeriodicSyncEvent(this.registration.id, tag);\n  }\n\n  private onClientInfo(element: Element, targetInfoResponse: Protocol.Target.GetTargetInfoResponse): void {\n    const targetInfo = targetInfoResponse.targetInfo;\n    if (!targetInfo) {\n      return;\n    }\n    this.clientInfoCache.set(targetInfo.targetId, targetInfo);\n    this.updateClientInfo(element, targetInfo);\n  }\n\n  private updateClientInfo(element: Element, targetInfo: Protocol.Target.TargetInfo): void {\n    if (targetInfo.type !== 'page' && targetInfo.type === 'iframe') {\n      const clientString = element.createChild('span', 'service-worker-client-string');\n      UI.UIUtils.createTextChild(clientString, i18nString(UIStrings.workerS, {PH1: targetInfo.url}));\n      return;\n    }\n    element.removeChildren();\n    const clientString = element.createChild('span', 'service-worker-client-string');\n    UI.UIUtils.createTextChild(clientString, targetInfo.url);\n    this.createLink(\n        element, i18nString(UIStrings.focus), this.activateTarget.bind(this, targetInfo.targetId),\n        'service-worker-client-focus-link');\n  }\n\n  private activateTarget(targetId: Protocol.Target.TargetID): void {\n    void this.manager.target().targetAgent().invoke_activateTarget({targetId});\n  }\n\n  private startButtonClicked(): void {\n    void this.manager.startWorker(this.registration.scopeURL);\n  }\n\n  private skipButtonClicked(): void {\n    void this.manager.skipWaiting(this.registration.scopeURL);\n  }\n\n  private stopButtonClicked(versionId: string): void {\n    void this.manager.stopWorker(versionId);\n  }\n\n  private inspectButtonClicked(versionId: string): void {\n    void this.manager.inspectWorker(versionId);\n  }\n\n  private wrapWidget(container: Element): Element {\n    const shadowRoot = UI.Utils.createShadowRootWithCoreStyles(container, {\n      cssFile: [\n        serviceWorkersViewStyles,\n        /* These styles are for the timing table in serviceWorkerUpdateCycleView but this is the widget that it is rendered\n           * inside so we are registering the files here. */\n        serviceWorkerUpdateCycleViewStyles,\n      ],\n      delegatesFocus: undefined,\n    });\n    const contentElement = document.createElement('div');\n    shadowRoot.appendChild(contentElement);\n    return contentElement;\n  }\n}\n"]}