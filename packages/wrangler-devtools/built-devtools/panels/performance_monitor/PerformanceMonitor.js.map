{"version":3,"file":"PerformanceMonitor.js","sourceRoot":"","sources":["../../../../../../front_end/panels/performance_monitor/PerformanceMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport performanceMonitorStyles from './performanceMonitor.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Aria accessible name in Performance Monitor of the Performance monitor tab\n  */\n  graphsDisplayingARealtimeViewOf: 'Graphs displaying a real-time view of performance metrics',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  paused: 'Paused',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  cpuUsage: 'CPU usage',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  jsHeapSize: 'JS heap size',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  domNodes: 'DOM Nodes',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  jsEventListeners: 'JS event listeners',\n  /**\n  *@description Text for documents, a type of resources\n  */\n  documents: 'Documents',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  documentFrames: 'Document Frames',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  layoutsSec: 'Layouts / sec',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  styleRecalcsSec: 'Style recalcs / sec',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/performance_monitor/PerformanceMonitor.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet performanceMonitorImplInstance: PerformanceMonitorImpl;\n\nexport class PerformanceMonitorImpl extends UI.Widget.HBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.PerformanceMetricsModel.PerformanceMetricsModel> {\n  private metricsBuffer: {timestamp: number, metrics: Map<string, number>}[];\n  private readonly pixelsPerMs: number;\n  private pollIntervalMs: number;\n  private readonly scaleHeight: number;\n  private graphHeight: number;\n  private gridColor: string;\n  private controlPane: ControlPane;\n  private canvas: HTMLCanvasElement;\n  private animationId!: number;\n  private width!: number;\n  private height!: number;\n  private model?: SDK.PerformanceMetricsModel.PerformanceMetricsModel|null;\n  private startTimestamp?: number;\n  private pollTimer?: number;\n\n  constructor() {\n    super(true);\n\n    this.contentElement.classList.add('perfmon-pane');\n    this.metricsBuffer = [];\n    /** @const */\n    this.pixelsPerMs = 10 / 1000;\n    /** @const */\n    this.pollIntervalMs = 500;\n    /** @const */\n    this.scaleHeight = 16;\n    /** @const */\n    this.graphHeight = 90;\n    this.gridColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--divider-line');\n    this.controlPane = new ControlPane(this.contentElement);\n    const chartContainer = this.contentElement.createChild('div', 'perfmon-chart-container');\n    this.canvas = chartContainer.createChild('canvas') as HTMLCanvasElement;\n    this.canvas.tabIndex = -1;\n    UI.ARIAUtils.setAccessibleName(this.canvas, i18nString(UIStrings.graphsDisplayingARealtimeViewOf));\n    this.contentElement.createChild('div', 'perfmon-chart-suspend-overlay fill').createChild('div').textContent =\n        i18nString(UIStrings.paused);\n    this.controlPane.addEventListener(Events.MetricChanged, this.recalcChartHeight, this);\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.PerformanceMetricsModel.PerformanceMetricsModel, this);\n  }\n\n  static instance(opts = {forceNew: null}): PerformanceMonitorImpl {\n    const {forceNew} = opts;\n    if (!performanceMonitorImplInstance || forceNew) {\n      performanceMonitorImplInstance = new PerformanceMonitorImpl();\n    }\n\n    return performanceMonitorImplInstance;\n  }\n\n  wasShown(): void {\n    if (!this.model) {\n      return;\n    }\n    this.registerCSSFiles([performanceMonitorStyles]);\n    this.controlPane.instantiateMetricData();\n    const themeSupport = ThemeSupport.ThemeSupport.instance();\n    themeSupport.addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      // instantiateMetricData sets the colors for the metrics, which we need\n      // to re-evaluate when the theme changes before re-drawing the canvas.\n      this.controlPane.instantiateMetricData();\n      this.draw();\n    });\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SuspendStateChanged, this.suspendStateChanged, this);\n    void this.model.enable();\n    this.suspendStateChanged();\n  }\n\n  willHide(): void {\n    if (!this.model) {\n      return;\n    }\n    SDK.TargetManager.TargetManager.instance().removeEventListener(\n        SDK.TargetManager.Events.SuspendStateChanged, this.suspendStateChanged, this);\n    this.stopPolling();\n    void this.model.disable();\n  }\n\n  modelAdded(model: SDK.PerformanceMetricsModel.PerformanceMetricsModel): void {\n    if (this.model) {\n      return;\n    }\n    this.model = model;\n    if (this.isShowing()) {\n      this.wasShown();\n    }\n  }\n\n  modelRemoved(model: SDK.PerformanceMetricsModel.PerformanceMetricsModel): void {\n    if (this.model !== model) {\n      return;\n    }\n    if (this.isShowing()) {\n      this.willHide();\n    }\n    this.model = null;\n  }\n\n  private suspendStateChanged(): void {\n    const suspended = SDK.TargetManager.TargetManager.instance().allTargetsSuspended();\n    if (suspended) {\n      this.stopPolling();\n    } else {\n      this.startPolling();\n    }\n    this.contentElement.classList.toggle('suspended', suspended);\n  }\n\n  private startPolling(): void {\n    this.startTimestamp = 0;\n    this.pollTimer = window.setInterval(() => this.poll(), this.pollIntervalMs);\n    this.onResize();\n    const animate = (): void => {\n      this.draw();\n      this.animationId = this.contentElement.window().requestAnimationFrame(() => {\n        animate();\n      });\n    };\n    animate();\n  }\n\n  private stopPolling(): void {\n    window.clearInterval(this.pollTimer);\n    this.contentElement.window().cancelAnimationFrame(this.animationId);\n    this.metricsBuffer = [];\n  }\n\n  private async poll(): Promise<void> {\n    if (!this.model) {\n      return;\n    }\n    const data = await this.model.requestMetrics();\n    const timestamp = data.timestamp;\n    const metrics = data.metrics;\n    this.metricsBuffer.push({timestamp, metrics: metrics});\n    const millisPerWidth = this.width / this.pixelsPerMs;\n    // Multiply by 2 as the pollInterval has some jitter and to have some extra samples if window is resized.\n    const maxCount = Math.ceil(millisPerWidth / this.pollIntervalMs * 2);\n    if (this.metricsBuffer.length > maxCount * 2)  // Multiply by 2 to have a hysteresis.\n    {\n      this.metricsBuffer.splice(0, this.metricsBuffer.length - maxCount);\n    }\n    this.controlPane.updateMetrics(metrics);\n  }\n\n  private draw(): void {\n    const ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n    ctx.save();\n    ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    ctx.clearRect(0, 0, this.width, this.height);\n    ctx.save();\n    ctx.translate(0, this.scaleHeight);  // Reserve space for the scale bar.\n    for (const chartInfo of this.controlPane.charts()) {\n      if (!this.controlPane.isActive(chartInfo.metrics[0].name)) {\n        continue;\n      }\n      this.drawChart(ctx, chartInfo, this.graphHeight);\n      ctx.translate(0, this.graphHeight);\n    }\n    ctx.restore();\n    this.drawHorizontalGrid(ctx);\n    ctx.restore();\n  }\n\n  private drawHorizontalGrid(ctx: CanvasRenderingContext2D): void {\n    const labelDistanceSeconds = 10;\n    const lightGray = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-2');\n    ctx.font = '10px ' + Host.Platform.fontFamily();\n    ctx.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-50');\n    const currentTime = Date.now() / 1000;\n    for (let sec = Math.ceil(currentTime);; --sec) {\n      const x = this.width - ((currentTime - sec) * 1000 - this.pollIntervalMs) * this.pixelsPerMs;\n      if (x < -50) {\n        break;\n      }\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, this.height);\n      if (sec >= 0 && sec % labelDistanceSeconds === 0) {\n        ctx.fillText(new Date(sec * 1000).toLocaleTimeString(), x + 4, 12);\n      }\n      ctx.strokeStyle = sec % labelDistanceSeconds ? lightGray : this.gridColor;\n      ctx.stroke();\n    }\n  }\n\n  private drawChart(ctx: CanvasRenderingContext2D, chartInfo: ChartInfo, height: number): void {\n    ctx.save();\n    ctx.rect(0, 0, this.width, height);\n    ctx.clip();\n    const bottomPadding = 8;\n    const extraSpace = 1.05;\n    const max = this.calcMax(chartInfo) * extraSpace;\n    const stackedChartBaseLandscape = chartInfo.stacked ? new Map() : null;\n    const paths = [];\n    for (let i = chartInfo.metrics.length - 1; i >= 0; --i) {\n      const metricInfo = chartInfo.metrics[i];\n      paths.push({\n        path: this.buildMetricPath(\n            chartInfo, metricInfo, height - bottomPadding, max, i ? stackedChartBaseLandscape : null),\n        color: metricInfo.color,\n      });\n    }\n    const backgroundColor =\n        Common.Color.Color.parse(ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background'));\n\n    if (backgroundColor) {\n      for (const path of paths.reverse()) {\n        const color = path.color;\n        ctx.save();\n        const parsedColor = Common.Color.Color.parse(color);\n        if (!parsedColor) {\n          continue;\n        }\n        ctx.fillStyle = backgroundColor.blendWith(parsedColor.setAlpha(0.2)).asString(null) || '';\n        ctx.fill(path.path);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 0.5;\n        ctx.stroke(path.path);\n        ctx.restore();\n      }\n    }\n    ctx.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-50');\n    ctx.font = `10px  ${Host.Platform.fontFamily()}`;\n    ctx.fillText(chartInfo.title, 8, 10);\n    this.drawVerticalGrid(ctx, height - bottomPadding, max, chartInfo);\n    ctx.restore();\n  }\n\n  private calcMax(chartInfo: ChartInfo): number {\n    if (chartInfo.max) {\n      return chartInfo.max;\n    }\n    const width = this.width;\n    const startTime = performance.now() - this.pollIntervalMs - width / this.pixelsPerMs;\n    let max: number = -Infinity;\n    for (const metricInfo of chartInfo.metrics) {\n      for (let i = this.metricsBuffer.length - 1; i >= 0; --i) {\n        const metrics = this.metricsBuffer[i];\n        const value = metrics.metrics.get(metricInfo.name);\n        if (value !== undefined) {\n          max = Math.max(max, value);\n        }\n        if (metrics.timestamp < startTime) {\n          break;\n        }\n      }\n    }\n    if (!this.metricsBuffer.length) {\n      return 10;\n    }\n\n    const base10 = Math.pow(10, Math.floor(Math.log10(max)));\n    max = Math.ceil(max / base10 / 2) * base10 * 2;\n\n    const alpha = 0.2;\n    chartInfo.currentMax = max * alpha + (chartInfo.currentMax || max) * (1 - alpha);\n    return chartInfo.currentMax;\n  }\n\n  private drawVerticalGrid(ctx: CanvasRenderingContext2D, height: number, max: number, info: ChartInfo): void {\n    let base = Math.pow(10, Math.floor(Math.log10(max)));\n    const firstDigit = Math.floor(max / base);\n    if (firstDigit !== 1 && firstDigit % 2 === 1) {\n      base *= 2;\n    }\n    let scaleValue = Math.floor(max / base) * base;\n\n    const span = max;\n    const topPadding = 18;\n    const visibleHeight = height - topPadding;\n    ctx.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-50');\n    ctx.strokeStyle = this.gridColor;\n    ctx.beginPath();\n    for (let i = 0; i < 2; ++i) {\n      const y = calcY(scaleValue);\n      const labelText = MetricIndicator.formatNumber(scaleValue, info);\n      ctx.moveTo(0, y);\n      ctx.lineTo(4, y);\n      ctx.moveTo(ctx.measureText(labelText).width + 12, y);\n      ctx.lineTo(this.width, y);\n      ctx.fillText(labelText, 8, calcY(scaleValue) + 3);\n      scaleValue /= 2;\n    }\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(0, height + 0.5);\n    ctx.lineTo(this.width, height + 0.5);\n    ctx.strokeStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-2');\n    ctx.stroke();\n    function calcY(value: number): number {\n      return Math.round(height - visibleHeight * value / span) + 0.5;\n    }\n  }\n\n  private buildMetricPath(\n      chartInfo: ChartInfo, metricInfo: MetricInfo, height: number, scaleMax: number,\n      stackedChartBaseLandscape: Map<number, number>|null): Path2D {\n    const path = new Path2D();\n    const topPadding = 18;\n    const visibleHeight = height - topPadding;\n    if (visibleHeight < 1) {\n      return path;\n    }\n    const span = scaleMax;\n    const metricName = metricInfo.name;\n    const pixelsPerMs = this.pixelsPerMs;\n    const startTime = performance.now() - this.pollIntervalMs - this.width / pixelsPerMs;\n    const smooth = chartInfo.smooth;\n\n    let x = 0;\n    let lastY = 0;\n    let lastX = 0;\n    if (this.metricsBuffer.length) {\n      x = (this.metricsBuffer[0].timestamp - startTime) * pixelsPerMs;\n      path.moveTo(x, calcY(0));\n      path.lineTo(this.width + 5, calcY(0));\n      lastY = calcY(\n          (this.metricsBuffer[this.metricsBuffer.length - 1] as {\n            metrics: Map<string, number>,\n          }).metrics.get(metricName) ||\n          0);\n      lastX = this.width + 5;\n      path.lineTo(lastX, lastY);\n    }\n    for (let i = this.metricsBuffer.length - 1; i >= 0; --i) {\n      const metrics = this.metricsBuffer[i];\n      const timestamp = metrics.timestamp;\n      let value: number = metrics.metrics.get(metricName) || 0;\n      if (stackedChartBaseLandscape) {\n        value += stackedChartBaseLandscape.get(timestamp) || 0;\n        value = Platform.NumberUtilities.clamp(value, 0, 1);\n        stackedChartBaseLandscape.set(timestamp, value);\n      }\n      const y = calcY(value);\n      x = (timestamp - startTime) * pixelsPerMs;\n      if (smooth) {\n        const midX = (lastX + x) / 2;\n        path.bezierCurveTo(midX, lastY, midX, y, x, y);\n      } else {\n        path.lineTo(x, lastY);\n        path.lineTo(x, y);\n      }\n      lastX = x;\n      lastY = y;\n      if (timestamp < startTime) {\n        break;\n      }\n    }\n    return path;\n\n    function calcY(value: number): number {\n      return Math.round(height - visibleHeight * value / span) + 0.5;\n    }\n  }\n\n  onResize(): void {\n    super.onResize();\n    this.width = this.canvas.offsetWidth;\n    this.canvas.width = Math.round(this.width * window.devicePixelRatio);\n    this.recalcChartHeight();\n  }\n\n  private recalcChartHeight(): void {\n    let height = this.scaleHeight;\n    for (const chartInfo of this.controlPane.charts()) {\n      if (this.controlPane.isActive(chartInfo.metrics[0].name)) {\n        height += this.graphHeight;\n      }\n    }\n    this.height = Math.ceil(height * window.devicePixelRatio);\n    this.canvas.height = this.height;\n    this.canvas.style.height = `${this.height / window.devicePixelRatio}px`;\n  }\n}\n\nexport const enum Format {\n  Percent = 'Percent',\n  Bytes = 'Bytes',\n}\n\nexport class ControlPane extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  element: Element;\n  private readonly enabledChartsSetting: Common.Settings.Setting<string[]>;\n  private readonly enabledCharts: Set<string>;\n\n  private chartsInfo: ChartInfo[] = [];\n  private indicators: Map<string, MetricIndicator> = new Map();\n\n  constructor(parent: Element) {\n    super();\n    this.element = parent.createChild('div', 'perfmon-control-pane');\n\n    this.enabledChartsSetting = Common.Settings.Settings.instance().createSetting(\n        'perfmonActiveIndicators2', ['TaskDuration', 'JSHeapTotalSize', 'Nodes']);\n    this.enabledCharts = new Set(this.enabledChartsSetting.get());\n  }\n\n  instantiateMetricData(): void {\n    const defaults = {\n      color: undefined,\n      format: undefined,\n      currentMax: undefined,\n      max: undefined,\n      smooth: undefined,\n      stacked: undefined,\n    };\n\n    // Get ThemeSupport instance here just to make things a little less verbose.\n    const themeSupport = ThemeSupport.ThemeSupport.instance();\n    this.chartsInfo = [\n      {\n        ...defaults,\n        title: i18nString(UIStrings.cpuUsage),\n        metrics: [\n          {\n            name: 'TaskDuration',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-cpu-task-duration', this.element),\n          },\n          {\n            name: 'ScriptDuration',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-cpu-script-duration', this.element),\n          },\n          {\n            name: 'LayoutDuration',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-cpu-layout-duration', this.element),\n          },\n          {\n            name: 'RecalcStyleDuration',\n            color:\n                themeSupport.getComputedValue('--override-color-perf-monitor-cpu-recalc-style-duration', this.element),\n          },\n        ],\n        format: Format.Percent,\n        smooth: true,\n        stacked: true,\n        color: themeSupport.getComputedValue('--override-color-perf-monitor-cpu', this.element),\n        max: 1,\n        currentMax: undefined,\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.jsHeapSize),\n        metrics: [\n          {\n            name: 'JSHeapTotalSize',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-jsheap-total-size', this.element),\n          },\n          {\n            name: 'JSHeapUsedSize',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-jsheap-used-size', this.element),\n          },\n        ],\n        format: Format.Bytes,\n        color: themeSupport.getComputedValue('--override-color-perf-monitor-jsheap'),\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.domNodes),\n        metrics: [\n          {\n            name: 'Nodes',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-dom-nodes', this.element),\n          },\n        ],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.jsEventListeners),\n        metrics: [\n          {\n            name: 'JSEventListeners',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-js-event-listeners', this.element),\n          },\n        ],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.documents),\n        metrics: [{\n          name: 'Documents',\n          color: themeSupport.getComputedValue('--override-color-perf-monitor-documents', this.element),\n        }],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.documentFrames),\n        metrics: [{\n          name: 'Frames',\n          color: themeSupport.getComputedValue('--override-color-perf-monitor-document-frames', this.element),\n        }],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.layoutsSec),\n        metrics: [{\n          name: 'LayoutCount',\n          color: themeSupport.getComputedValue('--override-color-perf-monitor-layout-count', this.element),\n        }],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.styleRecalcsSec),\n        metrics: [\n          {\n            name: 'RecalcStyleCount',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-recalc-style-count', this.element),\n          },\n        ],\n      },\n    ];\n\n    // Clear any existing child elements.\n    this.element.removeChildren();\n\n    this.indicators = new Map();\n    for (const chartInfo of this.chartsInfo) {\n      const chartName = chartInfo.metrics[0].name;\n      const active = this.enabledCharts.has(chartName);\n      const indicator = new MetricIndicator(this.element, chartInfo, active, this.onToggle.bind(this, chartName));\n      this.indicators.set(chartName, indicator);\n    }\n  }\n\n  private onToggle(chartName: string, active: boolean): void {\n    if (active) {\n      this.enabledCharts.add(chartName);\n    } else {\n      this.enabledCharts.delete(chartName);\n    }\n    this.enabledChartsSetting.set(Array.from(this.enabledCharts));\n    this.dispatchEventToListeners(Events.MetricChanged);\n  }\n\n  charts(): ChartInfo[] {\n    return this.chartsInfo;\n  }\n\n  isActive(metricName: string): boolean {\n    return this.enabledCharts.has(metricName);\n  }\n\n  updateMetrics(metrics: Map<string, number>): void {\n    for (const name of this.indicators.keys()) {\n      const metric = metrics.get(name);\n      if (metric !== undefined) {\n        const indicator = this.indicators.get(name);\n        if (indicator) {\n          indicator.setValue(metric);\n        }\n      }\n    }\n  }\n}\n\nconst enum Events {\n  MetricChanged = 'MetricChanged',\n}\n\ntype EventTypes = {\n  [Events.MetricChanged]: void,\n};\n\nlet numberFormatter: Intl.NumberFormat;\nlet percentFormatter: Intl.NumberFormat;\n\nexport class MetricIndicator {\n  private info: ChartInfo;\n  private active: boolean;\n  private readonly onToggle: (arg0: boolean) => void;\n  element: HTMLElement;\n  private readonly swatchElement: UI.Icon.Icon;\n  private valueElement: HTMLElement;\n\n  constructor(parent: Element, info: ChartInfo, active: boolean, onToggle: (arg0: boolean) => void) {\n    const color = info.color || info.metrics[0].color;\n    this.info = info;\n    this.active = active;\n    this.onToggle = onToggle;\n    this.element = parent.createChild('div', 'perfmon-indicator') as HTMLElement;\n    this.swatchElement = UI.Icon.Icon.create('smallicon-checkmark-square', 'perfmon-indicator-swatch');\n    this.swatchElement.style.backgroundColor = color;\n    this.element.appendChild(this.swatchElement);\n    this.element.createChild('div', 'perfmon-indicator-title').textContent = info.title;\n    this.valueElement = this.element.createChild('div', 'perfmon-indicator-value') as HTMLElement;\n    this.valueElement.style.color = color;\n    this.element.addEventListener('click', () => this.toggleIndicator());\n    this.element.addEventListener('keypress', event => this.handleKeypress(event));\n    this.element.classList.toggle('active', active);\n    UI.ARIAUtils.markAsCheckbox(this.element);\n    UI.ARIAUtils.setChecked(this.element, this.active);\n    this.element.tabIndex = 0;\n  }\n\n  static formatNumber(value: number, info: ChartInfo): string {\n    if (!numberFormatter) {\n      numberFormatter = new Intl.NumberFormat('en-US', {maximumFractionDigits: 1});\n      percentFormatter = new Intl.NumberFormat('en-US', {maximumFractionDigits: 1, style: 'percent'});\n    }\n    switch (info.format) {\n      case Format.Percent:\n        return percentFormatter.format(value);\n      case Format.Bytes:\n        return Platform.NumberUtilities.bytesToString(value);\n      default:\n        return numberFormatter.format(value);\n    }\n  }\n\n  setValue(value: number): void {\n    this.valueElement.textContent = MetricIndicator.formatNumber(value, this.info);\n  }\n\n  private toggleIndicator(): void {\n    this.active = !this.active;\n    this.element.classList.toggle('active', this.active);\n    UI.ARIAUtils.setChecked(this.element, this.active);\n    this.onToggle(this.active);\n  }\n\n  private handleKeypress(event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    if (keyboardEvent.key === ' ' || keyboardEvent.key === 'Enter') {\n      this.toggleIndicator();\n    }\n  }\n}\n\nexport const format = new Intl.NumberFormat('en-US', {maximumFractionDigits: 1});\nexport interface MetricInfo {\n  name: string;\n  color: string;\n}\nexport interface ChartInfo {\n  title: string;\n  metrics: {name: string, color: string}[];\n  max?: number;\n  currentMax?: number;\n  format?: Format;\n  smooth?: boolean;\n  color?: string;\n  stacked?: boolean;\n}\n"]}