{"version":3,"file":"PaintProfilerView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/layer_viewer/PaintProfilerView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\n\nimport paintProfilerStyles from './paintProfiler.css.js';\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to indicate the progress of a profile\n  */\n  profiling: 'Profiling…',\n  /**\n  *@description Text in Paint Profiler View of the Layers panel\n  */\n  shapes: 'Shapes',\n  /**\n  *@description Text in Paint Profiler View of the Layers panel\n  */\n  bitmap: 'Bitmap',\n  /**\n  *@description Generic label for any text\n  */\n  text: 'Text',\n  /**\n  *@description Text in Paint Profiler View of the Layers panel\n  */\n  misc: 'Misc',\n  /**\n  *@description ARIA label for a pie chart that shows the results of the paint profiler\n  */\n  profilingResults: 'Profiling results',\n  /**\n  *@description Label for command log tree in the Profiler tab\n  */\n  commandLog: 'Command Log',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/PaintProfilerView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet categories: {[x: string]: PaintProfilerCategory}|null = null;\n\nlet logItemCategoriesMap: {[x: string]: PaintProfilerCategory}|null = null;\n\nexport class PaintProfilerView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.HBox>(\n    UI.Widget.HBox) {\n  private canvasContainer: HTMLElement;\n  private readonly progressBanner: HTMLElement;\n  private pieChart: PerfUI.PieChart.PieChart;\n  private readonly showImageCallback: (arg0?: string|undefined) => void;\n  private canvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D;\n  private readonly selectionWindowInternal: PerfUI.OverviewGrid.Window;\n  private readonly innerBarWidth: number;\n  private minBarHeight: number;\n  private readonly barPaddingWidth: number;\n  private readonly outerBarWidth: number;\n  private pendingScale: number;\n  private scale: number;\n  private samplesPerBar: number;\n  private log: SDK.PaintProfiler.PaintProfilerLogItem[];\n  private snapshot?: SDK.PaintProfiler.PaintProfilerSnapshot|null;\n  private logCategories?: PaintProfilerCategory[];\n  private profiles?: Protocol.LayerTree.PaintProfile[]|null;\n  private updateImageTimer?: number;\n\n  constructor(showImageCallback: (arg0?: string|undefined) => void) {\n    super(true);\n\n    this.contentElement.classList.add('paint-profiler-overview');\n    this.canvasContainer = this.contentElement.createChild('div', 'paint-profiler-canvas-container');\n    this.progressBanner = this.contentElement.createChild('div', 'full-widget-dimmed-banner hidden');\n    this.progressBanner.textContent = i18nString(UIStrings.profiling);\n    this.pieChart = new PerfUI.PieChart.PieChart();\n    this.populatePieChart(0, []);\n    this.pieChart.classList.add('paint-profiler-pie-chart');\n    this.contentElement.appendChild(this.pieChart);\n\n    this.showImageCallback = showImageCallback;\n    this.canvas = this.canvasContainer.createChild('canvas', 'fill') as HTMLCanvasElement;\n    this.context = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n    this.selectionWindowInternal = new PerfUI.OverviewGrid.Window(this.canvasContainer);\n    this.selectionWindowInternal.addEventListener(PerfUI.OverviewGrid.Events.WindowChanged, this.onWindowChanged, this);\n\n    this.innerBarWidth = 4 * window.devicePixelRatio;\n    this.minBarHeight = window.devicePixelRatio;\n    this.barPaddingWidth = 2 * window.devicePixelRatio;\n    this.outerBarWidth = this.innerBarWidth + this.barPaddingWidth;\n    this.pendingScale = 1;\n    this.scale = this.pendingScale;\n    this.samplesPerBar = 0;\n    this.log = [];\n\n    this.reset();\n  }\n\n  static categories(): {[x: string]: PaintProfilerCategory} {\n    if (!categories) {\n      categories = {\n        shapes: new PaintProfilerCategory('shapes', i18nString(UIStrings.shapes), 'rgb(255, 161, 129)'),\n        bitmap: new PaintProfilerCategory('bitmap', i18nString(UIStrings.bitmap), 'rgb(136, 196, 255)'),\n        text: new PaintProfilerCategory('text', i18nString(UIStrings.text), 'rgb(180, 255, 137)'),\n        misc: new PaintProfilerCategory('misc', i18nString(UIStrings.misc), 'rgb(206, 160, 255)'),\n      };\n    }\n    return categories;\n  }\n\n  private static initLogItemCategories(): {[x: string]: PaintProfilerCategory} {\n    if (!logItemCategoriesMap) {\n      const categories = PaintProfilerView.categories();\n\n      const logItemCategories: {[x: string]: PaintProfilerCategory} = {};\n      logItemCategories['Clear'] = categories['misc'];\n      logItemCategories['DrawPaint'] = categories['misc'];\n      logItemCategories['DrawData'] = categories['misc'];\n      logItemCategories['SetMatrix'] = categories['misc'];\n      logItemCategories['PushCull'] = categories['misc'];\n      logItemCategories['PopCull'] = categories['misc'];\n      logItemCategories['Translate'] = categories['misc'];\n      logItemCategories['Scale'] = categories['misc'];\n      logItemCategories['Concat'] = categories['misc'];\n      logItemCategories['Restore'] = categories['misc'];\n      logItemCategories['SaveLayer'] = categories['misc'];\n      logItemCategories['Save'] = categories['misc'];\n      logItemCategories['BeginCommentGroup'] = categories['misc'];\n      logItemCategories['AddComment'] = categories['misc'];\n      logItemCategories['EndCommentGroup'] = categories['misc'];\n      logItemCategories['ClipRect'] = categories['misc'];\n      logItemCategories['ClipRRect'] = categories['misc'];\n      logItemCategories['ClipPath'] = categories['misc'];\n      logItemCategories['ClipRegion'] = categories['misc'];\n      logItemCategories['DrawPoints'] = categories['shapes'];\n      logItemCategories['DrawRect'] = categories['shapes'];\n      logItemCategories['DrawOval'] = categories['shapes'];\n      logItemCategories['DrawRRect'] = categories['shapes'];\n      logItemCategories['DrawPath'] = categories['shapes'];\n      logItemCategories['DrawVertices'] = categories['shapes'];\n      logItemCategories['DrawDRRect'] = categories['shapes'];\n      logItemCategories['DrawBitmap'] = categories['bitmap'];\n      logItemCategories['DrawBitmapRectToRect'] = categories['bitmap'];\n      logItemCategories['DrawBitmapMatrix'] = categories['bitmap'];\n      logItemCategories['DrawBitmapNine'] = categories['bitmap'];\n      logItemCategories['DrawSprite'] = categories['bitmap'];\n      logItemCategories['DrawPicture'] = categories['bitmap'];\n      logItemCategories['DrawText'] = categories['text'];\n      logItemCategories['DrawPosText'] = categories['text'];\n      logItemCategories['DrawPosTextH'] = categories['text'];\n      logItemCategories['DrawTextOnPath'] = categories['text'];\n\n      logItemCategoriesMap = logItemCategories;\n    }\n\n    return logItemCategoriesMap;\n  }\n\n  private static categoryForLogItem(logItem: SDK.PaintProfiler.PaintProfilerLogItem): PaintProfilerCategory {\n    const method = Platform.StringUtilities.toTitleCase(logItem.method);\n\n    const logItemCategories = PaintProfilerView.initLogItemCategories();\n    let result: PaintProfilerCategory = logItemCategories[method];\n    if (!result) {\n      result = PaintProfilerView.categories()['misc'];\n      logItemCategories[method] = result;\n    }\n    return result;\n  }\n\n  onResize(): void {\n    this.update();\n  }\n\n  async setSnapshotAndLog(\n      snapshot: SDK.PaintProfiler.PaintProfilerSnapshot|null, log: SDK.PaintProfiler.PaintProfilerLogItem[],\n      clipRect: Protocol.DOM.Rect|null): Promise<void> {\n    this.reset();\n    this.snapshot = snapshot;\n    if (this.snapshot) {\n      this.snapshot.addReference();\n    }\n    this.log = log;\n    this.logCategories = this.log.map(PaintProfilerView.categoryForLogItem);\n\n    if (!snapshot) {\n      this.update();\n      this.populatePieChart(0, []);\n      this.selectionWindowInternal.setEnabled(false);\n      return;\n    }\n\n    this.selectionWindowInternal.setEnabled(true);\n    this.progressBanner.classList.remove('hidden');\n    this.updateImage();\n\n    const profiles = await snapshot.profile(clipRect);\n\n    this.progressBanner.classList.add('hidden');\n    this.profiles = profiles;\n    this.update();\n    this.updatePieChart();\n  }\n\n  setScale(scale: number): void {\n    const needsUpdate = scale > this.scale;\n    const predictiveGrowthFactor = 2;\n    this.pendingScale = Math.min(1, scale * predictiveGrowthFactor);\n    if (needsUpdate && this.snapshot) {\n      this.updateImage();\n    }\n  }\n\n  private update(): void {\n    this.canvas.width = this.canvasContainer.clientWidth * window.devicePixelRatio;\n    this.canvas.height = this.canvasContainer.clientHeight * window.devicePixelRatio;\n    this.samplesPerBar = 0;\n    if (!this.profiles || !this.profiles.length || !this.logCategories) {\n      return;\n    }\n\n    const maxBars = Math.floor((this.canvas.width - 2 * this.barPaddingWidth) / this.outerBarWidth);\n    const sampleCount = this.log.length;\n    this.samplesPerBar = Math.ceil(sampleCount / maxBars);\n\n    let maxBarTime = 0;\n    const barTimes = [];\n    const barHeightByCategory = [];\n    let heightByCategory: {[category: string]: number} = {};\n    for (let i = 0, lastBarIndex = 0, lastBarTime = 0; i < sampleCount;) {\n      let categoryName = (this.logCategories[i] && this.logCategories[i].name) || 'misc';\n      const sampleIndex = this.log[i].commandIndex;\n      for (let row = 0; row < this.profiles.length; row++) {\n        const sample = this.profiles[row][sampleIndex];\n        lastBarTime += sample;\n        heightByCategory[categoryName] = (heightByCategory[categoryName] || 0) + sample;\n      }\n      ++i;\n      if (i - lastBarIndex === this.samplesPerBar || i === sampleCount) {\n        // Normalize by total number of samples accumulated.\n        const factor = this.profiles.length * (i - lastBarIndex);\n        lastBarTime /= factor;\n        for (categoryName in heightByCategory) {\n          heightByCategory[categoryName] /= factor;\n        }\n\n        barTimes.push(lastBarTime);\n        barHeightByCategory.push(heightByCategory);\n\n        if (lastBarTime > maxBarTime) {\n          maxBarTime = lastBarTime;\n        }\n        lastBarTime = 0;\n        heightByCategory = {};\n        lastBarIndex = i;\n      }\n    }\n\n    const paddingHeight = 4 * window.devicePixelRatio;\n    const scale = (this.canvas.height - paddingHeight - this.minBarHeight) / maxBarTime;\n    for (let i = 0; i < barTimes.length; ++i) {\n      for (const categoryName in barHeightByCategory[i]) {\n        barHeightByCategory[i][categoryName] *= (barTimes[i] * scale + this.minBarHeight) / barTimes[i];\n      }\n      this.renderBar(i, barHeightByCategory[i]);\n    }\n  }\n\n  private renderBar(index: number, heightByCategory: {[x: string]: number}): void {\n    const categories = PaintProfilerView.categories();\n    let currentHeight = 0;\n    const x = this.barPaddingWidth + index * this.outerBarWidth;\n    for (const categoryName in categories) {\n      if (!heightByCategory[categoryName]) {\n        continue;\n      }\n      currentHeight += heightByCategory[categoryName];\n      const y = this.canvas.height - currentHeight;\n      this.context.fillStyle = categories[categoryName].color;\n      this.context.fillRect(x, y, this.innerBarWidth, heightByCategory[categoryName]);\n    }\n  }\n\n  private onWindowChanged(): void {\n    this.dispatchEventToListeners(Events.WindowChanged);\n    this.updatePieChart();\n    if (this.updateImageTimer) {\n      return;\n    }\n    this.updateImageTimer = window.setTimeout(this.updateImage.bind(this), 100);\n  }\n\n  private updatePieChart(): void {\n    const {total, slices} = this.calculatePieChart();\n    this.populatePieChart(total, slices);\n  }\n\n  private calculatePieChart(): {total: number, slices: Array<{value: number, color: string, title: string}>} {\n    const window = this.selectionWindow();\n    if (!this.profiles || !this.profiles.length || !window) {\n      return {total: 0, slices: []};\n    }\n    let totalTime = 0;\n    const timeByCategory: {[x: string]: number} = {};\n    for (let i = window.left; i < window.right; ++i) {\n      const logEntry = this.log[i];\n      const category = PaintProfilerView.categoryForLogItem(logEntry);\n      timeByCategory[category.color] = timeByCategory[category.color] || 0;\n      for (let j = 0; j < this.profiles.length; ++j) {\n        const time = this.profiles[j][logEntry.commandIndex];\n        totalTime += time;\n        timeByCategory[category.color] += time;\n      }\n    }\n    const slices: PerfUI.PieChart.Slice[] = [];\n    for (const color in timeByCategory) {\n      slices.push({value: timeByCategory[color] / this.profiles.length, color, title: ''});\n    }\n    return {total: totalTime / this.profiles.length, slices};\n  }\n\n  private populatePieChart(total: number, slices: PerfUI.PieChart.Slice[]): void {\n    this.pieChart.data = {\n      chartName: i18nString(UIStrings.profilingResults),\n      size: 55,\n      formatter: this.formatPieChartTime.bind(this),\n      showLegend: false,\n      total,\n      slices,\n    };\n  }\n\n  private formatPieChartTime(value: number): string {\n    return i18n.TimeUtilities.millisToString(value * 1000, true);\n  }\n\n  selectionWindow(): {left: number, right: number}|null {\n    if (!this.log) {\n      return null;\n    }\n\n    const screenLeft = (this.selectionWindowInternal.windowLeft || 0) * this.canvas.width;\n    const screenRight = (this.selectionWindowInternal.windowRight || 0) * this.canvas.width;\n    const barLeft = Math.floor(screenLeft / this.outerBarWidth);\n    const barRight = Math.floor((screenRight + this.innerBarWidth - this.barPaddingWidth / 2) / this.outerBarWidth);\n    const stepLeft = Platform.NumberUtilities.clamp(barLeft * this.samplesPerBar, 0, this.log.length - 1);\n    const stepRight = Platform.NumberUtilities.clamp(barRight * this.samplesPerBar, 0, this.log.length);\n\n    return {left: stepLeft, right: stepRight};\n  }\n\n  private updateImage(): void {\n    delete this.updateImageTimer;\n    let left;\n    let right;\n    const window = this.selectionWindow();\n    if (this.profiles && this.profiles.length && window) {\n      left = this.log[window.left].commandIndex;\n      right = this.log[window.right - 1].commandIndex;\n    }\n    const scale = this.pendingScale;\n    if (!this.snapshot) {\n      return;\n    }\n    void this.snapshot.replay(scale, left, right).then(image => {\n      if (!image) {\n        return;\n      }\n      this.scale = scale;\n      this.showImageCallback(image);\n    });\n  }\n\n  private reset(): void {\n    if (this.snapshot) {\n      this.snapshot.release();\n    }\n    this.snapshot = null;\n    this.profiles = null;\n    this.selectionWindowInternal.reset();\n    this.selectionWindowInternal.setEnabled(false);\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([paintProfilerStyles]);\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  WindowChanged = 'WindowChanged',\n}\n\nexport type EventTypes = {\n  [Events.WindowChanged]: void,\n};\n\nexport class PaintProfilerCommandLogView extends UI.ThrottledWidget.ThrottledWidget {\n  private readonly treeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  private log: SDK.PaintProfiler.PaintProfilerLogItem[];\n  private readonly treeItemCache: Map<SDK.PaintProfiler.PaintProfilerLogItem, LogTreeElement>;\n  private selectionWindow?: {left: number, right: number}|null;\n  constructor() {\n    super();\n    this.setMinimumSize(100, 25);\n    this.element.classList.add('overflow-auto');\n\n    this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    UI.ARIAUtils.setAccessibleName(this.treeOutline.contentElement, i18nString(UIStrings.commandLog));\n    this.element.appendChild(this.treeOutline.element);\n    this.setDefaultFocusedElement(this.treeOutline.contentElement);\n\n    this.log = [];\n    this.treeItemCache = new Map();\n  }\n\n  setCommandLog(log: SDK.PaintProfiler.PaintProfilerLogItem[]): void {\n    this.log = log;\n\n    this.updateWindow({left: 0, right: this.log.length});\n  }\n\n  private appendLogItem(logItem: SDK.PaintProfiler.PaintProfilerLogItem): void {\n    let treeElement = this.treeItemCache.get(logItem);\n    if (!treeElement) {\n      treeElement = new LogTreeElement(this, logItem);\n      this.treeItemCache.set(logItem, treeElement);\n    } else if (treeElement.parent) {\n      return;\n    }\n    this.treeOutline.appendChild(treeElement);\n  }\n\n  updateWindow(selectionWindow: {left: number, right: number}|null): void {\n    this.selectionWindow = selectionWindow;\n    this.update();\n  }\n\n  doUpdate(): Promise<void> {\n    if (!this.selectionWindow || !this.log.length) {\n      this.treeOutline.removeChildren();\n      return Promise.resolve();\n    }\n    const root = this.treeOutline.rootElement();\n    for (;;) {\n      const child = root.firstChild() as LogTreeElement;\n      if (!child || child.logItem.commandIndex >= this.selectionWindow.left) {\n        break;\n      }\n      root.removeChildAtIndex(0);\n    }\n    for (;;) {\n      const child = root.lastChild() as LogTreeElement;\n      if (!child || child.logItem.commandIndex < this.selectionWindow.right) {\n        break;\n      }\n      root.removeChildAtIndex(root.children().length - 1);\n    }\n    for (let i = this.selectionWindow.left, right = this.selectionWindow.right; i < right; ++i) {\n      this.appendLogItem(this.log[i]);\n    }\n    return Promise.resolve();\n  }\n}\n\nexport class LogTreeElement extends UI.TreeOutline.TreeElement {\n  readonly logItem: SDK.PaintProfiler.PaintProfilerLogItem;\n  private readonly ownerView: PaintProfilerCommandLogView;\n  private readonly filled: boolean;\n\n  constructor(ownerView: PaintProfilerCommandLogView, logItem: SDK.PaintProfiler.PaintProfilerLogItem) {\n    super('', Boolean(logItem.params));\n    this.logItem = logItem;\n    this.ownerView = ownerView;\n    this.filled = false;\n  }\n\n  onattach(): void {\n    this.update();\n  }\n\n  async onpopulate(): Promise<void> {\n    for (const param in this.logItem.params) {\n      LogPropertyTreeElement.appendLogPropertyItem(this, param, this.logItem.params[param]);\n    }\n  }\n\n  private paramToString(param: SDK.PaintProfiler.RawPaintProfilerLogItemParamValue, name: string): string {\n    if (typeof param !== 'object') {\n      return typeof param === 'string' && param.length > 100 ? name : JSON.stringify(param);\n    }\n    let str = '';\n    let keyCount = 0;\n    for (const key in param) {\n      if (++keyCount > 4 || typeof param[key] === 'object' ||\n          (typeof param[key] === 'string' && param[key].length > 100)) {\n        return name;\n      }\n      if (str) {\n        str += ', ';\n      }\n      str += param[key];\n    }\n    return str;\n  }\n\n  private paramsToString(params: SDK.PaintProfiler.RawPaintProfilerLogItemParams|null): string {\n    let str = '';\n    for (const key in params) {\n      if (str) {\n        str += ', ';\n      }\n      str += this.paramToString(params[key], key);\n    }\n    return str;\n  }\n\n  private update(): void {\n    const title = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(title, this.logItem.method + '(' + this.paramsToString(this.logItem.params) + ')');\n    this.title = title;\n  }\n}\n\nexport class LogPropertyTreeElement extends UI.TreeOutline.TreeElement {\n  private property: {name: string, value: SDK.PaintProfiler.RawPaintProfilerLogItemParamValue};\n\n  constructor(property: {name: string, value: SDK.PaintProfiler.RawPaintProfilerLogItemParamValue}) {\n    super();\n    this.property = property;\n  }\n\n  static appendLogPropertyItem(\n      element: UI.TreeOutline.TreeElement, name: string,\n      value: SDK.PaintProfiler.RawPaintProfilerLogItemParamValue): void {\n    const treeElement = new LogPropertyTreeElement({name: name, value: value});\n    element.appendChild(treeElement);\n    if (value && typeof value === 'object') {\n      for (const property in value) {\n        LogPropertyTreeElement.appendLogPropertyItem(treeElement, property, value[property]);\n      }\n    }\n  }\n\n  onattach(): void {\n    const title = document.createDocumentFragment();\n    const nameElement = title.createChild('span', 'name');\n    nameElement.textContent = this.property.name;\n    const separatorElement = title.createChild('span', 'separator');\n    separatorElement.textContent = ': ';\n    if (this.property.value === null || typeof this.property.value !== 'object') {\n      const valueElement = title.createChild('span', 'value');\n      valueElement.textContent = JSON.stringify(this.property.value);\n      valueElement.classList.add('cm-js-' + (this.property.value === null ? 'null' : typeof this.property.value));\n    }\n    this.title = title;\n  }\n}\n\nexport class PaintProfilerCategory {\n  name: string;\n  title: string;\n  color: string;\n\n  constructor(name: string, title: string, color: string) {\n    this.name = name;\n    this.title = title;\n    this.color = color;\n  }\n}\n"]}