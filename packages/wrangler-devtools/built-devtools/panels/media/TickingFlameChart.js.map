{"version":3,"file":"TickingFlameChart.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/TickingFlameChart.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {Bounds, formatMillisecondsToSeconds} from './TickingFlameChartHelpers.js';\n\nconst defaultFont = '11px ' + Host.Platform.fontFamily();\nconst defaultColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-text-primary');\n\nconst DefaultStyle = {\n  height: 20,\n  padding: 2,\n  collapsible: false,\n  font: defaultFont,\n  color: defaultColor,\n  backgroundColor: 'rgba(100 0 0 / 10%)',\n  nestingLevel: 0,\n  itemsHeight: 20,\n  shareHeaderLine: false,\n  useFirstLineForOverview: false,\n  useDecoratorsForOverview: false,\n};\n\nexport const HotColorScheme = ['#ffba08', '#faa307', '#f48c06', '#e85d04', '#dc2f02', '#d00000', '#9d0208'];\nexport const ColdColorScheme = ['#7400b8', '#6930c3', '#5e60ce', '#5390d9', '#4ea8de', '#48bfe3', '#56cfe1', '#64dfdf'];\n\nfunction calculateFontColor(backgroundColor: string): string {\n  const parsedColor = Common.Color.Color.parse(backgroundColor);\n  // Dark background needs a light font.\n  if (parsedColor && parsedColor.hsla()[2] < 0.5) {\n    return '#eee';\n  }\n  return '#444';\n}\n\ninterface EventHandlers {\n  setLive: (arg0: number) => number;\n  setComplete: (arg0: number) => void;\n  updateMaxTime: (arg0: number) => void;\n}\n\nexport interface EventProperties {\n  level: number;\n  startTime: number;\n  duration?: number;\n  name: string;\n  color?: string;\n  hoverData?: Object|null;\n}\n\n/**\n * Wrapper class for each event displayed on the timeline.\n */\nexport class Event {\n  private timelineData: PerfUI.FlameChart.TimelineData;\n  private setLive: (arg0: number) => number;\n  private readonly setComplete: (arg0: number) => void;\n  private readonly updateMaxTime: (arg0: number) => void;\n  private selfIndex: number;\n  private liveInternal: boolean;\n  title: string;\n  private colorInternal: string;\n  private fontColorInternal: string;\n  private readonly hoverData: Object;\n\n  constructor(\n      timelineData: PerfUI.FlameChart.TimelineData, eventHandlers: EventHandlers,\n      eventProperties: EventProperties|\n      undefined = {color: undefined, duration: undefined, hoverData: {}, level: 0, name: '', startTime: 0}) {\n    // These allow the event to privately change it's own data in the timeline.\n    this.timelineData = timelineData;\n    this.setLive = eventHandlers.setLive;\n    this.setComplete = eventHandlers.setComplete;\n    this.updateMaxTime = eventHandlers.updateMaxTime;\n\n    // This is the index in the timelineData arrays we should be writing to.\n    this.selfIndex = this.timelineData.entryLevels.length;\n    this.liveInternal = false;\n\n    // Can't use the dict||or||default syntax, since NaN is a valid expected duration.\n    const duration = eventProperties['duration'] === undefined ? 0 : eventProperties['duration'];\n\n    (this.timelineData.entryLevels as number[]).push(eventProperties['level'] || 0);\n    (this.timelineData.entryStartTimes as number[]).push(eventProperties['startTime'] || 0);\n    (this.timelineData.entryTotalTimes as number[]).push(duration);  // May initially push -1\n\n    // If -1 was pushed, we need to update it. The set end time method helps with this.\n    if (duration === -1) {\n      this.endTime = -1;\n    }\n\n    this.title = eventProperties['name'] || '';\n    this.colorInternal = eventProperties['color'] || HotColorScheme[0];\n    this.fontColorInternal = calculateFontColor(this.colorInternal);\n    this.hoverData = eventProperties['hoverData'] || {};\n  }\n\n  /**\n   * Render hovertext into the |htmlElement|\n   */\n  decorate(htmlElement: HTMLElement): void {\n    htmlElement.createChild('span').textContent = `Name: ${this.title}`;\n    htmlElement.createChild('br');\n\n    const startTimeReadable = formatMillisecondsToSeconds(this.startTime, 2);\n    if (this.liveInternal) {\n      htmlElement.createChild('span').textContent = `Duration: ${startTimeReadable} - LIVE!`;\n    } else if (!isNaN(this.duration)) {\n      const durationReadable = formatMillisecondsToSeconds(this.duration + this.startTime, 2);\n      htmlElement.createChild('span').textContent = `Duration: ${startTimeReadable} - ${durationReadable}`;\n    } else {\n      htmlElement.createChild('span').textContent = `Time: ${startTimeReadable}`;\n    }\n  }\n\n  /**\n   * set an event to be \"live\" where it's ended time is always the chart maximum\n   * or to be a fixed time.\n   * @param {number} time\n   */\n  set endTime(time: number) {\n    // Setting end time to -1 signals that an event becomes live\n    if (time === -1) {\n      this.timelineData.entryTotalTimes[this.selfIndex] = this.setLive(this.selfIndex);\n      this.liveInternal = true;\n    } else {\n      this.liveInternal = false;\n      const duration = time - this.timelineData.entryStartTimes[this.selfIndex];\n      this.timelineData.entryTotalTimes[this.selfIndex] = duration;\n      this.setComplete(this.selfIndex);\n      this.updateMaxTime(time);\n    }\n  }\n\n  get id(): number {\n    return this.selfIndex;\n  }\n\n  set level(level: number) {\n    this.timelineData.entryLevels[this.selfIndex] = level;\n  }\n\n  set color(color: string) {\n    this.colorInternal = color;\n    this.fontColorInternal = calculateFontColor(this.colorInternal);\n  }\n\n  get color(): string {\n    return this.colorInternal;\n  }\n\n  get fontColor(): string {\n    return this.fontColorInternal;\n  }\n\n  get startTime(): number {\n    // Round it\n    return this.timelineData.entryStartTimes[this.selfIndex];\n  }\n\n  get duration(): number {\n    return this.timelineData.entryTotalTimes[this.selfIndex];\n  }\n\n  get live(): boolean {\n    return this.liveInternal;\n  }\n}\n\nexport class TickingFlameChart extends UI.Widget.VBox {\n  private intervalTimer: number;\n  private lastTimestamp: number;\n  private canTickInternal: boolean;\n  private ticking: boolean;\n  private isShown: boolean;\n  private readonly bounds: Bounds;\n  private readonly dataProvider: TickingFlameChartDataProvider;\n  private readonly delegate: TickingFlameChartDelegate;\n  private readonly chartGroupExpansionSetting: Common.Settings.Setting<Object>;\n  private readonly chart: PerfUI.FlameChart.FlameChart;\n  private stoppedPermanently?: boolean;\n\n  constructor() {\n    super();\n\n    // set to update once per second _while the tab is active_\n    this.intervalTimer = 0;\n    this.lastTimestamp = 0;\n    this.canTickInternal = true;\n    this.ticking = false;\n    this.isShown = false;\n\n    // The max bounds for scroll-out.\n    this.bounds = new Bounds(0, 1000, 30000, 1000);\n\n    // Create the data provider with the initial max bounds,\n    // as well as a function to attempt bounds updating everywhere.\n    this.dataProvider = new TickingFlameChartDataProvider(this.bounds, this.updateMaxTime.bind(this));\n\n    // Delegate doesn't do much for now.\n    this.delegate = new TickingFlameChartDelegate();\n\n    // Chart settings.\n    this.chartGroupExpansionSetting =\n        Common.Settings.Settings.instance().createSetting('mediaFlameChartGroupExpansion', {});\n\n    // Create the chart.\n    this.chart =\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        new PerfUI.FlameChart.FlameChart(this.dataProvider, this.delegate, this.chartGroupExpansionSetting);\n\n    // TODO: needs to have support in the delegate for supporting this.\n    this.chart.disableRangeSelection();\n\n    // Scrolling should change the current bounds, and repaint the chart.\n    this.chart.bindCanvasEvent('wheel', e => {\n      this.onScroll(e as WheelEvent);\n    });\n\n    // Add the chart.\n    this.chart.show(this.contentElement);\n  }\n\n  /**\n   * Add a marker with |properties| at |time|.\n   */\n  addMarker(properties: EventProperties): void {\n    properties['duration'] = NaN;\n    this.startEvent(properties);\n  }\n\n  /**\n   * Create an event which will be set to live by default.\n   */\n  startEvent(properties: EventProperties): Event {\n    // Make sure that an unspecified event gets live duration.\n    // Have to check for undefined, since NaN is allowed but evaluates to false.\n    if (properties['duration'] === undefined) {\n      properties['duration'] = -1;\n    }\n    const time = properties['startTime'] || 0;\n\n    // Event has to be created before the updateMaxTime call.\n    const event = this.dataProvider.startEvent(properties);\n\n    this.updateMaxTime(time);\n    return event;\n  }\n\n  /**\n   * Add a group with |name| that can contain |depth| different tracks.\n   */\n  addGroup(name: Common.UIString.LocalizedString, depth: number): void {\n    this.dataProvider.addGroup(name, depth);\n  }\n\n  private updateMaxTime(time: number): void {\n    if (this.bounds.pushMaxAtLeastTo(time)) {\n      this.updateRender();\n    }\n  }\n\n  private onScroll(e: WheelEvent): void {\n    // TODO: is this a good divisor? does it account for high presicision scroll wheels?\n    // low precisision scroll wheels?\n    const scrollTickCount = Math.round(e.deltaY / 50);\n    const scrollPositionRatio = e.offsetX / (e.srcElement as HTMLElement).clientWidth;\n    if (scrollTickCount > 0) {\n      this.bounds.zoomOut(scrollTickCount, scrollPositionRatio);\n    } else {\n      this.bounds.zoomIn(-scrollTickCount, scrollPositionRatio);\n    }\n    this.updateRender();\n  }\n\n  willHide(): void {\n    this.isShown = false;\n    if (this.ticking) {\n      this.stop();\n    }\n  }\n\n  wasShown(): void {\n    this.isShown = true;\n    if (this.canTickInternal && !this.ticking) {\n      this.start();\n    }\n  }\n\n  set canTick(allowed: boolean) {\n    this.canTickInternal = allowed;\n    if (this.ticking && !allowed) {\n      this.stop();\n    }\n    if (!this.ticking && this.isShown && allowed) {\n      this.start();\n    }\n  }\n\n  private start(): void {\n    if (this.lastTimestamp === 0) {\n      this.lastTimestamp = Date.now();\n    }\n    if (this.intervalTimer !== 0 || this.stoppedPermanently) {\n      return;\n    }\n    // 16 ms is roughly 60 fps.\n    this.intervalTimer = window.setInterval(this.updateRender.bind(this), 16);\n    this.ticking = true;\n  }\n\n  private stop(permanently: boolean = false): void {\n    window.clearInterval(this.intervalTimer);\n    this.intervalTimer = 0;\n    if (permanently) {\n      this.stoppedPermanently = true;\n    }\n    this.ticking = false;\n  }\n\n  private updateRender(): void {\n    if (this.ticking) {\n      const currentTimestamp = Date.now();\n      const duration = currentTimestamp - this.lastTimestamp;\n      this.lastTimestamp = currentTimestamp;\n      this.bounds.addMax(duration);\n    }\n    this.dataProvider.updateMaxTime(this.bounds);\n    this.chart.setWindowTimes(this.bounds.low, this.bounds.high, true);\n    this.chart.scheduleUpdate();\n  }\n}\n\n/**\n * Doesn't do much right now, but can be used in the future for selecting events.\n */\nclass TickingFlameChartDelegate implements PerfUI.FlameChart.FlameChartDelegate {\n  constructor() {\n  }\n\n  windowChanged(_windowStartTime: number, _windowEndTime: number, _animate: boolean): void {\n  }\n\n  updateRangeSelection(_startTime: number, _endTime: number): void {\n  }\n\n  updateSelectedGroup(_flameChart: PerfUI.FlameChart.FlameChart, _group: PerfUI.FlameChart.Group|null): void {\n  }\n}\n\nclass TickingFlameChartDataProvider implements PerfUI.FlameChart.FlameChartDataProvider {\n  private readonly updateMaxTimeHandle: (arg0: number) => void;\n  private bounds: Bounds;\n  private readonly liveEvents: Set<number>;\n  private eventMap: Map<number, Event>;\n  private readonly timelineDataInternal: PerfUI.FlameChart.TimelineData;\n  private maxLevel: number;\n\n  constructor(initialBounds: Bounds, updateMaxTime: (arg0: number) => void) {\n    // do _not_ call this method from within this class - only for passing to events.\n    this.updateMaxTimeHandle = updateMaxTime;\n\n    this.bounds = initialBounds;\n\n    // All the events which should have their time updated when the chart ticks.\n    this.liveEvents = new Set();\n\n    // All events.\n    // Map<Event>\n    this.eventMap = new Map();\n\n    // Contains the numerical indicies. This is passed as a reference to the events\n    // so that they can update it when they change.\n    this.timelineDataInternal = new PerfUI.FlameChart.TimelineData([], [], [], []);\n\n    // The current sum of all group heights.\n    this.maxLevel = 0;\n  }\n\n  /**\n   * Add a group with |name| that can contain |depth| different tracks.\n   */\n  addGroup(name: Common.UIString.LocalizedString, depth: number): void {\n    if (this.timelineDataInternal.groups) {\n      this.timelineDataInternal.groups.push({\n        name: name,\n        startLevel: this.maxLevel,\n        expanded: true,\n        selectable: false,\n        style: DefaultStyle,\n        track: null,\n      });\n    }\n    this.maxLevel += depth;\n  }\n\n  /**\n   * Create an event which will be set to live by default.\n   */\n  startEvent(properties: EventProperties): Event {\n    properties['level'] = properties['level'] || 0;\n    if (properties['level'] > this.maxLevel) {\n      throw `level ${properties['level']} is above the maximum allowed of ${this.maxLevel}`;\n    }\n\n    const event = new Event(\n        this.timelineDataInternal, {\n          setLive: this.setLive.bind(this),\n          setComplete: this.setComplete.bind(this),\n          updateMaxTime: this.updateMaxTimeHandle,\n        },\n        properties);\n\n    this.eventMap.set(event.id, event);\n    return event;\n  }\n\n  private setLive(index: number): number {\n    this.liveEvents.add(index);\n    return this.bounds.max;\n  }\n\n  private setComplete(index: number): void {\n    this.liveEvents.delete(index);\n  }\n\n  updateMaxTime(bounds: Bounds): void {\n    this.bounds = bounds;\n    for (const eventID of this.liveEvents.entries()) {\n      // force recalculation of all live events.\n      (this.eventMap.get(eventID[0]) as Event).endTime = -1;\n    }\n  }\n\n  maxStackDepth(): number {\n    return this.maxLevel + 1;\n  }\n\n  timelineData(): PerfUI.FlameChart.TimelineData {\n    return this.timelineDataInternal;\n  }\n\n  /** time in milliseconds\n     */\n  minimumBoundary(): number {\n    return this.bounds.low;\n  }\n\n  totalTime(): number {\n    return this.bounds.high;\n  }\n\n  entryColor(index: number): string {\n    return (this.eventMap.get(index) as Event).color;\n  }\n\n  textColor(index: number): string {\n    return (this.eventMap.get(index) as Event).fontColor;\n  }\n\n  entryTitle(index: number): string|null {\n    return (this.eventMap.get(index) as Event).title;\n  }\n\n  entryFont(_index: number): string|null {\n    return defaultFont;\n  }\n\n  decorateEntry(\n      _index: number, _context: CanvasRenderingContext2D, _text: string|null, _barX: number, _barY: number,\n      _barWidth: number, _barHeight: number, _unclippedBarX: number, _timeToPixelRatio: number): boolean {\n    return false;\n  }\n\n  forceDecoration(_index: number): boolean {\n    return false;\n  }\n\n  prepareHighlightedEntryInfo(index: number): Element|null {\n    const element = document.createElement('div');\n    (this.eventMap.get(index) as Event).decorate(element);\n    return element;\n  }\n\n  formatValue(value: number, _precision?: number): string {\n    // value is always [0, X] so we need to add lower bound\n    value += Math.round(this.bounds.low);\n\n    // Magic numbers of pre-calculated logorithms.\n\n    // we want to show additional decimals at the time when two adjacent labels\n    // would otherwise show the same number. At 3840 pixels wide, that cutoff\n    // happens to be about 30 seconds for one decimal and 2.8 for two decimals.\n    if (this.bounds.range < 2800) {\n      return formatMillisecondsToSeconds(value, 2);\n    }\n    if (this.bounds.range < 30000) {\n      return formatMillisecondsToSeconds(value, 1);\n    }\n    return formatMillisecondsToSeconds(value, 0);\n  }\n\n  canJumpToEntry(_entryIndex: number): boolean {\n    return false;\n  }\n\n  navStartTimes(): Map<string, SDK.TracingModel.Event> {\n    return new Map();\n  }\n}\n"]}