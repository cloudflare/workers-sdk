{"version":3,"file":"MediaModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/MediaModel.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AA0B7C,MAAM,OAAO,UAAW,SAAQ,GAAG,CAAC,QAAQ,CAAC,QAAoB;IACvD,OAAO,CAAU;IACR,KAAK,CAA4B;IAElD,YAAY,MAAyB;QACnC,KAAK,CAAC,MAAM,CAAC,CAAC;QAEd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;QAEjC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,WAAW;QACf,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QACD,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IACnC,CAAC;IAED,aAAa;QACX,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,uBAAuB,CAAC,KAAkD;QACxE,IAAI,CAAC,wBAAwB,0DAAiC,KAAK,CAAC,CAAC;IACvE,CAAC;IAED,iBAAiB,CAAC,KAA4C;QAC5D,IAAI,CAAC,wBAAwB,8CAA2B,KAAK,CAAC,CAAC;IACjE,CAAC;IAED,oBAAoB,CAAC,KAA+C;QAClE,IAAI,CAAC,wBAAwB,oDAA8B,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,kBAAkB,CAAC,KAA6C;QAC9D,IAAI,CAAC,wBAAwB,gDAA4B,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,cAAc,CAAC,EAAC,OAAO,EAAqC;QAC1D,IAAI,CAAC,wBAAwB,wCAAwB,OAAO,CAAC,CAAC;IAChE,CAAC;CACF;AACD,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAC,YAAY,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport interface PlayerEvent extends Protocol.Media.PlayerEvent {\n  value: string;\n  displayTimestamp: string;\n  event: string;\n}\n\nexport const enum Events {\n  PlayerPropertiesChanged = 'PlayerPropertiesChanged',\n  PlayerEventsAdded = 'PlayerEventsAdded',\n  PlayerMessagesLogged = 'PlayerMessagesLogged',\n  PlayerErrorsRaised = 'PlayerErrorsRaised',\n  PlayersCreated = 'PlayersCreated',\n}\n\nexport type EventTypes = {\n  [Events.PlayerPropertiesChanged]: Protocol.Media.PlayerPropertiesChangedEvent,\n  [Events.PlayerEventsAdded]: Protocol.Media.PlayerEventsAddedEvent,\n  [Events.PlayerMessagesLogged]: Protocol.Media.PlayerMessagesLoggedEvent,\n  [Events.PlayerErrorsRaised]: Protocol.Media.PlayerErrorsRaisedEvent,\n  [Events.PlayersCreated]: Protocol.Media.PlayerId[],\n};\n\nexport class MediaModel extends SDK.SDKModel.SDKModel<EventTypes> implements ProtocolProxyApi.MediaDispatcher {\n  private enabled: boolean;\n  private readonly agent: ProtocolProxyApi.MediaApi;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    this.enabled = false;\n    this.agent = target.mediaAgent();\n\n    target.registerMediaDispatcher(this);\n  }\n\n  async resumeModel(): Promise<void> {\n    if (!this.enabled) {\n      return Promise.resolve();\n    }\n    await this.agent.invoke_enable();\n  }\n\n  ensureEnabled(): void {\n    void this.agent.invoke_enable();\n    this.enabled = true;\n  }\n\n  playerPropertiesChanged(event: Protocol.Media.PlayerPropertiesChangedEvent): void {\n    this.dispatchEventToListeners(Events.PlayerPropertiesChanged, event);\n  }\n\n  playerEventsAdded(event: Protocol.Media.PlayerEventsAddedEvent): void {\n    this.dispatchEventToListeners(Events.PlayerEventsAdded, event);\n  }\n\n  playerMessagesLogged(event: Protocol.Media.PlayerMessagesLoggedEvent): void {\n    this.dispatchEventToListeners(Events.PlayerMessagesLogged, event);\n  }\n\n  playerErrorsRaised(event: Protocol.Media.PlayerErrorsRaisedEvent): void {\n    this.dispatchEventToListeners(Events.PlayerErrorsRaised, event);\n  }\n\n  playersCreated({players}: Protocol.Media.PlayersCreatedEvent): void {\n    this.dispatchEventToListeners(Events.PlayersCreated, players);\n  }\n}\nSDK.SDKModel.SDKModel.register(MediaModel, {capabilities: SDK.Target.Capability.Media, autostart: false});\n"]}