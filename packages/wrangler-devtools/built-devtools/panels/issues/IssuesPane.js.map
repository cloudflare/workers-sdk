{"version":3,"file":"IssuesPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/IssuesPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {HiddenIssuesRow} from './HiddenIssuesRow.js';\nimport issuesPaneStyles from './issuesPane.css.js';\nimport issuesTreeStyles from './issuesTree.css.js';\n\nimport type {AggregatedIssue, AggregationKey} from './IssueAggregator.js';\nimport {Events as IssueAggregatorEvents, IssueAggregator} from './IssueAggregator.js';\nimport {IssueView} from './IssueView.js';\nimport {IssueKindView, getGroupIssuesByKindSetting, issueKindViewSortPriority} from './IssueKindView.js';\n\nconst UIStrings = {\n  /**\n   * @description Category title for a group of cross origin embedder policy (COEP) issues\n   */\n  crossOriginEmbedderPolicy: 'Cross Origin Embedder Policy',\n  /**\n   * @description Category title for a group of mixed content issues\n   */\n  mixedContent: 'Mixed Content',\n  /**\n   * @description Category title for a group of SameSite cookie issues\n   */\n  samesiteCookie: 'SameSite Cookie',\n  /**\n   * @description Category title for a group of heavy ads issues\n   */\n  heavyAds: 'Heavy Ads',\n  /**\n   * @description Category title for a group of content security policy (CSP) issues\n   */\n  contentSecurityPolicy: 'Content Security Policy',\n  /**\n   * @description Category title for a group of trusted web activity issues\n   */\n  trustedWebActivity: 'Trusted Web Activity',\n  /**\n   * @description Text for other types of items\n   */\n  other: 'Other',\n  /**\n   * @description Category title for the different 'low text contrast' issues. Low text contrast refers\n   *              to the difference between the color of a text and the background color where that text\n   *              appears.\n   */\n  lowTextContrast: 'Low Text Contrast',\n  /**\n   * @description Category title for the different 'Cross-Origin Resource Sharing' (CORS) issues. CORS\n   *              refers to one origin (e.g 'a.com') loading resources from another origin (e.g. 'b.com').\n   */\n  cors: 'Cross Origin Resource Sharing',\n  /**\n   * @description Title for a checkbox which toggles grouping by category in the issues tab\n   */\n  groupDisplayedIssuesUnder: 'Group displayed issues under associated categories',\n  /**\n   * @description Label for a checkbox which toggles grouping by category in the issues tab\n   */\n  groupByCategory: 'Group by category',\n  /**\n  * @description Title for a checkbox which toggles grouping by kind in the issues tab\n    */\n  groupDisplayedIssuesUnderKind: 'Group displayed issues as Page errors, Breaking changes and Improvements',\n  /**\n  * @description Label for a checkbox which toggles grouping by kind in the issues tab\n    */\n  groupByKind: 'Group by kind',\n  /**\n   * @description Title for a checkbox. Whether the issues tab should include third-party issues or not.\n   */\n  includeCookieIssuesCausedBy: 'Include cookie Issues caused by third-party sites',\n  /**\n   * @description Label for a checkbox. Whether the issues tab should include third-party issues or not.\n   */\n  includeThirdpartyCookieIssues: 'Include third-party cookie issues',\n  /**\n   * @description Label on the issues tab\n   */\n  onlyThirdpartyCookieIssues: 'Only third-party cookie issues detected so far',\n  /**\n   * @description Label in the issues panel\n   */\n  noIssuesDetectedSoFar: 'No issues detected so far',\n  /**\n   * @description Category title for the different 'Attribution Reporting API' issues. The\n   * Attribution Reporting API is a newly proposed web API (see https://github.com/WICG/conversion-measurement-api).\n   */\n  attributionReporting: 'Attribution Reporting `API`',\n  /**\n   * @description Category title for the different 'Quirks Mode' issues. Quirks Mode refers\n   *              to the legacy browser modes that displays web content according to outdated\n   *              browser behaviors.\n   */\n  quirksMode: 'Quirks Mode',\n  /**\n   * @description Category title for the different 'Generic' issues.\n   */\n  generic: 'Generic',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/IssuesPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass IssueCategoryView extends UI.TreeOutline.TreeElement {\n  #category: IssuesManager.Issue.IssueCategory;\n\n  constructor(category: IssuesManager.Issue.IssueCategory) {\n    super();\n    this.#category = category;\n\n    this.toggleOnClick = true;\n    this.listItemElement.classList.add('issue-category');\n    this.childrenListElement.classList.add('issue-category-body');\n  }\n\n  getCategoryName(): string {\n    switch (this.#category) {\n      case IssuesManager.Issue.IssueCategory.CrossOriginEmbedderPolicy:\n        return i18nString(UIStrings.crossOriginEmbedderPolicy);\n      case IssuesManager.Issue.IssueCategory.MixedContent:\n        return i18nString(UIStrings.mixedContent);\n      case IssuesManager.Issue.IssueCategory.Cookie:\n        return i18nString(UIStrings.samesiteCookie);\n      case IssuesManager.Issue.IssueCategory.HeavyAd:\n        return i18nString(UIStrings.heavyAds);\n      case IssuesManager.Issue.IssueCategory.ContentSecurityPolicy:\n        return i18nString(UIStrings.contentSecurityPolicy);\n      case IssuesManager.Issue.IssueCategory.TrustedWebActivity:\n        return i18nString(UIStrings.trustedWebActivity);\n      case IssuesManager.Issue.IssueCategory.LowTextContrast:\n        return i18nString(UIStrings.lowTextContrast);\n      case IssuesManager.Issue.IssueCategory.Cors:\n        return i18nString(UIStrings.cors);\n      case IssuesManager.Issue.IssueCategory.AttributionReporting:\n        return i18nString(UIStrings.attributionReporting);\n      case IssuesManager.Issue.IssueCategory.QuirksMode:\n        return i18nString(UIStrings.quirksMode);\n      case IssuesManager.Issue.IssueCategory.Generic:\n        return i18nString(UIStrings.generic);\n      case IssuesManager.Issue.IssueCategory.Other:\n        return i18nString(UIStrings.other);\n    }\n  }\n\n  onattach(): void {\n    this.#appendHeader();\n  }\n\n  #appendHeader(): void {\n    const header = document.createElement('div');\n    header.classList.add('header');\n\n    const title = document.createElement('div');\n    title.classList.add('title');\n    title.textContent = this.getCategoryName();\n    header.appendChild(title);\n\n    this.listItemElement.appendChild(header);\n  }\n}\n\nexport function getGroupIssuesByCategorySetting(): Common.Settings.Setting<boolean> {\n  return Common.Settings.Settings.instance().createSetting('groupIssuesByCategory', false);\n}\n\nlet issuesPaneInstance: IssuesPane;\n\nexport class IssuesPane extends UI.Widget.VBox {\n  #categoryViews: Map<IssuesManager.Issue.IssueCategory, IssueCategoryView>;\n  #issueViews: Map<AggregationKey, IssueView>;\n  #kindViews: Map<IssuesManager.Issue.IssueKind, IssueKindView>;\n  #showThirdPartyCheckbox: UI.Toolbar.ToolbarSettingCheckbox|null;\n  #issuesTree: UI.TreeOutline.TreeOutlineInShadow;\n  #hiddenIssuesRow: HiddenIssuesRow;\n  #noIssuesMessageDiv: HTMLDivElement;\n  #issuesManager: IssuesManager.IssuesManager.IssuesManager;\n  #aggregator: IssueAggregator;\n  #issueViewUpdatePromise: Promise<void> = Promise.resolve();\n\n  private constructor() {\n    super(true);\n\n    this.contentElement.classList.add('issues-pane');\n\n    this.#categoryViews = new Map();\n    this.#kindViews = new Map();\n    this.#issueViews = new Map();\n    this.#showThirdPartyCheckbox = null;\n\n    this.#createToolbars();\n\n    this.#issuesTree = new UI.TreeOutline.TreeOutlineInShadow();\n\n    this.#issuesTree.setShowSelectionOnKeyboardFocus(true);\n    this.#issuesTree.contentElement.classList.add('issues');\n    this.contentElement.appendChild(this.#issuesTree.element);\n\n    this.#hiddenIssuesRow = new HiddenIssuesRow();\n    this.#issuesTree.appendChild(this.#hiddenIssuesRow);\n\n    this.#noIssuesMessageDiv = document.createElement('div');\n    this.#noIssuesMessageDiv.classList.add('issues-pane-no-issues');\n    this.contentElement.appendChild(this.#noIssuesMessageDiv);\n\n    this.#issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    this.#aggregator = new IssueAggregator(this.#issuesManager);\n    this.#aggregator.addEventListener(IssueAggregatorEvents.AggregatedIssueUpdated, this.#issueUpdated, this);\n    this.#aggregator.addEventListener(IssueAggregatorEvents.FullUpdateRequired, this.#onFullUpdate, this);\n    this.#hiddenIssuesRow.hidden = this.#issuesManager.numberOfHiddenIssues() === 0;\n    this.#onFullUpdate();\n    this.#issuesManager.addEventListener(\n        IssuesManager.IssuesManager.Events.IssuesCountUpdated, this.#updateCounts, this);\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): IssuesPane {\n    const {forceNew} = opts;\n    if (!issuesPaneInstance || forceNew) {\n      issuesPaneInstance = new IssuesPane();\n    }\n\n    return issuesPaneInstance;\n  }\n\n  elementsToRestoreScrollPositionsFor(): Element[] {\n    return [this.#issuesTree.element];\n  }\n\n  #createToolbars(): {toolbarContainer: Element} {\n    const toolbarContainer = this.contentElement.createChild('div', 'issues-toolbar-container');\n    new UI.Toolbar.Toolbar('issues-toolbar-left', toolbarContainer);\n    const rightToolbar = new UI.Toolbar.Toolbar('issues-toolbar-right', toolbarContainer);\n\n    const groupByCategorySetting = getGroupIssuesByCategorySetting();\n    const groupByCategoryCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        groupByCategorySetting, i18nString(UIStrings.groupDisplayedIssuesUnder), i18nString(UIStrings.groupByCategory));\n    // Hide the option to toggle category grouping for now.\n    groupByCategoryCheckbox.setVisible(false);\n    rightToolbar.appendToolbarItem(groupByCategoryCheckbox);\n    groupByCategorySetting.addChangeListener(() => {\n      this.#fullUpdate(true);\n    });\n\n    const groupByKindSetting = getGroupIssuesByKindSetting();\n    const groupByKindSettingCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        groupByKindSetting, i18nString(UIStrings.groupDisplayedIssuesUnderKind), i18nString(UIStrings.groupByKind));\n    rightToolbar.appendToolbarItem(groupByKindSettingCheckbox);\n    groupByKindSetting.addChangeListener(() => {\n      this.#fullUpdate(true);\n    });\n    groupByKindSettingCheckbox.setVisible(Root.Runtime.experiments.isEnabled('groupAndHideIssuesByKind'));\n\n    const thirdPartySetting = IssuesManager.Issue.getShowThirdPartyIssuesSetting();\n    this.#showThirdPartyCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        thirdPartySetting, i18nString(UIStrings.includeCookieIssuesCausedBy),\n        i18nString(UIStrings.includeThirdpartyCookieIssues));\n    rightToolbar.appendToolbarItem(this.#showThirdPartyCheckbox);\n    this.setDefaultFocusedElement(this.#showThirdPartyCheckbox.inputElement);\n\n    rightToolbar.appendSeparator();\n    const issueCounter = new IssueCounter.IssueCounter.IssueCounter();\n    issueCounter.data = {\n      tooltipCallback: (): void => {\n        const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(\n            IssuesManager.IssuesManager.IssuesManager.instance(), false);\n        issueCounter.title = issueEnumeration;\n      },\n      displayMode: IssueCounter.IssueCounter.DisplayMode.ShowAlways,\n      issuesManager: IssuesManager.IssuesManager.IssuesManager.instance(),\n    };\n    issueCounter.id = 'console-issues-counter';\n    const issuesToolbarItem = new UI.Toolbar.ToolbarItem(issueCounter);\n    rightToolbar.appendToolbarItem(issuesToolbarItem);\n\n    return {toolbarContainer};\n  }\n\n  #issueUpdated(event: Common.EventTarget.EventTargetEvent<AggregatedIssue>): void {\n    this.#scheduleIssueViewUpdate(event.data);\n  }\n\n  #scheduleIssueViewUpdate(issue: AggregatedIssue): void {\n    this.#issueViewUpdatePromise = this.#issueViewUpdatePromise.then(() => this.#updateIssueView(issue));\n  }\n\n  /** Don't call directly. Use `scheduleIssueViewUpdate` instead. */\n  async #updateIssueView(issue: AggregatedIssue): Promise<void> {\n    let issueView = this.#issueViews.get(issue.aggregationKey());\n    if (!issueView) {\n      const description = issue.getDescription();\n      if (!description) {\n        console.warn('Could not find description for issue code:', issue.code());\n        return;\n      }\n      const markdownDescription =\n          await IssuesManager.MarkdownIssueDescription.createIssueDescriptionFromMarkdown(description);\n      issueView = new IssueView(issue, markdownDescription);\n      this.#issueViews.set(issue.aggregationKey(), issueView);\n      const parent = this.#getIssueViewParent(issue);\n      this.appendIssueViewToParent(issueView, parent);\n    } else {\n      issueView.setIssue(issue);\n      const newParent = this.#getIssueViewParent(issue);\n      if (issueView.parent !== newParent &&\n          !(newParent instanceof UI.TreeOutline.TreeOutline && issueView.parent === newParent.rootElement())) {\n        issueView.parent?.removeChild(issueView);\n        this.appendIssueViewToParent(issueView, newParent);\n      }\n    }\n    issueView.update();\n    this.#updateCounts();\n  }\n\n  appendIssueViewToParent(issueView: IssueView, parent: UI.TreeOutline.TreeOutline|UI.TreeOutline.TreeElement): void {\n    parent.appendChild(issueView, (a, b) => {\n      if (a instanceof HiddenIssuesRow) {\n        return 1;\n      }\n      if (b instanceof HiddenIssuesRow) {\n        return -1;\n      }\n      if (a instanceof IssueView && b instanceof IssueView) {\n        return a.getIssueTitle().localeCompare(b.getIssueTitle());\n      }\n      console.error('The issues tree should only contain IssueView objects as direct children');\n      return 0;\n    });\n  }\n\n  #getIssueViewParent(issue: AggregatedIssue): UI.TreeOutline.TreeOutline|UI.TreeOutline.TreeElement {\n    const groupByKind = Root.Runtime.experiments.isEnabled('groupAndHideIssuesByKind');\n    if (issue.isHidden()) {\n      return this.#hiddenIssuesRow;\n    }\n    if (groupByKind && getGroupIssuesByKindSetting().get()) {\n      const kind = issue.getKind();\n      const view = this.#kindViews.get(kind);\n      if (view) {\n        return view;\n      }\n\n      const newView = new IssueKindView(kind);\n      this.#issuesTree.appendChild(newView, (a, b) => {\n        if (a instanceof IssueKindView && b instanceof IssueKindView) {\n          return issueKindViewSortPriority(a, b);\n        }\n        return 0;\n      });\n      this.#kindViews.set(kind, newView);\n      return newView;\n    }\n    if (getGroupIssuesByCategorySetting().get()) {\n      const category = issue.getCategory();\n      const view = this.#categoryViews.get(category);\n      if (view) {\n        return view;\n      }\n\n      const newView = new IssueCategoryView(category);\n      this.#issuesTree.appendChild(newView, (a, b) => {\n        if (a instanceof IssueCategoryView && b instanceof IssueCategoryView) {\n          return a.getCategoryName().localeCompare(b.getCategoryName());\n        }\n        return 0;\n      });\n      this.#categoryViews.set(category, newView);\n      return newView;\n    }\n    return this.#issuesTree;\n  }\n\n  #clearViews<T>(views: Map<T, UI.TreeOutline.TreeElement>, preservedSet?: Set<T>): void {\n    for (const [key, view] of Array.from(views.entries())) {\n      if (preservedSet?.has(key)) {\n        continue;\n      }\n      view.parent && view.parent.removeChild(view);\n      views.delete(key);\n    }\n  }\n\n  #onFullUpdate(): void {\n    this.#fullUpdate(false);\n  }\n\n  #fullUpdate(force: boolean): void {\n    this.#clearViews(this.#categoryViews, force ? undefined : this.#aggregator.aggregatedIssueCategories());\n    this.#clearViews(this.#kindViews, force ? undefined : this.#aggregator.aggregatedIssueKinds());\n    this.#clearViews(this.#issueViews, force ? undefined : this.#aggregator.aggregatedIssueCodes());\n    if (this.#aggregator) {\n      for (const issue of this.#aggregator.aggregatedIssues()) {\n        this.#scheduleIssueViewUpdate(issue);\n      }\n    }\n    this.#updateCounts();\n  }\n\n  #updateIssueKindViewsCount(): void {\n    for (const view of this.#kindViews.values()) {\n      const count = this.#issuesManager.numberOfIssues(view.getKind());\n      view.update(count);\n    }\n  }\n\n  #updateCounts(): void {\n    const groupByKind = Root.Runtime.experiments.isEnabled('groupAndHideIssuesByKind');\n    this.#showIssuesTreeOrNoIssuesDetectedMessage(\n        this.#issuesManager.numberOfIssues(), this.#issuesManager.numberOfHiddenIssues());\n    if (groupByKind && getGroupIssuesByKindSetting().get()) {\n      this.#updateIssueKindViewsCount();\n    }\n  }\n\n  #showIssuesTreeOrNoIssuesDetectedMessage(issuesCount: number, hiddenIssueCount: number): void {\n    if (issuesCount > 0 || hiddenIssueCount > 0) {\n      this.#hiddenIssuesRow.hidden = hiddenIssueCount === 0;\n      this.#hiddenIssuesRow.update(hiddenIssueCount);\n      this.#issuesTree.element.hidden = false;\n      this.#noIssuesMessageDiv.style.display = 'none';\n      const firstChild = this.#issuesTree.firstChild();\n      if (firstChild) {\n        firstChild.select(/* omitFocus= */ true);\n        this.setDefaultFocusedElement(firstChild.listItemElement);\n      }\n    } else {\n      this.#issuesTree.element.hidden = true;\n      if (this.#showThirdPartyCheckbox) {\n        this.setDefaultFocusedElement(this.#showThirdPartyCheckbox.inputElement);\n      }\n      // We alreay know that issesCount is zero here.\n      const hasOnlyThirdPartyIssues = this.#issuesManager.numberOfAllStoredIssues() > 0;\n      this.#noIssuesMessageDiv.textContent = hasOnlyThirdPartyIssues ?\n          i18nString(UIStrings.onlyThirdpartyCookieIssues) :\n          i18nString(UIStrings.noIssuesDetectedSoFar);\n      this.#noIssuesMessageDiv.style.display = 'flex';\n    }\n  }\n\n  async reveal(issue: IssuesManager.Issue.Issue): Promise<void> {\n    await this.#issueViewUpdatePromise;\n    const key = this.#aggregator.keyForIssue(issue);\n    const issueView = this.#issueViews.get(key);\n    const groupByKind = Root.Runtime.experiments.isEnabled('groupAndHideIssuesByKind');\n    if (issueView) {\n      if (issueView.isForHiddenIssue()) {\n        this.#hiddenIssuesRow.expand();\n        this.#hiddenIssuesRow.reveal();\n      }\n      if (groupByKind && getGroupIssuesByKindSetting().get() && !issueView.isForHiddenIssue()) {\n        const kindView = this.#kindViews.get(issueView.getIssueKind());\n        kindView?.expand();\n        kindView?.reveal();\n      }\n      issueView.expand();\n      issueView.reveal();\n      issueView.select(false, true);\n    }\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.#issuesTree.registerCSSFiles([issuesTreeStyles]);\n    this.registerCSSFiles([issuesPaneStyles]);\n  }\n}\n"]}