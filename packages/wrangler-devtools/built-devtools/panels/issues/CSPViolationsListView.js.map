{"version":3,"file":"CSPViolationsListView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/CSPViolationsListView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as DataGrid from '../../ui/components/data_grid/data_grid.js';\nimport * as Linkifier from '../../ui/components/linkifier/linkifier.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\n\nimport cspViolationsListViewStyles from './cspViolationsListView.css.js';\n\nexport class CSPViolationsListView extends UI.Widget.VBox {\n  #table = new DataGrid.DataGridController.DataGridController();\n  #categoryFilter = new Set<string>();\n  #issueRows =\n      new Map<IssuesManager.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue, DataGrid.DataGridUtils.Row>();\n\n  constructor() {\n    super(true);\n\n    this.#table.data = {\n      columns: [\n        {id: 'sourceCode', title: 'Source Code', sortable: false, widthWeighting: 1, visible: true, hideable: false},\n        {\n          id: 'violatedDirective',\n          title: 'Violated Directive',\n          sortable: false,\n          widthWeighting: 1,\n          visible: true,\n          hideable: false,\n        },\n        {id: 'category', title: 'Category', sortable: false, widthWeighting: 1, visible: true, hideable: false},\n        {id: 'status', title: 'Status', sortable: false, widthWeighting: 1, visible: true, hideable: false},\n      ],\n      rows: [],\n    };\n    this.contentElement.appendChild(this.#table);\n  }\n\n  updateTextFilter(filter: string): void {\n    if (filter.length === 0) {\n      this.#table.data = {...this.#table.data, filters: []};\n    } else {\n      this.#table.data = {\n        ...this.#table.data,\n        filters: [{text: filter, key: undefined, regex: undefined, negative: false}],\n      };\n    }\n  }\n\n  updateCategoryFilter(categories: Set<string>): void {\n    this.#categoryFilter = categories;\n    const rows = [];\n    for (const [issue, row] of this.#issueRows.entries()) {\n      if (this.#isIssueInFilterCategories(issue)) {\n        rows.push(row);\n      }\n    }\n    this.#table.data = {...this.#table.data, rows: rows};\n  }\n\n  #isIssueInFilterCategories(issue: IssuesManager.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue): boolean {\n    return (this.#categoryFilter.has(issue.code()) || this.#categoryFilter.size === 0);\n  }\n\n  addIssue(issue: IssuesManager.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue): void {\n    const location = IssuesManager.Issue.toZeroBasedLocation(issue.details().sourceCodeLocation);\n    if (!location) {\n      return;\n    }\n    const status = issue.details().isReportOnly ? 'report-only' : 'blocked';\n    const category = this.#issueViolationCodeToCategoryName(issue.code());\n    const newIssue = {\n      cells: [\n        {\n          columnId: 'sourceCode',\n          value: location.url,\n          renderer(): LitHtml.TemplateResult {\n            return LitHtml.html`<${Linkifier.Linkifier.Linkifier.litTagName} .data=${\n                location as Linkifier.Linkifier.LinkifierData}></${Linkifier.Linkifier.Linkifier.litTagName}>`;\n          },\n        },\n        {columnId: 'violatedDirective', value: issue.details().violatedDirective},\n        {columnId: 'category', value: category},\n        {columnId: 'status', value: status},\n      ],\n    };\n    this.#issueRows.set(issue, newIssue);\n\n    if (this.#isIssueInFilterCategories(issue)) {\n      this.#table.data.rows.push(newIssue);\n      this.#table.data = {...this.#table.data};\n    }\n  }\n\n  clearIssues(): void {\n    this.#issueRows.clear();\n    this.#table.data = {...this.#table.data, rows: []};\n  }\n\n  #issueViolationCodeToCategoryName(code: string): string {\n    if (code === IssuesManager.ContentSecurityPolicyIssue.inlineViolationCode) {\n      return 'Inline Violation';\n    }\n    if (code === IssuesManager.ContentSecurityPolicyIssue.urlViolationCode) {\n      return 'URL Violation';\n    }\n    if (code === IssuesManager.ContentSecurityPolicyIssue.evalViolationCode) {\n      return 'Eval Violation';\n    }\n    if (code === IssuesManager.ContentSecurityPolicyIssue.trustedTypesSinkViolationCode) {\n      return 'Sink Violation';\n    }\n    if (code === IssuesManager.ContentSecurityPolicyIssue.trustedTypesPolicyViolationCode) {\n      return 'Policy Violation';\n    }\n    return 'unknown';\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([cspViolationsListViewStyles]);\n  }\n}\n"]}