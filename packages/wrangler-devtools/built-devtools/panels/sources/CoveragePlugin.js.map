{"version":3,"file":"CoveragePlugin.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/CoveragePlugin.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Formatter from '../../models/formatter/formatter.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as TextEditor from '../../ui/components/text_editor/text_editor.js';\nimport * as Coverage from '../coverage/coverage.js';\n\nimport {Plugin} from './Plugin.js';\n\n// Plugin that shows a gutter with coverage information when available.\n\nconst UIStrings = {\n  /**\n  *@description Text for Coverage Status Bar Item in Sources Panel\n  */\n  clickToShowCoveragePanel: 'Click to show Coverage Panel',\n  /**\n  *@description Text for Coverage Status Bar Item in Sources Panel\n  */\n  showDetails: 'Show Details',\n  /**\n  *@description Text to show in the status bar if coverage data is available\n  *@example {12.3} PH1\n  */\n  coverageS: 'Coverage: {PH1}',\n  /**\n  *@description Text to be shown in the status bar if no coverage data is available\n  */\n  coverageNa: 'Coverage: n/a',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/CoveragePlugin.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class CoveragePlugin extends Plugin {\n  private originalSourceCode: Workspace.UISourceCode.UISourceCode;\n  private infoInToolbar: UI.Toolbar.ToolbarButton;\n  private model: Coverage.CoverageModel.CoverageModel|null|undefined;\n  private coverage: Coverage.CoverageModel.URLCoverageInfo|null|undefined;\n\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super(uiSourceCode);\n    this.originalSourceCode =\n        Formatter.SourceFormatter.SourceFormatter.instance().getOriginalUISourceCode(this.uiSourceCode);\n    this.infoInToolbar = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clickToShowCoveragePanel));\n    this.infoInToolbar.setSecondary();\n    this.infoInToolbar.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      void UI.ViewManager.ViewManager.instance().showView('coverage');\n    });\n\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (mainTarget) {\n      this.model = mainTarget.model(Coverage.CoverageModel.CoverageModel);\n      if (this.model) {\n        this.model.addEventListener(Coverage.CoverageModel.Events.CoverageReset, this.handleReset, this);\n\n        this.coverage = this.model.getCoverageForUrl(this.originalSourceCode.url());\n        if (this.coverage) {\n          this.coverage.addEventListener(\n              Coverage.CoverageModel.URLCoverageInfo.Events.SizesChanged, this.handleCoverageSizesChanged, this);\n        }\n      }\n    }\n\n    this.updateStats();\n  }\n\n  dispose(): void {\n    if (this.coverage) {\n      this.coverage.removeEventListener(\n          Coverage.CoverageModel.URLCoverageInfo.Events.SizesChanged, this.handleCoverageSizesChanged, this);\n    }\n    if (this.model) {\n      this.model.removeEventListener(Coverage.CoverageModel.Events.CoverageReset, this.handleReset, this);\n    }\n  }\n\n  static accepts(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return uiSourceCode.contentType().isDocumentOrScriptOrStyleSheet();\n  }\n\n  private handleReset(): void {\n    this.coverage = null;\n    this.updateStats();\n  }\n\n  private handleCoverageSizesChanged(): void {\n    this.updateStats();\n  }\n\n  private updateStats(): void {\n    if (this.coverage) {\n      this.infoInToolbar.setTitle(i18nString(UIStrings.showDetails));\n      const formatter = new Intl.NumberFormat(i18n.DevToolsLocale.DevToolsLocale.instance().locale, {\n        style: 'percent',\n        maximumFractionDigits: 1,\n      });\n      this.infoInToolbar.setText(\n          i18nString(UIStrings.coverageS, {PH1: formatter.format(this.coverage.usedPercentage())}));\n    } else {\n      this.infoInToolbar.setTitle(i18nString(UIStrings.clickToShowCoveragePanel));\n      this.infoInToolbar.setText(i18nString(UIStrings.coverageNa));\n    }\n  }\n\n  async rightToolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    return [this.infoInToolbar];\n  }\n\n  editorExtension(): CodeMirror.Extension {\n    return coverageCompartment.of([]);\n  }\n\n  private getCoverageManager(): Coverage.CoverageDecorationManager.CoverageDecorationManager|undefined {\n    return this.uiSourceCode.getDecorationData(SourceFrame.SourceFrame.DecoratorType.COVERAGE);\n  }\n\n  editorInitialized(editor: TextEditor.TextEditor.TextEditor): void {\n    if (this.getCoverageManager()) {\n      this.startDecoUpdate(editor);\n    }\n  }\n\n  decorationChanged(type: SourceFrame.SourceFrame.DecoratorType, editor: TextEditor.TextEditor.TextEditor): void {\n    if (type === SourceFrame.SourceFrame.DecoratorType.COVERAGE) {\n      this.startDecoUpdate(editor);\n    }\n  }\n\n  private startDecoUpdate(editor: TextEditor.TextEditor.TextEditor): void {\n    const manager = this.getCoverageManager();\n    void (manager ? manager.usageByLine(this.uiSourceCode) : Promise.resolve([])).then(usageByLine => {\n      const enabled = Boolean(editor.state.field(coverageState, false));\n      if (!usageByLine.length) {\n        if (enabled) {\n          editor.dispatch({effects: coverageCompartment.reconfigure([])});\n        }\n      } else if (!enabled) {\n        editor.dispatch({\n          effects: coverageCompartment.reconfigure([\n            coverageState.init(state => markersFromCoverageData(usageByLine, state)),\n            coverageGutter(this.uiSourceCode.url()),\n            theme,\n          ]),\n        });\n      } else {\n        editor.dispatch({effects: setCoverageState.of(usageByLine)});\n      }\n    });\n  }\n}\n\nconst coveredMarker = new (class extends CodeMirror.GutterMarker {\n  elementClass = 'cm-coverageUsed';\n})();\n\nconst notCoveredMarker = new (class extends CodeMirror.GutterMarker {\n  elementClass = 'cm-coverageUnused';\n})();\n\nfunction markersFromCoverageData(\n    usageByLine: (boolean|undefined)[], state: CodeMirror.EditorState): CodeMirror.RangeSet<CodeMirror.GutterMarker> {\n  const builder = new CodeMirror.RangeSetBuilder<CodeMirror.GutterMarker>();\n  for (let line = 0; line < usageByLine.length; line++) {\n    const usage = usageByLine[line];\n    if (usage !== undefined && line < state.doc.lines) {\n      const lineStart = state.doc.line(line + 1).from;\n      builder.add(lineStart, lineStart, usage ? coveredMarker : notCoveredMarker);\n    }\n  }\n  return builder.finish();\n}\n\nconst setCoverageState = CodeMirror.StateEffect.define<(boolean | undefined)[]>();\n\nconst coverageState = CodeMirror.StateField.define<CodeMirror.RangeSet<CodeMirror.GutterMarker>>({\n  create(): CodeMirror.RangeSet<CodeMirror.GutterMarker> {\n    return CodeMirror.RangeSet.empty;\n  },\n  update(markers, tr) {\n    return tr.effects.reduce((markers, effect) => {\n      return effect.is(setCoverageState) ? markersFromCoverageData(effect.value, tr.state) : markers;\n    }, markers.map(tr.changes));\n  },\n});\n\nfunction coverageGutter(url: Platform.DevToolsPath.UrlString): CodeMirror.Extension {\n  return CodeMirror.gutter({\n    markers: (view): CodeMirror.RangeSet<CodeMirror.GutterMarker> => view.state.field(coverageState),\n\n    domEventHandlers: {\n      click() {\n        void UI.ViewManager.ViewManager.instance()\n            .showView('coverage')\n            .then(() => {\n              const view = UI.ViewManager.ViewManager.instance().view('coverage');\n              return view && view.widget();\n            })\n            .then(widget => {\n              const matchFormattedSuffix = url.match(/(.*):formatted$/);\n              const urlWithoutFormattedSuffix = (matchFormattedSuffix && matchFormattedSuffix[1]) || url;\n              (widget as Coverage.CoverageView.CoverageView).selectCoverageItemByUrl(urlWithoutFormattedSuffix);\n            });\n        return true;\n      },\n    },\n\n    class: 'cm-coverageGutter',\n  });\n}\n\nconst coverageCompartment = new CodeMirror.Compartment();\n\nconst theme = CodeMirror.EditorView.baseTheme({\n  '.cm-coverageGutter': {\n    width: '5px',\n    marginLeft: '3px',\n  },\n  '.cm-coverageUnused': {\n    backgroundColor: 'var(--color-accent-red)',\n  },\n  '.cm-coverageUsed': {\n    backgroundColor: 'var(--color-coverage-used)',\n  },\n});\n"]}