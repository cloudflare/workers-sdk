{"version":3,"file":"SnippetsPlugin.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/SnippetsPlugin.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AAEpD,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AAEnC,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,KAAK,EAAE,SAAS;IAChB;;MAEE;IACF,SAAS,EAAE,YAAY;CACxB,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;AACxF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,OAAO,cAAe,SAAQ,MAAM;IACxC,MAAM,CAAC,OAAO,CAAC,YAAiD;QAC9D,OAAO,QAAQ,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;IAC/E,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,MAAM,UAAU,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,CAAC;QACtF,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QAE1G,OAAO,CAAC,UAAU,CAAC,CAAC;IACtB,CAAC;CACF","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Snippets from '../snippets/snippets.js';\n\nimport {Plugin} from './Plugin.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Snippets Plugin of the Sources panel\n  */\n  enter: 'âŒ˜+Enter',\n  /**\n  *@description Text in Snippets Plugin of the Sources panel\n  */\n  ctrlenter: 'Ctrl+Enter',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/SnippetsPlugin.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SnippetsPlugin extends Plugin {\n  static accepts(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode(uiSourceCode);\n  }\n\n  async rightToolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    const runSnippet = UI.Toolbar.Toolbar.createActionButtonForId('debugger.run-snippet');\n    runSnippet.setText(Host.Platform.isMac() ? i18nString(UIStrings.enter) : i18nString(UIStrings.ctrlenter));\n\n    return [runSnippet];\n  }\n}\n"]}