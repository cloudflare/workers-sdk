{"version":3,"file":"OpenFileQuickOpen.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/OpenFileQuickOpen.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,UAAU,MAAM,gDAAgD,CAAC;AAE7E,OAAO,EAAC,wBAAwB,EAAC,MAAM,6BAA6B,CAAC;AACrE,OAAO,EAAC,gCAAgC,EAAC,MAAM,uCAAuC,CAAC;AACvF,OAAO,EAAC,WAAW,EAAC,MAAM,kBAAkB,CAAC;AAE7C,IAAI,yBAA4C,CAAC;AAEjD,MAAM,OAAO,iBAAkB,SAAQ,gCAAgC;IACrE,MAAM,CAAC,QAAQ,CAAC,OAEZ,EAAC,QAAQ,EAAE,IAAI,EAAC;QAClB,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,yBAAyB,IAAI,QAAQ,EAAE;YAC1C,yBAAyB,GAAG,IAAI,iBAAiB,EAAE,CAAC;SACrD;QAED,OAAO,yBAAyB,CAAC;IACnC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,yBAAyB,EAAE,CAAC,CAAC;QAC/D,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,oBAAoB,CAChB,YAAsD,EAAE,UAAmB,EAAE,YAAqB;QACpG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;QAE/E,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QACD,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAClC,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC;SAChF;aAAM;YACL,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,aAAa,CAAC,OAAoC;QAChD,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;IACrC,CAAC;IAED,UAAU,CAAC,SAAiB,EAAE,KAAa,EAAE,YAAqB,EAAE,eAAwB;QAC1F,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QAElE,MAAM,WAAW,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC/C,MAAM,QAAQ,GAAG,wBAAwB,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;QAC7E,WAAW,CAAC,IAAI,GAAG;YACjB,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,mBAAmB;YAC1B,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;SACf,CAAC;QACF,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpC,YAAY,CAAC,aAAa,EAAE,aAAa,EAAE,YAAY,CAAC,WAAW,EAAE,YAAY,CAAC,aAAa,CAAC,CAAC;IACnG,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["// Copyright 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\n\nimport {imageNameForResourceType} from '../../panels/utils/utils.js';\nimport {FilteredUISourceCodeListProvider} from './FilteredUISourceCodeListProvider.js';\nimport {SourcesView} from './SourcesView.js';\n\nlet openFileQuickOpenInstance: OpenFileQuickOpen;\n\nexport class OpenFileQuickOpen extends FilteredUISourceCodeListProvider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): OpenFileQuickOpen {\n    const {forceNew} = opts;\n    if (!openFileQuickOpenInstance || forceNew) {\n      openFileQuickOpenInstance = new OpenFileQuickOpen();\n    }\n\n    return openFileQuickOpenInstance;\n  }\n\n  attach(): void {\n    this.setDefaultScores(SourcesView.defaultUISourceCodeScores());\n    super.attach();\n  }\n\n  uiSourceCodeSelected(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode|null, lineNumber?: number, columnNumber?: number): void {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelectFileFromFilePicker);\n\n    if (!uiSourceCode) {\n      return;\n    }\n    if (typeof lineNumber === 'number') {\n      void Common.Revealer.reveal(uiSourceCode.uiLocation(lineNumber, columnNumber));\n    } else {\n      void Common.Revealer.reveal(uiSourceCode);\n    }\n  }\n\n  filterProject(project: Workspace.Workspace.Project): boolean {\n    return !project.isServiceProject();\n  }\n\n  renderItem(itemIndex: number, query: string, titleElement: Element, subtitleElement: Element): void {\n    super.renderItem(itemIndex, query, titleElement, subtitleElement);\n\n    const iconElement = new IconButton.Icon.Icon();\n    const iconName = imageNameForResourceType(this.itemContentTypeAt(itemIndex));\n    iconElement.data = {\n      iconName: iconName,\n      color: 'var(--icon-color)',\n      width: '18px',\n      height: '18px',\n    };\n    iconElement.classList.add(iconName);\n    titleElement.parentElement?.parentElement?.insertBefore(iconElement, titleElement.parentElement);\n  }\n\n  renderAsTwoRows(): boolean {\n    return true;\n  }\n}\n"]}