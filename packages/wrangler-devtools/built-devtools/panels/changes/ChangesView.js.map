{"version":3,"file":"ChangesView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/changes/ChangesView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport type * as Formatter from '../../models/formatter/formatter.js';\nimport {formatCSSChangesFromDiff} from '../../panels/utils/utils.js';\nimport * as Diff from '../../third_party/diff/diff.js';\nimport * as DiffView from '../../ui/components/diff_view/diff_view.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport changesViewStyles from './changesView.css.js';\n\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\n\nimport {ChangesSidebar, Events} from './ChangesSidebar.js';\n\nconst UIStrings = {\n  /**\n  *@description Screen reader/tooltip label for a button in the Changes tool that reverts all changes to the currently open file.\n  */\n  revertAllChangesToCurrentFile: 'Revert all changes to current file',\n  /**\n  *@description Screen reader/tooltip label for a button in the Changes tool that copies all changes from the currently open file.\n  */\n  copyAllChangesFromCurrentFile: 'Copy all changes from current file',\n  /**\n  *@description Text in Changes View of the Changes tab\n  */\n  noChanges: 'No changes',\n  /**\n  *@description Text in Changes View of the Changes tab\n  */\n  binaryData: 'Binary data',\n  /**\n  * @description Text in the Changes tab that indicates how many lines of code have changed in the\n  * selected file. An insertion refers to an added line of code. The (+) is a visual cue to indicate\n  * lines were added (not translatable).\n  */\n  sInsertions: '{n, plural, =1 {# insertion (+)} other {# insertions (+)}}',\n  /**\n  * @description Text in the Changes tab that indicates how many lines of code have changed in the\n  * selected file. A deletion refers to a removed line of code. The (-) is a visual cue to indicate\n  * lines were removed (not translatable).\n  */\n  sDeletions: '{n, plural, =1 {# deletion (-)} other {# deletions (-)}}',\n  /**\n  *@description Text for a button in the Changes tool that copies all the changes from the currently open file.\n  */\n  copy: 'Copy',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/ChangesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction diffStats(diff: Diff.Diff.DiffArray): string {\n  const insertions =\n      diff.reduce((ins, token) => ins + (token[0] === Diff.Diff.Operation.Insert ? token[1].length : 0), 0);\n  const deletions =\n      diff.reduce((ins, token) => ins + (token[0] === Diff.Diff.Operation.Delete ? token[1].length : 0), 0);\n  const deletionText = i18nString(UIStrings.sDeletions, {n: deletions});\n  const insertionText = i18nString(UIStrings.sInsertions, {n: insertions});\n  return `${insertionText}, ${deletionText}`;\n}\n\nlet changesViewInstance: ChangesView;\n\nexport class ChangesView extends UI.Widget.VBox {\n  private emptyWidget: UI.EmptyWidget.EmptyWidget;\n  private readonly workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl;\n  readonly changesSidebar: ChangesSidebar;\n  private selectedUISourceCode: Workspace.UISourceCode.UISourceCode|null;\n  #selectedSourceCodeFormattedMapping?: Formatter.ScriptFormatter.FormatterSourceMapping;\n  private readonly diffContainer: HTMLElement;\n  private readonly toolbar: UI.Toolbar.Toolbar;\n  private readonly diffStats: UI.Toolbar.ToolbarText;\n  private readonly diffView: DiffView.DiffView.DiffView;\n  private readonly copyButton: UI.Toolbar.ToolbarButton;\n  private readonly copyButtonSeparator: UI.Toolbar.ToolbarSeparator;\n\n  private constructor() {\n    super(true);\n\n    const splitWidget = new UI.SplitWidget.SplitWidget(true /* vertical */, false /* sidebar on left */);\n    const mainWidget = new UI.Widget.Widget();\n    splitWidget.setMainWidget(mainWidget);\n    splitWidget.show(this.contentElement);\n\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget('');\n    this.emptyWidget.show(mainWidget.element);\n\n    this.workspaceDiff = WorkspaceDiff.WorkspaceDiff.workspaceDiff();\n    this.changesSidebar = new ChangesSidebar(this.workspaceDiff);\n    this.changesSidebar.addEventListener(Events.SelectedUISourceCodeChanged, this.selectedUISourceCodeChanged, this);\n    splitWidget.setSidebarWidget(this.changesSidebar);\n\n    this.selectedUISourceCode = null;\n\n    this.diffContainer = mainWidget.element.createChild('div', 'diff-container');\n    UI.ARIAUtils.markAsTabpanel(this.diffContainer);\n    this.diffContainer.addEventListener('click', event => this.click(event));\n\n    this.diffView = this.diffContainer.appendChild(new DiffView.DiffView.DiffView());\n\n    this.toolbar = new UI.Toolbar.Toolbar('changes-toolbar', mainWidget.element);\n    const revertButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.revertAllChangesToCurrentFile), 'largeicon-undo');\n    revertButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.revert.bind(this));\n    this.toolbar.appendToolbarItem(revertButton);\n    this.diffStats = new UI.Toolbar.ToolbarText('');\n    this.toolbar.appendToolbarItem(this.diffStats);\n\n    this.copyButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.copyAllChangesFromCurrentFile), 'largeicon-copy', UIStrings.copy);\n    this.copyButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.copyChanges.bind(this));\n    this.copyButtonSeparator = new UI.Toolbar.ToolbarSeparator();\n    this.toolbar.setEnabled(false);\n\n    this.hideDiff(i18nString(UIStrings.noChanges));\n    this.selectedUISourceCodeChanged();\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ChangesView {\n    const {forceNew} = opts;\n    if (!changesViewInstance || forceNew) {\n      changesViewInstance = new ChangesView();\n    }\n\n    return changesViewInstance;\n  }\n\n  private selectedUISourceCodeChanged(): void {\n    this.revealUISourceCode(this.changesSidebar.selectedUISourceCode());\n    if (this.selectedUISourceCode?.contentType() === Common.ResourceType.resourceTypes.Stylesheet) {\n      this.toolbar.appendToolbarItem(this.copyButtonSeparator);\n      this.toolbar.appendToolbarItem(this.copyButton);\n    } else {\n      this.toolbar.removeToolbarItem(this.copyButtonSeparator);\n      this.toolbar.removeToolbarItem(this.copyButton);\n    }\n  }\n\n  private revert(): void {\n    const uiSourceCode = this.selectedUISourceCode;\n    if (!uiSourceCode) {\n      return;\n    }\n    void this.workspaceDiff.revertToOriginal(uiSourceCode);\n  }\n\n  private async copyChanges(): Promise<void> {\n    const uiSourceCode = this.selectedUISourceCode;\n    if (!uiSourceCode) {\n      return;\n    }\n    const diffResponse = await this.workspaceDiff.requestDiff(uiSourceCode, {shouldFormatDiff: true});\n    // Diff array with real diff will contain at least 2 lines.\n    if (!diffResponse || diffResponse?.diff.length < 2) {\n      return;\n    }\n    const changes = await formatCSSChangesFromDiff(diffResponse.diff);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(changes);\n  }\n\n  private click(event: MouseEvent): void {\n    if (!this.selectedUISourceCode) {\n      return;\n    }\n\n    for (const target of event.composedPath()) {\n      if (!(target instanceof HTMLElement)) {\n        continue;\n      }\n      const selection = target.ownerDocument.getSelection();\n      if (selection?.toString()) {\n        // We abort source revelation when user has text selection.\n        break;\n      }\n      if (target.classList.contains('diff-line-content') && target.hasAttribute('data-line-number')) {\n        let lineNumber = Number(target.dataset.lineNumber) - 1;\n        // Unfortunately, caretRangeFromPoint is broken in shadow\n        // roots, which makes determining the character offset more\n        // work than justified here.\n        if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.PRECISE_CHANGES) &&\n            this.#selectedSourceCodeFormattedMapping) {\n          lineNumber = this.#selectedSourceCodeFormattedMapping.formattedToOriginal(lineNumber, 0)[0];\n        }\n        void Common.Revealer.reveal(this.selectedUISourceCode.uiLocation(lineNumber, 0), false);\n        event.consume(true);\n        break;\n      } else if (target.classList.contains('diff-listing')) {\n        break;\n      }\n    }\n  }\n\n  private revealUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode|null): void {\n    if (this.selectedUISourceCode === uiSourceCode) {\n      return;\n    }\n\n    if (this.selectedUISourceCode) {\n      this.workspaceDiff.unsubscribeFromDiffChange(this.selectedUISourceCode, this.refreshDiff, this);\n    }\n    if (uiSourceCode && this.isShowing()) {\n      this.workspaceDiff.subscribeToDiffChange(uiSourceCode, this.refreshDiff, this);\n    }\n\n    this.selectedUISourceCode = uiSourceCode;\n    void this.refreshDiff();\n  }\n\n  wasShown(): void {\n    void this.refreshDiff();\n    this.registerCSSFiles([changesViewStyles]);\n  }\n\n  private async refreshDiff(): Promise<void> {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    if (!this.selectedUISourceCode) {\n      this.renderDiffRows();\n      return;\n    }\n    const uiSourceCode = this.selectedUISourceCode;\n    if (!uiSourceCode.contentType().isTextType()) {\n      this.hideDiff(i18nString(UIStrings.binaryData));\n      return;\n    }\n    const diffResponse = await this.workspaceDiff.requestDiff(\n        uiSourceCode,\n        {shouldFormatDiff: Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.PRECISE_CHANGES)});\n    if (this.selectedUISourceCode !== uiSourceCode) {\n      return;\n    }\n    this.#selectedSourceCodeFormattedMapping = diffResponse?.formattedCurrentMapping;\n    this.renderDiffRows(diffResponse?.diff);\n  }\n\n  private hideDiff(message: string): void {\n    this.diffStats.setText('');\n    this.toolbar.setEnabled(false);\n    this.diffContainer.style.display = 'none';\n    this.emptyWidget.text = message;\n    this.emptyWidget.showWidget();\n  }\n\n  private renderDiffRows(diff?: Diff.Diff.DiffArray): void {\n    if (!diff || (diff.length === 1 && diff[0][0] === Diff.Diff.Operation.Equal)) {\n      this.hideDiff(i18nString(UIStrings.noChanges));\n    } else {\n      this.diffStats.setText(diffStats(diff));\n      this.toolbar.setEnabled(true);\n      this.emptyWidget.hideWidget();\n      const mimeType = (this.selectedUISourceCode as Workspace.UISourceCode.UISourceCode).mimeType();\n      this.diffContainer.style.display = 'block';\n      this.diffView.data = {diff, mimeType};\n    }\n  }\n}\n\nlet diffUILocationRevealerInstance: DiffUILocationRevealer;\nexport class DiffUILocationRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {forceNew: boolean} = {forceNew: false}): DiffUILocationRevealer {\n    const {forceNew} = opts;\n    if (!diffUILocationRevealerInstance || forceNew) {\n      diffUILocationRevealerInstance = new DiffUILocationRevealer();\n    }\n\n    return diffUILocationRevealerInstance;\n  }\n\n  async reveal(diffUILocation: Object, omitFocus?: boolean|undefined): Promise<void> {\n    if (!(diffUILocation instanceof WorkspaceDiff.WorkspaceDiff.DiffUILocation)) {\n      throw new Error('Internal error: not a diff ui location');\n    }\n    await UI.ViewManager.ViewManager.instance().showView('changes.changes');\n    ChangesView.instance().changesSidebar.selectUISourceCode(diffUILocation.uiSourceCode, omitFocus);\n  }\n}\n"]}