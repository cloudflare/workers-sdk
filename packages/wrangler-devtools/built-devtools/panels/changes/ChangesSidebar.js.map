{"version":3,"file":"ChangesSidebar.js","sourceRoot":"","sources":["../../../../../../front_end/panels/changes/ChangesSidebar.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Snippets from '../snippets/snippets.js';\n\nimport changesSidebarStyles from './changesSidebar.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Name of an item from source map\n  *@example {compile.html} PH1\n  */\n  sFromSourceMap: '{PH1} (from source map)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/ChangesSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ChangesSidebar extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.Widget>(\n    UI.Widget.Widget) {\n  private treeoutline: UI.TreeOutline.TreeOutlineInShadow;\n  private readonly treeElements: Map<Workspace.UISourceCode.UISourceCode, UISourceCodeTreeElement>;\n  private readonly workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl;\n  constructor(workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl) {\n    super();\n    this.treeoutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this.treeoutline.setFocusable(false);\n\n    this.treeoutline.setComparator((a, b) => Platform.StringUtilities.compare(a.titleAsText(), b.titleAsText()));\n    this.treeoutline.addEventListener(UI.TreeOutline.Events.ElementSelected, this.selectionChanged, this);\n    UI.ARIAUtils.markAsTablist(this.treeoutline.contentElement);\n\n    this.element.appendChild(this.treeoutline.element);\n\n    this.treeElements = new Map();\n    this.workspaceDiff = workspaceDiff;\n    this.workspaceDiff.modifiedUISourceCodes().forEach(this.addUISourceCode.bind(this));\n    this.workspaceDiff.addEventListener(\n        WorkspaceDiff.WorkspaceDiff.Events.ModifiedStatusChanged, this.uiSourceCodeMofiedStatusChanged, this);\n  }\n\n  selectUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode, omitFocus?: boolean|undefined): void {\n    const treeElement = this.treeElements.get(uiSourceCode);\n    if (!treeElement) {\n      return;\n    }\n    treeElement.select(omitFocus);\n  }\n\n  selectedUISourceCode(): Workspace.UISourceCode.UISourceCode|null {\n    // @ts-ignore uiSourceCode seems to be dynamically attached.\n    return this.treeoutline.selectedTreeElement ? this.treeoutline.selectedTreeElement.uiSourceCode : null;\n  }\n\n  private selectionChanged(): void {\n    this.dispatchEventToListeners(Events.SelectedUISourceCodeChanged);\n  }\n\n  private uiSourceCodeMofiedStatusChanged(\n      event: Common.EventTarget.EventTargetEvent<WorkspaceDiff.WorkspaceDiff.ModifiedStatusChangedEvent>): void {\n    if (event.data.isModified) {\n      this.addUISourceCode(event.data.uiSourceCode);\n    } else {\n      this.removeUISourceCode(event.data.uiSourceCode);\n    }\n  }\n\n  private removeUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const treeElement = this.treeElements.get(uiSourceCode);\n    this.treeElements.delete(uiSourceCode);\n    if (this.treeoutline.selectedTreeElement === treeElement) {\n      const nextElementToSelect = treeElement.previousSibling || treeElement.nextSibling;\n      if (nextElementToSelect) {\n        nextElementToSelect.select(true);\n      } else {\n        treeElement.deselect();\n        this.selectionChanged();\n      }\n    }\n    if (treeElement) {\n      this.treeoutline.removeChild(treeElement);\n      treeElement.dispose();\n    }\n    if (this.treeoutline.rootElement().childCount() === 0) {\n      this.treeoutline.setFocusable(false);\n    }\n  }\n\n  private addUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const treeElement = new UISourceCodeTreeElement(uiSourceCode);\n    this.treeElements.set(uiSourceCode, treeElement);\n    this.treeoutline.setFocusable(true);\n    this.treeoutline.appendChild(treeElement);\n    if (!this.treeoutline.selectedTreeElement) {\n      treeElement.select(true);\n    }\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.treeoutline.registerCSSFiles([changesSidebarStyles]);\n  }\n}\n\nexport const enum Events {\n  SelectedUISourceCodeChanged = 'SelectedUISourceCodeChanged',\n}\n\nexport type EventTypes = {\n  [Events.SelectedUISourceCodeChanged]: void,\n};\n\nexport class UISourceCodeTreeElement extends UI.TreeOutline.TreeElement {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  private readonly eventListeners: Common.EventTarget.EventDescriptor[];\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super();\n    this.uiSourceCode = uiSourceCode;\n    this.listItemElement.classList.add('navigator-' + uiSourceCode.contentType().name() + '-tree-item');\n    UI.ARIAUtils.markAsTab(this.listItemElement);\n\n    let iconType: 'largeicon-navigator-snippet'|'largeicon-navigator-file' = 'largeicon-navigator-file';\n    if (Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode(this.uiSourceCode)) {\n      iconType = 'largeicon-navigator-snippet';\n    }\n    const defaultIcon = UI.Icon.Icon.create(iconType, 'icon');\n    this.setLeadingIcons([defaultIcon]);\n\n    this.eventListeners = [\n      uiSourceCode.addEventListener(Workspace.UISourceCode.Events.TitleChanged, this.updateTitle, this),\n      uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.updateTitle, this),\n      uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.updateTitle, this),\n    ];\n\n    this.updateTitle();\n  }\n\n  private updateTitle(): void {\n    let titleText: string = this.uiSourceCode.displayName();\n    if (this.uiSourceCode.isDirty()) {\n      titleText = '*' + titleText;\n    }\n    this.title = titleText;\n\n    let tooltip: Common.UIString.LocalizedString|string = this.uiSourceCode.url();\n    if (this.uiSourceCode.contentType().isFromSourceMap()) {\n      tooltip = i18nString(UIStrings.sFromSourceMap, {PH1: this.uiSourceCode.displayName()});\n    }\n    this.tooltip = tooltip;\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n  }\n}\n"]}