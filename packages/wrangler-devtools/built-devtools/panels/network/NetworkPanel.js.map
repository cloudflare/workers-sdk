{"version":3,"file":"NetworkPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\nimport * as Search from '../search/search.js';\n\nimport {BlockedURLsPane} from './BlockedURLsPane.js';\nimport type {RequestActivatedEvent} from './NetworkDataGridNode.js';\nimport {Events} from './NetworkDataGridNode.js';\nimport {NetworkItemView} from './NetworkItemView.js';\nimport {NetworkLogView} from './NetworkLogView.js';\nimport {NetworkOverview} from './NetworkOverview.js';\nimport networkPanelStyles from './networkPanel.css.js';\nimport {NetworkSearchScope} from './NetworkSearchScope.js';\n\nimport type {NetworkTimeCalculator} from './NetworkTimeCalculator.js';\nimport {NetworkTransferTimeCalculator} from './NetworkTimeCalculator.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to close something\n  */\n  close: 'Close',\n  /**\n  *@description Title of a search bar or tool\n  */\n  search: 'Search',\n  /**\n  *@description Text to clear content\n  */\n  clear: 'Clear',\n  /**\n  *@description Tooltip text that appears on the setting to preserve log when hovering over the item\n  */\n  doNotClearLogOnPageReload: 'Do not clear log on page reload / navigation',\n  /**\n  *@description Text to preserve the log after refreshing\n  */\n  preserveLog: 'Preserve log',\n  /**\n  *@description Text to disable cache while DevTools is open\n  */\n  disableCacheWhileDevtoolsIsOpen: 'Disable cache (while DevTools is open)',\n  /**\n  *@description Text in Network Config View of the Network panel\n  */\n  disableCache: 'Disable cache',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in network panel of the network panel\n  */\n  networkSettings: 'Network settings',\n  /**\n  *@description Tooltip for expanding network request row setting\n  */\n  showMoreInformationInRequestRows: 'Show more information in request rows',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  useLargeRequestRows: 'Use large request rows',\n  /**\n  *@description Tooltip text for network request overview setting\n  */\n  showOverviewOfNetworkRequests: 'Show overview of network requests',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  showOverview: 'Show overview',\n  /**\n  *@description Tooltip for group by frame network setting\n  */\n  groupRequestsByTopLevelRequest: 'Group requests by top level request frame',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  groupByFrame: 'Group by frame',\n  /**\n  *@description Tooltip for capture screenshot network setting\n  */\n  captureScreenshotsWhenLoadingA: 'Capture screenshots when loading a page',\n  /**\n  *@description Text to take screenshots\n  */\n  captureScreenshots: 'Capture screenshots',\n  /**\n  * @description Tooltip text that appears when hovering over the largeicon load button in the\n  * Network Panel. This action prompts the user to select a HAR file to upload to DevTools.\n  */\n  importHarFile: 'Import `HAR` file...',\n  /**\n  * @description Tooltip text that appears when hovering over the largeicon download button in the\n  * Network Panel. HAR is a file format (HTTP Archive) and should not be translated. This action\n  * triggers the download of a HAR file.\n  */\n  exportHar: 'Export `HAR`...',\n  /**\n  *@description Text for throttling the network\n  */\n  throttling: 'Throttling',\n  /**\n  *@description Text in Network Panel of the Network panel\n  *@example {Ctrl + R} PH1\n  */\n  hitSToReloadAndCaptureFilmstrip: 'Hit {PH1} to reload and capture filmstrip.',\n  /**\n  *@description A context menu item in the Network Panel of the Network panel\n  */\n  revealInNetworkPanel: 'Reveal in Network panel',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  recordingFrames: 'Recording frames...',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  fetchingFrames: 'Fetching frames...',\n  /**\n   * @description Text of a button in the Network panel's toolbar that open Network Conditions panel in the drawer.\n   */\n  moreNetworkConditions: 'More network conditions…',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet networkPanelInstance: NetworkPanel;\n\nexport class NetworkPanel extends UI.Panel.Panel implements UI.ContextMenu.Provider, UI.View.ViewLocationResolver {\n  private readonly networkLogShowOverviewSetting: Common.Settings.Setting<boolean>;\n  private readonly networkLogLargeRowsSetting: Common.Settings.Setting<boolean>;\n  private readonly networkRecordFilmStripSetting: Common.Settings.Setting<boolean>;\n  private readonly toggleRecordAction: UI.ActionRegistration.Action;\n  private pendingStopTimer!: number|undefined;\n  networkItemView: NetworkItemView|null;\n  private filmStripView: PerfUI.FilmStripView.FilmStripView|null;\n  private filmStripRecorder: FilmStripRecorder|null;\n  private currentRequest: SDK.NetworkRequest.NetworkRequest|null;\n  private readonly panelToolbar: UI.Toolbar.Toolbar;\n  private readonly rightToolbar: UI.Toolbar.Toolbar;\n  private readonly filterBar: UI.FilterBar.FilterBar;\n  private readonly settingsPane: UI.Widget.HBox;\n  private showSettingsPaneSetting: Common.Settings.Setting<boolean>;\n  private readonly filmStripPlaceholderElement: HTMLElement;\n  private readonly overviewPane: PerfUI.TimelineOverviewPane.TimelineOverviewPane;\n  private readonly networkOverview: NetworkOverview;\n  private readonly overviewPlaceholderElement: HTMLElement;\n  private readonly calculator: NetworkTransferTimeCalculator;\n  private splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly sidebarLocation: UI.View.TabbedViewLocation;\n  private readonly progressBarContainer: HTMLDivElement;\n  networkLogView: NetworkLogView;\n  private readonly fileSelectorElement: HTMLElement;\n  private readonly detailsWidget: UI.Widget.VBox;\n  private readonly closeButtonElement: HTMLDivElement;\n  private preserveLogSetting: Common.Settings.Setting<boolean>;\n  recordLogSetting: Common.Settings.Setting<boolean>;\n  private readonly throttlingSelect: UI.Toolbar.ToolbarComboBox;\n\n  constructor() {\n    super('network');\n\n    this.networkLogShowOverviewSetting =\n        Common.Settings.Settings.instance().createSetting('networkLogShowOverview', true);\n    this.networkLogLargeRowsSetting = Common.Settings.Settings.instance().createSetting('networkLogLargeRows', false);\n    this.networkRecordFilmStripSetting =\n        Common.Settings.Settings.instance().createSetting('networkRecordFilmStripSetting', false);\n    this.toggleRecordAction =\n        (UI.ActionRegistry.ActionRegistry.instance().action('network.toggle-recording') as\n         UI.ActionRegistration.Action);\n    this.networkItemView = null;\n    this.filmStripView = null;\n    this.filmStripRecorder = null;\n    this.currentRequest = null;\n\n    const panel = new UI.Widget.VBox();\n\n    const networkToolbarContainer = panel.contentElement.createChild('div', 'network-toolbar-container');\n    this.panelToolbar = new UI.Toolbar.Toolbar('', networkToolbarContainer);\n    this.panelToolbar.makeWrappable(true);\n    this.rightToolbar = new UI.Toolbar.Toolbar('', networkToolbarContainer);\n\n    this.filterBar = new UI.FilterBar.FilterBar('networkPanel', true);\n    this.filterBar.show(panel.contentElement);\n    this.filterBar.addEventListener(UI.FilterBar.FilterBarEvents.Changed, this.handleFilterChanged.bind(this));\n\n    this.settingsPane = new UI.Widget.HBox();\n    this.settingsPane.element.classList.add('network-settings-pane');\n    this.settingsPane.show(panel.contentElement);\n    this.showSettingsPaneSetting =\n        Common.Settings.Settings.instance().createSetting('networkShowSettingsToolbar', false);\n    this.showSettingsPaneSetting.addChangeListener(this.updateSettingsPaneVisibility.bind(this));\n    this.updateSettingsPaneVisibility();\n\n    this.filmStripPlaceholderElement = panel.contentElement.createChild('div', 'network-film-strip-placeholder');\n\n    // Create top overview component.\n    this.overviewPane = new PerfUI.TimelineOverviewPane.TimelineOverviewPane('network');\n    this.overviewPane.addEventListener(\n        PerfUI.TimelineOverviewPane.Events.WindowChanged, this.onWindowChanged.bind(this));\n    this.overviewPane.element.id = 'network-overview-panel';\n    this.networkOverview = new NetworkOverview();\n    this.overviewPane.setOverviewControls([this.networkOverview]);\n    this.overviewPlaceholderElement = panel.contentElement.createChild('div');\n\n    this.calculator = new NetworkTransferTimeCalculator();\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(true, false, 'networkPanelSplitViewState');\n    this.splitWidget.hideMain();\n    this.splitWidget.show(panel.contentElement);\n\n    panel.setDefaultFocusedChild(this.filterBar);\n\n    const initialSidebarWidth = 225;\n    const splitWidget = new UI.SplitWidget.SplitWidget(true, false, 'networkPanelSidebarState', initialSidebarWidth);\n    splitWidget.hideSidebar();\n    splitWidget.enableShowModeSaving();\n    splitWidget.show(this.element);\n    this.sidebarLocation = UI.ViewManager.ViewManager.instance().createTabbedLocation(async () => {\n      void UI.ViewManager.ViewManager.instance().showView('network');\n      splitWidget.showBoth();\n    }, 'network-sidebar', true);\n    const tabbedPane = this.sidebarLocation.tabbedPane();\n    tabbedPane.setMinimumSize(100, 25);\n    tabbedPane.element.classList.add('network-tabbed-pane');\n    tabbedPane.element.addEventListener('keydown', event => {\n      if (event.key !== Platform.KeyboardUtilities.ESCAPE_KEY) {\n        return;\n      }\n      splitWidget.hideSidebar();\n      event.consume();\n    });\n    const closeSidebar = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.close), 'largeicon-delete');\n    closeSidebar.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => splitWidget.hideSidebar());\n    tabbedPane.rightToolbar().appendToolbarItem(closeSidebar);\n    splitWidget.setSidebarWidget(tabbedPane);\n    splitWidget.setMainWidget(panel);\n    splitWidget.setDefaultFocusedChild(panel);\n    this.setDefaultFocusedChild(splitWidget);\n\n    this.progressBarContainer = document.createElement('div');\n\n    this.networkLogView =\n        new NetworkLogView(this.filterBar, this.progressBarContainer, this.networkLogLargeRowsSetting);\n    this.splitWidget.setSidebarWidget(this.networkLogView);\n    this.fileSelectorElement =\n        (UI.UIUtils.createFileSelectorElement(this.networkLogView.onLoadFromFile.bind(this.networkLogView)) as\n         HTMLElement);\n    panel.element.appendChild(this.fileSelectorElement);\n\n    this.detailsWidget = new UI.Widget.VBox();\n    this.detailsWidget.element.classList.add('network-details-view');\n    this.splitWidget.setMainWidget(this.detailsWidget);\n\n    this.closeButtonElement = document.createElement('div', {is: 'dt-close-button'});\n    this.closeButtonElement.addEventListener('click', async () => {\n      const action = UI.ActionRegistry.ActionRegistry.instance().action('network.hide-request-details');\n      if (action) {\n        await action.execute();\n      }\n    }, false);\n    this.closeButtonElement.style.margin = '0 5px';\n\n    this.networkLogShowOverviewSetting.addChangeListener(this.toggleShowOverview, this);\n    this.networkLogLargeRowsSetting.addChangeListener(this.toggleLargerRequests, this);\n    this.networkRecordFilmStripSetting.addChangeListener(this.toggleRecordFilmStrip, this);\n\n    this.preserveLogSetting = Common.Settings.Settings.instance().moduleSetting('network_log.preserve-log');\n    this.recordLogSetting = Common.Settings.Settings.instance().moduleSetting('network_log.record-log');\n    this.recordLogSetting.addChangeListener(({data}) => this.toggleRecord(data));\n\n    this.throttlingSelect = this.createThrottlingConditionsSelect();\n    this.setupToolbarButtons(splitWidget);\n\n    this.toggleRecord(this.recordLogSetting.get());\n    this.toggleShowOverview();\n    this.toggleLargerRequests();\n    this.toggleRecordFilmStrip();\n    this.updateUI();\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.WillReloadPage, this.willReloadPage,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.load, this);\n    this.networkLogView.addEventListener(Events.RequestSelected, this.onRequestSelected, this);\n    this.networkLogView.addEventListener(Events.RequestActivated, this.onRequestActivated, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestAdded, this.onUpdateRequest, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestUpdated, this.onUpdateRequest, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(Logs.NetworkLog.Events.Reset, this.onNetworkLogReset, this);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): NetworkPanel {\n    const {forceNew} = opts;\n    if (!networkPanelInstance || forceNew) {\n      networkPanelInstance = new NetworkPanel();\n    }\n\n    return networkPanelInstance;\n  }\n\n  static revealAndFilter(filters: {\n    filterType: NetworkForward.UIFilter.FilterType|null,\n    filterValue: string,\n  }[]): Promise<void> {\n    const panel = NetworkPanel.instance();\n    let filterString = '';\n    for (const filter of filters) {\n      if (filter.filterType) {\n        filterString += `${filter.filterType}:${filter.filterValue} `;\n      } else {\n        filterString += `${filter.filterValue} `;\n      }\n    }\n    panel.networkLogView.setTextFilterValue(filterString);\n    return UI.ViewManager.ViewManager.instance().showView('network');\n  }\n\n  static async selectAndShowRequest(\n      request: SDK.NetworkRequest.NetworkRequest, tab: NetworkForward.UIRequestLocation.UIRequestTabs,\n      options?: NetworkForward.UIRequestLocation.FilterOptions): Promise<void> {\n    const panel = NetworkPanel.instance();\n    await panel.selectAndActivateRequest(request, tab, options);\n  }\n\n  throttlingSelectForTest(): UI.Toolbar.ToolbarComboBox {\n    return this.throttlingSelect;\n  }\n\n  private onWindowChanged(event: Common.EventTarget.EventTargetEvent<PerfUI.TimelineOverviewPane.WindowChangedEvent>):\n      void {\n    const startTime = Math.max(this.calculator.minimumBoundary(), event.data.startTime / 1000);\n    const endTime = Math.min(this.calculator.maximumBoundary(), event.data.endTime / 1000);\n    this.networkLogView.setWindow(startTime, endTime);\n  }\n\n  private async searchToggleClick(): Promise<void> {\n    const action = UI.ActionRegistry.ActionRegistry.instance().action('network.search');\n    if (action) {\n      await action.execute();\n    }\n  }\n\n  private setupToolbarButtons(splitWidget: UI.SplitWidget.SplitWidget): void {\n    const searchToggle = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.search), 'largeicon-search');\n    function updateSidebarToggle(): void {\n      const isSidebarShowing = splitWidget.showMode() !== UI.SplitWidget.ShowMode.OnlyMain;\n      searchToggle.setToggled(isSidebarShowing);\n      if (!isSidebarShowing) {\n        (searchToggle.element as HTMLElement).focus();\n      }\n    }\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction));\n    const clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clear), 'largeicon-clear');\n    clearButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.Click, () => Logs.NetworkLog.NetworkLog.instance().reset(true), this);\n    this.panelToolbar.appendToolbarItem(clearButton);\n    this.panelToolbar.appendSeparator();\n\n    this.panelToolbar.appendToolbarItem(this.filterBar.filterButton());\n    updateSidebarToggle();\n    splitWidget.addEventListener(UI.SplitWidget.Events.ShowModeChanged, updateSidebarToggle);\n    searchToggle.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      void this.searchToggleClick();\n    });\n    this.panelToolbar.appendToolbarItem(searchToggle);\n    this.panelToolbar.appendSeparator();\n\n    this.panelToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this.preserveLogSetting, i18nString(UIStrings.doNotClearLogOnPageReload), i18nString(UIStrings.preserveLog)));\n\n    this.panelToolbar.appendSeparator();\n    const disableCacheCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        Common.Settings.Settings.instance().moduleSetting('cacheDisabled'),\n        i18nString(UIStrings.disableCacheWhileDevtoolsIsOpen), i18nString(UIStrings.disableCache));\n    this.panelToolbar.appendToolbarItem(disableCacheCheckbox);\n\n    this.panelToolbar.appendToolbarItem(this.throttlingSelect);\n\n    const networkConditionsIcon = new IconButton.Icon.Icon();\n    networkConditionsIcon.data = {\n      iconName: 'network_conditions_icon',\n      color: 'rgb(110 110 110)',\n      width: '18px',\n      height: '18px',\n    };\n    const networkConditionsButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.moreNetworkConditions), networkConditionsIcon);\n    networkConditionsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      void UI.ViewManager.ViewManager.instance().showView('network.config');\n    }, this);\n    this.panelToolbar.appendToolbarItem(networkConditionsButton);\n\n    this.rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.progressBarContainer));\n    this.rightToolbar.appendSeparator();\n    this.rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingToggle(\n        this.showSettingsPaneSetting, 'largeicon-settings-gear', i18nString(UIStrings.networkSettings)));\n\n    const settingsToolbarLeft = new UI.Toolbar.Toolbar('', this.settingsPane.element);\n    settingsToolbarLeft.makeVertical();\n    settingsToolbarLeft.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this.networkLogLargeRowsSetting, i18nString(UIStrings.showMoreInformationInRequestRows),\n        i18nString(UIStrings.useLargeRequestRows)));\n    settingsToolbarLeft.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this.networkLogShowOverviewSetting, i18nString(UIStrings.showOverviewOfNetworkRequests),\n        i18nString(UIStrings.showOverview)));\n\n    const settingsToolbarRight = new UI.Toolbar.Toolbar('', this.settingsPane.element);\n    settingsToolbarRight.makeVertical();\n    settingsToolbarRight.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        Common.Settings.Settings.instance().moduleSetting('network.group-by-frame'),\n        i18nString(UIStrings.groupRequestsByTopLevelRequest), i18nString(UIStrings.groupByFrame)));\n    settingsToolbarRight.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this.networkRecordFilmStripSetting, i18nString(UIStrings.captureScreenshotsWhenLoadingA),\n        i18nString(UIStrings.captureScreenshots)));\n\n    this.panelToolbar.appendSeparator();\n    const importHarButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.importHarFile), 'largeicon-load');\n    importHarButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.Click, () => this.fileSelectorElement.click(), this);\n    this.panelToolbar.appendToolbarItem(importHarButton);\n    const exportHarButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.exportHar), 'largeicon-download');\n    exportHarButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      void this.networkLogView.exportAll();\n    }, this);\n    this.panelToolbar.appendToolbarItem(exportHarButton);\n  }\n\n  private updateSettingsPaneVisibility(): void {\n    this.settingsPane.element.classList.toggle('hidden', !this.showSettingsPaneSetting.get());\n  }\n\n  private createThrottlingConditionsSelect(): UI.Toolbar.ToolbarComboBox {\n    const toolbarItem = new UI.Toolbar.ToolbarComboBox(null, i18nString(UIStrings.throttling));\n    toolbarItem.setMaxWidth(160);\n    MobileThrottling.ThrottlingManager.throttlingManager().decorateSelectWithNetworkThrottling(\n        toolbarItem.selectElement());\n    return toolbarItem;\n  }\n\n  toggleRecord(toggled: boolean): void {\n    this.toggleRecordAction.setToggled(toggled);\n    if (this.recordLogSetting.get() !== toggled) {\n      this.recordLogSetting.set(toggled);\n    }\n\n    this.networkLogView.setRecording(toggled);\n    if (!toggled && this.filmStripRecorder) {\n      this.filmStripRecorder.stopRecording(this.filmStripAvailable.bind(this));\n    }\n  }\n\n  private filmStripAvailable(filmStripModel: SDK.FilmStripModel.FilmStripModel|null): void {\n    if (!filmStripModel) {\n      return;\n    }\n    const calculator = this.networkLogView.timeCalculator();\n    if (this.filmStripView) {\n      this.filmStripView.setModel(\n          filmStripModel, calculator.minimumBoundary() * 1000, calculator.boundarySpan() * 1000);\n    }\n    this.networkOverview.setFilmStripModel(filmStripModel);\n    const timestamps = filmStripModel.frames().map(mapTimestamp);\n\n    function mapTimestamp(frame: SDK.FilmStripModel.Frame): number {\n      return frame.timestamp / 1000;\n    }\n\n    this.networkLogView.addFilmStripFrames(timestamps);\n  }\n\n  private onNetworkLogReset(event: Common.EventTarget.EventTargetEvent<Logs.NetworkLog.ResetEvent>): void {\n    const {clearIfPreserved} = event.data;\n    BlockedURLsPane.reset();\n    if (!this.preserveLogSetting.get() || clearIfPreserved) {\n      this.calculator.reset();\n      this.overviewPane.reset();\n    }\n    if (this.filmStripView) {\n      this.resetFilmStripView();\n    }\n  }\n\n  private willReloadPage(): void {\n    if (this.pendingStopTimer) {\n      clearTimeout(this.pendingStopTimer);\n      delete this.pendingStopTimer;\n    }\n    if (this.isShowing() && this.filmStripRecorder) {\n      this.filmStripRecorder.startRecording();\n    }\n  }\n\n  private load(): void {\n    if (this.filmStripRecorder && this.filmStripRecorder.isRecording()) {\n      this.pendingStopTimer = window.setTimeout(this.stopFilmStripRecording.bind(this), displayScreenshotDelay);\n    }\n  }\n\n  private stopFilmStripRecording(): void {\n    if (this.filmStripRecorder) {\n      this.filmStripRecorder.stopRecording(this.filmStripAvailable.bind(this));\n    }\n    delete this.pendingStopTimer;\n  }\n\n  private toggleLargerRequests(): void {\n    this.updateUI();\n  }\n\n  private toggleShowOverview(): void {\n    const toggled = this.networkLogShowOverviewSetting.get();\n    if (toggled) {\n      this.overviewPane.show(this.overviewPlaceholderElement);\n    } else {\n      this.overviewPane.detach();\n    }\n    this.doResize();\n  }\n\n  private toggleRecordFilmStrip(): void {\n    const toggled = this.networkRecordFilmStripSetting.get();\n    if (toggled && !this.filmStripRecorder) {\n      this.filmStripView = new PerfUI.FilmStripView.FilmStripView();\n      this.filmStripView.setMode(PerfUI.FilmStripView.Modes.FrameBased);\n      this.filmStripView.element.classList.add('network-film-strip');\n      this.filmStripRecorder = new FilmStripRecorder(this.networkLogView.timeCalculator(), this.filmStripView);\n      this.filmStripView.show(this.filmStripPlaceholderElement);\n      this.filmStripView.addEventListener(PerfUI.FilmStripView.Events.FrameSelected, this.onFilmFrameSelected, this);\n      this.filmStripView.addEventListener(PerfUI.FilmStripView.Events.FrameEnter, this.onFilmFrameEnter, this);\n      this.filmStripView.addEventListener(PerfUI.FilmStripView.Events.FrameExit, this.onFilmFrameExit, this);\n      this.resetFilmStripView();\n    }\n\n    if (!toggled && this.filmStripRecorder) {\n      if (this.filmStripView) {\n        this.filmStripView.detach();\n      }\n      this.filmStripView = null;\n      this.filmStripRecorder = null;\n    }\n  }\n\n  private resetFilmStripView(): void {\n    const reloadShortcut =\n        UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('inspector_main.reload')[0];\n\n    if (this.filmStripView) {\n      this.filmStripView.reset();\n      if (reloadShortcut) {\n        this.filmStripView.setStatusText(\n            i18nString(UIStrings.hitSToReloadAndCaptureFilmstrip, {PH1: reloadShortcut.title()}));\n      }\n    }\n  }\n\n  elementsToRestoreScrollPositionsFor(): Element[] {\n    return this.networkLogView.elementsToRestoreScrollPositionsFor();\n  }\n\n  wasShown(): void {\n    UI.Context.Context.instance().setFlavor(NetworkPanel, this);\n    this.registerCSSFiles([networkPanelStyles]);\n\n    // Record the network tool load time after the panel has loaded.\n    Host.userMetrics.panelLoaded('network', 'DevTools.Launch.Network');\n  }\n\n  willHide(): void {\n    UI.Context.Context.instance().setFlavor(NetworkPanel, null);\n  }\n\n  revealAndHighlightRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    this.hideRequestPanel();\n    if (request) {\n      this.networkLogView.revealAndHighlightRequest(request);\n    }\n  }\n\n  revealAndHighlightRequestWithId(request: NetworkForward.NetworkRequestId.NetworkRequestId): void {\n    this.hideRequestPanel();\n    if (request) {\n      this.networkLogView.revealAndHighlightRequestWithId(request);\n    }\n  }\n\n  async selectAndActivateRequest(\n      request: SDK.NetworkRequest.NetworkRequest, shownTab?: NetworkForward.UIRequestLocation.UIRequestTabs,\n      options?: NetworkForward.UIRequestLocation.FilterOptions): Promise<NetworkItemView|null> {\n    await UI.ViewManager.ViewManager.instance().showView('network');\n    this.networkLogView.selectRequest(request, options);\n    this.showRequestPanel(shownTab);\n    return this.networkItemView;\n  }\n\n  private handleFilterChanged(): void {\n    this.hideRequestPanel();\n  }\n\n  private onRowSizeChanged(): void {\n    this.updateUI();\n  }\n\n  private onRequestSelected(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest|null>): void {\n    const request = event.data;\n    this.currentRequest = request;\n    this.networkOverview.setHighlightedRequest(request);\n    this.updateNetworkItemView();\n  }\n\n  private onRequestActivated(event: Common.EventTarget.EventTargetEvent<RequestActivatedEvent>): void {\n    const {showPanel, tab, takeFocus} = event.data;\n    if (showPanel) {\n      this.showRequestPanel(tab, takeFocus);\n    } else {\n      this.hideRequestPanel();\n    }\n  }\n\n  private showRequestPanel(shownTab?: NetworkForward.UIRequestLocation.UIRequestTabs, takeFocus?: boolean): void {\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.Both && !shownTab && !takeFocus) {\n      // If panel is already shown, and we are not forcing a specific tab, return.\n      return;\n    }\n    this.clearNetworkItemView();\n    if (this.currentRequest) {\n      const networkItemView = this.createNetworkItemView(shownTab);\n      if (networkItemView && takeFocus) {\n        networkItemView.focus();\n      }\n    }\n    this.updateUI();\n  }\n\n  hideRequestPanel(): void {\n    this.clearNetworkItemView();\n    this.splitWidget.hideMain();\n    this.updateUI();\n  }\n\n  private updateNetworkItemView(): void {\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.Both) {\n      this.clearNetworkItemView();\n      this.createNetworkItemView();\n      this.updateUI();\n    }\n  }\n\n  private clearNetworkItemView(): void {\n    if (this.networkItemView) {\n      this.networkItemView.detach();\n      this.networkItemView = null;\n    }\n  }\n  private createNetworkItemView(initialTab?: NetworkForward.UIRequestLocation.UIRequestTabs): NetworkItemView\n      |undefined {\n    if (!this.currentRequest) {\n      return;\n    }\n    this.networkItemView = new NetworkItemView(this.currentRequest, this.networkLogView.timeCalculator(), initialTab);\n    this.networkItemView.leftToolbar().appendToolbarItem(new UI.Toolbar.ToolbarItem(this.closeButtonElement));\n    this.networkItemView.show(this.detailsWidget.element);\n    this.splitWidget.showBoth();\n    return this.networkItemView;\n  }\n\n  private updateUI(): void {\n    if (this.detailsWidget) {\n      this.detailsWidget.element.classList.toggle(\n          'network-details-view-tall-header', this.networkLogLargeRowsSetting.get());\n    }\n    if (this.networkLogView) {\n      this.networkLogView.switchViewMode(!this.splitWidget.isResizable());\n    }\n  }\n\n  appendApplicableItems(this: NetworkPanel, event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object):\n      void {\n    function reveal(this: NetworkPanel, request: SDK.NetworkRequest.NetworkRequest): void {\n      void UI.ViewManager.ViewManager.instance()\n          .showView('network')\n          .then(this.networkLogView.resetFilter.bind(this.networkLogView))\n          .then(this.revealAndHighlightRequest.bind(this, request));\n    }\n\n    function appendRevealItem(this: NetworkPanel, request: SDK.NetworkRequest.NetworkRequest): void {\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.revealInNetworkPanel), reveal.bind(this, request));\n    }\n    if ((event.target as Node).isSelfOrDescendant(this.element)) {\n      return;\n    }\n\n    if (target instanceof SDK.Resource.Resource) {\n      const resource = (target as SDK.Resource.Resource);\n      if (resource.request) {\n        appendRevealItem.call(this, resource.request);\n      }\n      return;\n    }\n    if (target instanceof Workspace.UISourceCode.UISourceCode) {\n      const uiSourceCode = (target as Workspace.UISourceCode.UISourceCode);\n      const resource = Bindings.ResourceUtils.resourceForURL(uiSourceCode.url());\n      if (resource && resource.request) {\n        appendRevealItem.call(this, resource.request);\n      }\n      return;\n    }\n\n    if (!(target instanceof SDK.NetworkRequest.NetworkRequest)) {\n      return;\n    }\n    const request = (target as SDK.NetworkRequest.NetworkRequest);\n    if (this.networkItemView && this.networkItemView.isShowing() && this.networkItemView.request() === request) {\n      return;\n    }\n\n    appendRevealItem.call(this, request);\n  }\n\n  private onFilmFrameSelected(event: Common.EventTarget.EventTargetEvent<number>): void {\n    const timestamp = event.data;\n    this.overviewPane.setWindowTimes(0, timestamp);\n  }\n\n  private onFilmFrameEnter(event: Common.EventTarget.EventTargetEvent<number>): void {\n    const timestamp = event.data;\n    this.networkOverview.selectFilmStripFrame(timestamp);\n    this.networkLogView.selectFilmStripFrame(timestamp / 1000);\n  }\n\n  private onFilmFrameExit(): void {\n    this.networkOverview.clearFilmStripFrame();\n    this.networkLogView.clearFilmStripFrame();\n  }\n\n  private onUpdateRequest(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>): void {\n    const request = event.data;\n    this.calculator.updateBoundaries(request);\n    // FIXME: Unify all time units across the frontend!\n    this.overviewPane.setBounds(this.calculator.minimumBoundary() * 1000, this.calculator.maximumBoundary() * 1000);\n    this.networkOverview.updateRequest(request);\n    this.overviewPane.scheduleUpdate();\n  }\n\n  resolveLocation(locationName: string): UI.View.ViewLocation|null {\n    if (locationName === 'network-sidebar') {\n      return this.sidebarLocation;\n    }\n    return null;\n  }\n}\n\nexport const displayScreenshotDelay = 1000;\n\nlet contextMenuProviderInstance: ContextMenuProvider;\n\nexport class ContextMenuProvider implements UI.ContextMenu.Provider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ContextMenuProvider {\n    const {forceNew} = opts;\n    if (!contextMenuProviderInstance || forceNew) {\n      contextMenuProviderInstance = new ContextMenuProvider();\n    }\n\n    return contextMenuProviderInstance;\n  }\n  appendApplicableItems(event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object): void {\n    NetworkPanel.instance().appendApplicableItems(event, contextMenu, target);\n  }\n}\nlet requestRevealerInstance: RequestRevealer;\nexport class RequestRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): RequestRevealer {\n    const {forceNew} = opts;\n    if (!requestRevealerInstance || forceNew) {\n      requestRevealerInstance = new RequestRevealer();\n    }\n\n    return requestRevealerInstance;\n  }\n\n  reveal(request: Object): Promise<void> {\n    if (!(request instanceof SDK.NetworkRequest.NetworkRequest)) {\n      return Promise.reject(new Error('Internal error: not a network request'));\n    }\n    const panel = NetworkPanel.instance();\n    return UI.ViewManager.ViewManager.instance().showView('network').then(\n        panel.revealAndHighlightRequest.bind(panel, request));\n  }\n}\n\nlet requestIdRevealerInstance: RequestIdRevealer;\nexport class RequestIdRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): RequestIdRevealer {\n    const {forceNew} = opts;\n    if (!requestIdRevealerInstance || forceNew) {\n      requestIdRevealerInstance = new RequestIdRevealer();\n    }\n\n    return requestIdRevealerInstance;\n  }\n\n  reveal(requestId: Object): Promise<void> {\n    if (!(requestId instanceof NetworkForward.NetworkRequestId.NetworkRequestId)) {\n      return Promise.reject(new Error('Internal error: not a network request ID'));\n    }\n    const panel = NetworkPanel.instance();\n    return UI.ViewManager.ViewManager.instance().showView('network').then(\n        panel.revealAndHighlightRequestWithId.bind(panel, requestId));\n  }\n}\n\nlet networkLogWithFilterRevealerInstance: NetworkLogWithFilterRevealer;\nexport class NetworkLogWithFilterRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): NetworkLogWithFilterRevealer {\n    const {forceNew} = opts;\n    if (!networkLogWithFilterRevealerInstance || forceNew) {\n      networkLogWithFilterRevealerInstance = new NetworkLogWithFilterRevealer();\n    }\n\n    return networkLogWithFilterRevealerInstance;\n  }\n\n  reveal(request: Object): Promise<void> {\n    if (!(request instanceof NetworkForward.UIFilter.UIRequestFilter)) {\n      return Promise.reject(new Error('Internal error: not a UIRequestFilter'));\n    }\n    return NetworkPanel.revealAndFilter(request.filters);\n  }\n}\n\nexport class FilmStripRecorder implements SDK.TracingManager.TracingManagerClient {\n  private tracingManager: SDK.TracingManager.TracingManager|null;\n  private resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel|null;\n  private readonly timeCalculator: NetworkTimeCalculator;\n  private readonly filmStripView: PerfUI.FilmStripView.FilmStripView;\n  private tracingModel: SDK.TracingModel.TracingModel|null;\n  private callback: ((arg0: SDK.FilmStripModel.FilmStripModel|null) => void)|null;\n\n  constructor(timeCalculator: NetworkTimeCalculator, filmStripView: PerfUI.FilmStripView.FilmStripView) {\n    this.tracingManager = null;\n    this.resourceTreeModel = null;\n    this.timeCalculator = timeCalculator;\n    this.filmStripView = filmStripView;\n    this.tracingModel = null;\n    this.callback = null;\n  }\n\n  traceEventsCollected(events: SDK.TracingManager.EventPayload[]): void {\n    if (this.tracingModel) {\n      this.tracingModel.addEvents(events);\n    }\n  }\n\n  tracingComplete(): void {\n    if (!this.tracingModel || !this.tracingManager) {\n      return;\n    }\n    this.tracingModel.tracingComplete();\n    this.tracingManager = null;\n    if (this.callback) {\n      this.callback(\n          new SDK.FilmStripModel.FilmStripModel(this.tracingModel, this.timeCalculator.minimumBoundary() * 1000));\n    }\n    this.callback = null;\n    if (this.resourceTreeModel) {\n      this.resourceTreeModel.resumeReload();\n    }\n    this.resourceTreeModel = null;\n  }\n\n  tracingBufferUsage(): void {\n  }\n\n  eventsRetrievalProgress(_progress: number): void {\n  }\n\n  startRecording(): void {\n    this.filmStripView.reset();\n    this.filmStripView.setStatusText(i18nString(UIStrings.recordingFrames));\n    const tracingManagers = SDK.TargetManager.TargetManager.instance().models(SDK.TracingManager.TracingManager);\n    if (this.tracingManager || !tracingManagers.length) {\n      return;\n    }\n\n    this.tracingManager = tracingManagers[0];\n    if (!this.tracingManager) {\n      return;\n    }\n    this.resourceTreeModel = this.tracingManager.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (this.tracingModel) {\n      this.tracingModel.dispose();\n    }\n    this.tracingModel = new SDK.TracingModel.TracingModel(new Bindings.TempFile.TempFileBackingStorage());\n    void this.tracingManager.start(this, '-*,disabled-by-default-devtools.screenshot', '');\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.FilmStripStartedRecording);\n  }\n\n  isRecording(): boolean {\n    return Boolean(this.tracingManager);\n  }\n\n  stopRecording(callback: (arg0: SDK.FilmStripModel.FilmStripModel|null) => void): void {\n    if (!this.tracingManager) {\n      return;\n    }\n\n    this.tracingManager.stop();\n    if (this.resourceTreeModel) {\n      this.resourceTreeModel.suspendReload();\n    }\n    this.callback = callback;\n    this.filmStripView.setStatusText(i18nString(UIStrings.fetchingFrames));\n  }\n}\n\nlet networkActionDelegateInstance: ActionDelegate;\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!networkActionDelegateInstance || forceNew) {\n      networkActionDelegateInstance = new ActionDelegate();\n    }\n    return networkActionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const panel = UI.Context.Context.instance().flavor(NetworkPanel);\n    console.assert(Boolean(panel && panel instanceof NetworkPanel));\n    if (!panel) {\n      return false;\n    }\n    switch (actionId) {\n      case 'network.toggle-recording': {\n        panel.toggleRecord(!panel.recordLogSetting.get());\n        return true;\n      }\n      case 'network.hide-request-details': {\n        if (!panel.networkItemView) {\n          return false;\n        }\n        panel.hideRequestPanel();\n        panel.networkLogView.resetFocus();\n        return true;\n      }\n      case 'network.search': {\n        const selection = UI.InspectorView.InspectorView.instance().element.window().getSelection();\n        if (selection) {\n          let queryCandidate = '';\n          if (selection.rangeCount) {\n            queryCandidate = selection.toString().replace(/\\r?\\n.*/, '');\n          }\n          void SearchNetworkView.openSearch(queryCandidate);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n\nlet requestLocationRevealerInstance: RequestLocationRevealer;\n\nexport class RequestLocationRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): RequestLocationRevealer {\n    const {forceNew} = opts;\n    if (!requestLocationRevealerInstance || forceNew) {\n      requestLocationRevealerInstance = new RequestLocationRevealer();\n    }\n    return requestLocationRevealerInstance;\n  }\n\n  async reveal(match: Object): Promise<void> {\n    const location = match as NetworkForward.UIRequestLocation.UIRequestLocation;\n    const view =\n        await NetworkPanel.instance().selectAndActivateRequest(location.request, location.tab, location.filterOptions);\n    if (!view) {\n      return;\n    }\n    if (location.searchMatch) {\n      await view.revealResponseBody(location.searchMatch.lineNumber);\n    }\n    if (location.header) {\n      view.revealHeader(location.header.section, location.header.header?.name);\n    }\n  }\n}\n\nlet searchNetworkViewInstance: SearchNetworkView;\n\nexport class SearchNetworkView extends Search.SearchView.SearchView {\n  private constructor() {\n    super('network');\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): SearchNetworkView {\n    const {forceNew} = opts;\n    if (!searchNetworkViewInstance || forceNew) {\n      searchNetworkViewInstance = new SearchNetworkView();\n    }\n\n    return searchNetworkViewInstance;\n  }\n\n  static async openSearch(query: string, searchImmediately?: boolean): Promise<Search.SearchView.SearchView> {\n    await UI.ViewManager.ViewManager.instance().showView('network.search-network-tab');\n    const searchView = SearchNetworkView.instance();\n    void searchView.toggle(query, Boolean(searchImmediately));\n    return searchView;\n  }\n\n  createScope(): Search.SearchConfig.SearchScope {\n    return new NetworkSearchScope();\n  }\n}\n"]}