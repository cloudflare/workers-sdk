{"version":3,"file":"NetworkLogViewColumns.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkLogViewColumns.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport type {NetworkNode} from './NetworkDataGridNode.js';\nimport {NetworkRequestNode} from './NetworkDataGridNode.js';\nimport type {NetworkLogView} from './NetworkLogView.js';\nimport {NetworkManageCustomHeadersView} from './NetworkManageCustomHeadersView.js';\nimport type {\n  NetworkTimeCalculator, NetworkTransferDurationCalculator, NetworkTransferTimeCalculator} from\n  './NetworkTimeCalculator.js';\nimport {NetworkWaterfallColumn} from './NetworkWaterfallColumn.js';\nimport {RequestInitiatorView} from './RequestInitiatorView.js';\n\nconst UIStrings = {\n  /**\n  *@description Data grid name for Network Log data grids\n  */\n  networkLog: 'Network Log',\n  /**\n  *@description Inner element text content in Network Log View Columns of the Network panel\n  */\n  waterfall: 'Waterfall',\n  /**\n  *@description A context menu item in the Network Log View Columns of the Network panel\n  */\n  responseHeaders: 'Response Headers',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  manageHeaderColumns: 'Manage Header Columns…',\n  /**\n  *@description Text for the start time of an activity\n  */\n  startTime: 'Start Time',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  responseTime: 'Response Time',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  endTime: 'End Time',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  totalDuration: 'Total Duration',\n  /**\n  *@description Text for the latency of a task\n  */\n  latency: 'Latency',\n  /**\n  *@description Text for the name of something\n  */\n  name: 'Name',\n  /**\n  *@description Text that refers to a file path\n  */\n  path: 'Path',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  url: 'Url',\n  /**\n  *@description Text for one or a group of functions\n  */\n  method: 'Method',\n  /**\n  *@description Text for the status of something\n  */\n  status: 'Status',\n  /**\n  *@description Generic label for any text\n  */\n  text: 'Text',\n  /**\n  *@description Text for security or network protocol\n  */\n  protocol: 'Protocol',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  scheme: 'Scheme',\n  /**\n  *@description Text for the domain of a website\n  */\n  domain: 'Domain',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  remoteAddress: 'Remote Address',\n  /**\n  *@description Text that refers to some types\n  */\n  type: 'Type',\n  /**\n  *@description Text for the initiator of something\n  */\n  initiator: 'Initiator',\n  /**\n  *@description Column header in the Network log view of the Network panel\n  */\n  initiatorAddressSpace: 'Initiator Address Space',\n  /**\n  *@description Text for web cookies\n  */\n  cookies: 'Cookies',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  setCookies: 'Set Cookies',\n  /**\n  *@description Text for the size of something\n  */\n  size: 'Size',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  content: 'Content',\n  /**\n  *@description Text that refers to the time\n  */\n  time: 'Time',\n  /**\n  *@description Text to show the priority of an item\n  */\n  priority: 'Priority',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  connectionId: 'Connection ID',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  remoteAddressSpace: 'Remote Address Space',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkLogViewColumns.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class NetworkLogViewColumns {\n  private networkLogView: NetworkLogView;\n  private readonly persistantSettings: Common.Settings.Setting<{\n    [x: string]: {\n      visible: boolean,\n      title: string,\n    },\n  }>;\n  private readonly networkLogLargeRowsSetting: Common.Settings.Setting<boolean>;\n  private readonly eventDividers: Map<string, number[]>;\n  private eventDividersShown: boolean;\n  private gridMode: boolean;\n  private columns: Descriptor[];\n  private waterfallRequestsAreStale: boolean;\n  private waterfallScrollerWidthIsStale: boolean;\n  private readonly popupLinkifier: Components.Linkifier.Linkifier;\n  private calculatorsMap: Map<string, NetworkTimeCalculator>;\n  private lastWheelTime: number;\n  private dataGridInternal!: DataGrid.SortableDataGrid.SortableDataGrid<NetworkNode>;\n  private splitWidget!: UI.SplitWidget.SplitWidget;\n  private waterfallColumn!: NetworkWaterfallColumn;\n  private activeScroller!: Element;\n  private dataGridScroller!: HTMLElement;\n  private waterfallScroller!: HTMLElement;\n  private waterfallScrollerContent!: HTMLDivElement;\n  private waterfallHeaderElement!: HTMLElement;\n  private waterfallColumnSortIcon!: UI.Icon.Icon;\n  private activeWaterfallSortId!: string;\n  private popoverHelper?: UI.PopoverHelper.PopoverHelper;\n  private hasScrollerTouchStarted?: boolean;\n  private scrollerTouchStartPos?: number;\n  constructor(\n      networkLogView: NetworkLogView, timeCalculator: NetworkTransferTimeCalculator,\n      durationCalculator: NetworkTransferDurationCalculator,\n      networkLogLargeRowsSetting: Common.Settings.Setting<boolean>) {\n    this.networkLogView = networkLogView;\n\n    this.persistantSettings = Common.Settings.Settings.instance().createSetting('networkLogColumns', {});\n\n    this.networkLogLargeRowsSetting = networkLogLargeRowsSetting;\n    this.networkLogLargeRowsSetting.addChangeListener(this.updateRowsSize, this);\n\n    this.eventDividers = new Map();\n    this.eventDividersShown = false;\n\n    this.gridMode = true;\n\n    this.columns = [];\n\n    this.waterfallRequestsAreStale = false;\n    this.waterfallScrollerWidthIsStale = true;\n\n    this.popupLinkifier = new Components.Linkifier.Linkifier();\n\n    this.calculatorsMap = new Map();\n    this.calculatorsMap.set(_calculatorTypes.Time, timeCalculator);\n    this.calculatorsMap.set(_calculatorTypes.Duration, durationCalculator);\n\n    this.lastWheelTime = 0;\n\n    this.setupDataGrid();\n    this.setupWaterfall();\n\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      this.scheduleRefresh();\n    });\n  }\n\n  private static convertToDataGridDescriptor(columnConfig: Descriptor): DataGrid.DataGrid.ColumnDescriptor {\n    const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n    return {\n      id: columnConfig.id,\n      title,\n      sortable: columnConfig.sortable,\n      align: columnConfig.align,\n      nonSelectable: columnConfig.nonSelectable,\n      weight: columnConfig.weight,\n      allowInSortByEvenWhenHidden: columnConfig.allowInSortByEvenWhenHidden,\n    } as DataGrid.DataGrid.ColumnDescriptor;\n  }\n\n  wasShown(): void {\n    this.updateRowsSize();\n  }\n\n  willHide(): void {\n    if (this.popoverHelper) {\n      this.popoverHelper.hidePopover();\n    }\n  }\n\n  reset(): void {\n    if (this.popoverHelper) {\n      this.popoverHelper.hidePopover();\n    }\n    this.eventDividers.clear();\n  }\n\n  private setupDataGrid(): void {\n    const defaultColumns = _defaultColumns;\n    const defaultColumnConfig = _defaultColumnConfig;\n    this.columns = ([] as Descriptor[]);\n    for (const currentConfigColumn of defaultColumns) {\n      const descriptor = Object.assign({}, defaultColumnConfig, currentConfigColumn);\n      const columnConfig = (descriptor as Descriptor);\n      columnConfig.id = columnConfig.id;\n      if (columnConfig.subtitle) {\n        const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n        const subtitle = columnConfig.subtitle instanceof Function ? columnConfig.subtitle() : columnConfig.subtitle;\n        columnConfig.titleDOMFragment = this.makeHeaderFragment(title, subtitle);\n      }\n      this.columns.push(columnConfig);\n    }\n    this.loadCustomColumnsAndSettings();\n\n    this.popoverHelper =\n        new UI.PopoverHelper.PopoverHelper(this.networkLogView.element, this.getPopoverRequest.bind(this));\n    this.popoverHelper.setHasPadding(true);\n    this.popoverHelper.setTimeout(300, 300);\n    this.dataGridInternal = new DataGrid.SortableDataGrid.SortableDataGrid<NetworkNode>(({\n      displayName: (i18nString(UIStrings.networkLog) as string),\n      columns: this.columns.map(NetworkLogViewColumns.convertToDataGridDescriptor),\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    }));\n    this.dataGridInternal.element.addEventListener('mousedown', event => {\n      if (!this.dataGridInternal.selectedNode && event.button) {\n        event.consume();\n      }\n    }, true);\n    this.dataGridScroller = (this.dataGridInternal.scrollContainer as HTMLDivElement);\n\n    this.updateColumns();\n    this.dataGridInternal.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this.sortHandler, this);\n    this.dataGridInternal.setHeaderContextMenuCallback(this.innerHeaderContextMenu.bind(this));\n\n    this.activeWaterfallSortId = WaterfallSortIds.StartTime;\n    this.dataGridInternal.markColumnAsSortedBy(_initialSortColumn, DataGrid.DataGrid.Order.Ascending);\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(true, true, 'networkPanelSplitViewWaterfall', 200);\n    const widget = this.dataGridInternal.asWidget();\n    widget.setMinimumSize(150, 0);\n    this.splitWidget.setMainWidget(widget);\n  }\n\n  private setupWaterfall(): void {\n    this.waterfallColumn = new NetworkWaterfallColumn(this.networkLogView.calculator());\n\n    this.waterfallColumn.element.addEventListener('contextmenu', handleContextMenu.bind(this));\n    this.waterfallColumn.element.addEventListener('wheel', this.onMouseWheel.bind(this, false), {passive: true});\n    this.waterfallColumn.element.addEventListener('touchstart', this.onTouchStart.bind(this));\n    this.waterfallColumn.element.addEventListener('touchmove', this.onTouchMove.bind(this));\n    this.waterfallColumn.element.addEventListener('touchend', this.onTouchEnd.bind(this));\n\n    this.dataGridScroller.addEventListener('wheel', this.onMouseWheel.bind(this, true), true);\n    this.dataGridScroller.addEventListener('touchstart', this.onTouchStart.bind(this));\n    this.dataGridScroller.addEventListener('touchmove', this.onTouchMove.bind(this));\n    this.dataGridScroller.addEventListener('touchend', this.onTouchEnd.bind(this));\n    this.waterfallScroller =\n        (this.waterfallColumn.contentElement.createChild('div', 'network-waterfall-v-scroll') as HTMLDivElement);\n    this.waterfallScrollerContent =\n        (this.waterfallScroller.createChild('div', 'network-waterfall-v-scroll-content') as HTMLDivElement);\n\n    this.dataGridInternal.addEventListener(DataGrid.DataGrid.Events.PaddingChanged, () => {\n      this.waterfallScrollerWidthIsStale = true;\n      this.syncScrollers();\n    });\n    this.dataGridInternal.addEventListener(\n        DataGrid.ViewportDataGrid.Events.ViewportCalculated, this.redrawWaterfallColumn.bind(this));\n\n    this.createWaterfallHeader();\n    this.waterfallColumn.contentElement.classList.add('network-waterfall-view');\n\n    this.waterfallColumn.setMinimumSize(100, 0);\n    this.splitWidget.setSidebarWidget(this.waterfallColumn);\n\n    this.switchViewMode(false);\n\n    function handleContextMenu(this: NetworkLogViewColumns, ev: Event): void {\n      const event = (ev as MouseEvent);\n      const node = this.waterfallColumn.getNodeFromPoint(event.offsetX, event.offsetY);\n      if (!node) {\n        return;\n      }\n      const request = node.request();\n      if (!request) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      this.networkLogView.handleContextMenuForRequest(contextMenu, request);\n      void contextMenu.show();\n    }\n  }\n\n  private onMouseWheel(shouldConsume: boolean, ev: Event): void {\n    if (shouldConsume) {\n      ev.consume(true);\n    }\n    const event = (ev as WheelEvent);\n    const hasRecentWheel = Date.now() - this.lastWheelTime < 80;\n    this.activeScroller.scrollBy({top: event.deltaY, behavior: hasRecentWheel ? 'auto' : 'smooth'});\n    this.syncScrollers();\n    this.lastWheelTime = Date.now();\n  }\n\n  private onTouchStart(ev: Event): void {\n    const event = (ev as TouchEvent);\n    this.hasScrollerTouchStarted = true;\n    this.scrollerTouchStartPos = event.changedTouches[0].pageY;\n  }\n\n  private onTouchMove(ev: Event): void {\n    if (!this.hasScrollerTouchStarted) {\n      return;\n    }\n\n    const event = (ev as TouchEvent);\n    const currentPos = event.changedTouches[0].pageY;\n    const delta = (this.scrollerTouchStartPos as number) - currentPos;\n\n    this.activeScroller.scrollBy({top: delta, behavior: 'auto'});\n    this.syncScrollers();\n\n    this.scrollerTouchStartPos = currentPos;\n  }\n\n  private onTouchEnd(): void {\n    this.hasScrollerTouchStarted = false;\n  }\n\n  private syncScrollers(): void {\n    if (!this.waterfallColumn.isShowing()) {\n      return;\n    }\n    this.waterfallScrollerContent.style.height = this.dataGridScroller.scrollHeight + 'px';\n    this.updateScrollerWidthIfNeeded();\n    this.dataGridScroller.scrollTop = this.waterfallScroller.scrollTop;\n  }\n\n  private updateScrollerWidthIfNeeded(): void {\n    if (this.waterfallScrollerWidthIsStale) {\n      this.waterfallScrollerWidthIsStale = false;\n      this.waterfallColumn.setRightPadding(\n          this.waterfallScroller.offsetWidth - this.waterfallScrollerContent.offsetWidth);\n    }\n  }\n\n  private redrawWaterfallColumn(): void {\n    if (!this.waterfallRequestsAreStale) {\n      this.updateScrollerWidthIfNeeded();\n      this.waterfallColumn.update(\n          this.activeScroller.scrollTop, this.eventDividersShown ? this.eventDividers : undefined);\n      return;\n    }\n    this.syncScrollers();\n    const nodes = this.networkLogView.flatNodesList();\n    this.waterfallColumn.update(this.activeScroller.scrollTop, this.eventDividers, nodes);\n  }\n\n  private createWaterfallHeader(): void {\n    this.waterfallHeaderElement =\n        (this.waterfallColumn.contentElement.createChild('div', 'network-waterfall-header') as HTMLElement);\n    this.waterfallHeaderElement.addEventListener('click', waterfallHeaderClicked.bind(this));\n    this.waterfallHeaderElement.addEventListener(\n        'contextmenu', event => this.innerHeaderContextMenu(new UI.ContextMenu.ContextMenu(event)));\n    const innerElement = this.waterfallHeaderElement.createChild('div');\n    innerElement.textContent = i18nString(UIStrings.waterfall);\n    this.waterfallColumnSortIcon = UI.Icon.Icon.create('', 'sort-order-icon');\n    this.waterfallHeaderElement.createChild('div', 'sort-order-icon-container')\n        .appendChild(this.waterfallColumnSortIcon);\n\n    function waterfallHeaderClicked(this: NetworkLogViewColumns): void {\n      const sortOrders = DataGrid.DataGrid.Order;\n      const wasSortedByWaterfall = this.dataGridInternal.sortColumnId() === 'waterfall';\n      const wasSortedAscending = this.dataGridInternal.isSortOrderAscending();\n      const sortOrder = wasSortedByWaterfall && wasSortedAscending ? sortOrders.Descending : sortOrders.Ascending;\n      this.dataGridInternal.markColumnAsSortedBy('waterfall', sortOrder);\n      this.sortHandler();\n    }\n  }\n\n  setCalculator(x: NetworkTimeCalculator): void {\n    this.waterfallColumn.setCalculator(x);\n  }\n\n  scheduleRefresh(): void {\n    this.waterfallColumn.scheduleDraw();\n  }\n  private updateRowsSize(): void {\n    const largeRows = Boolean(this.networkLogLargeRowsSetting.get());\n\n    this.dataGridInternal.element.classList.toggle('small', !largeRows);\n    this.dataGridInternal.scheduleUpdate();\n\n    this.waterfallScrollerWidthIsStale = true;\n    this.waterfallColumn.setRowHeight(largeRows ? 41 : 21);\n    this.waterfallScroller.classList.toggle('small', !largeRows);\n    this.waterfallHeaderElement.classList.toggle('small', !largeRows);\n\n    // Request an animation frame because under certain conditions\n    // (see crbug.com/1019723) this.waterfallScroller.offsetTop does\n    // not return the value it's supposed to return as of the applied\n    // css classes.\n    window.requestAnimationFrame(() => {\n      this.waterfallColumn.setHeaderHeight(this.waterfallScroller.offsetTop);\n      this.waterfallColumn.scheduleDraw();\n    });\n  }\n\n  show(element: Element): void {\n    this.splitWidget.show(element);\n  }\n\n  setHidden(value: boolean): void {\n    UI.ARIAUtils.setHidden(this.splitWidget.element, value);\n  }\n\n  dataGrid(): DataGrid.SortableDataGrid.SortableDataGrid<NetworkNode> {\n    return this.dataGridInternal;\n  }\n\n  sortByCurrentColumn(): void {\n    this.sortHandler();\n  }\n\n  private sortHandler(): void {\n    const columnId = this.dataGridInternal.sortColumnId();\n    this.networkLogView.removeAllNodeHighlights();\n    this.waterfallRequestsAreStale = true;\n    if (columnId === 'waterfall') {\n      if (this.dataGridInternal.sortOrder() === DataGrid.DataGrid.Order.Ascending) {\n        this.waterfallColumnSortIcon.setIconType('smallicon-triangle-up');\n      } else {\n        this.waterfallColumnSortIcon.setIconType('smallicon-triangle-down');\n      }\n\n      const sortFunction =\n          (NetworkRequestNode.RequestPropertyComparator.bind(null, this.activeWaterfallSortId) as\n               (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>,\n                arg1: DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>) => number);\n      this.dataGridInternal.sortNodes(sortFunction, !this.dataGridInternal.isSortOrderAscending());\n      this.dataGridSortedForTest();\n      return;\n    }\n    this.waterfallColumnSortIcon.setIconType('');\n\n    const columnConfig = this.columns.find(columnConfig => columnConfig.id === columnId);\n    if (!columnConfig || !columnConfig.sortingFunction) {\n      return;\n    }\n    const sortingFunction =\n        (columnConfig.sortingFunction as\n             ((arg0: DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>,\n               arg1: DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>) => number) |\n         undefined);\n    if (!sortingFunction) {\n      return;\n    }\n    this.dataGridInternal.sortNodes(sortingFunction, !this.dataGridInternal.isSortOrderAscending());\n    this.dataGridSortedForTest();\n  }\n\n  private dataGridSortedForTest(): void {\n  }\n\n  private updateColumns(): void {\n    if (!this.dataGridInternal) {\n      return;\n    }\n    const visibleColumns = new Set<string>();\n    if (this.gridMode) {\n      for (const columnConfig of this.columns) {\n        if (columnConfig.visible) {\n          visibleColumns.add(columnConfig.id);\n        }\n      }\n    } else {\n      // Find the first visible column from the path group\n      const visibleColumn = this.columns.find(c => c.hideableGroup === 'path' && c.visible);\n      if (visibleColumn) {\n        visibleColumns.add(visibleColumn.id);\n      } else {\n        // This should not happen because inside a hideableGroup\n        // there should always be at least one column visible\n        // This is just in case.\n        visibleColumns.add('name');\n      }\n    }\n    this.dataGridInternal.setColumnsVisiblity(visibleColumns);\n  }\n\n  switchViewMode(gridMode: boolean): void {\n    if (this.gridMode === gridMode) {\n      return;\n    }\n    this.gridMode = gridMode;\n\n    if (gridMode) {\n      this.splitWidget.showBoth();\n      this.activeScroller = this.waterfallScroller;\n      this.waterfallScroller.scrollTop = this.dataGridScroller.scrollTop;\n      this.dataGridInternal.setScrollContainer(this.waterfallScroller);\n    } else {\n      this.networkLogView.removeAllNodeHighlights();\n      this.splitWidget.hideSidebar();\n      this.activeScroller = this.dataGridScroller;\n      this.dataGridInternal.setScrollContainer(this.dataGridScroller);\n    }\n    this.networkLogView.element.classList.toggle('brief-mode', !gridMode);\n    this.updateColumns();\n    this.updateRowsSize();\n  }\n\n  private toggleColumnVisibility(columnConfig: Descriptor): void {\n    this.loadCustomColumnsAndSettings();\n    columnConfig.visible = !columnConfig.visible;\n    this.saveColumnsSettings();\n    this.updateColumns();\n  }\n\n  private saveColumnsSettings(): void {\n    const saveableSettings: {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [x: string]: any,\n    } = {};\n    for (const columnConfig of this.columns) {\n      saveableSettings[columnConfig.id] = {visible: columnConfig.visible, title: columnConfig.title};\n    }\n\n    this.persistantSettings.set(saveableSettings);\n  }\n\n  private loadCustomColumnsAndSettings(): void {\n    const savedSettings = this.persistantSettings.get();\n    const columnIds = Object.keys(savedSettings);\n    for (const columnId of columnIds) {\n      const setting = savedSettings[columnId];\n      let columnConfig = this.columns.find(columnConfig => columnConfig.id === columnId);\n      if (!columnConfig) {\n        columnConfig = this.addCustomHeader(setting.title, columnId) || undefined;\n      }\n      if (columnConfig && columnConfig.hideable && typeof setting.visible === 'boolean') {\n        columnConfig.visible = Boolean(setting.visible);\n      }\n      if (columnConfig && typeof setting.title === 'string') {\n        columnConfig.title = setting.title;\n      }\n    }\n  }\n\n  private makeHeaderFragment(title: string, subtitle: string): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(fragment, title);\n    const subtitleDiv = fragment.createChild('div', 'network-header-subtitle');\n    UI.UIUtils.createTextChild(subtitleDiv, subtitle);\n    return fragment;\n  }\n\n  private innerHeaderContextMenu(contextMenu: UI.ContextMenu.SubMenu): void {\n    const columnConfigs = this.columns.filter(columnConfig => columnConfig.hideable);\n    const nonResponseHeaders = columnConfigs.filter(columnConfig => !columnConfig.isResponseHeader);\n\n    const hideableGroups = new Map<string, Descriptor[]>();\n    const nonResponseHeadersWithoutGroup: Descriptor[] = [];\n\n    // Sort columns into their groups\n    for (const columnConfig of nonResponseHeaders) {\n      if (!columnConfig.hideableGroup) {\n        nonResponseHeadersWithoutGroup.push(columnConfig);\n      } else {\n        const name = columnConfig.hideableGroup;\n        let hideableGroup = hideableGroups.get(name);\n        if (!hideableGroup) {\n          hideableGroup = [];\n          hideableGroups.set(name, hideableGroup);\n        }\n\n        hideableGroup.push(columnConfig);\n      }\n    }\n\n    // Add all the groups first\n    for (const group of hideableGroups.values()) {\n      const visibleColumns = group.filter(columnConfig => columnConfig.visible);\n\n      for (const columnConfig of group) {\n        // Make sure that at least one item in every group is enabled\n        const isDisabled = visibleColumns.length === 1 && visibleColumns[0] === columnConfig;\n        const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n\n        contextMenu.headerSection().appendCheckboxItem(\n            title, this.toggleColumnVisibility.bind(this, columnConfig), columnConfig.visible, isDisabled);\n      }\n\n      contextMenu.headerSection().appendSeparator();\n    }\n\n    // Add normal columns not belonging to any group\n    for (const columnConfig of nonResponseHeadersWithoutGroup) {\n      const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n      contextMenu.headerSection().appendCheckboxItem(\n          title, this.toggleColumnVisibility.bind(this, columnConfig), columnConfig.visible);\n    }\n\n    const responseSubMenu = contextMenu.footerSection().appendSubMenuItem(i18nString(UIStrings.responseHeaders));\n    const responseHeaders = columnConfigs.filter(columnConfig => columnConfig.isResponseHeader);\n    for (const columnConfig of responseHeaders) {\n      const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n      responseSubMenu.defaultSection().appendCheckboxItem(\n          title, this.toggleColumnVisibility.bind(this, columnConfig), columnConfig.visible);\n    }\n\n    responseSubMenu.footerSection().appendItem(\n        i18nString(UIStrings.manageHeaderColumns), this.manageCustomHeaderDialog.bind(this));\n\n    const waterfallSortIds = WaterfallSortIds;\n    const waterfallSubMenu = contextMenu.footerSection().appendSubMenuItem(i18nString(UIStrings.waterfall));\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.startTime), setWaterfallMode.bind(this, waterfallSortIds.StartTime),\n        this.activeWaterfallSortId === waterfallSortIds.StartTime);\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.responseTime), setWaterfallMode.bind(this, waterfallSortIds.ResponseTime),\n        this.activeWaterfallSortId === waterfallSortIds.ResponseTime);\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.endTime), setWaterfallMode.bind(this, waterfallSortIds.EndTime),\n        this.activeWaterfallSortId === waterfallSortIds.EndTime);\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.totalDuration), setWaterfallMode.bind(this, waterfallSortIds.Duration),\n        this.activeWaterfallSortId === waterfallSortIds.Duration);\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.latency), setWaterfallMode.bind(this, waterfallSortIds.Latency),\n        this.activeWaterfallSortId === waterfallSortIds.Latency);\n\n    function setWaterfallMode(this: NetworkLogViewColumns, sortId: WaterfallSortIds): void {\n      let calculator = this.calculatorsMap.get(_calculatorTypes.Time);\n      const waterfallSortIds = WaterfallSortIds;\n      if (sortId === waterfallSortIds.Duration || sortId === waterfallSortIds.Latency) {\n        calculator = this.calculatorsMap.get(_calculatorTypes.Duration);\n      }\n      this.networkLogView.setCalculator((calculator as NetworkTimeCalculator));\n\n      this.activeWaterfallSortId = sortId;\n      this.dataGridInternal.markColumnAsSortedBy('waterfall', DataGrid.DataGrid.Order.Ascending);\n      this.sortHandler();\n    }\n  }\n\n  private manageCustomHeaderDialog(): void {\n    const customHeaders = [];\n    for (const columnConfig of this.columns) {\n      const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n      if (columnConfig.isResponseHeader) {\n        customHeaders.push({title, editable: columnConfig.isCustomHeader});\n      }\n    }\n    const manageCustomHeaders = new NetworkManageCustomHeadersView(\n        customHeaders, headerTitle => Boolean(this.addCustomHeader(headerTitle)), this.changeCustomHeader.bind(this),\n        this.removeCustomHeader.bind(this));\n    const dialog = new UI.Dialog.Dialog();\n    manageCustomHeaders.show(dialog.contentElement);\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.MeasureContent);\n    // @ts-ignore\n    // TypeScript somehow tries to appy the `WidgetElement` class to the\n    // `Document` type of the (Document|Element) union. WidgetElement inherits\n    // from HTMLElement so its valid to be passed here.\n    dialog.show(this.networkLogView.element);\n  }\n\n  private removeCustomHeader(headerId: string): boolean {\n    headerId = headerId.toLowerCase();\n    const index = this.columns.findIndex(columnConfig => columnConfig.id === headerId);\n    if (index === -1) {\n      return false;\n    }\n    this.columns.splice(index, 1);\n    this.dataGridInternal.removeColumn(headerId);\n    this.saveColumnsSettings();\n    this.updateColumns();\n    return true;\n  }\n\n  private addCustomHeader(headerTitle: string, headerId?: string, index?: number): Descriptor|null {\n    if (!headerId) {\n      headerId = headerTitle.toLowerCase();\n    }\n    if (index === undefined) {\n      index = this.columns.length - 1;\n    }\n\n    const currentColumnConfig = this.columns.find(columnConfig => columnConfig.id === headerId);\n    if (currentColumnConfig) {\n      return null;\n    }\n\n    const columnConfigBase = Object.assign({}, _defaultColumnConfig, {\n      id: headerId,\n      title: headerTitle,\n      isResponseHeader: true,\n      isCustomHeader: true,\n      visible: true,\n      sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, headerId),\n    });\n\n    // Split out the column config from the typed version, as doing it in a single assignment causes\n    // issues with Closure compiler.\n    const columnConfig = (columnConfigBase as Descriptor);\n\n    this.columns.splice(index, 0, columnConfig);\n    if (this.dataGridInternal) {\n      this.dataGridInternal.addColumn(NetworkLogViewColumns.convertToDataGridDescriptor(columnConfig), index);\n    }\n    this.saveColumnsSettings();\n    this.updateColumns();\n    return columnConfig;\n  }\n\n  private changeCustomHeader(oldHeaderId: string, newHeaderTitle: string, newHeaderId?: string): boolean {\n    if (!newHeaderId) {\n      newHeaderId = newHeaderTitle.toLowerCase();\n    }\n    oldHeaderId = oldHeaderId.toLowerCase();\n\n    const oldIndex = this.columns.findIndex(columnConfig => columnConfig.id === oldHeaderId);\n    const oldColumnConfig = this.columns[oldIndex];\n    const currentColumnConfig = this.columns.find(columnConfig => columnConfig.id === newHeaderId);\n    if (!oldColumnConfig || (currentColumnConfig && oldHeaderId !== newHeaderId)) {\n      return false;\n    }\n\n    this.removeCustomHeader(oldHeaderId);\n    this.addCustomHeader(newHeaderTitle, newHeaderId, oldIndex);\n    return true;\n  }\n\n  private getPopoverRequest(event: Event): UI.PopoverHelper.PopoverRequest|null {\n    if (!this.gridMode) {\n      return null;\n    }\n    const hoveredNode = this.networkLogView.hoveredNode();\n    if (!hoveredNode || !event.target) {\n      return null;\n    }\n\n    const anchor = (event.target as HTMLElement).enclosingNodeOrSelfWithClass('network-script-initiated');\n    if (!anchor) {\n      return null;\n    }\n    const request = hoveredNode.request();\n    if (!request) {\n      return null;\n    }\n    return {\n      box: anchor.boxInWindow(),\n      show: async(popover: UI.GlassPane.GlassPane): Promise<boolean> => {\n        this.popupLinkifier.setLiveLocationUpdateCallback(() => {\n          popover.setSizeBehavior(UI.GlassPane.SizeBehavior.MeasureContent);\n        });\n        const content = RequestInitiatorView.createStackTracePreview(\n            (request as SDK.NetworkRequest.NetworkRequest), this.popupLinkifier, false);\n        if (!content) {\n          return false;\n        }\n        popover.contentElement.appendChild(content.element);\n        return true;\n      },\n      hide: this.popupLinkifier.reset.bind(this.popupLinkifier),\n    };\n  }\n\n  addEventDividers(times: number[], className: string): void {\n    // TODO(allada) Remove this and pass in the color.\n    let color = 'transparent';\n    switch (className) {\n      case 'network-dcl-divider':\n        color = '#0867CB';\n        break;\n      case 'network-load-divider':\n        color = '#B31412';\n        break;\n      default:\n        return;\n    }\n    const currentTimes = this.eventDividers.get(color) || [];\n    this.eventDividers.set(color, currentTimes.concat(times));\n    this.networkLogView.scheduleRefresh();\n  }\n\n  hideEventDividers(): void {\n    this.eventDividersShown = true;\n    this.redrawWaterfallColumn();\n  }\n\n  showEventDividers(): void {\n    this.eventDividersShown = false;\n    this.redrawWaterfallColumn();\n  }\n\n  selectFilmStripFrame(time: number): void {\n    this.eventDividers.set(_filmStripDividerColor, [time]);\n    this.redrawWaterfallColumn();\n  }\n\n  clearFilmStripFrame(): void {\n    this.eventDividers.delete(_filmStripDividerColor);\n    this.redrawWaterfallColumn();\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const _initialSortColumn = 'waterfall';\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum, @typescript-eslint/naming-convention\nexport enum _calculatorTypes {\n  Duration = 'Duration',\n  Time = 'Time',\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const _defaultColumnConfig: Object = {\n  subtitle: null,\n  visible: false,\n  weight: 6,\n  sortable: true,\n  hideable: true,\n  hideableGroup: null,\n  nonSelectable: false,\n  isResponseHeader: false,\n  isCustomHeader: false,\n  allowInSortByEvenWhenHidden: false,\n};\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _temporaryDefaultColumns = [\n  {\n    id: 'name',\n    title: i18nLazyString(UIStrings.name),\n    subtitle: i18nLazyString(UIStrings.path),\n    visible: true,\n    weight: 20,\n    hideable: true,\n    hideableGroup: 'path',\n    sortingFunction: NetworkRequestNode.NameComparator,\n  },\n  {\n    id: 'path',\n    title: i18nLazyString(UIStrings.path),\n    hideable: true,\n    hideableGroup: 'path',\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'pathname'),\n  },\n  {\n    id: 'url',\n    title: i18nLazyString(UIStrings.url),\n    hideable: true,\n    hideableGroup: 'path',\n    sortingFunction: NetworkRequestNode.RequestURLComparator,\n  },\n  {\n    id: 'method',\n    title: i18nLazyString(UIStrings.method),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'requestMethod'),\n  },\n  {\n    id: 'status',\n    title: i18nLazyString(UIStrings.status),\n    visible: true,\n    subtitle: i18nLazyString(UIStrings.text),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'statusCode'),\n  },\n  {\n    id: 'protocol',\n    title: i18nLazyString(UIStrings.protocol),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'protocol'),\n  },\n  {\n    id: 'scheme',\n    title: i18nLazyString(UIStrings.scheme),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'scheme'),\n  },\n  {\n    id: 'domain',\n    title: i18nLazyString(UIStrings.domain),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'domain'),\n  },\n  {\n    id: 'remoteaddress',\n    title: i18nLazyString(UIStrings.remoteAddress),\n    weight: 10,\n    align: DataGrid.DataGrid.Align.Right,\n    sortingFunction: NetworkRequestNode.RemoteAddressComparator,\n  },\n  {\n    id: 'remoteaddress-space',\n    title: i18nLazyString(UIStrings.remoteAddressSpace),\n    visible: false,\n    weight: 10,\n    sortingFunction: NetworkRequestNode.RemoteAddressSpaceComparator,\n  },\n  {\n    id: 'type',\n    title: i18nLazyString(UIStrings.type),\n    visible: true,\n    sortingFunction: NetworkRequestNode.TypeComparator,\n  },\n  {\n    id: 'initiator',\n    title: i18nLazyString(UIStrings.initiator),\n    visible: true,\n    weight: 10,\n    sortingFunction: NetworkRequestNode.InitiatorComparator,\n  },\n  {\n    id: 'initiator-address-space',\n    title: i18nLazyString(UIStrings.initiatorAddressSpace),\n    visible: false,\n    weight: 10,\n    sortingFunction: NetworkRequestNode.InitiatorAddressSpaceComparator,\n  },\n  {\n    id: 'cookies',\n    title: i18nLazyString(UIStrings.cookies),\n    align: DataGrid.DataGrid.Align.Right,\n    sortingFunction: NetworkRequestNode.RequestCookiesCountComparator,\n  },\n  {\n    id: 'setcookies',\n    title: i18nLazyString(UIStrings.setCookies),\n    align: DataGrid.DataGrid.Align.Right,\n    sortingFunction: NetworkRequestNode.ResponseCookiesCountComparator,\n  },\n  {\n    id: 'size',\n    title: i18nLazyString(UIStrings.size),\n    visible: true,\n    subtitle: i18nLazyString(UIStrings.content),\n    align: DataGrid.DataGrid.Align.Right,\n    sortingFunction: NetworkRequestNode.SizeComparator,\n  },\n  {\n    id: 'time',\n    title: i18nLazyString(UIStrings.time),\n    visible: true,\n    subtitle: i18nLazyString(UIStrings.latency),\n    align: DataGrid.DataGrid.Align.Right,\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'duration'),\n  },\n  {id: 'priority', title: i18nLazyString(UIStrings.priority), sortingFunction: NetworkRequestNode.PriorityComparator},\n  {\n    id: 'connectionid',\n    title: i18nLazyString(UIStrings.connectionId),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'connectionId'),\n  },\n  {\n    id: 'cache-control',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Cache-Control'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'cache-control'),\n  },\n  {\n    id: 'connection',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Connection'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'connection'),\n  },\n  {\n    id: 'content-encoding',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Content-Encoding'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'content-encoding'),\n  },\n  {\n    id: 'content-length',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Content-Length'),\n    align: DataGrid.DataGrid.Align.Right,\n    sortingFunction: NetworkRequestNode.ResponseHeaderNumberComparator.bind(null, 'content-length'),\n  },\n  {\n    id: 'etag',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('ETag'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'etag'),\n  },\n  {\n    id: 'keep-alive',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Keep-Alive'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'keep-alive'),\n  },\n  {\n    id: 'last-modified',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Last-Modified'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderDateComparator.bind(null, 'last-modified'),\n  },\n  {\n    id: 'server',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Server'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'server'),\n  },\n  {\n    id: 'vary',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Vary'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'vary'),\n  },\n  // This header is a placeholder to let datagrid know that it can be sorted by this column, but never shown.\n  {\n    id: 'waterfall',\n    title: i18nLazyString(UIStrings.waterfall),\n    visible: false,\n    hideable: false,\n    allowInSortByEvenWhenHidden: true,\n  },\n];\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-explicit-any\nconst _defaultColumns = (_temporaryDefaultColumns as any);\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const _filmStripDividerColor = '#fccc49';\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum WaterfallSortIds {\n  StartTime = 'startTime',\n  ResponseTime = 'responseReceivedTime',\n  EndTime = 'endTime',\n  Duration = 'duration',\n  Latency = 'latency',\n}\nexport interface Descriptor {\n  id: string;\n  title: string|(() => string);\n  titleDOMFragment?: DocumentFragment;\n  subtitle: string|(() => string)|null;\n  visible: boolean;\n  weight: number;\n  hideable: boolean;\n  hideableGroup: string|null;\n  nonSelectable: boolean;\n  sortable: boolean;\n  align?: string|null;\n  isResponseHeader: boolean;\n  sortingFunction: (arg0: NetworkNode, arg1: NetworkNode) => number | undefined;\n  isCustomHeader: boolean;\n  allowInSortByEvenWhenHidden: boolean;\n}\n"]}