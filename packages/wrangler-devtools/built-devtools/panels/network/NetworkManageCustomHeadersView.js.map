{"version":3,"file":"NetworkManageCustomHeadersView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkManageCustomHeadersView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,oCAAoC,MAAM,yCAAyC,CAAC;AAE3F,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,mBAAmB,EAAE,uBAAuB;IAC5C;;MAEE;IACF,eAAe,EAAE,mBAAmB;IACpC;;MAEE;IACF,eAAe,EAAE,oBAAoB;IACrC;;MAEE;IACF,UAAU,EAAE,aAAa;CAC1B,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kDAAkD,EAAE,SAAS,CAAC,CAAC;AACxG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAMtE,MAAM,OAAO,8BAA+B,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IAC/C,IAAI,CAAyC;IAC7C,aAAa,CAG3B;IACK,uBAAuB,CAA4B;IACnD,0BAA0B,CAA0C;IAC3D,0BAA0B,CAA4B;IAC/D,MAAM,CAAsC;IAEpD,YACI,UAGG,EACH,uBAAkD,EAClD,0BAAmE,EACnE,0BAAqD;QACvD,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QAEzG,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAEvD,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAClD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC5D,WAAW,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAgB,CACvD,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;QAE5F,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;QAC/B,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;QAErG,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;QACvD,IAAI,CAAC,0BAA0B,GAAG,0BAA0B,CAAC;QAC7D,IAAI,CAAC,0BAA0B,GAAG,0BAA0B,CAAC;QAE7D,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,gBAAgB,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC;IAChE,CAAC;IAEO,cAAc;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,UAAU,CAAC,KAAK,EAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClH,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;IAC9D,CAAC;IAED,UAAU,CAAC,IAAkB,EAAE,SAAkB;QAC/C,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;QAChE,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,mBAAmB,CAAC,IAAkB,EAAE,MAAc;QACpD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,UAAU,CAAC,IAAkB,EAAE,MAA0C,EAAE,KAAc;QACvF,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACvD,IAAI,OAAO,CAAC;QACZ,IAAI,KAAK,EAAE;YACT,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;SAClD;aAAM;YACL,OAAO,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SAClE;QAED,IAAI,OAAO,IAAI,CAAC,KAAK,EAAE;YACrB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;SACtD;QACD,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;SACnF;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,CAAC,IAAkB;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACnC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7C,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,YAAY;QAClB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAED,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,EAAgB,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,MAAM,OAAO,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;QAExC,MAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,yBAAyB,CAAC,CAAC;QACrE,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAElG,MAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,yBAAyB,CAAC,CAAC;QACrE,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,uBAAuB,CAAC;aAC7C,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,iBAAiB,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAErG,OAAO,MAAM,CAAC;QAEd,SAAS,cAAc,CACmB,IAAkB,EAAE,MAAc,EACxE,MAAmC;YACrC,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACrE,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;gBAChE,KAAK,GAAG,KAAK,CAAC;aACf;YACD,OAAO,EAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAC,CAAC;QAC1C,CAAC;IACH,CAAC;CACF","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport networkManageCustomHeadersViewStyles from './networkManageCustomHeadersView.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Network Manage Custom Headers View of the Network panel\n  */\n  manageHeaderColumns: 'Manage Header Columns',\n  /**\n  *@description Placeholder text content in Network Manage Custom Headers View of the Network panel\n  */\n  noCustomHeaders: 'No custom headers',\n  /**\n  *@description Text of add button in Network Manage Custom Headers View of the Network panel\n  */\n  addCustomHeader: 'Add custom headerâ€¦',\n  /**\n  *@description Text in Network Manage Custom Headers View of the Network panel\n  */\n  headerName: 'Header Name',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkManageCustomHeadersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface CustomHeader {\n  header: string;\n}\n\nexport class NetworkManageCustomHeadersView extends UI.Widget.VBox implements UI.ListWidget.Delegate<CustomHeader> {\n  private readonly list: UI.ListWidget.ListWidget<CustomHeader>;\n  private readonly columnConfigs: Map<string, {\n    title: string,\n    editable: boolean,\n  }>;\n  private addHeaderColumnCallback: (arg0: string) => boolean;\n  private changeHeaderColumnCallback: (arg0: string, arg1: string) => boolean;\n  private readonly removeHeaderColumnCallback: (arg0: string) => boolean;\n  private editor?: UI.ListWidget.Editor<CustomHeader>;\n\n  constructor(\n      columnData: {\n        title: string,\n        editable: boolean,\n      }[],\n      addHeaderColumnCallback: (arg0: string) => boolean,\n      changeHeaderColumnCallback: (arg0: string, arg1: string) => boolean,\n      removeHeaderColumnCallback: (arg0: string) => boolean) {\n    super(true);\n\n    this.contentElement.classList.add('custom-headers-wrapper');\n    this.contentElement.createChild('div', 'header').textContent = i18nString(UIStrings.manageHeaderColumns);\n\n    this.list = new UI.ListWidget.ListWidget(this);\n    this.list.element.classList.add('custom-headers-list');\n\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('custom-headers-list-list-empty');\n    placeholder.textContent = i18nString(UIStrings.noCustomHeaders);\n    this.list.setEmptyPlaceholder(placeholder);\n    this.list.show(this.contentElement);\n    this.contentElement.appendChild(UI.UIUtils.createTextButton(\n        i18nString(UIStrings.addCustomHeader), this.addButtonClicked.bind(this), 'add-button'));\n\n    this.columnConfigs = new Map();\n    columnData.forEach(columnData => this.columnConfigs.set(columnData.title.toLowerCase(), columnData));\n\n    this.addHeaderColumnCallback = addHeaderColumnCallback;\n    this.changeHeaderColumnCallback = changeHeaderColumnCallback;\n    this.removeHeaderColumnCallback = removeHeaderColumnCallback;\n\n    this.contentElement.tabIndex = 0;\n  }\n\n  wasShown(): void {\n    this.headersUpdated();\n    this.list.registerCSSFiles([networkManageCustomHeadersViewStyles]);\n    this.registerCSSFiles([networkManageCustomHeadersViewStyles]);\n  }\n\n  private headersUpdated(): void {\n    this.list.clear();\n    this.columnConfigs.forEach(headerData => this.list.appendItem({header: headerData.title}, headerData.editable));\n  }\n\n  private addButtonClicked(): void {\n    this.list.addNewItem(this.columnConfigs.size, {header: ''});\n  }\n\n  renderItem(item: CustomHeader, _editable: boolean): Element {\n    const element = document.createElement('div');\n    element.classList.add('custom-headers-list-item');\n    const header = element.createChild('div', 'custom-header-name');\n    header.textContent = item.header;\n    UI.Tooltip.Tooltip.install(header, item.header);\n    return element;\n  }\n\n  removeItemRequested(item: CustomHeader, _index: number): void {\n    this.removeHeaderColumnCallback(item.header);\n    this.columnConfigs.delete(item.header.toLowerCase());\n    this.headersUpdated();\n  }\n\n  commitEdit(item: CustomHeader, editor: UI.ListWidget.Editor<CustomHeader>, isNew: boolean): void {\n    const headerId = editor.control('header').value.trim();\n    let success;\n    if (isNew) {\n      success = this.addHeaderColumnCallback(headerId);\n    } else {\n      success = this.changeHeaderColumnCallback(item.header, headerId);\n    }\n\n    if (success && !isNew) {\n      this.columnConfigs.delete(item.header.toLowerCase());\n    }\n    if (success) {\n      this.columnConfigs.set(headerId.toLowerCase(), {title: headerId, editable: true});\n    }\n\n    this.headersUpdated();\n  }\n\n  beginEdit(item: CustomHeader): UI.ListWidget.Editor<CustomHeader> {\n    const editor = this.createEditor();\n    editor.control('header').value = item.header;\n    return editor;\n  }\n\n  private createEditor(): UI.ListWidget.Editor<CustomHeader> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<CustomHeader>();\n    this.editor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'custom-headers-edit-row');\n    titles.createChild('div', 'custom-headers-header').textContent = i18nString(UIStrings.headerName);\n\n    const fields = content.createChild('div', 'custom-headers-edit-row');\n    fields.createChild('div', 'custom-headers-header')\n        .appendChild(editor.createInput('header', 'text', 'x-custom-header', validateHeader.bind(this)));\n\n    return editor;\n\n    function validateHeader(\n        this: NetworkManageCustomHeadersView, item: CustomHeader, _index: number,\n        _input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      let valid = true;\n      const headerId = editor.control('header').value.trim().toLowerCase();\n      if (this.columnConfigs.has(headerId) && item.header !== headerId) {\n        valid = false;\n      }\n      return {valid, errorMessage: undefined};\n    }\n  }\n}\n"]}