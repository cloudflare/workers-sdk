{"version":3,"file":"BlockedURLsPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/BlockedURLsPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport blockedURLsPaneStyles from './blockedURLsPane.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to enable blocking of network requests\n  */\n  enableNetworkRequestBlocking: 'Enable network request blocking',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon add button in the Blocked URLs Pane of the Network panel\n  */\n  addPattern: 'Add pattern',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon clear button in the Blocked URLs Pane of the Network panel\n  */\n  removeAllPatterns: 'Remove all patterns',\n  /**\n  *@description Accessible label for the button to add request blocking patterns in the network request blocking tool\n  */\n  addNetworkRequestBlockingPattern: 'Add network request blocking pattern',\n  /**\n  *@description Button to add a pattern to block netwrok requests in the Network request blocking tool\n  *@example {Add pattern} PH1\n  */\n  networkRequestsAreNotBlockedS: 'Network requests are not blocked. {PH1}',\n  /**\n  *@description Text in Blocked URLs Pane of the Network panel\n  *@example {4} PH1\n  */\n  dBlocked: '{PH1} blocked',\n  /**\n  *@description Text in Blocked URLs Pane of the Network panel\n  */\n  textPatternToBlockMatching: 'Text pattern to block matching requests; use * for wildcard',\n  /**\n  *@description Error text for empty list widget input in Request Blocking tool\n  */\n  patternInputCannotBeEmpty: 'Pattern input cannot be empty.',\n  /**\n  *@description Error text for duplicate list widget input in Request Blocking tool\n  */\n  patternAlreadyExists: 'Pattern already exists.',\n  /**\n  *@description Message to be announced for a when list item is removed from list widget\n  */\n  itemDeleted: 'Item successfully deleted',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/BlockedURLsPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport let blockedURLsPaneInstance: BlockedURLsPane|null = null;\n\nexport class BlockedURLsPane extends UI.Widget.VBox implements\n    UI.ListWidget.Delegate<SDK.NetworkManager.BlockedPattern> {\n  private manager: SDK.NetworkManager.MultitargetNetworkManager;\n  private readonly toolbar: UI.Toolbar.Toolbar;\n  private readonly enabledCheckbox: UI.Toolbar.ToolbarCheckbox;\n  private readonly list: UI.ListWidget.ListWidget<SDK.NetworkManager.BlockedPattern>;\n  private editor: UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern>|null;\n  private blockedCountForUrl: Map<string, number>;\n  private readonly updateThrottler: Common.Throttler.Throttler;\n\n  constructor() {\n    super(true);\n\n    this.manager = SDK.NetworkManager.MultitargetNetworkManager.instance();\n    this.manager.addEventListener(SDK.NetworkManager.MultitargetNetworkManager.Events.BlockedPatternsChanged, () => {\n      void this.update();\n    }, this);\n\n    this.toolbar = new UI.Toolbar.Toolbar('', this.contentElement);\n    this.enabledCheckbox = new UI.Toolbar.ToolbarCheckbox(\n        i18nString(UIStrings.enableNetworkRequestBlocking), undefined, this.toggleEnabled.bind(this));\n    this.toolbar.appendToolbarItem(this.enabledCheckbox);\n    this.toolbar.appendSeparator();\n    const addButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.addPattern), 'largeicon-add');\n    addButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.addButtonClicked, this);\n    this.toolbar.appendToolbarItem(addButton);\n    const clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.removeAllPatterns), 'largeicon-clear');\n    clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.removeAll, this);\n    this.toolbar.appendToolbarItem(clearButton);\n\n    this.list = new UI.ListWidget.ListWidget(this);\n    this.list.element.classList.add('blocked-urls');\n\n    this.list.setEmptyPlaceholder(this.createEmptyPlaceholder());\n    this.list.show(this.contentElement);\n\n    this.editor = null;\n\n    this.blockedCountForUrl = new Map();\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.NetworkManager.NetworkManager, SDK.NetworkManager.Events.RequestFinished, this.onRequestFinished, this);\n\n    this.updateThrottler = new Common.Throttler.Throttler(200);\n\n    void this.update();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): BlockedURLsPane {\n    const {forceNew} = opts;\n    if (!blockedURLsPaneInstance || forceNew) {\n      blockedURLsPaneInstance = new BlockedURLsPane();\n    }\n    return blockedURLsPaneInstance;\n  }\n\n  private createEmptyPlaceholder(): Element {\n    const element = this.contentElement.createChild('div', 'no-blocked-urls');\n    const addButton =\n        UI.UIUtils.createTextButton(i18nString(UIStrings.addPattern), this.addButtonClicked.bind(this), 'add-button');\n    UI.ARIAUtils.setAccessibleName(addButton, i18nString(UIStrings.addNetworkRequestBlockingPattern));\n    element.appendChild(\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.networkRequestsAreNotBlockedS, {PH1: addButton}));\n    return element;\n  }\n\n  static reset(): void {\n    if (blockedURLsPaneInstance) {\n      blockedURLsPaneInstance.reset();\n    }\n  }\n\n  private addButtonClicked(): void {\n    this.manager.setBlockingEnabled(true);\n    this.list.addNewItem(0, {url: Platform.DevToolsPath.EmptyUrlString, enabled: true});\n  }\n\n  renderItem(pattern: SDK.NetworkManager.BlockedPattern, editable: boolean): Element {\n    const count = this.blockedRequestsCount(pattern.url);\n    const element = document.createElement('div');\n    element.classList.add('blocked-url');\n    const checkbox = (element.createChild('input', 'blocked-url-checkbox') as HTMLInputElement);\n    checkbox.type = 'checkbox';\n    checkbox.checked = pattern.enabled;\n    checkbox.disabled = !editable;\n    element.createChild('div', 'blocked-url-label').textContent = pattern.url;\n    element.createChild('div', 'blocked-url-count').textContent = i18nString(UIStrings.dBlocked, {PH1: count});\n    if (editable) {\n      element.addEventListener('click', event => this.togglePattern(pattern, event));\n      checkbox.addEventListener('click', event => this.togglePattern(pattern, event));\n    }\n    return element;\n  }\n\n  private togglePattern(pattern: SDK.NetworkManager.BlockedPattern, event: Event): void {\n    event.consume(true);\n    const patterns = this.manager.blockedPatterns();\n    patterns.splice(patterns.indexOf(pattern), 1, {enabled: !pattern.enabled, url: pattern.url});\n    this.manager.setBlockedPatterns(patterns);\n  }\n\n  private toggleEnabled(): void {\n    this.manager.setBlockingEnabled(!this.manager.blockingEnabled());\n    void this.update();\n  }\n\n  removeItemRequested(pattern: SDK.NetworkManager.BlockedPattern, index: number): void {\n    const patterns = this.manager.blockedPatterns();\n    patterns.splice(index, 1);\n    this.manager.setBlockedPatterns(patterns);\n    UI.ARIAUtils.alert(UIStrings.itemDeleted);\n  }\n\n  beginEdit(pattern: SDK.NetworkManager.BlockedPattern): UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern> {\n    this.editor = this.createEditor();\n    this.editor.control('url').value = pattern.url;\n    return this.editor;\n  }\n\n  commitEdit(\n      item: SDK.NetworkManager.BlockedPattern, editor: UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern>,\n      isNew: boolean): void {\n    const url = editor.control('url').value as Platform.DevToolsPath.UrlString;\n    const patterns = this.manager.blockedPatterns();\n    if (isNew) {\n      patterns.push({enabled: true, url: url});\n    } else {\n      patterns.splice(patterns.indexOf(item), 1, {enabled: true, url: url});\n    }\n\n    this.manager.setBlockedPatterns(patterns);\n  }\n\n  private createEditor(): UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern>();\n    const content = editor.contentElement();\n    const titles = content.createChild('div', 'blocked-url-edit-row');\n    titles.createChild('div').textContent = i18nString(UIStrings.textPatternToBlockMatching);\n    const fields = content.createChild('div', 'blocked-url-edit-row');\n    const validator = (_item: SDK.NetworkManager.BlockedPattern, _index: number, input: UI.ListWidget.EditorControl): {\n      valid: boolean,\n      errorMessage: Common.UIString.LocalizedString|undefined,\n    } => {\n      let valid = true;\n      let errorMessage;\n      if (!input.value) {\n        errorMessage = i18nString(UIStrings.patternInputCannotBeEmpty);\n        valid = false;\n      } else if (this.manager.blockedPatterns().find(pattern => pattern.url === input.value)) {\n        errorMessage = i18nString(UIStrings.patternAlreadyExists);\n        valid = false;\n      }\n      return {valid, errorMessage};\n    };\n    const urlInput = editor.createInput('url', 'text', '', validator);\n    fields.createChild('div', 'blocked-url-edit-value').appendChild(urlInput);\n    return editor;\n  }\n\n  private removeAll(): void {\n    this.manager.setBlockedPatterns([]);\n  }\n\n  private update(): Promise<void> {\n    const enabled = this.manager.blockingEnabled();\n    this.list.element.classList.toggle('blocking-disabled', !enabled && Boolean(this.manager.blockedPatterns().length));\n\n    this.enabledCheckbox.setChecked(enabled);\n    this.list.clear();\n    for (const pattern of this.manager.blockedPatterns()) {\n      this.list.appendItem(pattern, enabled);\n    }\n    return Promise.resolve();\n  }\n\n  private blockedRequestsCount(url: string): number {\n    if (!url) {\n      return 0;\n    }\n\n    let result = 0;\n    for (const blockedUrl of this.blockedCountForUrl.keys()) {\n      if (this.matches(url, blockedUrl)) {\n        result += (this.blockedCountForUrl.get(blockedUrl) as number);\n      }\n    }\n    return result;\n  }\n\n  private matches(pattern: string, url: string): boolean {\n    let pos = 0;\n    const parts = pattern.split('*');\n    for (let index = 0; index < parts.length; index++) {\n      const part = parts[index];\n      if (!part.length) {\n        continue;\n      }\n      pos = url.indexOf(part, pos);\n      if (pos === -1) {\n        return false;\n      }\n      pos += part.length;\n    }\n    return true;\n  }\n\n  reset(): void {\n    this.blockedCountForUrl.clear();\n    void this.updateThrottler.schedule(this.update.bind(this));\n  }\n\n  private onRequestFinished(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>): void {\n    const request = event.data;\n    if (request.wasBlocked()) {\n      const count = this.blockedCountForUrl.get(request.url()) || 0;\n      this.blockedCountForUrl.set(request.url(), count + 1);\n      void this.updateThrottler.schedule(this.update.bind(this));\n    }\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.list.registerCSSFiles([blockedURLsPaneStyles]);\n    this.registerCSSFiles([blockedURLsPaneStyles]);\n  }\n}\n"]}