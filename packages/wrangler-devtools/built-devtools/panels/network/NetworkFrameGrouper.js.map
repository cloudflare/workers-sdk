{"version":3,"file":"NetworkFrameGrouper.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkFrameGrouper.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,EAAC,gBAAgB,EAAC,MAAM,0BAA0B,CAAC;AAG1D,MAAM,OAAO,mBAAmB;IACtB,UAAU,CAAiB;IAClB,YAAY,CAA+D;IAE5F,YAAY,UAA0B;QACpC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;IAChC,CAAC;IAED,mBAAmB,CAAC,OAA0C;QAC5D,MAAM,KAAK,GAAG,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC/E,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE;YAChC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,SAAS,EAAE;YACb,OAAO,SAAS,CAAC;SAClB;QACD,SAAS,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACxC,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;CACF;AAED,MAAM,OAAO,cAAe,SAAQ,gBAAgB;IACjC,KAAK,CAA0C;IAEhE,YAAY,UAA0B,EAAE,KAA8C;QACpF,KAAK,CAAC,UAAU,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,UAAU,CAAC;IAClG,CAAC;IAED,UAAU,CAAC,IAAiB,EAAE,QAAgB;QAC5C,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACjC,MAAM,WAAW,GAAI,IAAI,CAAC,QAAoD,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAC9G,IAAI,WAAW,KAAK,CAAC,EAAE;YACrB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,2BAA2B,EAAE,0BAA0B,CAAC,CAAC,CAAC;YAC/F,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;SACpE;IACH,CAAC;CACF","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {NetworkGroupNode} from './NetworkDataGridNode.js';\nimport type {GroupLookupInterface, NetworkLogView} from './NetworkLogView.js';\n\nexport class NetworkFrameGrouper implements GroupLookupInterface {\n  private parentView: NetworkLogView;\n  private readonly activeGroups: Map<SDK.ResourceTreeModel.ResourceTreeFrame, FrameGroupNode>;\n\n  constructor(parentView: NetworkLogView) {\n    this.parentView = parentView;\n    this.activeGroups = new Map();\n  }\n\n  groupNodeForRequest(request: SDK.NetworkRequest.NetworkRequest): NetworkGroupNode|null {\n    const frame = SDK.ResourceTreeModel.ResourceTreeModel.frameForRequest(request);\n    if (!frame || frame.isTopFrame()) {\n      return null;\n    }\n    let groupNode = this.activeGroups.get(frame);\n    if (groupNode) {\n      return groupNode;\n    }\n    groupNode = new FrameGroupNode(this.parentView, frame);\n    this.activeGroups.set(frame, groupNode);\n    return groupNode;\n  }\n\n  reset(): void {\n    this.activeGroups.clear();\n  }\n}\n\nexport class FrameGroupNode extends NetworkGroupNode {\n  private readonly frame: SDK.ResourceTreeModel.ResourceTreeFrame;\n\n  constructor(parentView: NetworkLogView, frame: SDK.ResourceTreeModel.ResourceTreeFrame) {\n    super(parentView);\n    this.frame = frame;\n  }\n\n  displayName(): string {\n    return new Common.ParsedURL.ParsedURL(this.frame.url).domain() || this.frame.name || '<iframe>';\n  }\n\n  renderCell(cell: HTMLElement, columnId: string): void {\n    super.renderCell(cell, columnId);\n    const columnIndex = (this.dataGrid as DataGrid.DataGrid.DataGridImpl<unknown>).indexOfVisibleColumn(columnId);\n    if (columnIndex === 0) {\n      const name = this.displayName();\n      cell.appendChild(UI.Icon.Icon.create('largeicon-navigator-frame', 'network-frame-group-icon'));\n      UI.UIUtils.createTextChild(cell, name);\n      UI.Tooltip.Tooltip.install(cell, name);\n      this.setCellAccessibleName(cell.textContent || '', cell, columnId);\n    }\n  }\n}\n"]}