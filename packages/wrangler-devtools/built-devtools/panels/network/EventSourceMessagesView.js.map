{"version":3,"file":"EventSourceMessagesView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/EventSourceMessagesView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport eventSourceMessagesViewStyles from './eventSourceMessagesView.css.js';\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Event Source Messages View of the Network panel\n  */\n  id: 'Id',\n  /**\n  *@description Text that refers to some types\n  */\n  type: 'Type',\n  /**\n  *@description Text in Event Source Messages View of the Network panel\n  */\n  data: 'Data',\n  /**\n  *@description Text that refers to the time\n  */\n  time: 'Time',\n  /**\n  *@description Data grid name for Event Source data grids\n  */\n  eventSource: 'Event Source',\n  /**\n  *@description A context menu item in the Resource Web Socket Frame View of the Network panel\n  */\n  copyMessage: 'Copy message',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/EventSourceMessagesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class EventSourceMessagesView extends UI.Widget.VBox {\n  private readonly request: SDK.NetworkRequest.NetworkRequest;\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<EventSourceMessageNode>;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n\n    this.element.classList.add('event-source-messages-view');\n    this.request = request;\n\n    const columns = ([\n      {id: 'id', title: i18nString(UIStrings.id), sortable: true, weight: 8},\n      {id: 'type', title: i18nString(UIStrings.type), sortable: true, weight: 8},\n      {id: 'data', title: i18nString(UIStrings.data), sortable: false, weight: 88},\n      {id: 'time', title: i18nString(UIStrings.time), sortable: true, weight: 8},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n\n    this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.eventSource),\n      columns,\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    });\n    this.dataGrid.setStriped(true);\n    this.dataGrid.setStickToBottom(true);\n    this.dataGrid.setRowContextMenuCallback(this.onRowContextMenu.bind(this));\n    this.dataGrid.markColumnAsSortedBy('time', DataGrid.DataGrid.Order.Ascending);\n    this.sortItems();\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this.sortItems, this);\n\n    this.dataGrid.setName('EventSourceMessagesView');\n    this.dataGrid.asWidget().show(this.element);\n  }\n\n  wasShown(): void {\n    this.dataGrid.rootNode().removeChildren();\n    this.registerCSSFiles([eventSourceMessagesViewStyles]);\n    const messages = this.request.eventSourceMessages();\n    for (let i = 0; i < messages.length; ++i) {\n      this.dataGrid.insertChild(new EventSourceMessageNode(messages[i]));\n    }\n\n    this.request.addEventListener(SDK.NetworkRequest.Events.EventSourceMessageAdded, this.messageAdded, this);\n  }\n\n  willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.EventSourceMessageAdded, this.messageAdded, this);\n  }\n\n  private messageAdded(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.EventSourceMessage>): void {\n    const message = event.data;\n    this.dataGrid.insertChild(new EventSourceMessageNode(message));\n  }\n\n  private sortItems(): void {\n    const sortColumnId = this.dataGrid.sortColumnId();\n    if (!sortColumnId) {\n      return;\n    }\n    const comparator =\n        (Comparators[sortColumnId] as\n             ((arg0: DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode>,\n               arg1: DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode>) => number) |\n         undefined);\n    if (!comparator) {\n      return;\n    }\n    this.dataGrid.sortNodes(comparator, !this.dataGrid.isSortOrderAscending());\n  }\n\n  private onRowContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu,\n      node: DataGrid.DataGrid.DataGridNode<DataGrid.ViewportDataGrid.ViewportDataGridNode<\n          DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode>>>): void {\n    contextMenu.clipboardSection().appendItem(\n        i18nString(UIStrings.copyMessage),\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance, node.data.data));\n  }\n}\n\nexport class EventSourceMessageNode extends DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode> {\n  readonly message: SDK.NetworkRequest.EventSourceMessage;\n\n  constructor(message: SDK.NetworkRequest.EventSourceMessage) {\n    const time = new Date(message.time * 1000);\n    const timeText = ('0' + time.getHours()).substr(-2) + ':' + ('0' + time.getMinutes()).substr(-2) + ':' +\n        ('0' + time.getSeconds()).substr(-2) + '.' + ('00' + time.getMilliseconds()).substr(-3);\n    const timeNode = document.createElement('div');\n    UI.UIUtils.createTextChild(timeNode, timeText);\n    UI.Tooltip.Tooltip.install(timeNode, time.toLocaleString());\n    super({id: message.eventId, type: message.eventName, data: message.data, time: timeNode});\n    this.message = message;\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function EventSourceMessageNodeComparator(\n    fieldGetter: (arg0: SDK.NetworkRequest.EventSourceMessage) => (number | string), a: EventSourceMessageNode,\n    b: EventSourceMessageNode): number {\n  const aValue = fieldGetter(a.message);\n  const bValue = fieldGetter(b.message);\n  return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n}\n\nexport const Comparators: {\n  [x: string]: (arg0: EventSourceMessageNode, arg1: EventSourceMessageNode) => number,\n} = {\n  'id': EventSourceMessageNodeComparator.bind(null, message => message.eventId),\n  'type': EventSourceMessageNodeComparator.bind(null, message => message.eventName),\n  'time': EventSourceMessageNodeComparator.bind(null, message => message.time),\n};\n"]}