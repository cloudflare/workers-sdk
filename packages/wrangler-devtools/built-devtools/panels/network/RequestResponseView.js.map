{"version":3,"file":"RequestResponseView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestResponseView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Request Response View of the Network panel\n  */\n  thisRequestHasNoResponseData: 'This request has no response data available.',\n  /**\n  *@description Text in Request Preview View of the Network panel\n  */\n  failedToLoadResponseData: 'Failed to load response data',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestResponseView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RequestResponseView extends UI.Widget.VBox {\n  request: SDK.NetworkRequest.NetworkRequest;\n  private contentViewPromise: Promise<UI.Widget.Widget>|null;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n    this.element.classList.add('request-view');\n    this.request = request;\n    this.contentViewPromise = null;\n  }\n\n  private static hasTextContent(\n      request: SDK.NetworkRequest.NetworkRequest, contentData: SDK.NetworkRequest.ContentData): boolean {\n    const mimeType = request.mimeType || '';\n    let resourceType = Common.ResourceType.ResourceType.fromMimeType(mimeType);\n    if (resourceType === Common.ResourceType.resourceTypes.Other) {\n      resourceType = request.contentType();\n    }\n    if (resourceType === Common.ResourceType.resourceTypes.Image) {\n      return mimeType.startsWith('image/svg');\n    }\n    if (resourceType.isTextType()) {\n      return true;\n    }\n    if (contentData.error) {\n      return false;\n    }\n    if (resourceType === Common.ResourceType.resourceTypes.Other) {\n      return Boolean(contentData.content) && !contentData.encoded;\n    }\n    return false;\n  }\n\n  static async sourceViewForRequest(request: SDK.NetworkRequest.NetworkRequest): Promise<UI.Widget.Widget|null> {\n    let sourceView = requestToSourceView.get(request);\n    if (sourceView !== undefined) {\n      return sourceView;\n    }\n\n    const contentData = await request.contentData();\n    if (!RequestResponseView.hasTextContent(request, contentData)) {\n      requestToSourceView.delete(request);\n      return null;\n    }\n\n    const highlighterType = request.resourceType().canonicalMimeType() || request.mimeType;\n    sourceView = SourceFrame.ResourceSourceFrame.ResourceSourceFrame.createSearchableView(request, highlighterType);\n    requestToSourceView.set(request, sourceView);\n    return sourceView;\n  }\n\n  wasShown(): void {\n    void this.doShowPreview();\n  }\n\n  private doShowPreview(): Promise<UI.Widget.Widget> {\n    if (!this.contentViewPromise) {\n      this.contentViewPromise = this.showPreview();\n    }\n    return this.contentViewPromise;\n  }\n\n  async showPreview(): Promise<UI.Widget.Widget> {\n    const responseView = await this.createPreview();\n    responseView.show(this.element);\n    return responseView;\n  }\n\n  async createPreview(): Promise<UI.Widget.Widget> {\n    const contentData = await this.request.contentData();\n    const sourceView = await RequestResponseView.sourceViewForRequest(this.request);\n    if ((!contentData.content || !sourceView) && !contentData.error) {\n      return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.thisRequestHasNoResponseData));\n    }\n    if (contentData.content && sourceView) {\n      return sourceView;\n    }\n    if (contentData.error) {\n      return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.failedToLoadResponseData) + ': ' + contentData.error);\n    }\n    if (this.request.statusCode === 204) {\n      return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.thisRequestHasNoResponseData));\n    }\n    return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.failedToLoadResponseData));\n  }\n\n  async revealLine(line: number): Promise<void> {\n    const view = await this.doShowPreview();\n    if (view instanceof SourceFrame.ResourceSourceFrame.SearchableContainer) {\n      void view.revealPosition(line);\n    }\n  }\n}\n\nconst requestToSourceView = new WeakMap<SDK.NetworkRequest.NetworkRequest, UI.Widget.Widget>();\n"]}