{"version":3,"file":"LighthousePanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/lighthouse/LighthousePanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Emulation from '../emulation/emulation.js';\n\nimport type {\n  AuditProgressChangedEvent, PageAuditabilityChangedEvent, PageWarningsChangedEvent} from './LighthouseController.js';\nimport {Events, LighthouseController} from './LighthouseController.js';\nimport lighthousePanelStyles from './lighthousePanel.css.js';\nimport type {LighthouseRun} from './LighthouseProtocolService.js';\nimport {ProtocolService} from './LighthouseProtocolService.js';\n\nimport type {ReportJSON, RunnerResultArtifacts} from './LighthouseReporterTypes.js';\nimport * as LighthouseReport from '../../third_party/lighthouse/report/report.js';\nimport {LighthouseReportRenderer, LighthouseReportUIFeatures} from './LighthouseReportRenderer.js';\nimport {Item, ReportSelector} from './LighthouseReportSelector.js';\nimport {StartView} from './LighthouseStartView.js';\nimport {StartViewFR} from './LighthouseStartViewFR.js';\nimport {StatusView} from './LighthouseStatusView.js';\nimport {TimespanView} from './LighthouseTimespanView.js';\n\nconst UIStrings = {\n  /**\n  *@description Text that appears when user drag and drop something (for example, a file) in Lighthouse Panel\n  */\n  dropLighthouseJsonHere: 'Drop `Lighthouse` JSON here',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon add button in the Lighthouse Panel\n  */\n  performAnAudit: 'Perform an audit…',\n  /**\n  *@description Text to clear everything\n  */\n  clearAll: 'Clear all',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in start view of the audits panel\n  */\n  lighthouseSettings: '`Lighthouse` settings',\n  /**\n  *@description Status header in the Lighthouse panel\n  */\n  printing: 'Printing',\n  /**\n  *@description Status text in the Lighthouse panel\n  */\n  thePrintPopupWindowIsOpenPlease: 'The print popup window is open. Please close it to continue.',\n  /**\n  *@description Text in Lighthouse Panel\n  */\n  cancelling: 'Cancelling',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/lighthouse/LighthousePanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet lighthousePanelInstace: LighthousePanel;\ntype Nullable<T> = T|null;\n\nexport class LighthousePanel extends UI.Panel.Panel {\n  private readonly protocolService: ProtocolService;\n  private readonly controller: LighthouseController;\n  private readonly startView: StartView;\n  private readonly statusView: StatusView;\n  private readonly timespanView: TimespanView|null;\n  private warningText: Nullable<string>;\n  private unauditableExplanation: Nullable<string>;\n  private readonly cachedRenderedReports: Map<ReportJSON, HTMLElement>;\n  private readonly dropTarget: UI.DropTarget.DropTarget;\n  private readonly auditResultsElement: HTMLElement;\n  private clearButton!: UI.Toolbar.ToolbarButton;\n  private newButton!: UI.Toolbar.ToolbarButton;\n  private reportSelector!: ReportSelector;\n  private settingsPane!: UI.Widget.Widget;\n  private rightToolbar!: UI.Toolbar.Toolbar;\n  private showSettingsPaneSetting!: Common.Settings.Setting<boolean>;\n  private stateBefore?: {\n    emulation: {\n      type: EmulationModel.DeviceModeModel.Type,\n      enabled: boolean,\n      outlineEnabled: boolean,\n      toolbarControlsEnabled: boolean,\n      scale: number,\n      device: EmulationModel.EmulatedDevices.EmulatedDevice|null,\n      mode: EmulationModel.EmulatedDevices.Mode|null,\n    },\n    network: {conditions: SDK.NetworkManager.Conditions},\n  };\n  private isLHAttached?: boolean;\n  private currentLighthouseRun?: LighthouseRun;\n\n  private constructor() {\n    super('lighthouse');\n\n    this.protocolService = new ProtocolService();\n    this.controller = new LighthouseController(this.protocolService);\n    if (Root.Runtime.experiments.isEnabled('lighthousePanelFR')) {\n      this.startView = new StartViewFR(this.controller);\n      this.timespanView = new TimespanView(this.controller);\n    } else {\n      this.startView = new StartView(this.controller);\n      this.timespanView = null;\n    }\n    this.statusView = new StatusView(this.controller);\n\n    this.warningText = null;\n    this.unauditableExplanation = null;\n    this.cachedRenderedReports = new Map();\n\n    this.dropTarget = new UI.DropTarget.DropTarget(\n        this.contentElement, [UI.DropTarget.Type.File], i18nString(UIStrings.dropLighthouseJsonHere),\n        this.handleDrop.bind(this));\n\n    this.controller.addEventListener(Events.PageAuditabilityChanged, this.refreshStartAuditUI.bind(this));\n    this.controller.addEventListener(Events.PageWarningsChanged, this.refreshWarningsUI.bind(this));\n    this.controller.addEventListener(Events.AuditProgressChanged, this.refreshStatusUI.bind(this));\n    this.controller.addEventListener(Events.RequestLighthouseTimespanStart, this.onLighthouseTimespanStart.bind(this));\n    this.controller.addEventListener(Events.RequestLighthouseTimespanEnd, this.onLighthouseTimespanEnd.bind(this));\n    this.controller.addEventListener(Events.RequestLighthouseStart, this.onLighthouseStart.bind(this));\n    this.controller.addEventListener(Events.RequestLighthouseCancel, this.onLighthouseCancel.bind(this));\n\n    this.renderToolbar();\n    this.auditResultsElement = this.contentElement.createChild('div', 'lighthouse-results-container');\n    this.renderStartView();\n\n    this.controller.recomputePageAuditability();\n  }\n\n  static instance(opts = {forceNew: null}): LighthousePanel {\n    const {forceNew} = opts;\n    if (!lighthousePanelInstace || forceNew) {\n      lighthousePanelInstace = new LighthousePanel();\n    }\n\n    return lighthousePanelInstace;\n  }\n\n  static getEvents(): typeof Events {\n    return Events;\n  }\n\n  private async onLighthouseTimespanStart(): Promise<void> {\n    this.timespanView?.show(this.contentElement);\n    await this.startLighthouse();\n    this.timespanView?.ready();\n  }\n\n  private async onLighthouseTimespanEnd(): Promise<void> {\n    this.timespanView?.hide();\n    await this.collectLighthouseResults();\n  }\n\n  private async onLighthouseStart(): Promise<void> {\n    await this.startLighthouse();\n    await this.collectLighthouseResults();\n  }\n\n  private async onLighthouseCancel(): Promise<void> {\n    this.timespanView?.hide();\n    void this.cancelLighthouse();\n  }\n\n  private refreshWarningsUI(evt: Common.EventTarget.EventTargetEvent<PageWarningsChangedEvent>): void {\n    // PageWarningsChanged fires multiple times during an audit, which we want to ignore.\n    if (this.isLHAttached) {\n      return;\n    }\n\n    this.warningText = evt.data.warning;\n    this.startView.setWarningText(evt.data.warning);\n  }\n\n  private refreshStartAuditUI(evt: Common.EventTarget.EventTargetEvent<PageAuditabilityChangedEvent>): void {\n    // PageAuditabilityChanged fires multiple times during an audit, which we want to ignore.\n    if (this.isLHAttached) {\n      return;\n    }\n\n    this.startView.refresh();\n\n    this.unauditableExplanation = evt.data.helpText;\n    this.startView.setUnauditableExplanation(evt.data.helpText);\n    this.startView.setStartButtonEnabled(!evt.data.helpText);\n  }\n\n  private refreshStatusUI(evt: Common.EventTarget.EventTargetEvent<AuditProgressChangedEvent>): void {\n    this.statusView.updateStatus(evt.data.message);\n  }\n\n  private refreshToolbarUI(): void {\n    this.clearButton.setEnabled(this.reportSelector.hasItems());\n  }\n\n  private clearAll(): void {\n    this.reportSelector.clearAll();\n    this.renderStartView();\n    this.refreshToolbarUI();\n  }\n\n  private renderToolbar(): void {\n    const lighthouseToolbarContainer = this.element.createChild('div', 'lighthouse-toolbar-container');\n\n    const toolbar = new UI.Toolbar.Toolbar('', lighthouseToolbarContainer);\n\n    this.newButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.performAnAudit), 'largeicon-add');\n    toolbar.appendToolbarItem(this.newButton);\n    this.newButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.renderStartView.bind(this));\n\n    toolbar.appendSeparator();\n\n    this.reportSelector = new ReportSelector(() => this.renderStartView());\n    toolbar.appendToolbarItem(this.reportSelector.comboBox());\n\n    this.clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'largeicon-clear');\n    toolbar.appendToolbarItem(this.clearButton);\n    this.clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.clearAll.bind(this));\n\n    this.settingsPane = new UI.Widget.HBox();\n    this.settingsPane.show(this.contentElement);\n    this.settingsPane.element.classList.add('lighthouse-settings-pane');\n    this.settingsPane.element.appendChild(this.startView.settingsToolbar().element);\n    this.showSettingsPaneSetting = Common.Settings.Settings.instance().createSetting(\n        'lighthouseShowSettingsToolbar', false, Common.Settings.SettingStorageType.Synced);\n\n    this.rightToolbar = new UI.Toolbar.Toolbar('', lighthouseToolbarContainer);\n    this.rightToolbar.appendSeparator();\n    this.rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingToggle(\n        this.showSettingsPaneSetting, 'largeicon-settings-gear', i18nString(UIStrings.lighthouseSettings)));\n    this.showSettingsPaneSetting.addChangeListener(this.updateSettingsPaneVisibility.bind(this));\n    this.updateSettingsPaneVisibility();\n\n    this.refreshToolbarUI();\n  }\n\n  private updateSettingsPaneVisibility(): void {\n    this.settingsPane.element.classList.toggle('hidden', !this.showSettingsPaneSetting.get());\n  }\n\n  private toggleSettingsDisplay(show: boolean): void {\n    this.rightToolbar.element.classList.toggle('hidden', !show);\n    this.settingsPane.element.classList.toggle('hidden', !show);\n    this.updateSettingsPaneVisibility();\n  }\n\n  private renderStartView(): void {\n    this.auditResultsElement.removeChildren();\n    this.statusView.hide();\n\n    this.reportSelector.selectNewReport();\n    this.contentElement.classList.toggle('in-progress', false);\n\n    this.startView.show(this.contentElement);\n    this.toggleSettingsDisplay(true);\n    this.startView.setUnauditableExplanation(this.unauditableExplanation);\n    this.startView.setStartButtonEnabled(!this.unauditableExplanation);\n    if (!this.unauditableExplanation) {\n      this.startView.focusStartButton();\n    }\n    this.startView.setWarningText(this.warningText);\n\n    this.newButton.setEnabled(false);\n    this.refreshToolbarUI();\n    this.setDefaultFocusedChild(this.startView);\n  }\n\n  private renderStatusView(inspectedURL: string): void {\n    this.contentElement.classList.toggle('in-progress', true);\n    this.statusView.setInspectedURL(inspectedURL);\n    this.statusView.show(this.contentElement);\n  }\n\n  private beforePrint(): void {\n    this.statusView.show(this.contentElement);\n    this.statusView.toggleCancelButton(false);\n    this.statusView.renderText(i18nString(UIStrings.printing), i18nString(UIStrings.thePrintPopupWindowIsOpenPlease));\n  }\n\n  private afterPrint(): void {\n    this.statusView.hide();\n    this.statusView.toggleCancelButton(true);\n  }\n\n  private renderReport(lighthouseResult: ReportJSON, artifacts?: RunnerResultArtifacts): void {\n    this.toggleSettingsDisplay(false);\n    this.contentElement.classList.toggle('in-progress', false);\n    this.startView.hideWidget();\n    this.statusView.hide();\n    this.auditResultsElement.removeChildren();\n    this.newButton.setEnabled(true);\n    this.refreshToolbarUI();\n\n    const cachedRenderedReport = this.cachedRenderedReports.get(lighthouseResult);\n    if (cachedRenderedReport) {\n      this.auditResultsElement.appendChild(cachedRenderedReport);\n      return;\n    }\n\n    const reportContainer = this.auditResultsElement.createChild('div', 'lh-vars lh-root lh-devtools');\n    // @ts-ignore Expose LHR on DOM for e2e tests\n    reportContainer._lighthouseResultForTesting = lighthouseResult;\n\n    const dom = new LighthouseReport.DOM(this.auditResultsElement.ownerDocument as Document, reportContainer);\n    const renderer = new LighthouseReportRenderer(dom) as LighthouseReport.ReportRenderer;\n\n    const el = renderer.renderReport(lighthouseResult, reportContainer);\n    // Linkifying requires the target be loaded. Do not block the report\n    // from rendering, as this is just an embellishment and the main target\n    // could take awhile to load.\n    void this.waitForMainTargetLoad().then(() => {\n      void LighthouseReportRenderer.linkifyNodeDetails(el);\n      void LighthouseReportRenderer.linkifySourceLocationDetails(el);\n    });\n    LighthouseReportRenderer.handleDarkMode(el);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const features = new LighthouseReportUIFeatures(dom) as any;\n    features.setBeforePrint(this.beforePrint.bind(this));\n    features.setAfterPrint(this.afterPrint.bind(this));\n    LighthouseReportRenderer.addViewTraceButton(el, features, artifacts);\n    features.initFeatures(lighthouseResult);\n\n    this.cachedRenderedReports.set(lighthouseResult, reportContainer);\n  }\n\n  private async waitForMainTargetLoad(): Promise<void> {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const resourceTreeModel = mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return;\n    }\n    await resourceTreeModel.once(SDK.ResourceTreeModel.Events.Load);\n  }\n\n  private buildReportUI(lighthouseResult: ReportJSON, artifacts?: RunnerResultArtifacts): void {\n    if (lighthouseResult === null) {\n      return;\n    }\n\n    const optionElement = new Item(\n        lighthouseResult, () => this.renderReport(lighthouseResult, artifacts), this.renderStartView.bind(this));\n    this.reportSelector.prepend(optionElement);\n    this.refreshToolbarUI();\n    this.renderReport(lighthouseResult);\n  }\n\n  private handleDrop(dataTransfer: DataTransfer): void {\n    const items = dataTransfer.items;\n    if (!items.length) {\n      return;\n    }\n    const item = items[0];\n    if (item.kind === 'file') {\n      const file = items[0].getAsFile();\n      if (!file) {\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onload = (): void => this.loadedFromFile(reader.result as string);\n      reader.readAsText(file);\n    }\n  }\n\n  private loadedFromFile(report: string): void {\n    const data = JSON.parse(report);\n    if (!data['lighthouseVersion']) {\n      return;\n    }\n    this.buildReportUI(data as ReportJSON);\n  }\n\n  private async startLighthouse(): Promise<void> {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.LighthouseStarted);\n\n    try {\n      const inspectedURL = await this.controller.getInspectedURL({force: true});\n      const categoryIDs = this.controller.getCategoryIDs();\n      const flags = this.controller.getFlags();\n\n      this.currentLighthouseRun = {inspectedURL, categoryIDs, flags};\n\n      await this.setupEmulationAndProtocolConnection();\n\n      if (flags.mode === 'timespan') {\n        await this.protocolService.startTimespan(this.currentLighthouseRun);\n      }\n\n    } catch (err) {\n      await this.restoreEmulationAndProtocolConnection();\n      if (err instanceof Error) {\n        this.statusView.renderBugReport(err);\n      }\n    }\n  }\n\n  private async collectLighthouseResults(): Promise<void> {\n    try {\n      if (!this.currentLighthouseRun) {\n        throw new Error('Lighthouse is not started');\n      }\n      this.renderStatusView(this.currentLighthouseRun.inspectedURL);\n\n      const lighthouseResponse = await this.protocolService.collectLighthouseResults(this.currentLighthouseRun);\n\n      if (lighthouseResponse && lighthouseResponse.fatal) {\n        const error = new Error(lighthouseResponse.message);\n        error.stack = lighthouseResponse.stack;\n        throw error;\n      }\n\n      if (!lighthouseResponse) {\n        throw new Error('Auditing failed to produce a result');\n      }\n\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.LighthouseFinished);\n\n      await this.restoreEmulationAndProtocolConnection();\n      this.buildReportUI(lighthouseResponse.lhr, lighthouseResponse.artifacts);\n      // Give focus to the new audit button when completed\n      this.newButton.element.focus();\n    } catch (err) {\n      await this.restoreEmulationAndProtocolConnection();\n      if (err instanceof Error) {\n        this.statusView.renderBugReport(err);\n      }\n    } finally {\n      this.currentLighthouseRun = undefined;\n    }\n  }\n\n  private async cancelLighthouse(): Promise<void> {\n    this.currentLighthouseRun = undefined;\n    this.statusView.updateStatus(i18nString(UIStrings.cancelling));\n    await this.restoreEmulationAndProtocolConnection();\n    this.renderStartView();\n  }\n\n  /**\n   * We set the device emulation on the DevTools-side for two reasons:\n   * 1. To workaround some odd device metrics emulation bugs like occuluding viewports\n   * 2. To get the attractive device outline\n   *\n   * We also set flags.internalDisableDeviceScreenEmulation = true to let LH only apply UA emulation\n   */\n  private async setupEmulationAndProtocolConnection(): Promise<void> {\n    const flags = this.controller.getFlags();\n\n    const emulationModel = EmulationModel.DeviceModeModel.DeviceModeModel.instance();\n    this.stateBefore = {\n      emulation: {\n        type: emulationModel.type(),\n        enabled: emulationModel.enabledSetting().get(),\n        outlineEnabled: emulationModel.deviceOutlineSetting().get(),\n        toolbarControlsEnabled: emulationModel.toolbarControlsEnabledSetting().get(),\n        scale: emulationModel.scaleSetting().get(),\n        device: emulationModel.device(),\n        mode: emulationModel.mode(),\n      },\n      network: {conditions: SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions()},\n    };\n\n    emulationModel.toolbarControlsEnabledSetting().set(false);\n    if ('emulatedFormFactor' in flags && flags.emulatedFormFactor === 'desktop') {\n      emulationModel.enabledSetting().set(false);\n      emulationModel.emulate(EmulationModel.DeviceModeModel.Type.None, null, null);\n    } else if (flags.emulatedFormFactor === 'mobile') {\n      emulationModel.enabledSetting().set(true);\n      emulationModel.deviceOutlineSetting().set(true);\n\n      for (const device of EmulationModel.EmulatedDevices.EmulatedDevicesList.instance().standard()) {\n        if (device.title === 'Moto G4') {\n          emulationModel.emulate(EmulationModel.DeviceModeModel.Type.Device, device, device.modes[0], 1);\n        }\n      }\n    }\n\n    await this.protocolService.attach();\n    this.isLHAttached = true;\n  }\n\n  private async restoreEmulationAndProtocolConnection(): Promise<void> {\n    if (!this.isLHAttached) {\n      return;\n    }\n\n    this.isLHAttached = false;\n    await this.protocolService.detach();\n\n    if (this.stateBefore) {\n      const emulationModel = EmulationModel.DeviceModeModel.DeviceModeModel.instance();\n\n      // Detaching a session after overriding device metrics will prevent other sessions from overriding device metrics in the future.\n      // A workaround is to call \"Emulation.clearDeviceMetricOverride\" which is the result of the next line.\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=1337089\n      emulationModel.emulate(EmulationModel.DeviceModeModel.Type.None, null, null);\n\n      const {type, enabled, outlineEnabled, toolbarControlsEnabled, scale, device, mode} = this.stateBefore.emulation;\n      emulationModel.enabledSetting().set(enabled);\n      emulationModel.deviceOutlineSetting().set(outlineEnabled);\n      emulationModel.toolbarControlsEnabledSetting().set(toolbarControlsEnabled);\n\n      // `emulate` will ignore the `scale` parameter for responsive emulation.\n      // In this case we can just set it here.\n      if (type === EmulationModel.DeviceModeModel.Type.Responsive) {\n        emulationModel.scaleSetting().set(scale);\n      }\n\n      emulationModel.emulate(type, device, mode, scale);\n\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(this.stateBefore.network.conditions);\n      delete this.stateBefore;\n    }\n\n    Emulation.InspectedPagePlaceholder.InspectedPagePlaceholder.instance().update(true);\n\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const resourceTreeModel = mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return;\n    }\n    // reload to reset the page state\n    const inspectedURL = await this.controller.getInspectedURL();\n    await resourceTreeModel.navigate(inspectedURL);\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([lighthousePanelStyles]);\n  }\n}\n"]}