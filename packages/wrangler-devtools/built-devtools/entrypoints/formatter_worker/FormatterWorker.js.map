{"version":3,"file":"FormatterWorker.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/formatter_worker/FormatterWorker.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,OAAO,KAAK,QAAQ,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,KAAK,MAAM,kCAAkC,CAAC;AAO1D,OAAO,EAAC,cAAc,EAAE,YAAY,EAAC,MAAM,qBAAqB,CAAC;AACjE,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAC,uBAAuB,EAAC,MAAM,8BAA8B,CAAC;AAErE,OAAO,EAAC,aAAa,EAAC,MAAM,oBAAoB,CAAC;AACjD,OAAO,EAAC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAC,mBAAmB,EAAC,MAAM,0BAA0B,CAAC;AAC7D,OAAO,EAAC,aAAa,EAAC,MAAM,oBAAoB,CAAC;AACjD,OAAO,EAAC,oBAAoB,EAAC,MAAM,iBAAiB,CAAC;AAWrD,MAAM,UAAU,eAAe,CAAC,QAAgB;IAK9C,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,EAAC,UAAU,EAAE,CAAC,EAAC,EAAE,QAAQ,CAAC,CAAC;IAC3D,MAAM,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAE1C,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;QACjC,MAAM,IAAI,KAAK,CAAC,gDAAgD,QAAQ,EAAE,CAAC,CAAC;KAC7E;IAED,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QACf,MAAM,IAAI,KAAK,CAAC,qDAAqD,QAAQ,EAAE,CAAC,CAAC;KAClF;IAED,OAAO,CAAC,IAAY,EACZ,QAAgG,EAAQ,EAAE;QAChH,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACjD,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE;YACpB,gGAAgG;YAChG,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YACxC,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YAC/B,IAAI,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,iBAAiB,EAAE;gBAC3F,OAAO;aACR;YACD,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;SAC3B;IACH,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,MAAM,iBAAiB,GAAG,EAAE,CAAC;AAEpC,MAAM,UAAU,8BAA8B,CAAC,OAAe;IAC5D,IAAI;QACF,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,EAAC,WAAW,EAAE,YAAY,EAAC,CAAC,CAAC;QACxE,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QACjC,OAAO,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YACvC,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;SAC9B;QAED,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;QAC/B,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;QACzB,OAAO,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE;YACxC,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;YACnG,MAAM,MAAM,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACrD,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;YACtD,IAAI,CAAC,MAAM,IAAI,CAAC,YAAY,IAAI,CAAC,QAAQ,EAAE;gBACzC,MAAM;aACP;YAED,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;YACrB,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;YAE7B,OAAO,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;gBAC5C,IAAI,kBAAkB,GAAG,CAAC,CAAC;gBAC3B,GAAG;oBACD,IAAI,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;wBACzC,EAAE,kBAAkB,CAAC;qBACtB;oBACD,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;oBAC7B,IAAI,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;wBACzC,IAAI,EAAE,kBAAkB,KAAK,CAAC,EAAE;4BAC9B,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;4BACrB,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;4BAC7B,MAAM;yBACP;qBACF;iBACF,QAAQ,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE;aAC7C;YAED,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;gBAC1C,MAAM;aACP;YAED,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;SAC9B;QACD,OAAO,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;KAChD;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjB,OAAO,EAAE,CAAC;KACX;AACH,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,OAAe;IAInD,IAAI,IAAI,GAA2B,IAAI,CAAC;IACxC,IAAI;QACF,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,EAAC,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK,EAAC,CAA6B,CAAC;KACrG;IAAC,OAAO,CAAC,EAAE;KACX;IAED,MAAM,WAAW,GAAwB,EAAE,CAAC;IAC5C,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;IAE7C,SAAS,UAAU,CAAC,IAAuB;QACzC,OAAO,IAAI,CAAC,IAAI,KAAK,qBAAqB,IAAI,IAAI,CAAC,IAAI,KAAK,oBAAoB;YAC5E,IAAI,CAAC,IAAI,KAAK,yBAAyB,CAAC;IAC9C,CAAC;IAED,SAAS,WAAW,CAAC,IAAuB;QAC1C,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;YACpB,IAAI,IAAI,CAAC,EAAE,EAAE;gBACX,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC3B;YACD,OAAO,YAAY,CAAC,WAAW,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE;YAC9B,OAAO;SACR;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,kBAAkB,EAAE;YAC1D,MAAM,MAAM,GAAI,IAAI,CAAC,MAAwC,CAAC;YAC9D,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBAChD,OAAO;aACR;SACF;QACD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO;IACT,CAAC;IAED,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;QAC3F,OAAO,EAAE,CAAC;KACX;IAED,MAAM,YAAY,GAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAsC,CAAC;IACxE,KAAK,MAAM,KAAK,IAAI,YAAY,CAAC,MAAM,EAAE;QACvC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpB;IACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/B,OAAO,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,MAAM,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,SAAS,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;AACjG,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,QAAgB,EAAE,IAAY,EAAE,YAAqB;IAC1E,+BAA+B;IAC/B,YAAY,GAAG,YAAY,IAAI,MAAM,CAAC;IAEtC,IAAI,MAAoB,CAAC;IACzB,MAAM,OAAO,GAAG,IAAI,uBAAuB,CAAC,YAAY,CAAC,CAAC;IAC1D,MAAM,WAAW,GAAG,QAAQ,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACzE,IAAI;QACF,QAAQ,QAAQ,EAAE;YAChB,KAAK,WAAW,CAAC,CAAC;gBAChB,MAAM,SAAS,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC7C,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;gBACpC,MAAM;aACP;YACD,KAAK,aAAa,CAAC;YACnB,KAAK,UAAU,CAAC,CAAC;gBACf,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC5C,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpD,MAAM;aACP;YACD,KAAK,iBAAiB,CAAC;YACvB,KAAK,wBAAwB,CAAC,CAAC;gBAC7B,MAAM,SAAS,GAAG,IAAI,mBAAmB,CAAC,OAAO,CAAC,CAAC;gBACnD,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpD,MAAM;aACP;YACD,KAAK,kBAAkB,CAAC,CAAC;gBACvB,MAAM,SAAS,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC7C,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpD,MAAM;aACP;YACD,OAAO,CAAC,CAAC;gBACP,MAAM,SAAS,GAAG,IAAI,iBAAiB,CAAC,OAAO,CAAC,CAAC;gBACjD,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;aACrD;SACF;QACD,MAAM,GAAG;YACP,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE;SAC3B,CAAC;KACH;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjB,MAAM,GAAG;YACP,OAAO,EAAE,EAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAC;YACxC,OAAO,EAAE,IAAI;SACd,CAAC;KACH;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,OAAe;IAC3C,IAAI,OAAO,CAAC,MAAM,GAAG,KAAK,EAAE;QAC1B,OAAO,EAAE,CAAC;KACX;IACD,IAAI,MAAM,GAA2B,IAAI,CAAC;IAC1C,IAAI;QACF,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,OAAO,GAAG,EAAE,EAAC,WAAW,EAAE,YAAY,EAAC,CAA6B,CAAC;KAC/F;IAAC,OAAO,CAAC,EAAE;KACX;IACD,IAAI,CAAC,MAAM,EAAE;QACX,IAAI;YACF,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,OAAO,IAAI,EAAE,EAAC,WAAW,EAAE,YAAY,EAAC,CAA6B,CAAC;SACjG;QAAC,OAAO,CAAC,EAAE;SACX;KACF;IACD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAChF,CAAC,CAAC,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;QACrC,OAAO,EAAE,CAAC;KACX;IACD,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IAC7C,IAAI,MAAM,GAAgC,IAAI,CAAC;IAC/C,QAAQ,UAAU,CAAC,IAAI,EAAE;QACvB,KAAK,iBAAiB,CAAC,CAAC;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE;gBACzB,MAAM;aACP;YACD,MAAM,WAAW,GACb,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,kBAAkB,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,CAC1E,CAAC;YAClC,IAAI,WAAW,EAAE;gBACf,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC;aACnC;YACD,MAAM;SACP;QACD,KAAK,kBAAkB,CAAC,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACnE,CAAC,CAAC,QAAQ,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBACjD,MAAM;aACP;YACD,MAAM,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;YAC/C,MAAM;SACP;QACD,KAAK,oBAAoB,CAAC;QAC1B,KAAK,yBAAyB,CAAC,CAAC;YAC9B,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAC3B,MAAM;SACP;KACF;IACD,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,EAAE,CAAC;KACX;IACD,OAAO,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAE7B,SAAS,SAAS,CAAC,KAAwB;QACzC,QAAQ,KAAK,CAAC,IAAI,EAAE;YAClB,KAAK,YAAY;gBACf,OAAO,KAAK,CAAC,IAAI,CAAC;YACpB,KAAK,mBAAmB;gBACtB,OAAO,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACrC,KAAK,eAAe;gBAClB,OAAO,KAAK,CAAC;YACf,KAAK,cAAc;gBACjB,OAAO,KAAK,CAAC;YACf,KAAK,aAAa;gBAChB,OAAO,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;SAC5C;QACD,OAAO,GAAG,CAAC;IACb,CAAC;AACH,CAAC;AAED,CAAC,SAAS,qBAAqB;IAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;QAC3C,OAAO,CAAC,KAAK,GAAG,GAAc,EAAE,CAAC,SAAS,CAAC;KAC5C;AACH,CAAC,CAAC,EAAE,CAAC;AAEL,OAAO,EAAC,oBAAoB,EAAC,CAAC","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Acorn from '../../third_party/acorn/acorn.js';\n\n// This file is required to bring some types into scope, even though it\n// is not used.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type * as CodeMirrorModule from '../../third_party/codemirror/codemirror-legacy.js';\n\nimport {AcornTokenizer, ECMA_VERSION} from './AcornTokenizer.js';\nimport {CSSFormatter} from './CSSFormatter.js';\nimport {ESTreeWalker} from './ESTreeWalker.js';\nimport {FormattedContentBuilder} from './FormattedContentBuilder.js';\nimport type {FormatResult} from './FormatterActions.js';\nimport {HTMLFormatter} from './HTMLFormatter.js';\nimport {IdentityFormatter} from './IdentityFormatter.js';\nimport {JavaScriptFormatter} from './JavaScriptFormatter.js';\nimport {JSONFormatter} from './JSONFormatter.js';\nimport {substituteExpression} from './Substitute.js';\n\nexport interface Chunk {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  chunk: any[];\n  isLastChunk: boolean;\n}\n\nexport type ChunkCallback = (arg0: Chunk) => void;\n\nexport function createTokenizer(mimeType: string): (\n    arg0: string, arg1: (arg0: string, arg1: string|null, arg2: number, arg3: number) => (Object | undefined | void)) =>\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    any {\n  const mode = CodeMirror.getMode({indentUnit: 2}, mimeType);\n  const state = CodeMirror.startState(mode);\n\n  if (!mode || mode.name === 'null') {\n    throw new Error(`Could not find CodeMirror mode for MimeType: ${mimeType}`);\n  }\n\n  if (!mode.token) {\n    throw new Error(`Could not find CodeMirror mode with token method: ${mimeType}`);\n  }\n\n  return (line: string,\n          callback: (arg0: string, arg1: string|null, arg2: number, arg3: number) => void|Object|undefined): void => {\n    const stream = new CodeMirror.StringStream(line);\n    while (!stream.eol()) {\n      // @ts-expect-error TypeScript can't determine that `mode.token` is defined based on lines above\n      const style = mode.token(stream, state);\n      const value = stream.current();\n      if (callback(value, style, stream.start, stream.start + value.length) === AbortTokenization) {\n        return;\n      }\n      stream.start = stream.pos;\n    }\n  };\n}\n\nexport const AbortTokenization = {};\n\nexport function evaluatableJavaScriptSubstring(content: string): string {\n  try {\n    const tokenizer = Acorn.tokenizer(content, {ecmaVersion: ECMA_VERSION});\n    let token = tokenizer.getToken();\n    while (AcornTokenizer.punctuator(token)) {\n      token = tokenizer.getToken();\n    }\n\n    const startIndex = token.start;\n    let endIndex = token.end;\n    while (token.type !== Acorn.tokTypes.eof) {\n      const isIdentifier = token.type === Acorn.tokTypes.name || token.type === Acorn.tokTypes.privateId;\n      const isThis = AcornTokenizer.keyword(token, 'this');\n      const isString = token.type === Acorn.tokTypes.string;\n      if (!isThis && !isIdentifier && !isString) {\n        break;\n      }\n\n      endIndex = token.end;\n      token = tokenizer.getToken();\n\n      while (AcornTokenizer.punctuator(token, '[')) {\n        let openBracketCounter = 0;\n        do {\n          if (AcornTokenizer.punctuator(token, '[')) {\n            ++openBracketCounter;\n          }\n          token = tokenizer.getToken();\n          if (AcornTokenizer.punctuator(token, ']')) {\n            if (--openBracketCounter === 0) {\n              endIndex = token.end;\n              token = tokenizer.getToken();\n              break;\n            }\n          }\n        } while (token.type !== Acorn.tokTypes.eof);\n      }\n\n      if (!AcornTokenizer.punctuator(token, '.')) {\n        break;\n      }\n\n      token = tokenizer.getToken();\n    }\n    return content.substring(startIndex, endIndex);\n  } catch (e) {\n    console.error(e);\n    return '';\n  }\n}\n\nexport function javaScriptIdentifiers(content: string): {\n  name: (string|undefined),\n  offset: number,\n}[] {\n  let root: Acorn.ESTree.Node|null = null;\n  try {\n    root = Acorn.parse(content, {ecmaVersion: ECMA_VERSION, ranges: false}) as Acorn.ESTree.Node | null;\n  } catch (e) {\n  }\n\n  const identifiers: Acorn.ESTree.Node[] = [];\n  const walker = new ESTreeWalker(beforeVisit);\n\n  function isFunction(node: Acorn.ESTree.Node): boolean {\n    return node.type === 'FunctionDeclaration' || node.type === 'FunctionExpression' ||\n        node.type === 'ArrowFunctionExpression';\n  }\n\n  function beforeVisit(node: Acorn.ESTree.Node): Object|undefined {\n    if (isFunction(node)) {\n      if (node.id) {\n        identifiers.push(node.id);\n      }\n      return ESTreeWalker.SkipSubtree;\n    }\n\n    if (node.type !== 'Identifier') {\n      return;\n    }\n\n    if (node.parent && node.parent.type === 'MemberExpression') {\n      const parent = (node.parent as Acorn.ESTree.MemberExpression);\n      if (parent.property === node && !parent.computed) {\n        return;\n      }\n    }\n    identifiers.push(node);\n    return;\n  }\n\n  if (!root || root.type !== 'Program' || root.body.length !== 1 || !isFunction(root.body[0])) {\n    return [];\n  }\n\n  const functionNode = (root.body[0] as Acorn.ESTree.FunctionDeclaration);\n  for (const param of functionNode.params) {\n    walker.walk(param);\n  }\n  walker.walk(functionNode.body);\n  return identifiers.map(id => ({name: 'name' in id && id.name || undefined, offset: id.start}));\n}\n\nexport function format(mimeType: string, text: string, indentString?: string): FormatResult {\n  // Default to a 4-space indent.\n  indentString = indentString || '    ';\n\n  let result: FormatResult;\n  const builder = new FormattedContentBuilder(indentString);\n  const lineEndings = Platform.StringUtilities.findLineEndingIndexes(text);\n  try {\n    switch (mimeType) {\n      case 'text/html': {\n        const formatter = new HTMLFormatter(builder);\n        formatter.format(text, lineEndings);\n        break;\n      }\n      case 'text/x-scss':\n      case 'text/css': {\n        const formatter = new CSSFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n        break;\n      }\n      case 'text/javascript':\n      case 'application/javascript': {\n        const formatter = new JavaScriptFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n        break;\n      }\n      case 'application/json': {\n        const formatter = new JSONFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n        break;\n      }\n      default: {\n        const formatter = new IdentityFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n      }\n    }\n    result = {\n      mapping: builder.mapping,\n      content: builder.content(),\n    };\n  } catch (e) {\n    console.error(e);\n    result = {\n      mapping: {original: [0], formatted: [0]},\n      content: text,\n    };\n  }\n  return result;\n}\n\nexport function argumentsList(content: string): string[] {\n  if (content.length > 10000) {\n    return [];\n  }\n  let parsed: Acorn.ESTree.Node|null = null;\n  try {\n    parsed = Acorn.parse(`(${content})`, {ecmaVersion: ECMA_VERSION}) as Acorn.ESTree.Node | null;\n  } catch (e) {\n  }\n  if (!parsed) {\n    try {\n      parsed = Acorn.parse(`({${content}})`, {ecmaVersion: ECMA_VERSION}) as Acorn.ESTree.Node | null;\n    } catch (e) {\n    }\n  }\n  if (!parsed || !('body' in parsed) || !Array.isArray(parsed.body) || !parsed.body[0] ||\n      !('expression' in parsed.body[0])) {\n    return [];\n  }\n  const expression = parsed.body[0].expression;\n  let params: Acorn.ESTree.Pattern[]|null = null;\n  switch (expression.type) {\n    case 'ClassExpression': {\n      if (!expression.body.body) {\n        break;\n      }\n      const constructor =\n          expression.body.body.find(method => method.type === 'MethodDefinition' && method.kind === 'constructor') as\n          Acorn.ESTree.MethodDefinition;\n      if (constructor) {\n        params = constructor.value.params;\n      }\n      break;\n    }\n    case 'ObjectExpression': {\n      if (!expression.properties[0] || !('value' in expression.properties[0]) ||\n          !('params' in expression.properties[0].value)) {\n        break;\n      }\n      params = expression.properties[0].value.params;\n      break;\n    }\n    case 'FunctionExpression':\n    case 'ArrowFunctionExpression': {\n      params = expression.params;\n      break;\n    }\n  }\n  if (!params) {\n    return [];\n  }\n  return params.map(paramName);\n\n  function paramName(param: Acorn.ESTree.Node): string {\n    switch (param.type) {\n      case 'Identifier':\n        return param.name;\n      case 'AssignmentPattern':\n        return '?' + paramName(param.left);\n      case 'ObjectPattern':\n        return 'obj';\n      case 'ArrayPattern':\n        return 'arr';\n      case 'RestElement':\n        return '...' + paramName(param.argument);\n    }\n    return '?';\n  }\n}\n\n(function disableLoggingForTest(): void {\n  if (Root.Runtime.Runtime.queryParam('test')) {\n    console.error = (): undefined => undefined;\n  }\n})();\n\nexport {substituteExpression};\n"]}