From f55dc8200dda3025eb7866f2706a08851aa0d3dd Mon Sep 17 00:00:00 2001
From: Workers DevProd <workers-devprod@cloudflare.com>
Date: Fri, 25 Oct 2024 15:26:38 +0100
Subject: [PATCH 4/8] Support viewing source files over the network. This
 consists of:

* Replacing the default file viewers (Workspace & Snippets), with a network based one called "Cloudflare" (see sources-meta.ts & js_app.ts)

* Supporting a `?domain=` query param to customise the network name. Without this, the protocol is used (i.e. `file://`), which isn't super friendly (see NavigatorView.ts)

* Enable JUST_MY_CODE to hide Wrangler's injected middleware (see MainImpl.ts)

* Enable AUTHORED_DEPLOYED_GROUPING for a better grouping between source-mapped and compiled code (see MainImpl.ts)

* Support the mechanism by which Wrangler provides sourcemaps, the wrangler-file:// protocol (see PageResourceLoader.ts & ParsedURL.ts)
---
 front_end/core/common/ParsedURL.ts        |  2 +-
 front_end/core/sdk/PageResourceLoader.ts  |  4 +++-
 front_end/entrypoints/js_app/js_app.ts    | 16 ++++++--------
 front_end/entrypoints/main/MainImpl.ts    |  2 ++
 front_end/panels/sources/NavigatorView.ts |  5 +++--
 front_end/panels/sources/sources-meta.ts  | 26 -----------------------
 6 files changed, 15 insertions(+), 40 deletions(-)

diff --git a/front_end/core/common/ParsedURL.ts b/front_end/core/common/ParsedURL.ts
index 832d76c19c..968439ade4 100644
--- a/front_end/core/common/ParsedURL.ts
+++ b/front_end/core/common/ParsedURL.ts
@@ -366,7 +366,7 @@ export class ParsedURL {
     // Return special URLs as-is.
     const trimmedHref = href.trim();
     if (trimmedHref.startsWith('data:') || trimmedHref.startsWith('blob:') || trimmedHref.startsWith('javascript:') ||
-        trimmedHref.startsWith('mailto:')) {
+        trimmedHref.startsWith('mailto:') || trimmedHref.startsWith('wrangler:')) {
       return href as Platform.DevToolsPath.UrlString;
     }
 
diff --git a/front_end/core/sdk/PageResourceLoader.ts b/front_end/core/sdk/PageResourceLoader.ts
index 7b11de87c2..e11fbf3010 100644
--- a/front_end/core/sdk/PageResourceLoader.ts
+++ b/front_end/core/sdk/PageResourceLoader.ts
@@ -381,7 +381,9 @@ export class PageResourceLoader extends Common.ObjectWrapper.ObjectWrapper<Event
     const disableCache = Common.Settings.Settings.instance().moduleSetting('cache-disabled').get();
     const resource = await networkManager.loadNetworkResource(frameId, url, {disableCache, includeCredentials: true});
     try {
-      const content = resource.stream ? await ioModel.readToString(resource.stream) : '';
+      // @ts-expect-error Property 'text' does not exist on type 'LoadNetworkResourcePageResult'.
+      // Cloudflare custom extension to load network data without streams
+      const content = resource.stream ? await ioModel.readToString(resource.stream) : (resource.text ?? '');
       return {
         success: resource.success,
         content,
diff --git a/front_end/entrypoints/js_app/js_app.ts b/front_end/entrypoints/js_app/js_app.ts
index 1a6644df92..1724a33bd4 100644
--- a/front_end/entrypoints/js_app/js_app.ts
+++ b/front_end/entrypoints/js_app/js_app.ts
@@ -17,17 +17,13 @@ import * as Main from '../main/main.js';
 
 const UIStrings = {
   /**
-   *@description Text that refers to the main target.
-   */
-  main: 'Main',
-  /**
-   *@description Title of the 'Scripts' tool in the Network Navigator View, which is part of the Sources tool
+   *@description Title of the 'Cloudflare' tool in the Cloudflare Navigator View, which is part of the Sources tool
    */
-  networkTitle: 'Scripts',
+  cloudflare: 'Cloudflare',
   /**
-   *@description Command for showing the 'Scripts' tool in the Network Navigator View, which is part of the Sources tool
+   *@description Text that refers to the main target.
    */
-  showNode: 'Show Scripts',
+  main: 'Main',
 };
 
 const str_ = i18n.i18n.registerUIStrings('entrypoints/js_app/js_app.ts', UIStrings);
@@ -69,8 +65,8 @@ export class JsMainImpl implements Common.Runnable.Runnable {
 UI.ViewManager.registerViewExtension({
   location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,
   id: 'navigator-network',
-  title: i18nLazyString(UIStrings.networkTitle),
-  commandPrompt: i18nLazyString(UIStrings.showNode),
+  title: i18nLazyString(UIStrings.cloudflare),
+  commandPrompt: i18nLazyString(UIStrings.cloudflare),
   order: 2,
   persistence: UI.ViewManager.ViewPersistence.PERMANENT,
   async loadView() {
diff --git a/front_end/entrypoints/main/MainImpl.ts b/front_end/entrypoints/main/MainImpl.ts
index 978092dea5..fc463ec0c9 100644
--- a/front_end/entrypoints/main/MainImpl.ts
+++ b/front_end/entrypoints/main/MainImpl.ts
@@ -421,6 +421,8 @@ export class MainImpl {
       Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS,
       Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN,
       Root.Runtime.ExperimentName.FLOATING_ENTRY_POINTS_FOR_AI_ASSISTANCE,
+      Root.Runtime.ExperimentName.AUTHORED_DEPLOYED_GROUPING,
+      Root.Runtime.ExperimentName.JUST_MY_CODE,
       ...(Root.Runtime.Runtime.queryParam('isChromeForTesting') ? ['protocol-monitor'] : []),
     ]);
 
diff --git a/front_end/panels/sources/NavigatorView.ts b/front_end/panels/sources/NavigatorView.ts
index 6f4c52f3e7..2f5ada52e6 100644
--- a/front_end/panels/sources/NavigatorView.ts
+++ b/front_end/panels/sources/NavigatorView.ts
@@ -795,8 +795,9 @@ export class NavigatorView extends UI.Widget.VBox implements SDK.TargetManager.O
       return matchingContextName;
     }
 
-    if (!projectOrigin) {
-      return i18nString(UIStrings.noDomain);
+    if (!projectOrigin || projectOrigin === 'file://' || projectOrigin === 'wrangler-file://') {
+      const query = new URLSearchParams(location.search);
+      return query.get('domain') ?? i18nString(UIStrings.noDomain);
     }
 
     const parsedURL = new Common.ParsedURL.ParsedURL(projectOrigin);
diff --git a/front_end/panels/sources/sources-meta.ts b/front_end/panels/sources/sources-meta.ts
index 42a2e17f07..c41a8d2c7a 100644
--- a/front_end/panels/sources/sources-meta.ts
+++ b/front_end/panels/sources/sources-meta.ts
@@ -495,32 +495,6 @@ UI.ViewManager.registerViewExtension({
   },
 });
 
-UI.ViewManager.registerViewExtension({
-  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,
-  id: 'navigator-files',
-  commandPrompt: i18nLazyString(UIStrings.showWorkspace),
-  title: i18nLazyString(UIStrings.workspace),
-  order: 3,
-  persistence: UI.ViewManager.ViewPersistence.PERMANENT,
-  async loadView() {
-    const Sources = await loadSourcesModule();
-    return new Sources.SourcesNavigator.FilesNavigatorView();
-  },
-});
-
-UI.ViewManager.registerViewExtension({
-  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,
-  id: 'navigator-snippets',
-  commandPrompt: i18nLazyString(UIStrings.showSnippets),
-  title: i18nLazyString(UIStrings.snippets),
-  order: 6,
-  persistence: UI.ViewManager.ViewPersistence.PERMANENT,
-  async loadView() {
-    const Sources = await loadSourcesModule();
-    return new Sources.SourcesNavigator.SnippetsNavigatorView();
-  },
-});
-
 UI.ViewManager.registerViewExtension({
   location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,
   id: 'sources.search-sources-tab',
-- 
2.39.5 (Apple Git-154)

